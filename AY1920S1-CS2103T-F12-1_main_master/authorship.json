[
  {
    "path": "README.adoc",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d Horo"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "ifdef::env-github,env-browser[:relfileprefix: docs/]"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "https://travis-ci.org/AY1920S1-CS2103T-F12-1/main[image:https://travis-ci.org/AY1920S1-CS2103T-F12-1/main.svg?branch\u003dmaster[Build Status]]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "https://ci.appveyor.com/project/marcusteh1238/main[image:https://ci.appveyor.com/api/projects/status/clgkon6uh8hw678u?svg\u003dtrue[Build status]]"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "https://coveralls.io/github/AY1920S1-CS2103T-F12-1/main?branch\u003dmaster[image:https://coveralls.io/repos/github/AY1920S1-CS2103T-F12-1/main/badge.svg?branch\u003dmaster[Coverage Status]]"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "https://gitter.im/se-edu/Lobby[image:https://badges.gitter.im/se-edu/Lobby.svg[Gitter chat]]"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "ifdef::env-github[]"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "image::docs/images/Ui.png[width\u003d\"600\"]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "endif::[]"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "ifndef::env-github[]"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "image::images/Ui.png[width\u003d\"600\"]"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "endif::[]"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "Ever forget to go for a group meeting or need reminders for your assignment date? Fret not anymore."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "Horo provides you the ability to store your Events and Tasks, while providing a reminder for whenever you set it."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "You can even tag it to sort by a certain order, as well as import or export your calendar to transfer between computers! +"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "{empty}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "* This is a desktop Reminder application. It has a GUI but most of the user interactions happen using a CLI (Command Line Interface)."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "* It is a Java application *written in an OOP fashion*, developed and intended for students that need reminders for their Events and Tasks."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Site Map"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "* \u003c\u003cUserGuide#, User Guide\u003e\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "* \u003c\u003cDeveloperGuide#, Developer Guide\u003e\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "* \u003c\u003cAboutUs#, About Us\u003e\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "* \u003c\u003cContactUs#, Contact Us\u003e\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Acknowledgements"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "* Some parts of this sample application were inspired by the excellent http://code.makery.ch/library/javafx-8-tutorial/[Java FX tutorial] by"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "_Marco Jakob_."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "* Libraries used: https://openjfx.io/[JavaFX], https://github.com/FasterXML/jackson[Jackson], https://github.com/junit-team/junit5[JUnit5]"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "* The application was based of *AddressBook-Level3* project created by SE-EDU initiative at https://se-education.org"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Licence : link:LICENSE[MIT]"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 9,
      "marcusteh1238": 3,
      "-": 27
    }
  },
  {
    "path": "build.gradle",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "// Gradle Configuration File"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "// For more details take a look at the Java Quickstart chapter in the Gradle"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "// user guide available at http://gradle.org/docs/5.2.1/userguide/tutorial_java_projects.html"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import org.gradle.api.tasks.testing.logging.TestLogEvent"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027jacoco\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.kt3k.coveralls\u0027 version \u00272.4.0\u0027"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027org.asciidoctor.convert\u0027 version \u00271.5.6\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "// Specifies the entry point of the application"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "mainClassName \u003d \u0027seedu.address.Main\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "sourceCompatibility \u003d JavaVersion.VERSION_11"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "targetCompatibility \u003d JavaVersion.VERSION_11"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.1\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "jacocoTestReport {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    reports {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        xml.enabled false"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        csv.enabled false"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        html.destination file(\"${buildDir}/jacocoHtml\")"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    String jUnitVersion \u003d \u00275.4.0\u0027"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    String javaFxVersion \u003d \u002711.0.1\u0027"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveName \u003d \u0027addressbook.jar\u0027"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    destinationDir \u003d file(\"${buildDir}/jar/\")"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "task coverage(type: JacocoReport) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    classDirectories.from files(sourceSets.main.output)"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    executionData.from files(jacocoTestReport.executionData)"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    afterEvaluate {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        classDirectories.from files(classDirectories.files.collect {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        })"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    reports {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        html.enabled \u003d true"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        xml.enabled \u003d true"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "coveralls {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    sourceDirs \u003d sourceSets.main.allSource.srcDirs.absolutePath"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    jacocoReportPath \u003d \"${buildDir}/reports/jacoco/coverage/coverage.xml\""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "tasks.coveralls {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    dependsOn coverage"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    onlyIf { System.env.\u0027CI\u0027 }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        events TestLogEvent.FAILED, TestLogEvent.SKIPPED"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        // Prints the currently running test\u0027s name in the CI\u0027s build log,"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        // so that we can check if tests are being silently skipped or"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        // stalling the build."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        if (System.env.\u0027CI\u0027) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "            events \u003c\u003c TestLogEvent.STARTED"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "    jacoco {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        destinationFile \u003d new File(\"${buildDir}/jacoco/test.exec\")"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "asciidoctor {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "    backends \u0027html5\u0027"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "    sourceDir \u0027docs\u0027"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "    outputDir \"${buildDir}/docs\""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "    options \u003d ["
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        template_dirs: [file(\"${sourceDir}/templates\")],"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "    ]"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "    attributes \u003d ["
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "        linkcss: true,"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "        stylesheet: \u0027gh-pages.css\u0027,"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "        \u0027source-highlighter\u0027: \u0027coderay\u0027,"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "        icons: \u0027font\u0027,"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        experimental: true,"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "        sectlinks: true,"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "        idprefix: \u0027\u0027,  // for compatibility with GitHub preview"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "        idseparator: \u0027-\u0027,"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "        \u0027site-root\u0027: \"${sourceDir}\",  // must be the same as sourceDir, do not modify"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "        \u0027site-name\u0027: \u0027AddressBook-Level3\u0027,"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "        \u0027site-githuburl\u0027: \u0027https://github.com/se-edu/addressbook-level3\u0027,"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "        \u0027site-seedu\u0027: true,  // delete this line if your project is not a fork (not a SE-EDU project)"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "    ]"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "    options[\u0027template_dirs\u0027].each {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "        inputs.files fileTree(it)"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "// Copies stylesheets into the directory containing generated HTML files as"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "// Asciidoctor does not copy linked CSS files to the output directory when rendering."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "// This is needed for linked stylesheets and embedded stylesheets which import other files."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "task copyStylesheets(type: Copy) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "    from \"${asciidoctor.sourceDir}/stylesheets\""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "    into \"${asciidoctor.outputDir}/html5/stylesheets\""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "asciidoctor.dependsOn copyStylesheets"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "defaultTasks \u0027clean\u0027, \u0027test\u0027, \u0027coverage\u0027, \u0027asciidoctor\u0027"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 1,
      "-": 154
    }
  },
  {
    "path": "docs/AboutUs.adoc",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d About Us"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ":site-section: AboutUs"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ":relfileprefix: team/"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ":imagesDir: images"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ":stylesDir: stylesheets"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Horo was developed by a team of 5-man. +"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "We are a team based in the http://www.comp.nus.edu.sg[School of Computing, National University of Singapore]."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Project Team"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003d\u003d\u003d Marcus Teh"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "image::marcusteh1238.png[width\u003d\"150\", align\u003d\"left\"]"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "{empty}[https://github.com/marcusteh1238[github]] [\u003c\u003cmarcusteh1238#, portfolio\u003e\u003e]"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Role: Developer +"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Responsibilities: Testing, Integration and Git Expert"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "\u0027\u0027\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003d\u003d\u003d Timothy Yu Zhiwen"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "image::kyzure.png[width\u003d\"150\", align\u003d\"left\"]"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "{empty}[https://github.com/Kyzure[github]] [\u003c\u003ckyzure#, portfolio\u003e\u003e]"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Role: Developer +"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Responsibilities: Documentation and UI"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "\u0027\u0027\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003d\u003d\u003d Denis"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "image::weomucat.png[width\u003d\"150\", align\u003d\"left\"]"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "{empty}[http://github.com/WeomuCat[github]] [\u003c\u003cweomucat#, portfolio\u003e\u003e]"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "Role: Developer +"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Responsibilities: Logic, Model and Intellij Expert"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "\u0027\u0027\u0027"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003d\u003d\u003d Bruce Ong"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "image::bruceskellator.png[width\u003d\"150\", align\u003d\"left\"]"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "{empty}[http://github.com/bruceskellator[github]] [\u003c\u003cbruceskellator#, portfolio\u003e\u003e]"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "Role: Developer +"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Responsibilities: Code quality, Undo and Redo"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "\u0027\u0027\u0027"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003d\u003d\u003d Ong Cheng Geng"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "image::chenggeng97.png[width\u003d\"150\", align\u003d\"left\"]"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "{empty}[http://github.com/ChengGeng97[github]] [\u003c\u003cchenggeng97#, portfolio\u003e\u003e]"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "Role: Developer +"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Responsibilities: Scheduling and tracking, Reminder and Notification"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "\u0027\u0027\u0027"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 23,
      "-": 33
    }
  },
  {
    "path": "docs/ContactUs.adoc",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d Contact Us"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ":site-section: ContactUs"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ":stylesDir: stylesheets"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "* *Bug reports, Suggestions* : Post in our https://github.com/AY1920S1-CS2103T-F12-1/main/issues[issue tracker] if you noticed bugs or have suggestions on how to improve."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "* *Contributing* : We welcome pull requests. Follow the process described https://github.com/oss-generic/process[here]"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "* *Email us* : You can also reach us at `e0310405 [at] u.nus.edu`"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 2,
      "-": 5
    }
  },
  {
    "path": "docs/DeveloperGuide.adoc",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003d Horo - Developer Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ":site-section: DeveloperGuide"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ":toc:"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ":toc-title:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ":toc-placement: preamble"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ":sectnums:"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ":imagesDir: images"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ":stylesDir: stylesheets"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ":xrefstyle: full"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "ifdef::env-github[]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ":tip-caption: :bulb:"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ":note-caption: :information_source:"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ":warning-caption: :warning:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "endif::[]"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ":repoURL: https://github.com/AY1920S1-CS2103T-F12-1/main"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "By: `Team AY1920S1-CS2103T-F12-1`      Since: `Sept 2019`      Licence: `MIT`"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Setting up"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "Refer to the guide \u003c\u003cSettingUp#, here\u003e\u003e."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Design"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "[[Design-Architecture]]"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Architecture"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ".Architecture Diagram"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "image::ArchitectureDiagram.png[]"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "The *_Architecture Diagram_* given above explains the high-level design of the App. Given below is a quick overview of each component."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "`Main` has two classes called link:{repoURL}/src/main/java/seedu/address/Main.java[`Main`] and link:{repoURL}/src/main/java/seedu/address/MainApp.java[`MainApp`]. It is responsible for,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "* At app launch: Initializes the components in the correct sequence, and connects them up with each other."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "* At shut down: Shuts down the components and invokes cleanup method where necessary."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c\u003cDesign-Commons,*`Commons`*\u003e\u003e represents a collection of classes used by multiple other components."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "The following class plays an important role at the architecture level:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "* `LogsCenter` : Used by many classes to write log messages to the App\u0027s log file."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "The rest of the App consists of four components."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "* \u003c\u003cDesign-Ui,*`UI`*\u003e\u003e: The UI of the App."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "* \u003c\u003cDesign-Logic,*`Logic`*\u003e\u003e: The command executor."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "* \u003c\u003cDesign-Model,*`Model`*\u003e\u003e: Holds the data of the App in-memory."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* \u003c\u003cDesign-Storage,*`Storage`*\u003e\u003e: Reads data from, and writes data to the hard disk."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "Each of the four components"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "* Defines its _API_ in an `interface` with the same name as the Component."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "* Exposes its functionality using a `{Component Name}Manager` class."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "For example, the `Logic` component (see the class diagram given below) defines it\u0027s API in the `Logic.java` interface and exposes its functionality using the `LogicManager.java` class."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ".Class Diagram of the Logic Component"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "image::LogicClassDiagram.png[]"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d How the architecture components interact with each other"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "The _Sequence Diagram_ below shows how the components interact with each other for the scenario where the user issues the command `delete 1`."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ".Component interactions for `delete 1` command"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "image::ArchitectureSequenceDiagram.png[]"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "The sections below give more details of each component."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "[[Design-Ui]]"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d UI component"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ".Main structure of the UI Component"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "image::UiClassDiagram.png[]"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "*API* : link:{repoURL}/blob/master/src/main/java/seedu/address/ui/Ui.java[`Ui.java`]"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "The UI consists of a `MainWindow` that is contains 3 main view parts - `CalendarPanel`, `ListPanel`, `LogPanel`. It also holds several other UI parts e.g. `PopUpPanel` and `Command Box`. Every one of the UI classes will abstract from the abstract `UiPart` class."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "The `UI` component uses JavaFx UI framework, and layout of these UI parts are defined in `.fxml` files which are found in the `src/main/resources/view` folder. One example of the layout would be: link:{repoURL}/blob/master/src/main/java/seedu/address/ui/MainWindow.java[`MainWindow`], whose FXML link is specified in link:{repoURL}/blob/master/src/main/resources/view/MainWindow.fxml[`MainWindow.fxml`]"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "The `UI` component does the following:"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* Executes user two different types commands using the `Logic` component."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "** One command, when executed, affect the actual Events."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "** The other command is executed to change the view of the UI. There are currently 3 main views in the application: `CalendarPanel`, `ListPanel`, `LogPanel`."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* It listens for any changes in the list of events using a listener:  link:{repoURL}/blob/master/src/main/java/seedu/address/model/listeners/EventListListener.java[`EventListListener`]."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* It also listens for the output to the user with another listener: link:{repoURL}/blob/master/src/main/java/seedu/address/ui/listeners/UserOutputListener.java[`UserOutputListener`]."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003d\u003d\u003d\u003d Calendar UI View"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ".Structure of the Calendar UI View"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "image::UiCalendarClassDiagram.png[]"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "The Calendar View is made up of the link:{repoURL}/blob/master/src/main/java/seedu/address/ui/panel/calendar/CalendarPanel.java[`CalendarPanel`], which holds several different other UI parts linked together to form the overall UI. In the Calendar View, it displays two UI parts of the Calendar: `CalendarScreen` and `TimelineView`."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "link:{repoURL}/blob/master/src/main/java/seedu/address/ui/panel/calendar/CalendarScreen.java[`CalendarScreen`] is the screen which displays the calendar of a certain month and year to the user. It contains 6 x 7 instance of `CalendarGridDay`, which displays the days of the month."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "link:{repoURL}/blob/master/src/main/java/seedu/address/ui/panel/calendar/TimelineView.java[`TimelineView`] is the screen which displays the timeline using 3 different classes which abstract from `TimelineView`."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* link:{repoURL}/blob/master/src/main/java/seedu/address/ui/panel/calendar/TimelineDayView.java[`TimelineDayView`] displays the timeline of a particular day in a certain month and year."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* link:{repoURL}/blob/master/src/main/java/seedu/address/ui/panel/calendar/TimelineWeekView.java[`TimelineWeekView`] displays the timeline of a particular week. The week is according to the `CalendarScreen`, where each row represents a week of a month."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* link:{repoURL}/blob/master/src/main/java/seedu/address/ui/panel/calendar/TimelineMonthView.java[`TimelineMonthView`] displays the timeline of a particular month in a certain year."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Each of these timeline will hold up to a certain amount of `CardHolder` depending on the type of `TimelineView`. Each of these `CardHolder` will then hold an amount of EventCards for displaying the event name and date."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003d\u003d\u003d\u003d List UI View"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ".Structure of the List UI View"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "image::UiListClassDiagram.png[]"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "The List View is made up of the link:{repoURL}/blob/master/src/main/java/seedu/address/ui/panel/list/ListPanel.java[`ListPanel`] which contains two lists views, `EventListView` and `TaskListView`"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* link:{repoURL}/blob/master/src/main/java/seedu/address/ui/panel/list/EventListView.java[`EventListView`] displays the list of Events containing every piece of information of the Events."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* link:{repoURL}/blob/master/src/main/java/seedu/address/ui/panel/list/TaskListView.java[`TaskListView`] displays the list of Task, containing every piece of information of each Task. [__To be implemented__]"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Similar to `TimelineView`, `EventListView` and `TaskListView` will contain a list of `Card`, but it will not be held in the `CardHolder`."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003d\u003d\u003d\u003d Log UI View"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ".Structure of the Log UI View"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "image::UiLogClassDiagram.png[]"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "The Log View is made up of the link:{repoURL}/blob/master/src/main/java/seedu/address/ui/panel/log/LogPanel.java[`LogPanel`] which contains several instances of `LogBox`."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "link:{repoURL}/blob/master/src/main/java/seedu/address/ui/panel/log/LogBox.java[`LogBox`] displays literal information back to the user when it is called by `MainWindow` when it listens for a command."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "[[Design-Logic]]"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Logic component"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "[[fig-LogicClassDiagram]]"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": ".Structure of the Logic Component"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "image::LogicClassDiagram.png[]"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "*API* :"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "link:{repoURL}/src/main/java/seedu/address/logic/Logic.java[`Logic.java`]"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": ".  `Logic` uses the `AddressBookParser` class to parse the user command."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": ".  This results in a `Command` object which is executed by the `LogicManager`."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": ".  The command execution can affect the `Model` (e.g. adding a person)."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": ".  The result of the command execution is encapsulated as a `CommandResult` object which is passed back to the `Ui`."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": ".  In addition, the `CommandResult` object can also instruct the `Ui` to perform certain actions, such as displaying help to the user."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "Given below is the Sequence Diagram for interactions within the `Logic` component for the `execute(\"delete 1\")` API call."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": ".Interactions Inside the Logic Component for the `delete 1` Command"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "image::DeleteSequenceDiagram.png[]"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "NOTE: The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "[[Design-Model]]"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Model component"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": ".Structure of the Model Component"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "image::ModelClassDiagram.png[]"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "*API* : link:{repoURL}/src/main/java/seedu/address/model/Model.java[`Model.java`]"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "The `Model`,"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "* stores a `UserPref` object that represents the user\u0027s preferences."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "* stores the Address Book data."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "* exposes an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change."
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "* does not depend on any of the other three components."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "As a more OOP model, we can store a `Tag` list in `Address Book`, which `Person` can reference. This would allow `Address Book` to only require one `Tag` object per unique `Tag`, instead of each `Person` needing their own `Tag` object. An example of how such a model may look like is given below. +"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": " +"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "image:BetterModelClassDiagram.png[]"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "[[Design-Storage]]"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Storage component"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": ".Structure of the Storage Component"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "image::StorageClassDiagram.png[]"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "*API* : link:{repoURL}/src/main/java/seedu/address/storage/Storage.java[`Storage.java`]"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "The `Storage` component,"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "* can save `UserPref` objects in json format and read it back."
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "* can save the Address Book data in json format and read it back."
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "[[Design-Notification]]"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003d\u003d\u003d Notification System"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "(Picture: Notification System)"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Notifications are handled through the NotificationManager, itself found in the Logic component. There does not exist a singular Notification component. Rather, functional classes for the Notification System are have been split across the Logic and UI components, depending on their functionality."
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003d\u003d\u003d\u003d Logic Classes"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Logic classes are reponsible for deciding if a notification should be posted. As with other components, their functionality is accessed through the `NotificationManager` class. The `NotificationManager` class maintains a reference to a `NotificationCheckingThread` as well as a `SystemTrayCommunicator`."
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "The logic classes of the Notification System can be found under the `notification` package under the `Logic` component."
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "- The `NotificationCheckingThread` is a daemon thread that runs in parallel with the main application. It checks for new notifications to post every minute."
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "- The `NotificationChecker` is responsible for checking `Model` for any notifications that need to be posted."
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003d\u003d\u003d\u003d UI Classes"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "UI classes are responsible for displaying notifications."
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "The UI classes of the Notification System can be found under the `systemtray` package under the `ui` component."
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "- The `PopupListener` class is the main channel of communication between the logic and UI classes. When a notification needs to be posted, it will relay the information from the logic to UI classes."
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "- The `SystemTrayCommunicator` handles posting notifications and displaying the app\u0027s icon on the System Tray."
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "- The `PopupNotification` class carries the information that will be posted on a popup notification."
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "- The `NotificationClickActionListener` is called when the user clicks on a popup notification."
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "[[Design-Commons]]"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Common classes"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "Classes used by multiple components are in the `seedu.addressbook.commons` package."
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Implementation"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "This section describes some noteworthy details on how certain features are implemented."
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "// tag::undoredo[]"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d [Proposed] Undo/Redo feature"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d Proposed Implementation"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "The undo/redo mechanism is facilitated by `VersionedAddressBook`."
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`."
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "Additionally, it implements the following operations:"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "* `VersionedAddressBook#commit()` -- Saves the current address book state in its history."
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "* `VersionedAddressBook#undo()` -- Restores the previous address book state from its history."
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "* `VersionedAddressBook#redo()` -- Restores a previously undone address book state from its history."
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively."
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "Given below is an example usage scenario and how the undo/redo mechanism behaves at each step."
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state."
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "image::UndoRedoState0.png[]"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state."
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "image::UndoRedoState1.png[]"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "Step 3. The user executes `add n/David ...` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`."
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "image::UndoRedoState2.png[]"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`."
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state."
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "image::UndoRedoState3.png[]"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "If the `currentStatePointer` is at index 0, pointing to the initial address book state, then there are no previous address book states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the undo."
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "The following sequence diagram shows how the undo operation works:"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "image::UndoSequenceDiagram.png[]"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "NOTE: The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram."
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "The `redo` command does the opposite -- it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state."
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone address book states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo."
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged."
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "image::UndoRedoState4.png[]"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. We designed it this way because it no longer makes sense to redo the `add n/David ...` command. This is the behavior that most modern desktop applications follow."
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "image::UndoRedoState5.png[]"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "The following activity diagram summarizes what happens when a user executes a new command:"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "image::CommitActivityDiagram.png[]"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d Design Considerations"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d Aspect: How undo \u0026 redo executes"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "* **Alternative 1 (current choice):** Saves the entire address book."
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "** Pros: Easy to implement."
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "** Cons: May have performance issues in terms of memory usage."
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "* **Alternative 2:** Individual command knows how to undo/redo by itself."
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "** Pros: Will use less memory (e.g. for `delete`, just save the person being deleted)."
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "** Cons: We must ensure that the implementation of each individual command are correct."
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d Aspect: Data structure to support the undo/redo commands"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": "* **Alternative 1 (current choice):** Use a list to store the history of address book states."
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": "** Pros: Easy for new Computer Science student undergraduates to understand, who are likely to be the new incoming developers of our project."
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "** Cons: Logic is duplicated twice. For example, when a new command is executed, we must remember to update both `HistoryManager` and `VersionedAddressBook`."
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": "* **Alternative 2:** Use `HistoryManager` for undo/redo"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": "** Pros: We do not need to maintain a separate list, and just reuse what is already in the codebase."
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": "** Cons: Requires dealing with commands that have already been undone: We must remember to skip these commands. Violates Single Responsibility Principle and Separation of Concerns as `HistoryManager` now needs to do two different things."
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": "// end::undoredo[]"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": "// tag::dataencryption[]"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d [Proposed] Data Encryption"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "_{Explain here how the data encryption feature will be implemented}_"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": "// end::dataencryption[]"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Logging"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": "We are using `java.util.logging` package for logging. The `LogsCenter` class is used to manage the logging levels and logging destinations."
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": "* The logging level can be controlled using the `logLevel` setting in the configuration file (See \u003c\u003cImplementation-Configuration\u003e\u003e)"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "* The `Logger` for a class can be obtained using `LogsCenter.getLogger(Class)` which will log messages according to the specified logging level"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": "* Currently log messages are output through: `Console` and to a `.log` file."
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": "*Logging Levels*"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": "* `SEVERE` : Critical problem detected which may possibly cause the termination of the application"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": "* `WARNING` : Can continue, but with caution"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": "* `INFO` : Information showing the noteworthy actions by the App"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": "* `FINE` : Details that is not usually noteworthy but may be useful in debugging e.g. print the actual list instead of just its size"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": "[[Implementation-Configuration]]"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Configuration"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": "Certain properties of the application can be controlled (e.g user prefs file location, logging level) through the configuration file (default: `config.json`)."
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Documentation"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": "Refer to the guide \u003c\u003cDocumentation#, here\u003e\u003e."
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Testing"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": "Refer to the guide \u003c\u003cTesting#, here\u003e\u003e."
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Dev Ops"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "-"
        },
        "content": "Refer to the guide \u003c\u003cDevOps#, here\u003e\u003e."
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": "[appendix]"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Product Scope"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "-"
        },
        "content": "*Target user profile*:"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* is a student"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* has a need to manage their Events and Tasks for visualization."
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* requires reminders for their Events and Tasks."
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "-"
        },
        "content": "* prefer desktop apps over other types"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": "* can type fast"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "-"
        },
        "content": "* prefers typing over mouse input"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "-"
        },
        "content": "* is reasonably comfortable using CLI apps"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "*Value proposition*: manage Reminders as well as viewing Events and Tasks much faster than a typical mouse/GUI driven app"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "-"
        },
        "content": "[appendix]"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d User Stories"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "-"
        },
        "content": "Priorities: High (must have) - `* * \\*`, Medium (nice to have) - `* \\*`, Low (unlikely to have) - `*`"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "-"
        },
        "content": "[width\u003d\"59%\",cols\u003d\"22%,\u003c23%,\u003c25%,\u003c30%\",options\u003d\"header\",]"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "-"
        },
        "content": "|\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "-"
        },
        "content": "|Priority |As a ... |I want to ... |So that I can..."
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "-"
        },
        "content": "|`* * *` |new user |see usage instructions |refer to instructions when I forget how to use the App"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "|`* * *` |user |add an Event or Task |keep track of an Event or Task that I have in the future"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "|`* * *` |user |delete an Event or Task |remove the Event or Task I no longer need."
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "|`* * *` |user |find an Event or Task by name |locate the details of the Event or Task without having to go through the entire list"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "|`* * *` |user |find an Event or Task by tags|remember the details of the Event or Task that I forget about"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "|`* * *` |user|undo and redo commands |undo any commands which wrongly inputted"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "|`* * *` |user|edit my Events and Tasks |change the details of the event, be it location, date or time"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "|`* * *` |user that works on multiple computer |port my data between computers |keep track on all my computers."
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "|`* * *` |student |have constant reminders to track the deadline of my assignments |not forget to complete and submit them"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "|`* * *` |student |keep track of how long it takes for me to complete a task |gauge how long I will need to take for future similar tasks"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "|`* * *` |student with weekly assignments and lectures |have my reminders to be recurring | be reminded without having to input the information in again"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "|`* * *` |busy student |have a convenient way to visually see my assignments and projects |complete them in the right priority"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "|`* * *` |busy user |be informed if any different events clash with each other |understand which event to prioritize or reschedule"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "|`* *` |user |add a contacts | add them into Events to remind myself who I am meeting up with"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "|`* *` |user |archive my completed Tasks | remind myself if I complete a task but forgot about it"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "|`* *` |user |create custom commands that contain the execution of multiple sub-commands |quickly input in a command without the need to edit it"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "|`* *` |student |visualize my timetable |plan for when it is time to take a break from studying"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "|`* *` |student |find a time for my project teammates to meet up |schedule a meeting without clashing together with other events"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "|`*` |user |import contacts in vCard format| integrate them with my events"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "|`*` |user |export contacts in vCard format | integrate them with my other computers"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "|`*` |student |keep track of sub-tasks in a main task | know my current progress in a report"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "-"
        },
        "content": "|\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "-"
        },
        "content": "_{More to be added}_"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "-"
        },
        "content": "[appendix]"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Use Cases"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "(For all use cases below, the *System* is the `Horo` and the *Actor* is the `user`, unless specified otherwise)"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "-"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003d\u003d\u003d Use case 1: Add a Task"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "-"
        },
        "content": "*MSS*"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "1.  User requests to add a Task"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "2.  Horo replies that the Task has been added"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "-"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "-"
        },
        "content": "*Extensions*"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* 1a. The user adds additional sub-commands to the Task command"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "+"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* 2a. The given add Task command is of the wrong format."
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "+"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "-"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "** 2a1. Horo displays an error message."
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "+"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Use case resumes at step 1."
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003d\u003d\u003d Use case 2: Delete a Task"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "*MSS*"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "1.  User requests to delete a specific Task from the already displayed list"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "2.  Horo deletes the Task"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "-"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "*Extensions*"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* 2a. The given delete Task command is of the wrong format."
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "-"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "** 2a1. Horo displays an error message."
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Use case resumes at step 1."
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "-"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003d\u003d\u003d Use case 3: Find a Task by name"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "-"
        },
        "content": "*MSS*"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "1.  User requests to find a Task"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "2.  Horo displays the list of Task with the keywords found in its name"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "-"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "-"
        },
        "content": "*Extensions*"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "-"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* 2a. The given find Task command is of the wrong format."
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "+"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "** 2a1. Horo displays an error message."
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "+"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Use case resumes at step 1."
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003d\u003d\u003d Use case 4: Undo and Redo commands"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "*MSS*"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "1.  User requests to add an Task"
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "2.  Horo replies that the Task has been added"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "3.  User requests to undo the command"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "4.  Horo replies that the previous command has been undone"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "-"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "*Extensions*"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* 1a. The user adds additional sub-commands to the Task command"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "+"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* 2a. The given add Task command is of the wrong format."
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "+"
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "** 2a1. Horo displays an error message."
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Use case resumes at step 1"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* 4a. User decides the to Redo the added Task"
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "-"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "** 3a1. Horo replies that the added Task has been redone"
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Use case ends"
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003d\u003d\u003d Use case 5: Edit a Task"
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "*MSS*"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "1.  User requests to add a Task"
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "2.  Horo replies that the Task has been added"
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "3.  User request to edit a Task with the sub-commands"
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "4.  Horo replies that the Task has been edited"
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "+"
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "*Extensions*"
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* 1a. The user adds additional sub-commands to the Task command"
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "+"
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* 2a. The given add Task command is of the wrong format."
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "+"
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "** 2a1. Horo displays an error message."
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "+"
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Use case resumes at step 1."
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* 4a. The given edit Task command is of the wrong format."
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "+"
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "** 4a1. Horo displays an error message."
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "+"
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Use case resumes at step 3."
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "+"
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "-"
        },
        "content": "_{More to be added}_"
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "-"
        },
        "content": "[appendix]"
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Non Functional Requirements"
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "-"
        },
        "content": ".  Should work on any \u003c\u003cmainstream-os,mainstream OS\u003e\u003e as long as it has Java `11` or above installed."
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ".  Should be able to hold up to 1000 Events and Tasks without a noticeable sluggishness in performance for typical usage."
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ".  Should function on both `32-bit environment` and `64-bit environment`"
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ".  Should work without any internet required."
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "-"
        },
        "content": ".  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse."
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "."
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "-"
        },
        "content": "_{More to be added}_"
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "-"
        },
        "content": "[appendix]"
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Glossary"
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "-"
        },
        "content": "[[mainstream-os]] Mainstream OS::"
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "-"
        },
        "content": "Windows, Linux, Unix, OS-X"
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "[[event]] Event::"
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "A thing that happens or takes place during a certain period of time, or of a general time."
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "[[task]] Task::"
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "A piece of work that is to be completed or taken note of."
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "-"
        },
        "content": "[appendix]"
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Product Survey"
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "*reminder-bot on Discord*"
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Author: JellyWX"
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "-"
        },
        "content": "Pros:"
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* A reminder bot on a popular voice and text chat application"
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* Capable of parsing english language as compared to CLI styled commands"
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "-"
        },
        "content": "Cons:"
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* Lack of visualization of the Events and Tasks"
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* Parsing english language makes it slower to type with a longer requirement as compared to CLI styled commands"
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "*Google Calendar*"
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 594,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Company: Google"
      },
      {
        "lineNumber": 595,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 596,
        "author": {
          "gitId": "-"
        },
        "content": "Pros:"
      },
      {
        "lineNumber": 597,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 598,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* A Calendar application that is capable of storing Events and Tasks as well."
      },
      {
        "lineNumber": 599,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* Mostly uses GUI for interaction with user instead of having CLI, favouring to the common crowd."
      },
      {
        "lineNumber": 600,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 601,
        "author": {
          "gitId": "-"
        },
        "content": "Cons:"
      },
      {
        "lineNumber": 602,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 603,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* Mostly uses GUI for interaction with user instead of having CLI, which does not favour those who prefers CLI."
      },
      {
        "lineNumber": 604,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* It requires an account to be usable."
      },
      {
        "lineNumber": 605,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* The desktop version requires a browser, which in turn requires Internet and hence not offline."
      },
      {
        "lineNumber": 606,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 607,
        "author": {
          "gitId": "-"
        },
        "content": "[appendix]"
      },
      {
        "lineNumber": 608,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Instructions for Manual Testing"
      },
      {
        "lineNumber": 609,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 610,
        "author": {
          "gitId": "-"
        },
        "content": "Given below are instructions to test the app manually."
      },
      {
        "lineNumber": 611,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 612,
        "author": {
          "gitId": "-"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 613,
        "author": {
          "gitId": "-"
        },
        "content": "These instructions only provide a starting point for testers to work on; testers are expected to do more _exploratory_ testing."
      },
      {
        "lineNumber": 614,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 615,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Launch and Shutdown"
      },
      {
        "lineNumber": 616,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 617,
        "author": {
          "gitId": "-"
        },
        "content": ". Initial launch"
      },
      {
        "lineNumber": 618,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 619,
        "author": {
          "gitId": "-"
        },
        "content": ".. Download the jar file and copy into an empty folder"
      },
      {
        "lineNumber": 620,
        "author": {
          "gitId": "-"
        },
        "content": ".. Double-click the jar file +"
      },
      {
        "lineNumber": 621,
        "author": {
          "gitId": "-"
        },
        "content": "   Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum."
      },
      {
        "lineNumber": 622,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 623,
        "author": {
          "gitId": "-"
        },
        "content": ". Saving window preferences"
      },
      {
        "lineNumber": 624,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 625,
        "author": {
          "gitId": "-"
        },
        "content": ".. Resize the window to an optimum size. Move the window to a different location. Close the window."
      },
      {
        "lineNumber": 626,
        "author": {
          "gitId": "-"
        },
        "content": ".. Re-launch the app by double-clicking the jar file. +"
      },
      {
        "lineNumber": 627,
        "author": {
          "gitId": "-"
        },
        "content": "   Expected: The most recent window size and location is retained."
      },
      {
        "lineNumber": 628,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 629,
        "author": {
          "gitId": "-"
        },
        "content": "_{ more test cases ... }_"
      },
      {
        "lineNumber": 630,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 631,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 632,
        "author": {
          "gitId": "-"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Kyzure": 236,
      "-": 396
    }
  },
  {
    "path": "docs/UserGuide.adoc",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d Horo - User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ":site-section: UserGuide"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ":toc:"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ":toc-title:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ":toc-placement: preamble"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ":sectnums:"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ":imagesDir: images"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ":stylesDir: stylesheets"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ":xrefstyle: full"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ":experimental:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "ifdef::env-github[]"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ":tip-caption: :bulb:"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ":note-caption: :information_source:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "endif::[]"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ":repoURL: https://github.com/AY1920S1-CS2103T-F12-1/main"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "By: `Team AY1920S1-CS2103T-F12-1`      Since: `Sept 2019`      Licence: `MIT`"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Introduction"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "*Horo* is for those who want to use a Command-Line-Interface (CLI) desktop application to manage one’s schedule and reminders. However, it is not just a fully implemented CLI program, but it also includes a Graphical User Interface (GUI) to make it visually appealing. If you are able to remember the commands, *Horo* is definitely an efficient solution to help you store your Events and Reminders. Forgetful person or not, *Horo* will help you remember and remind you, as well as provide a visual aid for what the next most important task coming up is and when it occurs. Continue reading to find out what *Horo* has to offer!"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Quick Start"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ".  Ensure you have Java `11` or above installed in your Computer."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ".  Download the latest `horo.jar` link:{repoURL}/releases[here]."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ".  Copy the file to the folder you want to use as the home folder for your Address Book."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ".  Double-click the file to start the app. The GUI should appear in a few seconds."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ".Startup Screen Shot of Horo"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "image::Ui.png[width\u003d\"790\"]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ".  Type the command in the command box and press kbd:[Enter] to execute it. +"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "e.g. typing *`help`* and pressing kbd:[Enter] will open the help window."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ".  Some example commands you can try:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "* `**add_event** Celebrate Rori’s Birthday`: adds an event to the event book."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "* `**delete** -task 3` : deletes the 3rd event shown in the event book."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "* *`exit`* : exits the application."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ".  Refer to \u003c\u003cFeatures\u003e\u003e for details of each command."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "[[Features]]"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Features"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "*Command Format for Horo*"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "* The first word of any command should be a non-capitalized command, followed by the necessary arguments of the command itself."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "- E.g. `help`"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "- E.g. `done 1`"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "* If the argument contains more than 1 blank space, it should be contained in a double apostrophe."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "- E.g. `delete 1`"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "- E.g. `add_event \"Celebrate Rori\u0027s Birthday\"`"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "* Any sub-commands should be after the main command, and require a `--` before the sub-command itself. Sub commands should"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "- E.g. `add_event \"Celebrate Horo\u0027s Birthday\" --at 17/09/2019 23:59`"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "*Command Format specifically for this User Guide*"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "* Words that are fully capitalized are the terms supplied by you."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "- E.g. `event EVENT`"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "* Words in square brackets, `[]`, are optional terms."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "- E.g. `event EVENT [--at DATE_TIME]"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "* Words with ellipsis, `...`, can be used multiple times including zero times."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "- E.g. `event EVENT [--at DATE_TIME] [--tag TAG_1] [--tag TAG_2]...`"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d\u003d\u003d Asking for help : `help` **`[coming in v2.0]`**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "Provides a guide for you if you have problems with commands and it’s format."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "Format and Example: +"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "`help`"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d\u003d\u003d Calendar, Events and Task"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "The  following commands are related to Events and Tasks which revolves around a calendar. Here are the clarification for Events and Tasks:"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "* Event:"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "- Will show up on the Calendar."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "- Unable to be marked as done."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "- If past the specified date, it is removed from the Calendar, unless it is recurring."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "* Task **`[coming in v2.0]`**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "- May show up on the Calendar if time is specified."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "- Able to be marked as done."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "- If past the specified date, it is archived into an undone list, which subsequently able to be unarchived."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d\u003d\u003d\u003d Adding Events"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ".Add Event Command"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "image::AddEventCommandScreenShot.png[]"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "Adds an event to the event list."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "Format: +"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "`add_event DESCRIPTION DATE_TIME [--end DATE_TIME] [--remind DATE_TIME] [--tag TAG...]`"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "Examples: +"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "`add_event “Celebrate Rori’s Birthday” “18/08/2019 16:00”` +"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "`add_event “Celebrate Rori’s Birthday” “18/08/2019 16:00” --end “18/08/2019 20:00”` +"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "`add_event “Celebrate Rori’s Birthday” “18/08/2019 16:00” --remind “18/08/2019 12:00”` +"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "`add_event “Celebrate Rori’s Birthday” “18/08/2019 16:00” --tag Birthday Rori` +"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d\u003d\u003d\u003d Deleting Events"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ".Delete Event Command"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "image::DeleteEventCommandScreenShot.png[]"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "Deletes event(s) from the event list."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "1. Delete by event indexes"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "2. Delete by tags"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "Format: +"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "`delete_event [INDEX...] [--tag TAG...]`"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "Examples: +"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "`delete_event 1` +"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "`delete_event 1 2 3` +"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "`delete_event --tag Birthday` +"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "`delete_event 1 2 3 --tag Birthday`"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d\u003d\u003d\u003d Editing Events"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ".Edit Event Command"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "image::EditEventCommandScreenShot.png[]"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "Edits existing event(s) from the event list. +"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "Edit by event indexes."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "Format: +"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "`edit_event INDEX... [--description DESCRIPTION] [--at DATE_TIME]  [--remind DATE_TIME] [--tag TAG...]`"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "Examples: +"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "`edit_event 1 2 3 --tag Rori` +"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "`edit_event 1 --description “Play Monster Hunter” --at “17/08/2019 19:00” --remind “17/08/2019 12:00” --tag Kyzure`"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d\u003d\u003d\u003d Adding Tasks **`[coming in v2.0]`**"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "Adds a task to the task list."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "Format: +"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "`add_task DESCRIPTION [--remind DATE_TIME] [--tag TAG...]`"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "Examples: +"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "`add_task “Buy Rori a birthday cake”` +"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "`add_task “Buy Rori a birthday cake” --end “18/08/2019 20:00”` +"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "`add_task “Buy Rori a birthday cake” --remind “18/08/2019 12:00”` +"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "`add_task “Buy Rori a birthday cake” --tag Birthday Rori`"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d\u003d\u003d\u003d Deleting Tasks **`[coming in v2.0]`**"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "Deletes Task(s) from the task list."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "1. Delete by task indexes"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "2. Delete by tags"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "Format: +"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "`delete_task [INDEX...] [--tag TAG...]`"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "Examples: +"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "`delete_task 1` +"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "`delete_task 1 2 3` +"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "`delete_task --tag Birthday` +"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "`delete_task 1 2 3 --tag Birthday`"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d\u003d\u003d\u003d Editing Tasks **`[coming in v2.0]`**"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "Edits existing task(s) from the task list. +"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "Edit by task indexes."
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "Format: +"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "`edit_task INDEX... [--description DESCRIPTION] [--remind DATE_TIME] [--tag TAG...]`"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "Examples: +"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "`edit_task 1 2 3 --tag Present` +"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "`edit_task 1 --description “Buy Rori a present” --remind “17/08/2019 12:00” --tag Present`"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d\u003d\u003d\u003d Making recurring Events: `recur` **`[coming in v2.0]`**"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "Makes an Event show up repeatedly in the Calendar"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "Format: +"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "`recur INDEX... [-f|--frequency FREQUENCY]`"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "Examples: +"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "`recur 1 2 3 -f daily` +"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "`recur 1 2 3 --frequency daily`"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "* This will make Events 1, 2 and 3 recur daily on the Calendar."
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d\u003d\u003d\u003d Finding Events and Tasks **`[coming in v2.0]`**"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "Finds Events and Tasks whose name or tag contains the specified keyword. If unspecified, Rori will search for all events, tasks and tags containing the keyword."
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "Format: +"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "`find [KEYWORD] [--event KEYWORD] [--task KEYWORD] [--tag KEYWORD...]`"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "Example: +"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "`find Birthday` +"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "`find --event Rori` +"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "`find --task Rori` +"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "`find --tag Birthday` +"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "`find --tag Birthday Pet`"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d\u003d\u003d\u003d Completing Tasks **`[coming in v2.0]`**"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "Sets task(s) as done using it\u0027s task index as a parameter, so that you can keep track of your progress."
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "Format: +"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "`done INDEX...`"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "Example: +"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "`done 1` +"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "`done 1 2 3`"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d\u003d\u003d Tagging System **`[coming in v2.0]`**"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d\u003d\u003d\u003d Adding Tags **`[coming in v2.0]`**"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "Adds Tags to particular Events or Tasks"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "Format: +"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "`tag INDEX... --tag TAG...`"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "Example: +"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "`tag 1 2 3 --tag Birthday`"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d\u003d\u003d\u003d Removing Tags **`[coming in v2.0]`**"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "Removes Tags from particular Events or Tasks"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "Format: +"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "`remove_tag INDEX... --tag TAG...`"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "Example: +"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "`remove_tag 1 2 3 --tag Birthdays`"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d\u003d\u003d\u003d Deleting Events and Tasks **`[coming in v2.0]`**"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "Deletes all events and tasks."
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "1. Delete by indexes"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "2. Delete by tags"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "Format: +"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "`delete [INDEX...] [--tag TAG...]`"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "Example: +"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "`delete 1 2 3`"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "`delete --tag Work` +"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "* This will delete all events and tasks that have been tagged as Work."
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "`delete --tag Work \"Project Animation\"` +"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "* This will delete all events and tasks that have been tagged as both Work AND Project Animation."
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d\u003d\u003d UI"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003d\u003d\u003d\u003d Changing Screen View to Calendar View: `calendar [DATE]`"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ".Calendar View Command for Calendar"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "image::Ui.png[]"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "This will switch the UI screen view to the Calendar View, which displays a calendar of a particular month and year, as well as a timeline of a particular day, week or month."
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "The calendar itself will switch to a given date if specified, even if you are already in the Calendar View, otherwise it will only switch to the Calendar View where you last left off."
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "This is the default screen view that comes up when you first open the application, and the timeline date as well as calendar date is set to your systems\u0027 current date."
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Format: +"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "`calendar`"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "`calendar [DATE]`"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Example: +"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "`calendar 11/10/2019`"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003d\u003d\u003d\u003d Changing Timeline to a given day: `day [DATE]`"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ".Day View Command for the Timeline"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "image::DayViewCommandScreenShot.png[]"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "This will switch the UI screen view to the Calendar View, and sets the Timeline to be of the given day."
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Format: +"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "`day [DATE]`"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Example: +"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "`day 11/10/2019`"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003d\u003d\u003d\u003d Changing Timeline to a given week: `week [WEEK_NUMBER] [MONTH_YEAR]`"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ".Week View Command for the Timeline"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "image::WeekViewCommandScreenShot.png[]"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "This will switch the UI screen view to the Calendar View, and sets the Timeline to be of the given week of a month."
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "Format: +"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "`week [WEEK_NUMBER] [MONTH_YEAR]`"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Example: +"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "`week 2 11/2019`"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003d\u003d\u003d\u003d Changing Timeline to a given month: `month [MONTH_YEAR]`"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ".Month View Command for the Timeline"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "image::MonthViewCommandScreenShot.png[]"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "This will switch the UI screen view to the Calendar View, and sets the Timeline to be of the given month."
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Format: +"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "`month [MONTH_YEAR]`"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Example: +"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "`month 11/2019`"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003d\u003d\u003d\u003d Changing Screen View to List View: `list` **`[coming in v1.3]`**"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ".List View Command"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "image::ListCommandScreenShot.png[]"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "This will switch the UI screen view to the List View, which displays a list of events on the left side and a list on the right side."
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Format and Example: +"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003d\u003d\u003d\u003d Changing Screen View to Log View: `log`"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ".Log View Command"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "image::LogCommandScreenShot.png[]"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "This will switch the UI screen view to the Log View, which displays all of the pop up box like a chat box."
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Format and Example: +"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "`log`"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d\u003d\u003d Undo Redo"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003d\u003d\u003d\u003d Undo"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ".Undo Command"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "image::UndoCommandScreenShot.png[]"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "Undoes the previous command. +"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "Commands can be undone up to the starting up of the program"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "Format: +"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "`undo`"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003d\u003d\u003d\u003d Redo"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ".Redo Command"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "image::RedoCommandScreenShot.png[]"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "Redoes the previously undone command"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "Format: +"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "`redo`"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "Able to redo commands that have been undone and"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "are not succeeded by any other state-changing commands (e.g. add_event, delete_event, edit)"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003d\u003d\u003d Notification System"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Horo will post notifications to your system tray to remind you that an event is starting or that a task is due."
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Take note that Horo can only post reminders as long as the app is open. To tell if Horo is running, check that the appropriate icon appears in the system tray"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ".Horo Tray Icon"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "image::HoroIconScreenShot.png[]"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Also take note that notifications are switched on by default. There is no need to switch notifications on if you\u0027re launching the app for the first time. However, because Horo remembers your preferences, you may have to switch them on again if they were previously switched off."
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "You can tell if notifications are switched on by mousing over the icon in the system tray."
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ".Horo Tray Icon Mouse Over"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "image::IconMouseOverScreenShot.png[]"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003d\u003d\u003d\u003d Notification Popups"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "When Horo posts a notification, it should appear at the bottom-right side of the screen, where the system tray should be."
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ".Notification Pop Up"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "image::PopUpScreenShot.png[]"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003d\u003d\u003d\u003d Switch notifications on"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Format: +"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "*`notif_on`*"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "1. If you would like to switch notifications on, type the command *`notif_on`* into the command box and press kbd:[Enter] to execute it. +"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ".Notification On in Command Box"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "image::NotificationOnCommandBoxScreenShot.png[]"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "2. An in-app popup should appear, displaying “Notifications switched on”. The log view should also record this action. +"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ".Notification On FeedBack"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "image::NotificationOnFeedbackScreenShot.png[]"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003d\u003d\u003d\u003d Switch notifications off"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Format: +"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "*`notif_off`*"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "1. If you would like to switch notifications off, type the command *`notif_off`* into the command box and press kbd:[Enter] to execute it. +"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ".Notification Off in Command Box"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "image::NotificationOffCommandBoxScreenShot.png[]"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "2. An in-app popup should appear, displaying “Notifications switched off”. The log view should also record this action. +"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ".Notification Off FeedBack"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "image::NotificationOffFeedbackScreenShot.png[]"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003d\u003d\u003d .ics Integration System"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Allows you to export and import from other calendar application that uses .ics format as well."
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003d\u003d\u003d\u003d Export current calendar : `export --directory [\"DIRECTORY\"]`"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ".Export Command"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "image::ExportCommandScreenShot.png[]"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ".Exported File"
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "image::ExportFileScreenShot.png[]"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Exports your current calendar into .ics format to the given directory, or to the root folder of the application itself."
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Format: +"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "`export` +"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "`export --directory [\"DIRECTORY\"]`"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Example: +"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "`export --directory \"C:\\Users\\USER_NAME\\Desktop\\Horo\"`"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003d\u003d\u003d\u003d Import other calendar : `import [\"FILE_PATH\"]`"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ".Import Command"
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "image::ImportCommandScreenShot.png[]"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ".Imported File"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "image::ImportFileScreenShot.png[]"
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Imports an .ics format file from the indicated file path."
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Format: +"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "`import [\"DIRECTORY\"]`"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Example: +"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "`import \"C:\\Users\\USER_NAME\\Desktop\\OtherCalendars\\Others.ics\"`"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003d\u003d\u003d Exiting the program : `exit` **`[coming in v2.0]`**"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "Exits the program."
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "Format: `exit`"
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d FAQ"
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "-"
        },
        "content": "*Q*: How do I transfer my data to another Computer? +"
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "-"
        },
        "content": "*A*: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous Address Book folder."
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Command Summary"
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "* *Help* : `help` +"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "* *Adding an Event* : `add_event DESCRIPTION DATE_TIME [--remind DATE_TIME] [--tag TAG...]` +"
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "E.g. `add_event \"Celebrate Horo\u0027s Birthday\" --at 17/09/2019 23:59`"
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "* *Deleting Events* : `delete_event [INDEX...] [--tag TAG...]` +"
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "E.g. `delete_event 1 2 3`"
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "* *Editing Events* : `edit_event INDEX... [--description DESCRIPTION] [--at DATE_TIME] [--remind DATE_TIME] [--tag TAG...]` +"
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "E.g. `edit_event 1 --description “Play Monster Hunter” --at “17/08/2019 19:00” --remind “17/08/2019 12:00” --tag Kyzure`"
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "* *Adding a Task* : `add_task DESCRIPTION [--tag TAG...]` +"
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "E.g. `add_task “Celebrate Horo’s Birthday” --tag Birthday`"
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "* *Deleting Tasks* : `delete_task [INDEX...] [--tag TAG...]` +"
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "E.g. `delete_task 1 2 3`"
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "* *Editing Tasks* : `edit_task INDEX... [--description DESCRIPTION] [--remind DATE_TIME] [--tag TAG...]` +"
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "E.g. `edit_task 1 --description “Play Monster Hunter” --remind “17/08/2019 12:00” --tag Kyzure`"
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "* *Adding a Tag* : `tag INDEX... --tag TAG...` +"
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "E.g. `tag 1 2 3 --tag Birthday`"
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "* *Removing a Tag* : `remove_tag INDEX... --tag TAG...` +"
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "E.g. `remove_tag 1 2 3 --tag Birthday`"
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "* *Find* : `find [--tag TAG] KEYWORD...` +"
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "E.g. `find --tag homework cs2100`"
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* *Calendar View* : `calendar [MONTH_YEAR]`"
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* *Day View for Timeline* : `day [DATE]`"
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* *Week View for Timeline* : `week [WEEK_NUMBER] [MONTH_YEAR]`"
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* *Month View for Timeline* : `month [MONTH_YEAR]`"
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* *List View* : `list`"
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* *Log View* : `log`"
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "* *Undo* : `undo`"
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "* *Redo* : `redo`"
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* *Switch notifications on* : `notif_on`"
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* *Switch notifications off* : `notif_off`"
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* *Export .ics File* : `export --directory [\"DIRECTORY\"]`"
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* *Import .ics File* : `import [\"FILE_PATH\"]`"
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "* *Exiting the Program* : `exit`"
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 259,
      "Kyzure": 204,
      "-": 89
    }
  },
  {
    "path": "docs/diagrams/UiCalendarClassDiagram.puml",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "@startuml"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "!include style.puml"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "skinparam arrowThickness 1.1"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "skinparam arrowColor UI_COLOR_T4"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "skinparam classBackgroundColor UI_COLOR"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d Packages \u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package Ui \u003c\u003cRectangle\u003e\u003e {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027Class \"{abstract}\\nUiPart\" as UiPart"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Class \"{abstract}\\nCard\" as Card"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Class MainWindow"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    Class CardHolder"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    Class EventCard"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    package Calendar \u003c\u003cRectangle\u003e\u003e {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        Class \"{abstract}\\nTimelineView\" as TimelineView"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        Class CalendarPanel"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        Class TimelineDayView"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        Class TimelineWeekView"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        Class TimelineMonthView"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        Class CalendarScreen"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        Class CalendarGridDay"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package Model \u003c\u003cRectangle\u003e\u003e {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    Class EventListListener"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Class HiddenOutside #FFFFFF"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "HiddenOutside ..\u003e MainWindow"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d MainWindow \u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Class HiddenOutside #FFFFFF"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "MainWindow *-down--\u003e CalendarPanel"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "MainWindow .left-|\u003e EventListListener"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027MainWindow -down--|\u003e UiPart"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d CalendarPanel \u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027CalendarPanel -down--|\u003e UiPart"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "CalendarPanel *-left--\u003e TimelineView"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "CalendarPanel *-down--\u003e CalendarScreen"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d CardHolder \u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027CardHolder -down|\u003e UiPart"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "CardHolder *-down-\u003e Card"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d Card \u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027Card -down|\u003e UiPart"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Card -up..\u003e Model"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d EventCard \u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "EventCard --|\u003e Card"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d TaskCard \u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027TaskCard --|\u003e Card"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d TimelineView \u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027TimelineView -down--|\u003e UiPart"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "TimelineView *-up--\u003e CardHolder"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d TimelineDayView \u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "TimelineDayView -up--|\u003e TimelineView"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d TimelineWeekView \u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "TimelineWeekView -up--|\u003e TimelineView"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d TimelineMonthView \u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "TimelineMonthView -up--|\u003e TimelineView"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d CalendarScreen \u003d\u003d\u003d\u003d\u0027"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027CalendarScreen -down--|\u003e UiPart"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "CalendarScreen *-down-\u003e CalendarGridDay"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d CalendarGridDay \u003d\u003d\u003d\u003d\u0027"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027CalendarGridDay -down--|\u003e UiPart"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "@enduml"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 78
    }
  },
  {
    "path": "docs/diagrams/UiClassDiagram.puml",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@startuml"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "!include style.puml"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "skinparam arrowThickness 1.1"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "skinparam arrowColor UI_COLOR_T4"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "skinparam classBackgroundColor UI_COLOR"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d Packages \u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "package UI \u003c\u003cRectangle\u003e\u003e{"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "Interface Ui \u003c\u003cInterface\u003e\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "Class \"{abstract}\\nUiPart\" as UiPart"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "Class UiManager"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "Class MainWindow"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "Class CommandBox"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Class CalendarPanel"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Class ListPanel"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Class LogPanel"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Class PopUpBox"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package Logic \u003c\u003cRectangle\u003e\u003e {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package List \u003c\u003cRectangle\u003e\u003e {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package Calendar \u003c\u003cRectangle\u003e\u003e {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package Log \u003c\u003cRectangle\u003e\u003e {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "Class HiddenOutside #FFFFFF"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "HiddenOutside ..\u003e Ui"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d UiManager \u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "UiManager .left.|\u003e Ui"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "UiManager -down-\u003e MainWindow"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "UiManager -right-\u003e Logic"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d MainWindow \u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "MainWindow *-down-\u003e CommandBox"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "MainWindow *-down-\u003e ListPanel"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "MainWindow *-down-\u003e CalendarPanel"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "MainWindow *-down-\u003e LogPanel"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "MainWindow *-down-\u003e PopUpBox"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "MainWindow -|\u003e UiPart"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "MainWindow -right-\u003e Logic"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d CommandBox \u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "CommandBox -down-|\u003e UiPart"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d CalendarPanel \u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "CalendarPanel -down--|\u003e UiPart"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "CalendarPanel -down..\u003e Calendar"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d ListPanel \u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "ListPanel -down--|\u003e UiPart"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "ListPanel -down..\u003e List"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d LogPanel \u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "LogPanel -down--|\u003e UiPart"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "LogPanel -down..\u003e Log"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d PopUpBox \u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "PopUpBox -down--\u003e UiPart"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d Positioning \u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "MainWindow -[hidden]-|\u003e UiPart"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "MainWindow -[hidden]-|\u003e UiPart"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "@enduml"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 40,
      "-": 32
    }
  },
  {
    "path": "docs/diagrams/UiListClassDiagram.puml",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "@startuml"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "!include style.puml"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "skinparam arrowThickness 1.1"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "skinparam arrowColor UI_COLOR_T4"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "skinparam classBackgroundColor UI_COLOR"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d Packages \u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package Ui \u003c\u003cRectangle\u003e\u003e {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    \u0027Class \"{abstract}\\nUiPart\" as UiPart"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    Class \"{abstract}\\nCard\" as Card"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    Class MainWindow"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    Class CardHolder"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    Class EventCard"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    package Calendar \u003c\u003cRectangle\u003e\u003e {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        Class ListPanel"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        Class EventListView"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package Model \u003c\u003cRectangle\u003e\u003e {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    Class EventListListener"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Class HiddenOutside #FFFFFF"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "HiddenOutside ..\u003e MainWindow"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d MainWindow \u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027MainWindow --|\u003e UiPart"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "MainWindow --\u003e ListPanel"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "MainWindow -left..|\u003e EventListListener"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d ListPanel \u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027ListPanel -down--|\u003e UiPart"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "ListPanel *-down--\u003e EventListView"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d EventListView \u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027EventListView -down--|\u003e UiPart"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "EventListView *-down--\u003e CardHolder"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d CardHolder \u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027CardHolder -down|\u003e UiPart"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "CardHolder *-down-\u003e Card"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d Card \u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027Card -down|\u003e UiPart"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Card -left..\u003e Model"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d EventCard \u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "EventCard --|\u003e Card"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "@enduml"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 53
    }
  },
  {
    "path": "docs/diagrams/UiLogClassDiagram.puml",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "@startuml"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "!include style.puml"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "skinparam arrowThickness 1.1"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "skinparam arrowColor UI_COLOR_T4"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "skinparam classBackgroundColor UI_COLOR"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d Packages \u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package UI \u003c\u003cRectangle\u003e\u003e {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027Class \"{abstract}\\nUiPart\" as UiPart"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Class MainWindow"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Interface UserOutputListener \u003c\u003cInterface\u003e\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    package Calendar \u003c\u003cRectangle\u003e\u003e {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        Class LogPanel"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        Class LogBox"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Class HiddenOutside #FFFFFF"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "HiddenOutside ..\u003e MainWindow"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d MainWindow \u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "MainWindow *-down--\u003e LogPanel"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "MainWindow .left..|\u003e UserOutputListener"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027MainWindow -down--|\u003e UiPart"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d LogPanel \u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027LogPanel -down--|\u003e UiPart"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "LogPanel *-right--\u003e LogBox"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d LogBox \u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027LogBox -down--|\u003e UiPart"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "@enduml"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 34
    }
  },
  {
    "path": "docs/stylesheets/gh-pages.css",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "@import url(https://fonts.googleapis.com/css?family\u003dRoboto|Open+Sans);"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "@import \"asciidoctor.css\"; /* Default asciidoc style framework - important */"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "/* Custom block: details */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ".sidebarblock.details \u003e .content {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    border-left: .25rem solid rgba(0, 0, 0, 0.1);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ".sidebarblock.details \u003e .content {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    padding-left: .5rem"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ".sidebarblock.details {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    background-color: transparent;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    border: none;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    padding-bottom: 0;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    padding-top: 0;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "/* Overrides for asciidoctor.css */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "a {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    color: #0074c7;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "h1,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "#content h1 \u003e a.link,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "h2,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "h2 \u003e a.link,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "h3,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "h3 \u003e a.link,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "#toctitle,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "#toctitle \u003e a.link,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ".sidebarblock \u003e .content \u003e .title,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ".sidebarblock \u003e .content \u003e .title \u003e a.link,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "h4,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "h4 \u003e a.link,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "h5,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "h5 \u003e a.link,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "h6,"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "h6 \u003e a.link {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    color: #e46c0a;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ".subheader,"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ".admonitionblock td.content \u003e .title,"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ".audioblock \u003e .title,"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ".exampleblock \u003e .title,"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ".imageblock \u003e .title,"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ".listingblock \u003e .title,"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ".literalblock \u003e .title,"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ".stemblock \u003e .title,"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ".openblock \u003e .title,"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ".paragraph \u003e.title,"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ".quoteblock \u003e .title,"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "table.tableblock \u003e .title,"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ".verseblock \u003e .title,"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ".videoblock \u003e .title,"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ".dlist \u003e .title,"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ".olist \u003e .title,"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ".ulist \u003e .title,"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ".qlist \u003e .title,"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ".hdlist \u003e .title {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    color: rgb(197, 90, 17);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "@media screen {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    #footer {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        background-color: #f6f6f6;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        border-top: 1px #d2d2d2 solid;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        border-bottom: 1px #d2d2d2 solid;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        font-family: \"Open Sans\", \"DejaVu Sans\", sans-serif;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    #footer-text {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        color: #595959;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        line-height: 1;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "/* Utilities */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ".container {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    width: 100%;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    max-width: 62.5rem;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    margin-left: auto;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    margin-right: auto;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "/* Colors */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ".bg-light {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    background-color: #f8f9fa;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ".bg-lighter {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    background-color: #fbfbfb;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "/* Navbar */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ".navbar {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    display: flex;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    flex-wrap: nowrap;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    justify-content: center;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    font-family: \"Open Sans\", \"DejaVu Sans\", sans-serif;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    font-size: 1rem;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    padding: 0px 1rem;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": ".navbar-lg {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "    font-size: 1.3rem;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ".navbar-light {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "    border-bottom: 1px #d2d2d2 solid;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ".navbar a {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "    text-decoration: none;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": ".navbar-light a {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "    color: #595959;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": ".navbar-light a:hover,"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": ".navbar-light a:focus {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "    color: #000000;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": ".navbar a.active,"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": ".navbar a.active:hover,"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": ".navbar a.active:focus {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "    font-weight: bold;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": ".navbar-light a.active,"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": ".navbar-light a.active:hover,"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": ".navbar-light a.active:focus {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "    color: #000000;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": ".navbar-light .nav-link {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "    border-bottom: 2px transparent solid;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": ".navbar-light .nav-link.active {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "    border-bottom: 2px #e46c0a solid;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": ".navbar-lg .nav-link.active {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "    border-bottom: 0;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": ".navbar \u003e .container {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "    display: flex;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "    flex-wrap: wrap;"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "    justify-content: center;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": ".navbar-brand {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "    display: inline-block;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "    margin-right: 1rem;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "    padding: 0.8125rem 0rem;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "    padding-left: 0.9375rem;"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "    font-size: 1.25rem;"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": ".navbar-brand img {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "    height: 1.4rem;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "    margin: 0rem 0.4rem;"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "    padding: 0;"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "    vertical-align: middle;"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": ".navbar-lg .navbar-brand {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "    font-size: 1.7rem;"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": ".navbar-lg .navbar-brand img {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "    height: 2.3rem;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": ".navbar-nav {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "    display: flex;"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "    flex-wrap: wrap;"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "    flex-grow: 1;"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "    align-items: center;"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "    margin: 0px;"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "    padding: 0px;"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "    list-style: none;"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "    line-height: inherit;"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": ".nav-link {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "    display: block;"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "    margin: 0px;"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "    border: 0px;"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "    padding: 1rem 1rem;"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "/* Do not display site header on print mediums */"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "@media print {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "    #seedu-header {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "        display: none;"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "    #site-header {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "        display: none;"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 1,
      "-": 213
    }
  },
  {
    "path": "docs/team/kyzure.adoc",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d Timothy Yu Zhiwen - Project Portfolio"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ":site-section: AboutUs"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ":imagesDir: ../images"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ":stylesDir: ../stylesheets"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d\u003d PROJECT: Horo"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "---"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Overview"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "Horo is a desktop Reminder application. It has a GUI but most of the user interactions happen using a CLI (Command Line Interface). It is a Java application *written in an OOP fashion*, developed and intended for Students requiring a place to consolidate their Events and Task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Summary of contributions"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "* *Major enhancement*: enhanced *UI* component."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "** What it does: allows the user to interact with the GUI together with CLI, showing the Events and Task to the user as well as outputting the log for what the user did."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "** Justification: This feature is what makes the product visually appealing for the user, making the Events and Tasks compact and concise for the user to see, as well as having a log for what the user previously did."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "** Highlights: This enhancement affects the current and future commands, as it requires several other components for it to show the result to the user. Future commands or addition to Events and Task requires changes to the existing UI, as the GUI and UI component will require further changes."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "** Credits: _[https://top.gg/bot/349920059549941761[Reminder Bot]]_"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "* *Minor enhancement*: _To be implemented_"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "* *Code contributed*: _To be implemented_"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "* *Other contributions*:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "_To be implemented_ +"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "** Project management:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "*** Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "** Enhancements to existing features:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "*** Updated the GUI color scheme (Pull requests https://github.com[#33], https://github.com[#34])"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "*** Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests https://github.com[#36], https://github.com[#38])"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "** Documentation:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "*** Did cosmetic tweaks to existing contents of the User Guide: https://github.com[#14]"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "** Community:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "*** PRs reviewed (with non-trivial review comments): https://github.com[#12], https://github.com[#32], https://github.com[#19], https://github.com[#42]"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "*** Contributed to forum discussions (examples:  https://github.com[1], https://github.com[2], https://github.com[3], https://github.com[4])"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "*** Reported bugs and suggestions for other teams in the class (examples:  https://github.com[1], https://github.com[2], https://github.com[3])"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "*** Some parts of the history feature I added was adopted by several other class mates (https://github.com[1], https://github.com[2])"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "** Tools:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "*** Integrated a third party library (Natty) to the project (https://github.com[#42])"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "*** Integrated a new Github plugin (CircleCI) to the team repo"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Contributions to the User Guide"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "|_Given below are sections I contributed to the User Guide. They showcase my ability to write documentation targeting end-users._"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "_To be implemented_"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "include::../UserGuide.adoc[tag\u003ddelete]"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "include::../UserGuide.adoc[tag\u003ddataencryption]"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Contributions to the Developer Guide"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "|_Given below are sections I contributed to the Developer Guide. They showcase my ability to write technical documentation and the technical depth of my contributions to the project._"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "_To be implemented_"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "include::../DeveloperGuide.adoc[tag\u003dundoredo]"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "include::../DeveloperGuide.adoc[tag\u003ddataencryption]"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d PROJECT: PowerPointLabs"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "---"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "_{Optionally, you may include other projects in your portfolio.}_"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 17,
      "-": 60
    }
  },
  {
    "path": "src/main/java/seedu/address/MainApp.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.Version;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.CommandManager;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.logic.NotificationManager;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.UiManager;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import seedu.address.logic.commands.AddEventCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import seedu.address.logic.commands.DeleteEventCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import seedu.address.logic.commands.EditEventCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import seedu.address.logic.commands.ExportIcsCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import seedu.address.logic.commands.ImportIcsCommand;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.logic.commands.NotificationOffCommand;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.logic.commands.NotificationOnCommand;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import seedu.address.logic.commands.RedoCommand;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import seedu.address.logic.commands.UndoCommand;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.undo.UndoRedoManager;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": " * Runs the application."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "public class MainApp extends Application {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final Version VERSION \u003d new Version(0, 6, 0, true);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final String COMMAND_ADD_EVENT \u003d \"add_event\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final String COMMAND_DELETE_EVENT \u003d \"delete_event\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final String COMMAND_EDIT_EVENT \u003d \"edit_event\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    private static final String COMMAND_UNDO \u003d \"undo\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    private static final String COMMAND_REDO \u003d \"redo\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    private static final String COMMAND_IMPORT_ICS \u003d \"import\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    private static final String COMMAND_EXPORT_ICS \u003d \"export\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    private static final String COMMAND_NOTIFICATION_OFF \u003d \"notif_off\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    private static final String COMMAND_NOTIFICATION_ON \u003d \"notif_on\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private UiManager uiManager;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    public void init() throws Exception {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        super.init();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        CommandManager commandManager \u003d new CommandManager();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        ModelManager modelManager \u003d new ModelManager();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        NotificationManager notificationManager \u003d new NotificationManager(modelManager);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        uiManager \u003d new UiManager();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        UndoRedoManager undoRedoManager \u003d new UndoRedoManager();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        // Register commands to CommandManager."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        commandManager.addCommand(COMMAND_ADD_EVENT, () -\u003e AddEventCommand.newBuilder(modelManager));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        commandManager.addCommand(COMMAND_DELETE_EVENT, () -\u003e DeleteEventCommand.newBuilder(modelManager));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        commandManager.addCommand(COMMAND_EDIT_EVENT, () -\u003e EditEventCommand.newBuilder(modelManager));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        commandManager.addCommand(COMMAND_UNDO, () -\u003e UndoCommand.newBuilder(undoRedoManager));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        commandManager.addCommand(COMMAND_REDO, () -\u003e RedoCommand.newBuilder(undoRedoManager));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        commandManager.addCommand(COMMAND_IMPORT_ICS, () -\u003e ImportIcsCommand.newBuilder(modelManager));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        commandManager.addCommand(COMMAND_EXPORT_ICS, () -\u003e ExportIcsCommand.newBuilder(modelManager));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        commandManager"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            .addCommand(COMMAND_NOTIFICATION_OFF, () -\u003e NotificationOffCommand.newBuilder(notificationManager));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        commandManager.addCommand(COMMAND_NOTIFICATION_ON, () -\u003e NotificationOnCommand.newBuilder(notificationManager));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        // Add Listeners"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        commandManager.addUserOutputListener(uiManager);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        modelManager.addEventListListener(uiManager);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        modelManager.addEventListListener(undoRedoManager);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        uiManager.addCommandInputListener(commandManager);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        undoRedoManager.addUndoRedoListener(modelManager);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    public void start(Stage primaryStage) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.info(\"Starting AddressBook \" + MainApp.VERSION);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        uiManager.start(primaryStage);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    public void stop() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 12,
      "marcusteh1238": 11,
      "bruceskellator": 2,
      "WeomuCat": 28,
      "-": 36
    }
  },
  {
    "path": "src/main/java/seedu/address/commons/core/GuiSettings.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.commons.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.awt.Point;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": " * A Serializable class that contains the GUI settings."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " * Guarantees: immutable."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class GuiSettings implements Serializable {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final double DEFAULT_HEIGHT \u003d 720;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final double DEFAULT_WIDTH \u003d 1280;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    private final double windowWidth;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    private final double windowHeight;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Point windowCoordinates;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    public GuiSettings() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        windowWidth \u003d DEFAULT_WIDTH;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        windowHeight \u003d DEFAULT_HEIGHT;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        windowCoordinates \u003d null; // null represent no coordinates"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        this.windowWidth \u003d windowWidth;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        this.windowHeight \u003d windowHeight;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        windowCoordinates \u003d new Point(xPosition, yPosition);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    public double getWindowWidth() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        return windowWidth;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    public double getWindowHeight() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        return windowHeight;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    public Point getWindowCoordinates() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!(other instanceof GuiSettings)) { //this handles null as well."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        GuiSettings o \u003d (GuiSettings) other;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        return windowWidth \u003d\u003d o.windowWidth"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 windowHeight \u003d\u003d o.windowHeight"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        return Objects.hash(windowWidth, windowHeight, windowCoordinates);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        sb.append(\"Width : \" + windowWidth + \"\\n\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        sb.append(\"Height : \" + windowHeight + \"\\n\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        sb.append(\"Position : \" + windowCoordinates);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 2,
      "-": 71
    }
  },
  {
    "path": "src/main/java/seedu/address/commons/core/Messages.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.commons.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": " * Container for user visible messages."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class Messages {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command!\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format!\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static final String MESSAGE_REQUIRED_COMMAND_ARGUMENT \u003d \"Argument \u0027%s\u0027 is required!\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static final String MESSAGE_INVALID_DATE_TIME \u003d \"Invalid date time! Please enter in \u0027%s\u0027 format.\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static final String MESSAGE_INVALID_INDEX \u003d \"Invalid index! Please enter an integer.\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static final String MESSAGE_INVALID_EVENT_INDEX \u003d \"Invalid index! Event with index \u0027%s\u0027 does not exist.\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static final String MESSAGE_NOTHING_TO_UNDO \u003d \"There is nothing to undo!\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static final String MESSAGE_NOTHING_TO_REDO \u003d \"There is nothing to redo!\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static final String MESSAGE_ADD_EVENT_SUCCESS \u003d \"New event added: %s\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static final String MESSAGE_DELETE_EVENT_SUCCESS \u003d \"Events deleted: %s\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static final String MESSAGE_EDIT_EVENT_SUCCESS \u003d \"Events edited: %s\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static final String MESSAGE_UNDO_SUCCESS \u003d \"Previous command has been undone!\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static final String MESSAGE_REDO_SUCCESS \u003d \"Previous undone command has been redone!\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    public static final String MESSAGE_IMPORT_ICS_SUCCESS \u003d \"ICS file at %s has been successfully imported!\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    public static final String MESSAGE_EXPORT_ICS_SUCCESS \u003d \"Horo has successfully been exported at the filepath: %s\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public static final String MESSAGE_DAY_VIEW_SUCCESS \u003d \"Changed Day to: %s\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public static final String MESSAGE_NOTIFICATION_OFF \u003d \"Notifications have been turned off.\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public static final String MESSAGE_NOTIFICATION_ON \u003d \"Notifications have been turned on.\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 3,
      "Kyzure": 2,
      "marcusteh1238": 2,
      "WeomuCat": 16,
      "-": 11
    }
  },
  {
    "path": "src/main/java/seedu/address/commons/util/IcsUtil.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.commons.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.time.Instant;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.TimeZone;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.ics.IcsException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.events.DateTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Helper functions for anything Ics related."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class IcsUtil {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Gets a new SimpleDateFormat with the pattern matching the default ICS file specification format."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @return a configured SimpleDateFormat format."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static SimpleDateFormat getIcsSimpleDateFormat() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        SimpleDateFormat sdf \u003d new SimpleDateFormat(\"yyyyMMdd\u0027T\u0027HHmmss\u0027Z\u0027\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        sdf.setTimeZone(TimeZone.getTimeZone(\"GMT\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return sdf;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Generates a unique UID that complies with section RFC5545 of the iCalendar specification."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * This is achieved by using the Instant of the function call."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @return A UID String."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static String generateUid() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        Instant currentInstant \u003d Instant.now();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        return currentInstant + \"@Horo\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Converts the timestamp from the format given in the ICS file to a DateTime object."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @param icsTimeStamp A timestamp in the default ICS file specification format."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @return A DateTime object representing the timestamp."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @throws IcsException Thrown when the timestamp provided is invalid."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static DateTime parseTimeStamp(String icsTimeStamp) throws IcsException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            SimpleDateFormat sdf \u003d getIcsSimpleDateFormat();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            return new DateTime(sdf.parse(icsTimeStamp).toInstant());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            throw new IcsException(\"The timestamp provided is invalid!\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcusteh1238": 1,
      "WeomuCat": 49
    }
  },
  {
    "path": "src/main/java/seedu/address/ics/IcsException.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.ics;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Exception is created within the IcsParser class when something wrong happens while an ICS file is being imported."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class IcsException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public IcsException(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 10
    }
  },
  {
    "path": "src/main/java/seedu/address/ics/IcsExporter.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "package seedu.address.ics;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import static seedu.address.commons.util.FileUtil.createIfMissing;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import static seedu.address.commons.util.FileUtil.writeToFile;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import seedu.address.model.events.DateTime;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import seedu.address.model.events.EventSource;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": " * Class responsible for exporting Horo\u0027s tasks and events into an .ics file."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "public class IcsExporter {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    private static final String EXPORT_ERROR_MESSAGE \u003d \"Error occurred while exporting file!\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    private static final String PROD_ID \u003d \"-//Horo//Exported Calendar// v1.0//EN\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    private static final String CALENDAR_VERSION \u003d \"2.0\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private List\u003cEventSource\u003e eventList;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    public IcsExporter(ModelManager model) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        this.eventList \u003d model.getEventList();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        requireNonNull(this.eventList);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * Saves the events in an ics file, whose location is specified in the parameter."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * @param filepathString the path of where the file should be made."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * @throws IOException if the file or directory cannot be created."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    public void export(String filepathString) throws IcsException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            Path filepath \u003d Path.of(filepathString);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            createIfMissing(filepath);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            writeToFile(filepath, generateIcsFileContent());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            throw new IcsException(EXPORT_ERROR_MESSAGE);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * Generates the contents in the .ics file from the event list."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * @return The .ics file content to be exported."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    private String generateIcsFileContent() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        StringBuilder stringBuilder \u003d new StringBuilder(\"BEGIN:VCALENDAR\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        stringBuilder"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                .append(\"\\n\").append(\"VERSION:\").append(CALENDAR_VERSION)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                .append(\"\\n\").append(\"PRODID:\").append(PROD_ID);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        for (EventSource eventSource : eventList) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            stringBuilder.append(\"\\n\").append(eventSource.toIcsString());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        stringBuilder.append(\"\\n\").append(\"END:VCALENDAR\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        return stringBuilder.toString();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    public static String getExportFileName() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        String timestamp \u003d DateTime.now().toIcsString();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        return \"Horo_export_\" + timestamp + \".ics\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcusteh1238": 64,
      "WeomuCat": 3
    }
  },
  {
    "path": "src/main/java/seedu/address/ics/IcsParser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.ics;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static seedu.address.commons.util.IcsUtil.parseTimeStamp;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.events.DateTime;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.events.EventSource;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/***"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Parses an ICS file to allow importing into Horo."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class IcsParser {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final String FILE_DOES_NOT_EXIST \u003d \"Sorry, the file path you\u0027ve specified is invalid!\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final String FILE_CANNOT_BE_READ \u003d \"Sorry, the file specified cannot be read!\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final String FILE_CANNOT_BE_FOUND \u003d \"Sorry, the file specified cannot be found!\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final String INVALID_FILE_EXTENSION \u003d \"The file specified is not an ICS file!\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final String FILE_IS_CORRUPTED \u003d \"The ICS file is corrupted!\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final String EVENT_DESC_CANNOT_BE_EMPTY \u003d \"The description of an event cannot be empty!\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * This enum represents the different types of objects the IcsParser could be parsing at any given point in time."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private enum ParseState { None, Todo, Event }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private File icsFile;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private IcsParser(String path) throws IcsException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.icsFile \u003d getIcsFile(path);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static IcsParser getParser(String path) throws IcsException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return new IcsParser(path);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private File getIcsFile(String path) throws IcsException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        File file \u003d new File(path);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        if (!file.exists()) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            throw new IcsException(FILE_DOES_NOT_EXIST);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        } else if (!file.canRead()) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            throw new IcsException(FILE_CANNOT_BE_READ);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        } else if (!file.toString().endsWith(\".ics\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            throw new IcsException(INVALID_FILE_EXTENSION);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return file;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Parses the file provided in the file path and returns an ArrayList of EventSources."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @return An ArrayList of EventSources from the file."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @throws IcsException Thrown if the file cannot be found or read,"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * is not a proper Ics file, or if a description for an event in the file is empty."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    public EventSource[] parse() throws IcsException {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String fileContent \u003d getFileContent();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return parseFileContent(fileContent);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Obtains the file content of the ics file specified in the filepath."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @return A single String of the whole file."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @throws IcsException Thrown if the file cannot be found or read."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private String getFileContent() throws IcsException {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            BufferedReader br \u003d new BufferedReader(new FileReader(icsFile));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            StringBuilder sb \u003d new StringBuilder(\"\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            boolean first \u003d true;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            while (br.ready()) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                String line \u003d br.readLine();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                if (first) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    sb.append(line);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    first \u003d false;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    sb.append(\"\\n\").append(line);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            return sb.toString();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            throw new IcsException(FILE_CANNOT_BE_FOUND);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            throw new IcsException(FILE_CANNOT_BE_READ);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Parses the Ics file."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @param fileContent The contents of the Ics file."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @return An ArrayList of EventSources provided by the Ics file."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @throws IcsException If the file is not a proper Ics file, or if a description for an event is empty."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    public EventSource[] parseFileContent(String fileContent) throws IcsException {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        ArrayList\u003cEventSource\u003e events \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        StringBuilder stringBuilder \u003d new StringBuilder(\"\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        ParseState currentlyParsing \u003d ParseState.None;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String[] lines \u003d fileContent.split(\"\\\\r?\\\\n\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        for (int i \u003d 0; i \u003c lines.length; i++) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            String line \u003d lines[i];"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            if (currentlyParsing \u003d\u003d ParseState.Event) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                if (line.startsWith(\"END:VEVENT\")) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    currentlyParsing \u003d ParseState.None;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    EventSource eventSource \u003d parseSingleEvent(stringBuilder.toString());"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    events.add(eventSource);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    stringBuilder.append(line).append(\"\\n\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                if (line.equals(\"BEGIN:VEVENT\")) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    if (currentlyParsing !\u003d ParseState.None) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                        throw new IcsException(FILE_IS_CORRUPTED);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                        currentlyParsing \u003d ParseState.Event;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                        stringBuilder \u003d new StringBuilder(\"\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        return eventSourceArray(events);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * Converts an ArrayList of EventSource objects into an array."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * @param events the ArrayList of EventSource objects."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * @return An array of EventSource objects."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     */"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    private EventSource[] eventSourceArray(ArrayList\u003cEventSource\u003e events) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        int size \u003d events.size();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        EventSource[] array \u003d new EventSource[size];"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        for (int i \u003d 0; i \u003c size; i++) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            array[i] \u003d events.get(i);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        return array;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Creates an EventSource object from the data provided in the ICS File."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Currently it will only parse the Start time and Description of the ICS VEvent."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @param segment A String that represents the Event object in the ICS File."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @return an EventSource object representing the data provided."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @throws IcsException Exception thrown when there was an issue while making the EventSource object."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public EventSource parseSingleEvent(String segment) throws IcsException {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String[] lines \u003d segment.split(\"\\\\r?\\\\n\");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String description \u003d \"\";"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        DateTime eventStart \u003d null;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        DateTime eventEnd \u003d null;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        for (String line : lines) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            if (line.startsWith(\"DESCRIPTION:\")) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                description \u003d line.replaceFirst(\"DESCRIPTION:\", \"\");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                if (description.equals(\"\")) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    throw new IcsException(EVENT_DESC_CANNOT_BE_EMPTY);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            } else if (line.startsWith(\"DTSTART:\")) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                String timestamp \u003d line.replaceFirst(\"DTSTART:\", \"\");"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                eventStart \u003d parseTimeStamp(timestamp);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            } else if (line.startsWith(\"DTEND:\")) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                String timestamp \u003d line.replaceFirst(\"DTEND:\", \"\");"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                eventEnd \u003d parseTimeStamp(timestamp);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            } else if (line.equals(\"END:VCALENDAR\") \u0026\u0026 !line.equals(lines[lines.length - 1])) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                throw new IcsException(FILE_IS_CORRUPTED);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return EventSource.newBuilder(description, eventStart)"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .build();"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcusteh1238": 17,
      "WeomuCat": 157
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/CommandManager.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.function.Supplier;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.CommandBuilder;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.listeners.CommandInputListener;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.parser.CommandKeywordParser;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.parser.CommandParser;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.ui.ColorTheme;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.ui.UserOutput;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.ui.listeners.UserOutputListener;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents a class that invokes commands based on command input it receives from a Ui."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents the invoker class in https://en.wikipedia.org/wiki/Command_pattern."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class CommandManager implements CommandInputListener {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final Logger logger \u003d LogsCenter.getLogger(CommandManager.class);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final CommandKeywordParser keywordParser;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final CommandParser commandParser;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final List\u003cUserOutputListener\u003e userOutputListeners;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public CommandManager() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.keywordParser \u003d new CommandKeywordParser();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.commandParser \u003d new CommandParser(this.keywordParser);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.userOutputListeners \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Adds a command to be tracked by CommandManager."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @param keyword the command keyword"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @param builder the supplier to invoke"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public void addCommand(String keyword, Supplier\u003cCommandBuilder\u003e builder) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.keywordParser.addCommand(keyword, builder);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public void addUserOutputListener(UserOutputListener listener) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.userOutputListeners.add(listener);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public void onCommandInput(String input) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            Command command \u003d this.commandParser.parse(input);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            UserOutput output \u003d command.execute();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            userOutputListeners.forEach(l -\u003e l.onUserOutput(output, ColorTheme.SUCCESS));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        } catch (CommandException | ParseException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            logger.info(\"Invalid command: \" + input);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            userOutputListeners.forEach(l -\u003e l.onUserOutput(new UserOutput(e.getMessage()), ColorTheme.FAILURE));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 61
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/NotificationManager.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "package seedu.address.logic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.logic.notification.NotificationChecker;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.logic.notification.NotificationCheckingThread;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.ui.systemtray.PopupListener;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.ui.systemtray.SystemTrayCommunicator;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": " * A class that manages the multi-threading operations necessary for posting notifications."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "public class NotificationManager {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    private NotificationCheckingThread notificationCheckingThread;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    private SystemTrayCommunicator systemTrayCommunicator;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public NotificationManager(ModelManager modelManager) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        NotificationChecker notificationChecker \u003d new NotificationChecker(modelManager);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        notificationCheckingThread \u003d new NotificationCheckingThread(notificationChecker);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        systemTrayCommunicator \u003d new SystemTrayCommunicator();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        notificationCheckingThread.addPopupListener(new PopupListener(systemTrayCommunicator));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        notificationCheckingThread.setDaemon(true);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        notificationCheckingThread.start();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     * Switches off notifications."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public void switchOffNotifications() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        notificationCheckingThread.switchOffNotifications();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        systemTrayCommunicator.switchOffNotifications();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     * Switches on notifications."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public void switchOnNotifications() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        notificationCheckingThread.switchOnNotifications();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        systemTrayCommunicator.switchOnNotifications();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 41
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/UiManager.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.Alert;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.Alert.AlertType;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.MainApp;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.util.StringUtil;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.listeners.CommandInputListener;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.events.EventSource;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.listeners.EventListListener;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.ColorTheme;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.ui.MainWindow;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.ui.Ui;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.ui.UserOutput;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.ui.listeners.UserOutputListener;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": " * The manager of the UI component."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Responsible for creating and destroying the graphical ui."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class UiManager implements Ui, UserOutputListener, EventListListener {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String ICON_APPLICATION \u003d \"/images/address_book_32.png\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    private MainWindow mainWindow;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private List\u003cCommandInputListener\u003e uiListeners;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public UiManager() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.uiListeners \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    public void start(Stage primaryStage) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.info(\"Starting UI...\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        //Set the application icon."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        primaryStage.getIcons().add(getImage(ICON_APPLICATION));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            mainWindow \u003d new MainWindow(primaryStage, commandInput -\u003e {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                // TODO: Temporary command"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                if (commandInput.equals(\"calendar\")) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    this.mainWindow.viewCalendar();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                } else if (commandInput.equals(\"list\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    this.mainWindow.viewList();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                } else if (commandInput.equals(\"log\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    this.mainWindow.viewLog();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                } else if (commandInput.equals(\"day\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    // TODO: ADD a command for changing for parsing the day, month and year."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    this.mainWindow.viewDay(5, 11, 2019);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                } else if (commandInput.equals(\"week\")) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    this.mainWindow.viewWeek(1, 11, 2019);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                } else if (commandInput.equals(\"month\")) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    this.mainWindow.viewMonth(11, 2019);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                } else if (commandInput.equals(\"calendar 11/2019\")) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    // No need for day"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    this.mainWindow.changeCalendarScreenDate(11, 2019);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    // Notify listeners of new command input."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    this.uiListeners.forEach(listener -\u003e listener.onCommandInput(commandInput));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            });"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "            mainWindow.show(); //This should be called before creating other UI parts"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "            mainWindow.fillInnerParts();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (Throwable e) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.severe(StringUtil.getDetails(e));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public void addCommandInputListener(CommandInputListener listener) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.uiListeners.add(listener);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    private Image getImage(String imagePath) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        return new Image(MainApp.class.getResourceAsStream(imagePath));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "     * Shows an alert dialog on {@code owner} with the given parameters."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "     * This method only returns after the user has closed the alert dialog."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "                                               String contentText) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        final Alert alert \u003d new Alert(type);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        alert.initOwner(owner);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        alert.setTitle(title);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        alert.setHeaderText(headerText);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        alert.setContentText(contentText);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        alert.showAndWait();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "     * Shows an error alert dialog with {@code title} and error message, {@code e},"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "     * and exits the application after the user has closed the alert dialog."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "        Platform.exit();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "        System.exit(1);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public void onEventListChange(List\u003cEventSource\u003e events) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.mainWindow.onEventListChange(events);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public void onUserOutput(UserOutput output, ColorTheme result) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.mainWindow.onUserOutput(output, result);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 19,
      "WeomuCat": 34,
      "-": 77
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/AddEventCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_ADD_EVENT_SUCCESS;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.events.DateTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.events.EventSource;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.ui.UserOutput;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents a Command which adds an EventSource to the Model."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class AddEventCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final ModelManager model;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final EventSource event;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    AddEventCommand(AddEventCommandBuilder builder) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String description \u003d Objects.requireNonNull(builder.getDescription());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        DateTime start \u003d Objects.requireNonNull(builder.getStart());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.model \u003d builder.getModel();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.event \u003d EventSource.newBuilder(description, start)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .build();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static CommandBuilder newBuilder(ModelManager model) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return new AddEventCommandBuilder(model).init();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public UserOutput execute() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        model.addEvents(this.event);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return new UserOutput(String.format(MESSAGE_ADD_EVENT_SUCCESS, this.event.getDescription()));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 38
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/AddEventCommandBuilder.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.DateTimeArgument;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.DateTimeArgumentBuilder;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.StringArgument;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.StringArgumentBuilder;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.StringVariableArguments;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.StringVariableArgumentsBuilder;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.options.Option;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.options.OptionBuilder;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.events.DateTime;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents a CommandBuilder responsible for creating {@link AddEventCommand}."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "class AddEventCommandBuilder extends CommandBuilder {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static final String OPTION_END_DATE_TIME \u003d \"--end\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static final String OPTION_REMIND_DATE_TIME \u003d \"--remind\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static final String OPTION_TAGS \u003d \"--tag\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final String ARGUMENT_DESCRIPTION \u003d \"DESCRIPTION\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final String ARGUMENT_START_DATE_TIME \u003d \"START_DATE_TIME\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final String ARGUMENT_END_DATE_TIME \u003d \"END_DATE_TIME\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final String ARGUMENT_REMIND_DATE_TIME \u003d \"REMIND_DATE_TIME\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final String ARGUMENT_TAGS \u003d \"TAGS\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final ModelManager model;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final StringArgumentBuilder description;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final DateTimeArgumentBuilder start;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final DateTimeArgumentBuilder end;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final DateTimeArgumentBuilder remind;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final StringVariableArgumentsBuilder tags;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    AddEventCommandBuilder(ModelManager model) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.model \u003d model;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.description \u003d StringArgument.newBuilder(ARGUMENT_DESCRIPTION);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.start \u003d DateTimeArgument.newBuilder(ARGUMENT_START_DATE_TIME);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.end \u003d DateTimeArgument.newBuilder(ARGUMENT_END_DATE_TIME);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.remind \u003d DateTimeArgument.newBuilder(ARGUMENT_REMIND_DATE_TIME);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.tags \u003d StringVariableArguments.newBuilder(ARGUMENT_TAGS);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    OptionBuilder getCommandArguments() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return Option.newBuilder()"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .addArgument(this.description)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .addArgument(this.start);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    Map\u003cString, OptionBuilder\u003e getCommandOptions() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return Map.of("
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            OPTION_END_DATE_TIME, Option.newBuilder()"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .addArgument(this.end),"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            OPTION_REMIND_DATE_TIME, Option.newBuilder()"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .addArgument(this.remind),"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            OPTION_TAGS, Option.newBuilder()"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .setVariableArguments(this.tags)"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        );"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    ModelManager getModel() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return model;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    String getDescription() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this.description.getValue();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    DateTime getStart() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this.start.getValue();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    Command commandBuild() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return new AddEventCommand(this);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 84
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/Command.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.ui.UserOutput;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents a command with hidden internal logic and the ability to be executed."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "     * Executes the command and returns the result message."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return feedback message of the operation result for display"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws CommandException If an error occurs during command execution."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public abstract UserOutput execute() throws CommandException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 2,
      "-": 16
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/CommandBuilder.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.exceptions.ArgumentException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.options.Option;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.options.OptionBuilder;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents an object which can build commands."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Responsible for giving the correct user input to the correct {@link Option}."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public abstract class CommandBuilder {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    // Context is the current Option to add arguments to."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private Option context;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    // Represents the command arguments in a Command."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private Option arguments;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private Map\u003cString, Option\u003e options;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * This method must be called first."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    CommandBuilder init() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        // Build OptionBuilders"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.arguments \u003d this.getCommandArguments().build();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.options \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        for (Map.Entry\u003cString, OptionBuilder\u003e entry : this.getCommandOptions().entrySet()) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            String keyword \u003d entry.getKey();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            OptionBuilder option \u003d entry.getValue();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            this.options.put(keyword, option.build());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        // Set the initial context."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.context \u003d this.arguments;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.context.setActive();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Accepts a sentence from user input tokens."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * A sentence can either be an option or an argument."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @param sentence a sentence from user input"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public CommandBuilder acceptSentence(String sentence) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        if (this.options.containsKey(sentence)) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            // Sets the context."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            this.context \u003d this.options.get(sentence);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            this.context.setActive();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            // Adds an argument to the context."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            this.context.acceptArgument(sentence);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Builds all arguments and returns a Command."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @return the built Command"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @throws ArgumentException if any argument is required but null"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @throws ParseException if any argument is required but null"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public Command build() throws ArgumentException, ParseException {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.arguments.build();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        for (Option option : this.options.values()) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            option.build();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this.commandBuild();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    abstract OptionBuilder getCommandArguments();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    abstract Map\u003cString, OptionBuilder\u003e getCommandOptions();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    abstract Command commandBuild();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 79
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/DayViewCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_DAY_VIEW_SUCCESS;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.events.DateTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.UserOutput;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * Represents a Command which adds an EventSource to the Model."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "public class DayViewCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private final ModelManager model;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    DayViewCommand(DayViewCommandBuilder builder) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        DateTime start \u003d Objects.requireNonNull(builder.getStart());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.model \u003d builder.getModel();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public static CommandBuilder newBuilder(ModelManager model) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return new DayViewCommandBuilder(model).init();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public UserOutput execute() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return new UserOutput(String.format(MESSAGE_DAY_VIEW_SUCCESS));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 32
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/DayViewCommandBuilder.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.logic.commands.arguments.DateTimeArgument;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.logic.commands.arguments.DateTimeArgumentBuilder;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.logic.commands.options.Option;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.logic.commands.options.OptionBuilder;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.events.DateTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * Represents a CommandBuilder responsible for creating {@link AddEventCommand}."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "class DayViewCommandBuilder extends CommandBuilder {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private static final String ARGUMENT_START_DATE_TIME \u003d \"START_DATE_TIME\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private final ModelManager model;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private final DateTimeArgumentBuilder start;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    DayViewCommandBuilder(ModelManager model) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.model \u003d model;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.start \u003d DateTimeArgument.newBuilder(ARGUMENT_START_DATE_TIME);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    OptionBuilder getCommandArguments() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return Option.newBuilder()"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                .addArgument(this.start);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    Map\u003cString, OptionBuilder\u003e getCommandOptions() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return Map.of();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    ModelManager getModel() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return model;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    DateTime getStart() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return this.start.getValue();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    Command commandBuild() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return new DayViewCommand(this);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 52
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/DeleteEventCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_DELETE_EVENT_SUCCESS;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_EVENT_INDEX;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.events.EventSource;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.ui.UserOutput;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents a Command that deletes EventSources from the Model."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class DeleteEventCommand extends Command {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final ModelManager model;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final List\u003cInteger\u003e indexes;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final List\u003cString\u003e tags;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    DeleteEventCommand(DeleteEventCommandBuilder builder) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.model \u003d builder.getModel();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.indexes \u003d builder.getIndexes();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.tags \u003d builder.getTags();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static CommandBuilder newBuilder(ModelManager model) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return new DeleteEventCommandBuilder(model).init();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public UserOutput execute() throws CommandException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        List\u003cEventSource\u003e list \u003d model.getEventList();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        List\u003cEventSource\u003e events \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        for (Integer index : indexes) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                events.add(list.get(index));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                throw new CommandException(String.format(MESSAGE_INVALID_EVENT_INDEX, index + 1));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        for (EventSource event : events) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            model.removeEvent(event);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return new UserOutput(String.format(MESSAGE_DELETE_EVENT_SUCCESS, events.stream()"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .map(EventSource::getDescription)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .collect(Collectors.joining(\", \"))));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 54
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/DeleteEventCommandBuilder.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.IndexVariableArguments;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.IndexVariableArgumentsBuilder;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.StringVariableArguments;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.StringVariableArgumentsBuilder;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.options.Option;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.options.OptionBuilder;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents a CommandBuilder responsible for creating {@link DeleteEventCommand}."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "class DeleteEventCommandBuilder extends CommandBuilder {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static final String OPTION_TAGS \u003d \"--tag\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final String ARGUMENT_INDEXES \u003d \"INDEXES\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final String ARGUMENT_TAGS \u003d \"TAGS\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final ModelManager model;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final IndexVariableArgumentsBuilder indexes;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final StringVariableArgumentsBuilder tags;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    DeleteEventCommandBuilder(ModelManager model) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.model \u003d model;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.indexes \u003d IndexVariableArguments.newBuilder(ARGUMENT_INDEXES);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.tags \u003d StringVariableArguments.newBuilder(ARGUMENT_TAGS);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    OptionBuilder getCommandArguments() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return Option.newBuilder()"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .setVariableArguments(this.indexes);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    Map\u003cString, OptionBuilder\u003e getCommandOptions() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return Map.of("
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            OPTION_TAGS, Option.newBuilder()"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .setVariableArguments(this.tags)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        );"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    ModelManager getModel() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return model;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    List\u003cInteger\u003e getIndexes() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this.indexes.getValues();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    List\u003cString\u003e getTags() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this.tags.getValues();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    Command commandBuild() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return new DeleteEventCommand(this);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 64
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/EditEventCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_EDIT_EVENT_SUCCESS;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_EVENT_INDEX;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.events.DateTime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.events.EventSource;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.ui.UserOutput;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents a Command that edits EventSources in the Model."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class EditEventCommand extends Command {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final ModelManager model;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final List\u003cInteger\u003e indexes;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final DateTime start;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final DateTime end;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final DateTime remind;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final List\u003cString\u003e tags;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    EditEventCommand(EditEventCommandBuilder builder) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.model \u003d builder.getModel();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.indexes \u003d Objects.requireNonNull(builder.getIndexes());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.description \u003d builder.getDescription();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.start \u003d builder.getStart();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.end \u003d builder.getEnd();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.remind \u003d builder.getRemind();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.tags \u003d builder.getTags();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static CommandBuilder newBuilder(ModelManager model) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return new EditEventCommandBuilder(model).init();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public UserOutput execute() throws CommandException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        List\u003cEventSource\u003e list \u003d model.getEventList();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        List\u003cEventSource\u003e events \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        for (Integer index : indexes) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                events.add(list.get(index));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                throw new CommandException(String.format(MESSAGE_INVALID_EVENT_INDEX, index + 1));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        for (EventSource event : events) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            String description;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            if (this.description \u003d\u003d null) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                description \u003d event.getDescription();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                description \u003d this.description;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            DateTime start;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            if (this.start \u003d\u003d null) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                start \u003d event.getStartDateTime();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                start \u003d this.start;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            EventSource replacement \u003d EventSource.newBuilder(description, start)"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            model.replaceEvent(event, replacement);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return new UserOutput(String.format(MESSAGE_EDIT_EVENT_SUCCESS, events.stream()"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .map(EventSource::getDescription)"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .collect(Collectors.joining(\", \"))));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 81
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/EditEventCommandBuilder.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.DateTimeArgument;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.DateTimeArgumentBuilder;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.IndexVariableArguments;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.IndexVariableArgumentsBuilder;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.StringArgument;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.StringArgumentBuilder;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.StringVariableArguments;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.StringVariableArgumentsBuilder;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.options.Option;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.options.OptionBuilder;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.events.DateTime;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents a CommandBuilder responsible for creating {@link EditEventCommand}."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "class EditEventCommandBuilder extends CommandBuilder {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static final String OPTION_DESCRIPTION \u003d \"--description\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static final String OPTION_START_DATE_TIME \u003d \"--start\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static final String OPTION_END_DATE_TIME \u003d \"--end\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static final String OPTION_REMIND_DATE_TIME \u003d \"--remind\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static final String OPTION_TAGS \u003d \"--tag\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final String ARGUMENT_INDEXES \u003d \"INDEXES\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final String ARGUMENT_DESCRIPTION \u003d \"DESCRIPTION\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final String ARGUMENT_START_DATE_TIME \u003d \"START_DATE_TIME\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final String ARGUMENT_END_DATE_TIME \u003d \"END_DATE_TIME\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final String ARGUMENT_REMIND_DATE_TIME \u003d \"REMIND_DATE_TIME\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final String ARGUMENT_TAGS \u003d \"TAGS\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final ModelManager model;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final IndexVariableArgumentsBuilder indexes;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final StringArgumentBuilder description;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final DateTimeArgumentBuilder start;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final DateTimeArgumentBuilder end;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final DateTimeArgumentBuilder remind;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final StringVariableArgumentsBuilder tags;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    EditEventCommandBuilder(ModelManager model) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.model \u003d model;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.indexes \u003d IndexVariableArguments.newBuilder(ARGUMENT_INDEXES);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.description \u003d StringArgument.newBuilder(ARGUMENT_DESCRIPTION);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.start \u003d DateTimeArgument.newBuilder(ARGUMENT_START_DATE_TIME);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.end \u003d DateTimeArgument.newBuilder(ARGUMENT_END_DATE_TIME);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.remind \u003d DateTimeArgument.newBuilder(ARGUMENT_REMIND_DATE_TIME);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.tags \u003d StringVariableArguments.newBuilder(ARGUMENT_TAGS);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    OptionBuilder getCommandArguments() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return Option.newBuilder()"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .setVariableArguments(this.indexes);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    Map\u003cString, OptionBuilder\u003e getCommandOptions() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return Map.of("
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            OPTION_DESCRIPTION, Option.newBuilder()"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .addArgument(this.description),"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            OPTION_START_DATE_TIME, Option.newBuilder()"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .addArgument(this.start),"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            OPTION_END_DATE_TIME, Option.newBuilder()"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .addArgument(this.end),"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            OPTION_REMIND_DATE_TIME, Option.newBuilder()"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .addArgument(this.remind),"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            OPTION_TAGS, Option.newBuilder()"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .setVariableArguments(this.tags)"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        );"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    ModelManager getModel() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return model;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    List\u003cInteger\u003e getIndexes() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this.indexes.getValues();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    String getDescription() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this.description.getValue();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    DateTime getStart() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this.start.getValue();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    DateTime getEnd() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this.end.getValue();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    DateTime getRemind() {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this.remind.getValue();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    List\u003cString\u003e getTags() {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this.tags.getValues();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    Command commandBuild() {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return new EditEventCommand(this);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 111
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/ExportIcsCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_EXPORT_ICS_SUCCESS;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import seedu.address.ics.IcsException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import seedu.address.ics.IcsExporter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import seedu.address.ui.UserOutput;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": " * Represents a Command which exports Events stored in Horo into an Ics file."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "public class ExportIcsCommand extends Command {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    private static final Path DEFAULT_DIRECTORY \u003d Paths.get(\"exports\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    private final String filepath;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    private final ModelManager model;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    ExportIcsCommand(ExportIcsCommandBuilder builder) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        this.model \u003d builder.getModel();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        this.filepath \u003d getFilePath(builder);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    private String getFilePath(ExportIcsCommandBuilder builder) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        String directory \u003d builder.getOptionDirectory();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        String filename \u003d IcsExporter.getExportFileName();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        if (directory !\u003d null) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            return Paths.get(directory).resolve(filename).toString();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            return DEFAULT_DIRECTORY.resolve(filename).toString();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    public static CommandBuilder newBuilder(ModelManager model) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        return new ExportIcsCommandBuilder(model).init();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    public UserOutput execute() throws CommandException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            IcsExporter icsExporter \u003d new IcsExporter(model);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            icsExporter.export(filepath);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            return new UserOutput(String.format(MESSAGE_EXPORT_ICS_SUCCESS, filepath));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        } catch (IcsException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            throw new CommandException(e.getMessage());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcusteh1238": 52
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/ExportIcsCommandBuilder.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import seedu.address.logic.commands.arguments.StringArgument;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import seedu.address.logic.commands.arguments.StringArgumentBuilder;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import seedu.address.logic.commands.options.Option;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import seedu.address.logic.commands.options.OptionBuilder;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": " * Represents a CommandBuilder responsible for creating {@link ExportIcsCommand}."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "public class ExportIcsCommandBuilder extends CommandBuilder {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    private static final String OPTION_DIRECTORY \u003d \"--directory\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    private static final String ARGUMENT_DIRECTORY \u003d \"DIRECTORY\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    private final ModelManager model;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    private final StringArgumentBuilder optionDirectory;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    ExportIcsCommandBuilder(ModelManager model) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        this.model \u003d model;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        this.optionDirectory \u003d StringArgument.newBuilder(ARGUMENT_DIRECTORY);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    ModelManager getModel() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        return model;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    String getOptionDirectory() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        return this.optionDirectory.getValue();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    OptionBuilder getCommandArguments() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        return Option.newBuilder();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    Map\u003cString, OptionBuilder\u003e getCommandOptions() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        return Map.of(OPTION_DIRECTORY, Option.newBuilder()"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                .addArgument(this.optionDirectory));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    Command commandBuild() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        return new ExportIcsCommand(this);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcusteh1238": 50
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/ImportIcsCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_IMPORT_ICS_SUCCESS;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import seedu.address.ics.IcsException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import seedu.address.ics.IcsParser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import seedu.address.model.events.EventSource;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import seedu.address.ui.UserOutput;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": " * Represents a Command which imports Events stored in an Ics file into Horo."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "public class ImportIcsCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    private final ModelManager model;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    private final String filepath;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    public ImportIcsCommand(ImportIcsCommandBuilder builder) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        this.model \u003d builder.getModel();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        this.filepath \u003d builder.getFilepath();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    public static CommandBuilder newBuilder(ModelManager model) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        return new ImportIcsCommandBuilder(model).init();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    public UserOutput execute() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            EventSource[] events \u003d IcsParser.getParser(filepath).parse();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            model.addEvents(events);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            return new UserOutput(String.format(MESSAGE_IMPORT_ICS_SUCCESS, filepath));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        } catch (IcsException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            return new UserOutput(e.getMessage());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcusteh1238": 40
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/ImportIcsCommandBuilder.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import seedu.address.logic.commands.arguments.StringArgument;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import seedu.address.logic.commands.arguments.StringArgumentBuilder;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import seedu.address.logic.commands.options.Option;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import seedu.address.logic.commands.options.OptionBuilder;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": " * Represents a CommandBuilder responsible for creating {@link ImportIcsCommand}."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "public class ImportIcsCommandBuilder extends CommandBuilder {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    private static final String ARGUMENT_FILEPATH \u003d \"FILEPATH\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    private final ModelManager model;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    private final StringArgumentBuilder filepath;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    ImportIcsCommandBuilder(ModelManager model) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        this.model \u003d model;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        this.filepath \u003d StringArgument.newBuilder(ARGUMENT_FILEPATH);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    ModelManager getModel() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        return model;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    String getFilepath() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        return this.filepath.getValue();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    OptionBuilder getCommandArguments() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        return Option.newBuilder()"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                .addArgument(this.filepath);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    Map\u003cString, OptionBuilder\u003e getCommandOptions() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        return Map.of();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    Command commandBuild() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        return new ImportIcsCommand(this);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcusteh1238": 47
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/NotificationOffCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_NOTIFICATION_OFF;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.logic.NotificationManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.ui.UserOutput;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": " * Represents a Command that switches notifications off."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "public class NotificationOffCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    private final NotificationManager manager;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    NotificationOffCommand (NotificationOffCommandBuilder builder) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        this.manager \u003d builder.getManager();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public static CommandBuilder newBuilder(NotificationManager manager) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        return new NotificationOffCommandBuilder(manager).init();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public UserOutput execute() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        manager.switchOffNotifications();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        return new UserOutput(MESSAGE_NOTIFICATION_OFF);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 28
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/NotificationOffCommandBuilder.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.logic.NotificationManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.logic.commands.options.Option;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.logic.commands.options.OptionBuilder;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": " * Represents a CommandBuilder responsible for creating {@link NotificationOffCommand}."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "public class NotificationOffCommandBuilder extends CommandBuilder {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    private final NotificationManager manager;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    NotificationOffCommandBuilder(NotificationManager manager) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        this.manager \u003d manager;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    NotificationManager getManager() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        return manager;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    OptionBuilder getCommandArguments() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        return Option.newBuilder();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    Map\u003cString, OptionBuilder\u003e getCommandOptions() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        return Map.of();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    Command commandBuild() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        return new NotificationOffCommand(this);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 37
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/NotificationOnCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_NOTIFICATION_ON;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.logic.NotificationManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.ui.UserOutput;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": " * Represents a command that switches notifications on."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "public class NotificationOnCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    private final NotificationManager manager;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    NotificationOnCommand (NotificationOnCommandBuilder builder) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        this.manager \u003d builder.getManager();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public static CommandBuilder newBuilder(NotificationManager manager) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        return new NotificationOnCommandBuilder(manager).init();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public UserOutput execute() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        manager.switchOnNotifications();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        return new UserOutput(MESSAGE_NOTIFICATION_ON);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 28
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/NotificationOnCommandBuilder.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.logic.NotificationManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.logic.commands.options.Option;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.logic.commands.options.OptionBuilder;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": " * Represents a CommandBuilder responsible for creating {@link NotificationOnCommand}."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "public class NotificationOnCommandBuilder extends CommandBuilder {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    private final NotificationManager manager;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    NotificationOnCommandBuilder(NotificationManager manager) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        this.manager \u003d manager;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    NotificationManager getManager() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        return manager;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    OptionBuilder getCommandArguments() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        return Option.newBuilder();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    Map\u003cString, OptionBuilder\u003e getCommandOptions() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        return Map.of();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    Command commandBuild() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        return new NotificationOnCommand(this);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 37
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/RedoCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_REDO_SUCCESS;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.undo.UndoRedoManager;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import seedu.address.ui.UserOutput;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": " * Represents a Command which adds an EventSource to the Model."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "public class RedoCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final UndoRedoManager manager;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    RedoCommand(RedoCommandBuilder builder) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.manager \u003d builder.getManager();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static CommandBuilder newBuilder(UndoRedoManager manager) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return new RedoCommandBuilder(manager).init();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public UserOutput execute() throws CommandException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        manager.redo();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        return new UserOutput(MESSAGE_REDO_SUCCESS);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bruceskellator": 24,
      "WeomuCat": 6
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/RedoCommandBuilder.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import seedu.address.logic.commands.options.Option;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import seedu.address.logic.commands.options.OptionBuilder;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.undo.UndoRedoManager;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": " * Represents a CommandBuilder responsible for creating {@link AddEventCommand}."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "class RedoCommandBuilder extends CommandBuilder {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final UndoRedoManager manager;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    RedoCommandBuilder(UndoRedoManager manager) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.manager \u003d manager;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    OptionBuilder getCommandArguments() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        return Option.newBuilder();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    Map\u003cString, OptionBuilder\u003e getCommandOptions() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        return Map.of();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    UndoRedoManager getManager() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return manager;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    Command commandBuild() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        return new RedoCommand(this);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bruceskellator": 32,
      "WeomuCat": 6
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/UndoCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_UNDO_SUCCESS;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.undo.UndoRedoManager;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import seedu.address.ui.UserOutput;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": " * Represents a Command which adds an EventSource to the Model."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "public class UndoCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final UndoRedoManager manager;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    UndoCommand(UndoCommandBuilder builder) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.manager \u003d builder.getManager();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static CommandBuilder newBuilder(UndoRedoManager manager) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return new UndoCommandBuilder(manager).init();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public UserOutput execute() throws CommandException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        manager.undo();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        return new UserOutput(MESSAGE_UNDO_SUCCESS);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bruceskellator": 24,
      "WeomuCat": 6
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/UndoCommandBuilder.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import seedu.address.logic.commands.options.Option;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import seedu.address.logic.commands.options.OptionBuilder;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.undo.UndoRedoManager;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": " * Represents a CommandBuilder responsible for creating {@link AddEventCommand}."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "class UndoCommandBuilder extends CommandBuilder {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final UndoRedoManager manager;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    UndoCommandBuilder(UndoRedoManager manager) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.manager \u003d manager;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    OptionBuilder getCommandArguments() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        return Option.newBuilder();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    Map\u003cString, OptionBuilder\u003e getCommandOptions() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        return Map.of();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    UndoRedoManager getManager() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return manager;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    Command commandBuild() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        return new UndoCommand(this);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bruceskellator": 32,
      "WeomuCat": 6
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/arguments/Argument.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.commands.arguments;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_REQUIRED_COMMAND_ARGUMENT;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.exceptions.ArgumentException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents an argument in an Option."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * It always has a defined type, and user input entered into this argument will be parsed to the defined type."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * @param \u003cT\u003e the type of this argument"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public abstract class Argument\u003cT\u003e {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private T value;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private String userInput;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    Argument(ArgumentBuilder\u003cT\u003e builder) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.description \u003d builder.getDescription();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Accepts user input."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @param userInput the user input"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @return this instance"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public Argument\u003cT\u003e accept(String userInput) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        Objects.requireNonNull(userInput);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.userInput \u003d userInput;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Builds the argument value, checks if user input is valid and parses it into the defined type."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @param required if the argument is required to have a value"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @return the built value"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @throws ArgumentException if the argument is required but user input is null"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @throws ParseException if the user input is invalid"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public T build(boolean required) throws ArgumentException, ParseException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        if (this.userInput \u003d\u003d null) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            if (required) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                throw new ArgumentException(String.format(MESSAGE_REQUIRED_COMMAND_ARGUMENT, this.description));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            this.value \u003d this.parse(userInput);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this.value;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    abstract T parse(String userInput) throws ParseException;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    T getValue() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return value;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 59
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/arguments/ArgumentBuilder.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.commands.arguments;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents an object that builds arguments."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * @param \u003cT\u003e the type of the argument to build"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public abstract class ArgumentBuilder\u003cT\u003e {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private Argument\u003cT\u003e argument;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    ArgumentBuilder(String description) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public T getValue() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this.argument.getValue();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Builds the argument."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @return the built argument"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public Argument\u003cT\u003e build() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.argument \u003d argumentBuild();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this.argument;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    abstract Argument\u003cT\u003e argumentBuild();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    String getDescription() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 35
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/arguments/DateTimeArgument.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.commands.arguments;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.events.DateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents a command argument of type DateTime."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class DateTimeArgument extends Argument\u003cDateTime\u003e {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    DateTimeArgument(ArgumentBuilder\u003cDateTime\u003e builder) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        super(builder);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static DateTimeArgumentBuilder newBuilder(String description) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return new DateTimeArgumentBuilder(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    DateTime parse(String userInput) throws ParseException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return DateTime.fromUserInput(userInput);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 23
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/arguments/DateTimeArgumentBuilder.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.commands.arguments;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.events.DateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents an ArgumentBuilder responsible for building {@link DateTimeArgument}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class DateTimeArgumentBuilder extends ArgumentBuilder\u003cDateTime\u003e {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    DateTimeArgumentBuilder(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    Argument\u003cDateTime\u003e argumentBuild() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return new DateTimeArgument(this);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 18
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/arguments/IndexVariableArguments.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.commands.arguments;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.parser.IndexParser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents a variable argument of Indexes."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class IndexVariableArguments extends VariableArguments\u003cInteger\u003e {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    IndexVariableArguments(VariableArgumentsBuilder\u003cInteger\u003e builder) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        super(builder);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static IndexVariableArgumentsBuilder newBuilder(String description) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return new IndexVariableArgumentsBuilder(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    Integer parse(String userInput) throws ParseException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return new IndexParser().parse(userInput);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 23
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/arguments/IndexVariableArgumentsBuilder.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.commands.arguments;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents a VariableArgumentsBuilder responsible for building {@link IndexVariableArguments}"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class IndexVariableArgumentsBuilder extends VariableArgumentsBuilder\u003cInteger\u003e {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    IndexVariableArgumentsBuilder(String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    VariableArguments\u003cInteger\u003e argumentBuild() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return new IndexVariableArguments(this);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 16
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/arguments/StringArgument.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.commands.arguments;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents a command argument of type String."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class StringArgument extends Argument\u003cString\u003e {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    StringArgument(ArgumentBuilder\u003cString\u003e builder) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        super(builder);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static StringArgumentBuilder newBuilder(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return new StringArgumentBuilder(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    String parse(String userInput) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return userInput;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 20
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/arguments/StringArgumentBuilder.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.commands.arguments;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents an ArgumentBuilder responsible for building {@link StringArgument}"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class StringArgumentBuilder extends ArgumentBuilder\u003cString\u003e {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    StringArgumentBuilder(String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    Argument\u003cString\u003e argumentBuild() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return new StringArgument(this);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 16
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/arguments/StringVariableArguments.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.commands.arguments;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents a variable argument of Strings."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class StringVariableArguments extends VariableArguments\u003cString\u003e {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    StringVariableArguments(VariableArgumentsBuilder\u003cString\u003e builder) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        super(builder);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static StringVariableArgumentsBuilder newBuilder(String description) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return new StringVariableArgumentsBuilder(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    String parse(String userInput) throws ParseException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return userInput;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 22
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/arguments/StringVariableArgumentsBuilder.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.commands.arguments;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents a ArgumentBuilder responsible for building {@link StringVariableArguments}"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class StringVariableArgumentsBuilder extends VariableArgumentsBuilder\u003cString\u003e {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    StringVariableArgumentsBuilder(String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    VariableArguments\u003cString\u003e argumentBuild() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return new StringVariableArguments(this);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 16
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/arguments/VariableArguments.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.commands.arguments;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents a variable argument of a Command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * A variable argument can take in 0..* arguments, and it always has a defined argument type."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * User input entered into this argument will be parsed to the defined argument type."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * @param \u003cT\u003e the type of this variable argument"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public abstract class VariableArguments\u003cT\u003e {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final List\u003cT\u003e values;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final List\u003cString\u003e userInput;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    VariableArguments(VariableArgumentsBuilder\u003cT\u003e builder) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.values \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.userInput \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.description \u003d builder.getDescription();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Accepts user input."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @param userInput the user input"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @return this instance"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public VariableArguments\u003cT\u003e accept(String userInput) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        Objects.requireNonNull(userInput);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.userInput.add(userInput);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Builds the variable arguments by parsing user input from accept()."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @return the built variable arguments values"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @throws ParseException if the user input is invalid"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public List\u003cT\u003e build() throws ParseException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        for (String input : this.userInput) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            this.values.add(this.parse(input));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this.values;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    abstract T parse(String userInput) throws ParseException;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    List\u003cT\u003e getValues() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this.values;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 55
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/arguments/VariableArgumentsBuilder.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.commands.arguments;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents an object that builds variable arguments."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * @param \u003cT\u003e the type of variable arguments to build"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public abstract class VariableArgumentsBuilder\u003cT\u003e {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private VariableArguments\u003cT\u003e argument;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    VariableArgumentsBuilder(String description) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public List\u003cT\u003e getValues() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this.argument.getValues();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Builds the variable arguments."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @return the built variable arguments"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public VariableArguments\u003cT\u003e build() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.argument \u003d argumentBuild();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this.argument;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    abstract VariableArguments\u003cT\u003e argumentBuild();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    String getDescription() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 37
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/exceptions/ArgumentException.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.commands.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents an exception thrown when creating a command argument."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class ArgumentException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public ArgumentException(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 10
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/listeners/CommandInputListener.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.commands.listeners;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents a listener that will be notified with new command input."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Command input flows from user interface -\u003e business logic."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public interface CommandInputListener {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void onCommandInput(String input);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 10
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/options/Option.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.commands.options;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.Argument;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.VariableArguments;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.exceptions.ArgumentException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents an option in a Command."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * It can contain 0..* other arguments, and can contain 0..1 variable arguments."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class Option {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    // Determines whether or not this option is used in the Command."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private boolean active;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private int argumentIndex;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final List\u003cArgument\u003e arguments;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final VariableArguments variableArguments;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    Option(List\u003cArgument\u003e arguments, VariableArguments variableArguments) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.arguments \u003d arguments;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.variableArguments \u003d variableArguments;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static OptionBuilder newBuilder() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return new OptionBuilder();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Accepts user input and passes it to the next argument for parsing."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @param argument the user input"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public void acceptArgument(String argument) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        if (this.argumentIndex \u003c this.arguments.size()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            this.arguments.get(this.argumentIndex).accept(argument);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            this.argumentIndex++;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        } else if (this.variableArguments !\u003d null) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            this.variableArguments.accept(argument);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Builds all arguments."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @throws ArgumentException if any argument is required but null"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @throws ParseException if any user input is invalid"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public void build() throws ArgumentException, ParseException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        for (Argument argument : this.arguments) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            argument.build(this.active);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        if (this.variableArguments !\u003d null) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            this.variableArguments.build();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public void setActive() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.active \u003d true;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public boolean isActive() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return active;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 67
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/options/OptionBuilder.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.commands.options;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.Argument;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.ArgumentBuilder;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.VariableArguments;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.VariableArgumentsBuilder;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents an object that builds {@link Option}."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class OptionBuilder {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final List\u003cArgument\u003e arguments;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private VariableArguments variableArguments;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    OptionBuilder() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.arguments \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Adds an argument to this option."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @param argument the argument"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @return this instance"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public OptionBuilder addArgument(ArgumentBuilder argument) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.arguments.add(argument.build());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public OptionBuilder setVariableArguments(VariableArgumentsBuilder variableArguments) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.variableArguments \u003d variableArguments.build();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public Option build() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return new Option(this.arguments, this.variableArguments);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 41
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/composers/InstantComposer.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.composers;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.time.Instant;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents a Composer that can compose an {@link Instant} into a String."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class InstantComposer {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final DateTimeFormatter composer;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public InstantComposer(DateTimeFormatter composer) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.composer \u003d composer;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public String compose(Instant instant) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this.composer.format(instant);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 20
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/notification/NotificationChecker.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "package seedu.address.logic.notification;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.model.events.DateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.model.events.EventSource;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.ui.systemtray.PopupNotification;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": " * A class checks through lists of Events and Tasks to generate notifications to be posted"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "public class NotificationChecker {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private ModelManager model;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public NotificationChecker(ModelManager model) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.model \u003d model;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public ArrayList\u003cPopupNotification\u003e getListOfPopupNotifications() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        ArrayList\u003cPopupNotification\u003e returnValue \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        for (EventSource eventSource : model.getEventList()) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            if (eventSource.notificationTimeMatchesCurrentTime()) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                String name \u003d eventSource.getDescription();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                DateTime eventDateTime \u003d eventSource.getStartDateTime();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                returnValue.add(new PopupNotification(name, eventDateTime.toString()));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        return returnValue;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 29,
      "WeomuCat": 5
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/notification/NotificationCheckingThread.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "package seedu.address.logic.notification;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import java.time.Instant;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import java.time.temporal.ChronoUnit;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.ui.systemtray.PopupListener;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.ui.systemtray.PopupNotification;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": " * A thread that handles checking for notifications and notifying the appropriate listeners"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "public class NotificationCheckingThread extends Thread {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    private static final Logger logger \u003d LogsCenter.getLogger(NotificationCheckingThread.class);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    private static final long millisecondsInAMinute \u003d 60000;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    private boolean notificationsOn \u003d true;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    private ArrayList\u003cPopupListener\u003e popupListeners \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private NotificationChecker notificationChecker;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public NotificationCheckingThread(NotificationChecker notificationChecker) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.notificationChecker \u003d notificationChecker;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public void addPopupListener(PopupListener popupListener) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        popupListeners.add(popupListener);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public void switchOffNotifications() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        notificationsOn \u003d false;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public void switchOnNotifications() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        notificationsOn \u003d true;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            while (true) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                if (notificationsOn) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                    checkAndPostNotifications();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                Thread.sleep(findMillisecondsToNextMinute());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        } catch (InterruptedException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            logger.info(\"NotificationManagingThread successfully interrupted.\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     * Finds the notifications that require need to be posted, and notifies the relevant listeners."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    private void checkAndPostNotifications() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        ArrayList\u003cPopupNotification\u003e notifications \u003d notificationChecker.getListOfPopupNotifications();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        for (PopupNotification pn : notifications) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            for (PopupListener popupListener : popupListeners) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                popupListener.notify(pn);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     * Finds the number of milliseconds until the next minute. This is to account for the user not opening the program"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     * exactly on the minute."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     * @return the number of milliseconds until the next minute."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    private static long findMillisecondsToNextMinute() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        Instant currentInstant \u003d Instant.now();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        Instant nextMinute \u003d Instant.now().plusMillis(millisecondsInAMinute).truncatedTo(ChronoUnit.MINUTES);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        return currentInstant.until(nextMinute, ChronoUnit.MILLIS);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 76,
      "WeomuCat": 3
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/CommandKeywordParser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.function.Supplier;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.CommandBuilder;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents a parser that can derive command keywords, and return the appropriate {@link CommandBuilder}."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class CommandKeywordParser implements Parser\u003cCommandBuilder\u003e {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final HashMap\u003cString, Supplier\u003cCommandBuilder\u003e\u003e commandKeywordMap;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public CommandKeywordParser() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.commandKeywordMap \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public void addCommand(String keyword, Supplier\u003cCommandBuilder\u003e command) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.commandKeywordMap.put(keyword, command);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public CommandBuilder parse(String userInput) throws ParseException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        if (!commandKeywordMap.containsKey(userInput)) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return commandKeywordMap.get(userInput).get();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 33
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/CommandParser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.LinkedHashMap;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.CommandBuilder;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents a parser that can parse user input into a command."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Example user input: command_keyword [argument] [arguments...] [--option] [option_argument]"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class CommandParser implements Parser\u003cCommand\u003e {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final CommandKeywordParser keywordParser;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private CommandBuilder commandBuilder;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public CommandParser(CommandKeywordParser keywordParser) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.keywordParser \u003d keywordParser;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public Command parse(String userInput) throws ParseException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        State state1 \u003d new State();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        State state2 \u003d new State();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        State state3 \u003d new State();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        State state4 \u003d new State();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        state1.addPattern(\"\\\\s*\", matches -\u003e state2);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        state2.addPattern(\"[^\\\\s]+\", matches -\u003e {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            this.commandBuilder \u003d this.keywordParser.parse(matches.get(0));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            return state3;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        });"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        state3.addPattern(\"\\\\s+\", matches -\u003e state4);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        state4.addPattern(\"\\\"(.*?)\\\"\", matches -\u003e {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            this.commandBuilder.acceptSentence(matches.get(1));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            return state3;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        });"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        state4.addPattern(\"\u0027(.*?)\u0027\", matches -\u003e {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            this.commandBuilder.acceptSentence(matches.get(1));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            return state3;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        });"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        state4.addPattern(\"[^\\\\s]+\", matches -\u003e {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            this.commandBuilder.acceptSentence(matches.get(0));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            return state3;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        });"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        HashSet\u003cState\u003e exitStates \u003d new HashSet\u003c\u003e();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        exitStates.add(state3);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        exitStates.add(state4);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        State state \u003d state1;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        while (state !\u003d null) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            // No more user input."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            if (userInput.equals(\"\")) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                // Exit if current state is an exitState."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                if (exitStates.contains(state)) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    throw new ParseException(MESSAGE_INVALID_COMMAND_FORMAT);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            StateResult result \u003d state.apply(userInput);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            assert (result !\u003d null);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            state \u003d result.next;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            userInput \u003d userInput.substring(result.matchLength);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            return this.commandBuilder.build();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            throw new ParseException(e.getMessage());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Represents a function that State uses."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Returns the next state to transition to."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private interface StateFunction {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        State apply(List\u003cString\u003e matches) throws ParseException;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Represents one state of a finite state machine for this parser."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private class State {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        private Map\u003cPattern, StateFunction\u003e patterns;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        private State() {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            this.patterns \u003d new LinkedHashMap\u003c\u003e();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        private void addPattern(String pattern, StateFunction function) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            patterns.put(Pattern.compile(\"^(\" + pattern + \")\"), function);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "         * Gives input to this state and get the next state to transition to."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "         * @param userInput the user input"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "         * @return a StateResult"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "         * @throws ParseException if an exception is thrown in StateFunction for this pattern"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "         */"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        private StateResult apply(String userInput) throws ParseException {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            for (Map.Entry\u003cPattern, StateFunction\u003e entry : this.patterns.entrySet()) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                Pattern pattern \u003d entry.getKey();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                StateFunction function \u003d entry.getValue();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                Matcher matcher \u003d pattern.matcher(userInput);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                if (matcher.find()) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    List\u003cString\u003e matches \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    // Add group matches"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    for (int i \u003d 1; i \u003c\u003d matcher.groupCount(); i++) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                        matches.add(matcher.group(i));"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    State next \u003d function.apply(matches);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    int matchLength \u003d matches.get(0).length();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    return new StateResult(next, matchLength);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            // Should not reach this. If reached, the state machine is configured wrongly."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Represents the result of State.apply()."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private class StateResult {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        private State next;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        private int matchLength;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        private StateResult(State next, int matchLength) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            this.next \u003d next;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            this.matchLength \u003d matchLength;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 152
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/DateTimeParser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_DATE_TIME;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static seedu.address.model.events.DateTime.USER_DATE_TIME_PATTERN;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.time.Instant;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.events.DateTime;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents a {@link Parser} that can parse user input into a {@link DateTime} object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class DateTimeParser implements Parser\u003cDateTime\u003e {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final DateTimeFormatter parser;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public DateTimeParser(DateTimeFormatter parser) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.parser \u003d parser;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public DateTime parse(String userInput) throws ParseException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            Instant instant \u003d Instant.from(this.parser.parse(userInput));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            return new DateTime(instant);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            throw new ParseException(String.format(MESSAGE_INVALID_DATE_TIME, USER_DATE_TIME_PATTERN));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 33
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/IndexParser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_INDEX;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents a parser that can parse user input into an Index (Integer)."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class IndexParser implements Parser\u003cInteger\u003e {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public Integer parse(String userInput) throws ParseException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            return Integer.parseInt(userInput) - 1;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            throw new ParseException(MESSAGE_INVALID_INDEX);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 20
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/Parser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents a Parser that is able to parse user input into an object of type {@code T}."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public interface Parser\u003cT\u003e {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Parses {@code userInput} into an object of type {@code T} and returns it."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws ParseException if {@code userInput} does not conform the expected format"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    T parse(String userInput) throws ParseException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 3,
      "-": 12
    }
  },
  {
    "path": "src/main/java/seedu/address/model/ModelManager.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.events.EventSource;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.listeners.EventListListener;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.listeners.UndoRedoListener;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.undo.UndoRedoState;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents the in-memory model of Horo."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class ModelManager implements UndoRedoListener {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final NotNullList\u003cEventSource\u003e eventList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final List\u003cEventListListener\u003e eventListListeners;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Creates a ModelManager."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    public ModelManager() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.eventList \u003d new NotNullList\u003c\u003e();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.eventListListeners \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public void addEventListListener(EventListListener listener) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.eventListListeners.add(listener);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /* Events */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Adds EventSource(s) to this model\u0027s eventList."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @param events the EventSource(s) to add"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public void addEvents(EventSource... events) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        for (EventSource e : events) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            // Create a deep-copy of each addition."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            this.eventList.add(new EventSource(e));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        notifyEventListListeners();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public boolean containsEvent(EventSource event) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this.eventList.contains(event);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Removes an EventSource from this model."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @param event the EventSource to remove."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public void removeEvent(EventSource event) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.eventList.remove(event);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        notifyEventListListeners();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Replaces an EventSource in this model with another EventSource."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @param event the EventSource to replace"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @param replacement the replacement"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public void replaceEvent(EventSource event, EventSource replacement) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        // Create a deep-copy of the replacement."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.eventList.replace(event, new EventSource(replacement));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        notifyEventListListeners();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Replaces the entire EventList in this model with a list of events."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @param events the events to replace the entire EventList."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public void setEventList(List\u003cEventSource\u003e events) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.eventList.reset(events);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        notifyEventListListeners();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Returns an unmodifiable, deep copy of this model\u0027s EventList."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @return a copy of the EventList"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public List\u003cEventSource\u003e getEventList() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        List\u003cEventSource\u003e result \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        for (EventSource event : this.eventList) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            // Create a deep-copy of each EventSource."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            result.add(new EventSource(event));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        // Return an unmodifiable list."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return Collections.unmodifiableList(result);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Notify all listeners whenever the EventList is changed."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private void notifyEventListListeners() {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.eventListListeners.forEach(listener -\u003e listener.onEventListChange(this.getEventList()));"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public void onUndoRedo(UndoRedoState state) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.setEventList(state.getEvents());"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bruceskellator": 6,
      "WeomuCat": 60,
      "-": 38
    }
  },
  {
    "path": "src/main/java/seedu/address/model/NotNullList.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.Iterator;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.events.exceptions.EventNotFoundException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents a list of non-null values."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * A null pointer exception will be thrown if a null value is added to this list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class NotNullList\u003cE\u003e implements Iterable\u003cE\u003e {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final List\u003cE\u003e list;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public NotNullList() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Adds an element to this list."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @param e the element to add"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public void add(E e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        requireNonNull(e);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.list.add(e);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Check if an element is contained in this list."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @param e the element to check"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @return whether or not the element is contained in this list"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public boolean contains(E e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        requireNonNull(e);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return list.contains(e);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Removes an element from this list."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @param e the element to remove"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public void remove(E e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        requireNonNull(e);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        if (!list.remove(e)) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            throw new EventNotFoundException();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Replace an element in this list with another element."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @param e the element to replace"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @param r the replacement element"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public void replace(E e, E r) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        requireAllNonNull(e, r);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        int i \u003d list.indexOf(e);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        if (i \u003d\u003d -1) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            throw new EventNotFoundException();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        list.set(i, r);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Clears this list and adds elements from a given list."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @param list the list of elements to re-add"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public void reset(List\u003cE\u003e list) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        requireNonNull(list);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.list.clear();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        for (E e : list) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            this.add(e);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public boolean equals(Object object) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        if (object instanceof NotNullList) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            NotNullList e \u003d (NotNullList) object;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            return Objects.equals(this.list, e.list);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public Iterator\u003cE\u003e iterator() {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this.list.iterator();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 96
    }
  },
  {
    "path": "src/main/java/seedu/address/model/events/DateTime.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.model.events;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.time.Instant;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.time.ZoneId;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import java.time.temporal.ChronoUnit;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.composers.InstantComposer;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.parser.DateTimeParser;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents a date and time."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Internally stored as seconds from epoch, without any timezone information."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class DateTime implements Comparable\u003cDateTime\u003e {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static final String USER_DATE_TIME_PATTERN \u003d \"dd/MM/yyyy HH:mm\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final ZoneId TIMEZONE \u003d ZoneId.systemDefault();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final DateTimeParser USER_PARSER \u003d"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        new DateTimeParser(DateTimeFormatter.ofPattern(USER_DATE_TIME_PATTERN)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .withZone(TIMEZONE));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final InstantComposer USER_COMPOSER \u003d"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        new InstantComposer(DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\")"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .withZone(TIMEZONE));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final DateTimeFormatter ICS_FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyyMMdd\u0027T\u0027HHmmss\u0027Z\u0027\")"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        .withZone(ZoneId.of(\"UTC\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final DateTimeParser ICS_PARSER \u003d new DateTimeParser(ICS_FORMATTER);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final InstantComposer ICS_COMPOSER \u003d new InstantComposer(ICS_FORMATTER);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final Instant instant;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public DateTime(Instant instant) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.instant \u003d instant;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static DateTime fromIcsString(String string) throws ParseException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return ICS_PARSER.parse(string);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static DateTime fromUserInput(String string) throws ParseException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return USER_PARSER.parse(string);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     * Creates a new instance of DateTime according to the clock."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     * @return A new instance of DateTime according to the clock."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public static DateTime now() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        return new DateTime(Instant.now());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     * Computes the number of milliseconds between the calling instance of DateTime"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     *     and the argument instance of Time. If the argument instance of DateTime"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     *     occurs before the calling instance, the result returned will be negative."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     * @param futureTime A DateTime that does not have (but is expected) to be in the future."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     * @return The number of milliseconds between the calling instance of DateTime"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     *     and the argument instance of DateTime."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public long msecsTimeUntil(DateTime futureTime) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return futureTime.instant.toEpochMilli() - this.instant.toEpochMilli();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public Instant toInstant() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this.instant;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public String toIcsString() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return ICS_COMPOSER.compose(this.instant);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return USER_COMPOSER.compose(this.instant);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public int compareTo(DateTime o) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this.instant.compareTo(o.instant);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public boolean equals(Object object) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        if (object instanceof DateTime) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            DateTime d \u003d (DateTime) object;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            return this.instant.equals(d.instant);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     * Checks if two instances of DateTime are equal up to the current minute."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     * @param other The DateTime to be compared to"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     * @return \u003ccode\u003e true \u003c/code\u003e only if both this instance and the other instance of DateTime are equal"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     *     up to the current minute, but not any more precise than that."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public boolean equalsPrecisionMinute(DateTime other) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this.instant.truncatedTo(ChronoUnit.MINUTES)"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .equals(other.instant.truncatedTo(ChronoUnit.MINUTES));"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 31,
      "Kyzure": 3,
      "WeomuCat": 74
    }
  },
  {
    "path": "src/main/java/seedu/address/model/events/EventSource.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.model.events;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static seedu.address.commons.util.IcsUtil.generateUid;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents an EventSource in Horo."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * It is immutable."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class EventSource {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    // Required"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final DateTime start;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    // Optional"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final DateTime end;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final Set\u003cString\u003e tags;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Creates an EventSource from an EventSourceBuilder."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * All fields must be non null."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    EventSource(EventSourceBuilder builder) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.description \u003d builder.getDescription();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.start \u003d builder.getStart();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.end \u003d builder.getEnd();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.tags \u003d builder.getTags();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Copy constructor."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Creates a deep-copy of an EventSource."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @param eventSource the eventSource to deep-copy."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public EventSource(EventSource eventSource) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.description \u003d eventSource.description;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.start \u003d eventSource.start;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.end \u003d eventSource.end;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.tags \u003d eventSource.tags;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static EventSourceBuilder newBuilder(String description, DateTime start) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return new EventSourceBuilder(description, start);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Checks if a particular instance EventSource should have its notification posted now."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e if the EventSource\u0027s notification timing matches the current notification timing."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public boolean notificationTimeMatchesCurrentTime() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return start.equalsPrecisionMinute(DateTime.now());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public DateTime getStartDateTime() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this.start;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public DateTime getEnd() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return end;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public Set\u003cString\u003e getTags() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return tags;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public boolean equals(Object object) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        if (object instanceof EventSource) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            EventSource e \u003d (EventSource) object;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            return Objects.equals(this.description, e.description)"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                \u0026\u0026 Objects.equals(this.start, e.start)"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                \u0026\u0026 Objects.equals(this.end, e.end)"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                \u0026\u0026 Objects.equals(this.tags, e.tags);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @return The String representation of the EventSource in the Ics file format."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public String toIcsString() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        StringBuilder icsStringBuilder \u003d new StringBuilder(\"BEGIN:VEVENT\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String uid \u003d generateUid();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        String dtStamp \u003d DateTime.now().toIcsString();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        String start \u003d this.start.toIcsString();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        icsStringBuilder"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .append(\"\\n\").append(\"UID:\").append(uid)"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .append(\"\\n\").append(\"DTSTAMP:\").append(dtStamp)"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .append(\"\\n\").append(\"DTSTART:\").append(start)"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                .append(\"\\n\").append(\"SUMMARY:\").append(this.getDescription());"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        if (this.end !\u003d null) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            String end \u003d this.end.toIcsString();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            icsStringBuilder"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    .append(\"\\n\").append(\"DTEND:\").append(end);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        icsStringBuilder.append(\"\\n\").append(\"END:VEVENT\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return icsStringBuilder.toString();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcusteh1238": 4,
      "bruceskellator": 5,
      "WeomuCat": 101
    }
  },
  {
    "path": "src/main/java/seedu/address/model/events/EventSourceBuilder.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.model.events;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.Collection;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents a Builder responsible for creating {@link EventSource}."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class EventSourceBuilder {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    // Required"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final DateTime start;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    // Optional"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private DateTime end;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private Set\u003cString\u003e tags;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    EventSourceBuilder(String description, DateTime start) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.description \u003d Objects.requireNonNull(description);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.start \u003d Objects.requireNonNull(start);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public EventSourceBuilder setEnd(DateTime end) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.end \u003d end;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public EventSourceBuilder setTags(Collection\u003cString\u003e tags) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.tags \u003d new HashSet\u003c\u003e(tags);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public EventSource build() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return new EventSource(this);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    String getDescription() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    DateTime getStart() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return start;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    DateTime getEnd() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return end;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    Set\u003cString\u003e getTags() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return tags;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 55
    }
  },
  {
    "path": "src/main/java/seedu/address/model/events/ReadOnlyEventList.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.model.events;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents an unmodifiable EventList."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public interface ReadOnlyEventList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    ObservableList\u003cEventSource\u003e getReadOnlyList();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 10
    }
  },
  {
    "path": "src/main/java/seedu/address/model/events/exceptions/EventNotFoundException.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.model.events.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Signals that the operation is unable to find the specified event."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class EventNotFoundException extends RuntimeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 7
    }
  },
  {
    "path": "src/main/java/seedu/address/model/listeners/EventListListener.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.model.listeners;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.events.EventSource;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents a listener that will be notified whenever the EventList in ModelManager changes."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public interface EventListListener {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void onEventListChange(List\u003cEventSource\u003e events);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 13
    }
  },
  {
    "path": "src/main/java/seedu/address/model/listeners/UndoRedoListener.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.model.listeners;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.undo.UndoRedoState;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents a listener that will be notified whenever the currentStateIndex in UndoRedoManager changes."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public interface UndoRedoListener {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void onUndoRedo(UndoRedoState state);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 11
    }
  },
  {
    "path": "src/main/java/seedu/address/model/undo/UndoRedoManager.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.model.undo;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_NOTHING_TO_REDO;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_NOTHING_TO_UNDO;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.events.EventSource;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.listeners.EventListListener;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.listeners.UndoRedoListener;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": " * UndoRedoManager contains all EventList states"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": " * at different points of time in its eventListStateList"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": " * as well as a currentStateIndex that stores the index of the"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": " * current EventList state in the list."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": " * It also contains a mainEventList that represents the current EventList"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": " * state. Duplicates of this mainEventList are stored in the eventListStateList."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": " * Whenever an undo or redo command is executed, mainEventList restores itself to a"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": " * past/future state by copying the data in its duplicate over to itself."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": " */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class UndoRedoManager implements EventListListener {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     * Deep-copies of mainEventList are stored to this list"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     * every time a state-changing command is executed."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     * This allows mainEventList to retrieve its data"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     * from any of these past or future states when an"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     * undo or redo command is called."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private List\u003cUndoRedoState\u003e undoStateList;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    private int currentStateIndex;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private List\u003cUndoRedoListener\u003e undoRedoListeners;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public UndoRedoManager() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        undoStateList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        undoStateList.add(new UndoRedoState());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        currentStateIndex \u003d 0;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        undoRedoListeners \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public void addUndoRedoListener(UndoRedoListener listener) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.undoRedoListeners.add(listener);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     * Restores the previous event list state from UndoRedoManager."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public void undo() throws CommandException {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        if (!canUndo()) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            throw new CommandException(MESSAGE_NOTHING_TO_UNDO);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        currentStateIndex--;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        notifyUndoRedoListeners();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     * Restores the previously undone event list state from UndoRedoManager."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public void redo() throws CommandException {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        if (!canRedo()) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            throw new CommandException(MESSAGE_NOTHING_TO_REDO);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        currentStateIndex++;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        notifyUndoRedoListeners();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Appends a copy of a UndoState to this UndoRedoManager."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private void commit(UndoRedoState state) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assert currentStateIndex \u003e\u003d undoStateList.size() - 1"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                : \"Pointer always points to end of list during commit; All future states must have been discarded.\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        undoStateList.add(state);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        currentStateIndex++;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     * Clears all future event list states in eventListStateList beyond the index given by currentStateIndex"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private void clearFutureHistory() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        undoStateList \u003d"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                new ArrayList\u003c\u003e(undoStateList.subList(0, currentStateIndex + 1));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     * Returns true if there are previous event list states to restore, and false otherwise."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     *"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     * @return boolean"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    private boolean canUndo() {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        return currentStateIndex \u003e 0;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     * Returns true if there are future event list states to reset to, and false otherwise."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     *"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     * @return boolean"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    private boolean canRedo() {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return currentStateIndex \u003c undoStateList.size() - 1;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private UndoRedoState getCurrentState() {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return undoStateList.get(currentStateIndex);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Notify all UndoRedoListeners that undo/redo was called, and provide them with the current UndoState."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private void notifyUndoRedoListeners() {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        UndoRedoState state \u003d getCurrentState();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        for (UndoRedoListener listener : undoRedoListeners) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            listener.onUndoRedo(state);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public void onEventListChange(List\u003cEventSource\u003e events) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        Ignores the EventList when it is equal to getCurrentState()."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        This will be true every undo/redo."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        Explanation: undo/redo will update ModelManager\u0027s EventList, which in turn will notify this method,"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        causing an unwanted feedback loop."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "         */"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        if (Objects.equals(getCurrentState().getEvents(), events)) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        clearFutureHistory();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        commit(new UndoRedoState(events));"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return undoStateList.size() + \" states in history\";"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        if (other \u003d\u003d this) { // short circuit if same object"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            if (!(other instanceof UndoRedoManager)) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            UndoRedoManager otherHistory \u003d ((UndoRedoManager) other);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            if (currentStateIndex !\u003d otherHistory.currentStateIndex"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    || undoStateList.size() !\u003d otherHistory.undoStateList.size()) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            for (int i \u003d 0; i \u003c undoStateList.size(); i++) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                if (!undoStateList.get(i).equals(otherHistory.undoStateList.get(i))) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                    return false;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bruceskellator": 102,
      "WeomuCat": 63
    }
  },
  {
    "path": "src/main/java/seedu/address/model/undo/UndoRedoState.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.model.undo;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.events.EventSource;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents a snapshot of the ModelManager\u0027s events."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class UndoRedoState {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final List\u003cEventSource\u003e events;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    UndoRedoState() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.events \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    UndoRedoState(List\u003cEventSource\u003e events) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.events \u003d events;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public List\u003cEventSource\u003e getEvents() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return events;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 25
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/ColorTheme.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * Represents the color themes that happen during success of the commands or failure of a command."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "public enum ColorTheme {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    SUCCESS, FAILURE, WELCOME;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 8
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/CommandBox.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.function.Consumer;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": " * The UI component that is responsible for receiving user command inputs."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public class CommandBox extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String ERROR_STYLE_CLASS \u003d \"error\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String FXML \u003d \"CommandBox.fxml\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final Consumer\u003cString\u003e onCommandInput;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    private TextField commandTextField;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public CommandBox(Consumer\u003cString\u003e onCommandInput) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.onCommandInput \u003d onCommandInput;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        // calls #setStyleToDefault() whenever there is a change to the text of the command box."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "     * Handles the Enter button pressed event."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    private void handleCommandEntered() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        onCommandInput.accept(commandTextField.getText());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        commandTextField.setText(\"\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets the command box style to use the default style."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    private void setStyleToDefault() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets the command box style to indicate a failed command."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    private void setStyleToIndicateCommandFailure() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        if (styleClass.contains(ERROR_STYLE_CLASS)) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        styleClass.add(ERROR_STYLE_CLASS);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 6,
      "-": 52
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/MainWindow.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.function.Consumer;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.animation.KeyFrame;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.animation.Timeline;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.animation.TranslateTransition;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.beans.value.ChangeListener;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.beans.value.ObservableValue;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.geometry.Rectangle2D;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.layout.GridPane;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.StackPane;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.stage.Screen;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.util.Duration;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.events.EventSource;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.listeners.EventListListener;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.ui.listeners.UserOutputListener;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.panel.calendar.CalendarPanel;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.panel.list.ListPanel;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.panel.log.LogPanel;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": " * The Main Window. Provides the basic application layout containing"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": " * a menu bar and space where other JavaFX elements can be placed."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class MainWindow extends UiPart\u003cStage\u003e implements UserOutputListener, EventListListener {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String FXML \u003d \"MainWindow.fxml\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private static final String WELCOME_MESSAGE \u003d \"Welcome to Horo\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Logger logger \u003d LogsCenter.getLogger(getClass());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    private Stage primaryStage;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private Consumer\u003cString\u003e onCommandInput;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private UiParser uiParser;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    // Independent Ui parts residing in this Ui container"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private ListPanel listPanel;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private CalendarPanel calendarPanel;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private LogPanel logPanel;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private CommandBox commandBox;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private StackPane popUpPanel;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    private StackPane commandBoxPlaceholder;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private StackPane viewPlaceholder;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    private StackPane statusbarPlaceholder;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private GridPane gridManager;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private Label viewTitle;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public MainWindow(Stage primaryStage, Consumer\u003cString\u003e onCommandInput) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        super(FXML, primaryStage);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        // Set dependencies"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        this.primaryStage \u003d primaryStage;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.onCommandInput \u003d onCommandInput;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.uiParser \u003d new UiParser();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        setWindowDefaultSize(new GuiSettings());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    public Stage getPrimaryStage() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        return primaryStage;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public void show() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        primaryStage.show();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "     * Fills up all the placeholders of this window."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public void fillInnerParts() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        calendarPanel \u003d new CalendarPanel(uiParser);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        listPanel \u003d new ListPanel(uiParser);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        logPanel \u003d new LogPanel();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        commandBox \u003d new CommandBox(this.onCommandInput);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        viewPlaceholder.getChildren().add(calendarPanel.getRoot());"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        viewPlaceholder.getChildren().add(listPanel.getRoot());"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        viewPlaceholder.getChildren().add(logPanel.getRoot());"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        calendarPanel.getRoot().setVisible(true);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        listPanel.getRoot().setVisible(false);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        logPanel.getRoot().setVisible(false);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        viewTitle.setText(\"Calendar\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        editInnerParts();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Edits the size of the nodes based on the user\u0027s screen size."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private void editInnerParts() {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        Rectangle2D primaryScreenBounds \u003d Screen.getPrimary().getVisualBounds();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        double screenHeight \u003d primaryScreenBounds.getHeight();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        double screenWidth \u003d primaryScreenBounds.getWidth();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        viewPlaceholder.setPrefWidth(screenWidth);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        viewPlaceholder.setPrefHeight(screenHeight);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        // Set the stage width and height"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        primaryStage.setMaxWidth(screenWidth);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        primaryStage.setMaxHeight(screenHeight);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        addResizingListeners();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        welcomeMessage();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets the default size based on {@code guiSettings}."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "    private void setWindowDefaultSize(GuiSettings guiSettings) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "        primaryStage.setHeight(guiSettings.getWindowHeight());"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "        primaryStage.setWidth(guiSettings.getWindowWidth());"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "        if (guiSettings.getWindowCoordinates() !\u003d null) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "            primaryStage.setX(guiSettings.getWindowCoordinates().getX());"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "            primaryStage.setY(guiSettings.getWindowCoordinates().getY());"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Changes the View Panel to show the Calendar Panel."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public void viewCalendar() {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        calendarPanel.getRoot().setVisible(true);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        listPanel.getRoot().setVisible(false);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        logPanel.getRoot().setVisible(false);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        viewTitle.setText(\"Calendar\");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Changes the View Panel to show the Calendar Panel of a certain day."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param day The given day."
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param month The given month."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param year The given year."
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public void viewDay(int day, int month, int year) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        calendarPanel.changeToDayView(day, month, year);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        viewCalendar();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Changes the View Panel to show the Calendar Panel of a certain week."
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param week The given day."
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param month The given month."
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param year The given year."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public void viewWeek(int week, int month, int year) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        calendarPanel.changeToWeekView(week, month, year);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        viewCalendar();"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Changes the View Panel to show the Calendar Panel of a certain month."
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param month The given month."
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param year The given year."
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public void viewMonth(int month, int year) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        calendarPanel.changeToMonthView(month, year);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        viewCalendar();"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Changes the View Panel to show the List Panel."
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public void viewList() {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        calendarPanel.getRoot().setVisible(false);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        listPanel.getRoot().setVisible(true);"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        logPanel.getRoot().setVisible(false);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        viewTitle.setText(\"List\");"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Changes the View Panel to show the Log Panel."
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public void viewLog() {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        calendarPanel.getRoot().setVisible(false);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        listPanel.getRoot().setVisible(false);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        logPanel.getRoot().setVisible(true);"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        viewTitle.setText(\"Log\");"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Creates a pop-up of the output using the same LogBox in the LogPanel and animates it."
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private void createOutputLogBox(String feedbackToUser, String color) {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        requireNonNull(feedbackToUser);"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        popUpPanel.getChildren().clear();"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        PopUpBox popUpBox \u003d new PopUpBox(feedbackToUser, color);"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        Region popUpBoxRoot \u003d popUpBox.getRoot();"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        Timeline popUpAnimation \u003d new Timeline("
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                new KeyFrame(Duration.seconds(0), event -\u003e {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    popUpPanel.getChildren().add(popUpBoxRoot);"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    popUpBoxRoot.setTranslateY(popUpBoxRoot.getTranslateY() - 40);"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    TranslateTransition translateTransition \u003d"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                            new TranslateTransition(Duration.seconds(1), popUpBoxRoot);"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    double initialPos \u003d popUpBoxRoot.getTranslateY();"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    translateTransition.setFromY(initialPos);"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    translateTransition.setToY(initialPos + 40);"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    translateTransition.setCycleCount(1);"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    translateTransition.setAutoReverse(true);"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    translateTransition.setDuration(new Duration(250));"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    translateTransition.play();"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                }),"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                new KeyFrame(Duration.seconds(3), event -\u003e {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    TranslateTransition translateTransition \u003d"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                            new TranslateTransition(Duration.seconds(1), popUpBoxRoot);"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    double initialPos \u003d popUpBoxRoot.getTranslateY();"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    translateTransition.setFromY(initialPos);"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    translateTransition.setToY(initialPos - 40);"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    translateTransition.setCycleCount(1);"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    translateTransition.setAutoReverse(true);"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    translateTransition.setDuration(new Duration(250));"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    translateTransition.play();"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                }),"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                new KeyFrame(Duration.seconds(4), event -\u003e {"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    popUpPanel.getChildren().remove(popUpBoxRoot);"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                })"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        );"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        popUpAnimation.setCycleCount(1);"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        popUpAnimation.play();"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Creates a color scheme from the a list of the constant color values in the CSS file."
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param color The color of the object."
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @return The color in a String value that is used in the CSS file."
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private String getColor(ColorTheme color) {"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        switch(color) {"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        case SUCCESS:"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            return \"-logBoxColor\";"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        case FAILURE:"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            return \"-errorColor\";"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        case WELCOME:"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            return \"-welcomeColor\";"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            // Not suppose to happen;"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            return \"-logBoxColor\";"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Changes of the calendar screen of the calendar"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public void changeCalendarScreenDate(int month, int year) {"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        calendarPanel.changeCalendarScreenDate(month, year);"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        viewCalendar();"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Adds Listeners that re-sizes the calendar panel when the width has been changed."
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private void addResizingListeners() {"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        primaryStage.widthProperty().addListener(new ChangeListener\u003cNumber\u003e() {"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            @Override"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            public void changed(ObservableValue\u003c? extends Number\u003e observableValue,"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                                Number oldSceneWidth,"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                                Number newSceneWidth) {"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                calendarPanel.resizeTimelineView();"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            }"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        });"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Prints the welcome message."
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private void welcomeMessage() {"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        onUserOutput(new UserOutput(WELCOME_MESSAGE), ColorTheme.WELCOME);"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public void onEventListChange(List\u003cEventSource\u003e events) {"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.listPanel.onEventListChange(events);"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.calendarPanel.onEventListChange(events);"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public void onUserOutput(UserOutput output, ColorTheme results) {"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        String color \u003d getColor(results);"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.logPanel.createLogBox(output.toString(), color);"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        createOutputLogBox(output.toString(), color);"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 195,
      "WeomuCat": 16,
      "-": 99
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/PopUpBox.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * An UI component that displays the feedback to the user."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class PopUpBox extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final String FXML \u003d \"PopUpBox.fxml\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private Label popUp;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Constructor for PopUpBox. Has almost the same features as LogBox"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public PopUpBox(String feedbackToUser, String color) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        popUp.setText(feedbackToUser);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        popUp.setStyle(\"-fx-background-color: \" + color);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 25
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/UiParser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.text.DateFormatSymbols;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.time.Instant;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.time.YearMonth;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.time.ZoneId;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * A component to convert/parse the terms in post logic into readable, UI format for the users."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "public class UiParser {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Returns an array of Integer, size 3, containing {day, month, year} of the event."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param date The time of a given event source"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @return an array of Integer, size 3, containing {day, month, year} of the event"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public Integer[] getDateToNumbers(Instant date) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        DateTimeFormatter dateFormat \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\")"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                .withZone(ZoneId.systemDefault());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        String eventDate \u003d dateFormat.format(date);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        String[] dayMonthYear \u003d eventDate.split(\"/\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        Integer[] parsedDate \u003d {Integer.valueOf(dayMonthYear[0]),"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                Integer.valueOf(dayMonthYear[1]),"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                Integer.valueOf(dayMonthYear[2])};"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return parsedDate;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Returns an array of String indicating the date and time for the users to read."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param date The given date of the event."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @return an array of String indicating the date and time for the users to read."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public String parseDateToString(Instant date) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        DateTimeFormatter dateFormat \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\")"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                .withZone(ZoneId.systemDefault());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return dateFormat.format(date);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Returns an Integer of the day of a date."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param date The given date to parse."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @return Returns an Integer of the day of a date."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public Integer getDay(Instant date) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        DateTimeFormatter dateFormat \u003d DateTimeFormatter.ofPattern(\"dd\")"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                .withZone(ZoneId.systemDefault());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        String eventDate \u003d dateFormat.format(date);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return Integer.valueOf(eventDate);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Returns an Integer of an hour of a time."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param time The given time to parse."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @return Returns an Integer of an hour of a time."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public Integer getHour(Instant time) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"HH\")"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                .withZone(ZoneId.systemDefault());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return Integer.valueOf(timeFormatter.format(time));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Returns a String containing the time."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param time The given time to parse."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @return Returns a String of a given time."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public String getTime(Instant time) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"HH:mm\")"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                .withZone(ZoneId.systemDefault());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return timeFormatter.format(time);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Returns an Integer of Index of a week."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param date The given date to parse."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @return Returns an Integer of Index of a week."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public Integer getWeekIndex(Instant date) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        Integer[] dayMonthYear \u003d getDateToNumbers(date);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        LocalDate localDate \u003d LocalDate.of(dayMonthYear[2], dayMonthYear[1], dayMonthYear[0]);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return localDate.getDayOfWeek().getValue();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Returns an Integer of previous month total days."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param currentMonth The given month to check for the previous one."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param currentYear The given current year."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @return Returns an Integer of previous month total days."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public Integer getPreviousMonthDays(int currentMonth, int currentYear) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        // Checks for January"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        if (currentMonth \u003d\u003d 1) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            return YearMonth.of(currentYear - 1, 12).lengthOfMonth();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            return YearMonth.of(currentYear, currentMonth - 1).lengthOfMonth();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public String getFullEnglishDateTime(Instant date) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        Integer[] dayMonthYear \u003d getDateToNumbers(date);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        String englishDate \u003d getEnglishDate(dayMonthYear[0], dayMonthYear[1], dayMonthYear[2]);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return englishDate + \" \" + getTime(date);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Returns a String of the english date of a given day, month and year."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param day The given day."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param month The given month."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param year The given year."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @return the english date of a given day, month and year."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public String getEnglishDate(Integer day, Integer month, Integer year) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        String monthStr \u003d new DateFormatSymbols().getMonths()[month - 1].toLowerCase();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        monthStr \u003d monthStr.substring(0, 1).toUpperCase() + monthStr.substring(1);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return day + \" \" + monthStr + \" \" + year;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Returns a String of the english date of a given month and year."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param month The given month."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param year The given year."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @return the english date of a given month and year."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public String getEnglishDate(Integer month, Integer year) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        String monthStr \u003d new DateFormatSymbols().getMonths()[month - 1].toLowerCase();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        monthStr \u003d monthStr.substring(0, 1).toUpperCase() + monthStr.substring(1);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return monthStr + \" \" + year;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Returns a String of the english date of a given week, month and year."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param week The given week."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param month The given month."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param year The given year."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @return the english date of a given week, month and year."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public String getEnglishWeekDate(Integer week, Integer month, Integer year) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        String monthStr \u003d new DateFormatSymbols().getMonths()[month - 1].toLowerCase();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        monthStr \u003d monthStr.substring(0, 1).toUpperCase() + monthStr.substring(1);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return \"Week \" + week + \" of \" + monthStr + \" \" + year;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Returns an Integer of the previous month of a given month."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param month The given month."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @return Returns an Integer of the previous month of a given month."
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public Integer getPreviousMonth(int month) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        if (month \u003d\u003d 1) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            return 12;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            return month - 1;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Returns an Integer of the next month of a given month."
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param month The given month."
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @return Returns an Integer of the next month of a given month."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public Integer getNextMonth(int month) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        if (month \u003d\u003d 12) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            return 1;"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            return month + 1;"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Returns an Integer of the previous year if the current month is January."
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param month The current month to check if it is January."
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param year The current year."
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @return Returns an Integer of the previous year if the current month is January."
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public Integer getPreviousYear(int month, int year) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        if (month \u003d\u003d 1) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            return year - 1;"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            return year;"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Returns an Integer of the next year if the current month is December."
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param month The current month to check if it is December."
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param year The current year."
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @return Returns an Integer of the next year if the current month is December."
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public Integer getNextYear(int month, int year) {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        if (month \u003d\u003d 12) {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            return year + 1;"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            return year;"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 213
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/UserOutput.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents the output from business logic, to be displayed to the user."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class UserOutput {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final String output;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public UserOutput(String output) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.output \u003d requireNonNull(output);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this.output;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 20
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/card/Card.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package seedu.address.ui.card;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.UiPart;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * Represents a Card to show an event or task."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "public abstract class Card extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Constructor for the Card."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param fxml The FXML of the EventCard or TaskCard."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public Card(String fxml) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        super(fxml);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 17
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/card/CardHolder.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package seedu.address.ui.card;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.UiPart;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * An UI component that displays information of a {@code Event}."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "public class CardHolder extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private static final String FXML \u003d \"CardHolder.fxml\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private EventCard eventCard;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private VBox timeBox;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Constructor for the EventCardHolder."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public CardHolder() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public void addEvent(EventCard eventCard) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.timeBox.getChildren().add(eventCard.getRoot());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public void removeEventCards() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.timeBox.getChildren().clear();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public Double getHeight() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return timeBox.getHeight();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 39
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/card/EventCard.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package seedu.address.ui.card;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.events.EventSource;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.UiParser;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * An UI component that displays information of a {@code Event}."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "public class EventCard extends Card {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private static final String FXML \u003d \"EventCard.fxml\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private Label eventCardName;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private Label eventCardDate;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Constructor for the EventCard, which displays the information of a particular event."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param event The given event."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param uiParser Represents a parser to convert certain types of objects into other types of objects."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public EventCard(EventSource event, UiParser uiParser) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        eventCardName.setText(event.getDescription());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        eventCardDate.setText(uiParser.getFullEnglishDateTime(event.getStartDateTime().toInstant()));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        eventCardName.setMinHeight(Region.USE_PREF_SIZE);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 20,
      "-": 15
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/listeners/UserOutputListener.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.ui.listeners;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.ui.ColorTheme;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.ui.UserOutput;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents a listener that will be notified with new user output."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * User output flows from business logic -\u003e user interface."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public interface UserOutputListener {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void onUserOutput(UserOutput output, ColorTheme results);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 13
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/panel/calendar/CalendarGridDay.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package seedu.address.ui.panel.calendar;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.effect.ColorAdjust;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.shape.Circle;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.UiPart;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * An UI component that displays the day on the calendar."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "public class CalendarGridDay extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private static final float BASE_SATURATION \u003d 0.25f;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private static final float MAX_SATURATION \u003d 0.75f;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private static final int MAX_EVENT \u003d 10;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private static final String FXML \u003d \"CalendarGridDay.fxml\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private Integer day;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private Integer month;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private Integer year;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private Integer totalEvents;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private Circle calendarDayCircle;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private Label calendarDay;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public CalendarGridDay(Integer day, Integer month, Integer year, Integer totalEvents) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.day \u003d day;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.month \u003d month;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.year \u003d year;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.totalEvents \u003d totalEvents;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        calendarDay.setText(day.toString());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        colorChange();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Increases the total number of Events and changes the color accordingly."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public void addAnEvent() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.totalEvents++;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        colorChange();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Return the day, month and year."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @return The day, month and year."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public Integer[] getDayMonthYear() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        Integer[] dayMonthYear \u003d {day, month, year};"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return dayMonthYear;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Reduces the opacity as the given Calendar Screen is of a different month."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public void reduceOpacity() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        calendarDay.setStyle(\"-fx-opacity: \" + 0.25);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Adjusts the color of the circle to indicate how many events are there on that day."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private void colorChange() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        ColorAdjust colorAdjust \u003d new ColorAdjust();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        if (this.totalEvents \u003d\u003d 0) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            calendarDayCircle.setStyle(\"-fx-opacity: \" + 0);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            calendarDayCircle.setEffect(colorAdjust);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            calendarDayCircle.setStyle(\"-fx-opacity: \" + 0.5);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            colorAdjust.setSaturation(getSaturationValue(this.totalEvents));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            calendarDayCircle.setEffect(colorAdjust);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Returns a float value of a saturation by the number of given events against a threshold value."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param events The total number of events of the current day."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @return Returns a float value of a saturation by the number of given events against a threshold value."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private float getSaturationValue(float events) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return (events / MAX_EVENT) * (MAX_SATURATION - BASE_SATURATION) + BASE_SATURATION;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 91
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/panel/calendar/CalendarPanel.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package seedu.address.ui.panel.calendar;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.time.Instant;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.layout.StackPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.events.EventSource;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.UiParser;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.UiPart;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * An Ui that represents a Panel that contains all the components to make a calendar view. This includes"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * a Timeline, Calendar, and the Details of an event."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "public class CalendarPanel extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private static final String FXML \u003d \"CalendarPanel.fxml\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private UiParser uiParser;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private CalendarScreen calendarScreen;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private TimelineView timelineView;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private Details details;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private Instant date;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private List\u003cEventSource\u003e eventList;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private StackPane timelinePlaceholder;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private VBox calendarScreenPlaceholder;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private VBox detailsPlaceholder;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Constructor for CalendarPanel. Contains the 3 main viewing points for the calendar panel."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * The points are calendar screen view, timeline view and details view."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param uiParser Represents a parser to convert certain types of objects into other types of objects."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @see TimelineView"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @see CalendarScreen"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @see Details"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public CalendarPanel(UiParser uiParser) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.uiParser \u003d uiParser;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.date \u003d Instant.now();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.eventList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        Integer[] dayMonthYear \u003d uiParser.getDateToNumbers(this.date);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.calendarScreen \u003d new CalendarScreen(dayMonthYear[1], dayMonthYear[2], uiParser);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.timelineView \u003d new TimelineDayView("
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                dayMonthYear[0], dayMonthYear[1], dayMonthYear[2], eventList, uiParser);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.details \u003d new Details(uiParser);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        timelinePlaceholder.getChildren().add(this.timelineView.getRoot()); // Left"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        calendarScreenPlaceholder.getChildren().add(this.calendarScreen.getRoot()); // Top Right"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        detailsPlaceholder.getChildren().add(this.details.getRoot()); // Bottom Right"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Changes the CalendarScreen date only."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param month The given month."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param year The given year."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public void changeCalendarScreenDate(int month, int year) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        calendarScreenPlaceholder.getChildren().clear();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        calendarScreen \u003d new CalendarScreen(month, year, uiParser);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        calendarScreenPlaceholder.getChildren().add(calendarScreen.getRoot());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        calendarScreen.eventChange(eventList);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Re-sizes the TimelineView."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public void resizeTimelineView() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        timelineView.resizeTimelineView();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Changes to TimelineDayView with a given day, month and year."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param day The given day."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param month The given month."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param year The given year."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public void changeToDayView(int day, int month, int year) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        changeCalendarScreenDate(month, year);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        timelinePlaceholder.getChildren().clear();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        timelineView \u003d new TimelineDayView(day, month, year, eventList, uiParser);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        timelinePlaceholder.getChildren().add(timelineView.getRoot());"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Changes to TimelineDayView with a given week, month and year."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param week The given week."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param month The given month."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param year The given year."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public void changeToWeekView(int week, int month, int year) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        changeCalendarScreenDate(month, year);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        timelinePlaceholder.getChildren().clear();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.timelineView \u003d new TimelineWeekView("
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                week, month, year, calendarScreen.getStartingDay(week), eventList, uiParser);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        timelinePlaceholder.getChildren().add(timelineView.getRoot());"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Changes to TimelineDayView with a given month and year."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param month The given month."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param year The given year."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public void changeToMonthView(int month, int year) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        changeCalendarScreenDate(month, year);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        timelinePlaceholder.getChildren().clear();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.timelineView \u003d new TimelineMonthView(month, year, eventList, uiParser);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        timelinePlaceholder.getChildren().add(timelineView.getRoot());"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Changes the sub-components of the CalendarPanel with the updated events."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param events The given list of events."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public void onEventListChange(List\u003cEventSource\u003e events) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.timelineView.eventChange(events);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.calendarScreen.eventChange(events);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.eventList \u003d events;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 138
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/panel/calendar/CalendarScreen.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package seedu.address.ui.panel.calendar;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.time.YearMonth;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.layout.GridPane;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.layout.StackPane;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.events.EventSource;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.UiParser;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.UiPart;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * An Ui that represents an actual calendar of a month."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "public class CalendarScreen extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private static final String FXML \u003d \"CalendarScreen.fxml\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private Integer month;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private Integer year;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private LocalDate localDate;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private YearMonth yearMonth;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private ArrayList\u003cArrayList\u003cCalendarGridDay\u003e\u003e weekList;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private ArrayList\u003cCalendarGridDay\u003e dayIndexList;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private UiParser uiParser;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private GridPane calendarGrid;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private Label monthYearTitle;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private StackPane details;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Constructor for CalendarScreen that adds a month and year to form the calendar."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param month Represents the month of the calendar."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param year Represents the year of the calendar."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param uiParser Represents a parser to convert certain types of objects into other types of objects."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public CalendarScreen(Integer month, Integer year, UiParser uiParser) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.month \u003d month;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.year \u003d year;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.uiParser \u003d uiParser;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.localDate \u003d LocalDate.of(year, month, 1);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.yearMonth \u003d YearMonth.of(year, month);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.dayIndexList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.weekList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        for (int i \u003d 0; i \u003c 7; i++) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            this.weekList.add(new ArrayList\u003cCalendarGridDay\u003e());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.monthYearTitle.setText(uiParser.getEnglishDate(month, year));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        resetCalendar();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Fills the index of the calendar and resets when needed to."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private void resetCalendar() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        resetPreviousMonth();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        resetCurrentNextMonth();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Resets the calendar to add in the current and next month values."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private void resetCurrentNextMonth() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        // Adds Current Month Calendar."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        boolean nextMonth \u003d false;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        int startingDay \u003d this.localDate.withDayOfMonth(1).getDayOfWeek().getValue();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        int totalDays \u003d this.yearMonth.lengthOfMonth();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        for (int weeks \u003d 0; weeks \u003c 6; weeks++) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            for (int days \u003d 0; days \u003c 7; days++) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                if (weeks \u003d\u003d 0 \u0026\u0026 days \u003d\u003d 0) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    days \u003d startingDay - 2;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                if (index \u003e totalDays) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    // Resets to next month."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    index \u003d 1;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    nextMonth \u003d true;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                if (!nextMonth) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    CalendarGridDay calendarGridDay \u003d new CalendarGridDay(index, month, year, 0);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    calendarGrid.add(calendarGridDay.getRoot(), days, weeks);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    weekList.get(weeks).add(calendarGridDay);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    dayIndexList.add(calendarGridDay);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    index++;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    CalendarGridDay calendarGridDay \u003d new CalendarGridDay("
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                            index, uiParser.getNextMonth(month), uiParser.getNextYear(month, year), 0);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    calendarGrid.add(calendarGridDay.getRoot(), days, weeks);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    calendarGridDay.reduceOpacity();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    weekList.get(weeks).add(calendarGridDay);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    dayIndexList.add(calendarGridDay);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    index++;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Resets the calendar to add in the previous month values."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private void resetPreviousMonth() {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        // Adds Previous Month Calendar;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        int days \u003d this.localDate.withDayOfMonth(1).getDayOfWeek().getValue() - 2;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        Integer previousMonthDay \u003d uiParser.getPreviousMonthDays(this.month, this.year) - days;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        int previousMonth \u003d uiParser.getPreviousMonth(this.month);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        int previousYear \u003d uiParser.getPreviousYear(this.month, this.year);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        int startingDay \u003d 0;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        while (startingDay \u003c\u003d days) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            CalendarGridDay calendarGridDay \u003d new CalendarGridDay(previousMonthDay, previousMonth, previousYear, 0);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            calendarGrid.add(calendarGridDay.getRoot(), startingDay, 0);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            calendarGridDay.reduceOpacity();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            weekList.get(0).add(calendarGridDay);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            startingDay++;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            previousMonthDay++;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Changes the color scheme for each day of the calendar screen."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param events The list of events."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public void eventChange(List\u003cEventSource\u003e events) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        changeColor(events);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Returns an array of days, each containing a day, month and year."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param week The given week."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @return an array of days, each containing a day, month and year."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public Integer[][] getStartingDay(int week) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        ArrayList\u003cCalendarGridDay\u003e currentWeek \u003d weekList.get(week - 1);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        // 7 days a week"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        // Each day contains a day, month and year."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        Integer[][] days \u003d new Integer[7][3];"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        int dayIndex \u003d 0;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        for (CalendarGridDay day : currentWeek) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            Integer[] dayMonthYear \u003d day.getDayMonthYear();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            days[dayIndex] \u003d dayMonthYear;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            dayIndex++;"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return days;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Changes the color of the current month to indicate the color of the event by adding"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * events to the given CalendarGridDay."
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param events The given list of events."
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @see CalendarGridDay"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private void changeColor(List\u003cEventSource\u003e events) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        // We do not want to change the color of next and previous month."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        for (EventSource event : events) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            if (sameMonthYear(event)) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                Integer day \u003d uiParser.getDay(event.getStartDateTime().toInstant());"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                dayIndexList.get(day - 1).addAnEvent();"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Returns a boolean to check if the date is the sane as the current month and year."
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param event The given event."
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @return Returns a boolean to check if the date is the sane as the current month and year."
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private boolean sameMonthYear(EventSource event) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        Integer[] monthYear \u003d uiParser.getDateToNumbers(event.getStartDateTime().toInstant());"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return monthYear[1].equals(this.month) \u0026\u0026 monthYear[2].equals(this.year);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 191,
      "WeomuCat": 1
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/panel/calendar/Details.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.ui.panel.calendar;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.ui.UiParser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.ui.UiPart;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * An UI that represents the details for an event."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class Details extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final String FXML \u003d \"Details.fxml\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Currently not implemented yet."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @param uiParser Represents a parser to convert certain types of objects into other types of objects."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public Details(UiParser uiParser) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 22
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/panel/calendar/TimelineDayView.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package seedu.address.ui.panel.calendar;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.layout.RowConstraints;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.events.EventSource;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.UiParser;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.card.CardHolder;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.card.EventCard;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * An UI component that displays the feedback to the user."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "public class TimelineDayView extends TimelineView {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private static final String FXML \u003d \"TimelineDayView.fxml\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private Integer day;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private Integer month;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private Integer year;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Constructor for TimelineDayView for a particular day."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param day Represents the day of the timeline."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param month Represents the month of the timeline."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param year Represents the year of the timeline."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param eventList Represents the current list of events."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param uiParser Represents a parser to convert certain types of objects into other types of objects."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public TimelineDayView(Integer day,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                           Integer month,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                           Integer year,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                           List\u003cEventSource\u003e eventList,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                           UiParser uiParser) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        super(uiParser, FXML);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.day \u003d day;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.month \u003d month;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.year \u003d year;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        setTotalRows(24);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        setTimelineTitle(\"Timeline: \" + uiParser.getEnglishDate(day, month, year));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        addGrids();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        addLabels(getLabels());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        addEventCardHolders();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        eventChange(eventList);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Returns an array of String containing the times of a Day."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @return Returns an array of String containing the times of a Day."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private String[] getLabels() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        String[] labels \u003d new String[24];"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        for (int time \u003d 0; time \u003c 10; time++) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            labels[time] \u003d \"0\" + time + \":00\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        for (int time \u003d 10; time \u003c 24; time++) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            labels[time] \u003d time + \":00\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return labels;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    void addEventCard(EventSource event) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        // Gets the event Hour"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        Integer eventHour \u003d getUiParser().getHour(event.getStartDateTime().toInstant());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        EventCard eventCard \u003d new EventCard(event, getUiParser());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        CardHolder eventCardHolder \u003d getEventCardHolder().get(eventHour);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        eventCardHolder.addEvent(eventCard);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        // Set Constraints for the grid pane"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        RowConstraints rowConstraints \u003d getTimelineGrid().getRowConstraints().get(eventHour);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        updateSizeDelay(rowConstraints, eventCardHolder);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    boolean isWithinTimeline(EventSource event) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        Integer[] dayMonthYear \u003d getUiParser().getDateToNumbers(event.getStartDateTime().toInstant());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return dayMonthYear[0].equals(day) \u0026\u0026 dayMonthYear[1].equals(month) \u0026\u0026 dayMonthYear[2].equals(year);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 85
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/panel/calendar/TimelineLabel.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package seedu.address.ui.panel.calendar;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.UiPart;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * An UI that represents the details for an event."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "public class TimelineLabel extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private static final String FXML \u003d \"TimelineLabel.fxml\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private Label timelineLabel;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public TimelineLabel(String label) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.timelineLabel.setText(label);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 23
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/panel/calendar/TimelineMonthView.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package seedu.address.ui.panel.calendar;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.time.YearMonth;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.layout.RowConstraints;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.events.EventSource;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.UiParser;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.card.CardHolder;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.card.EventCard;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * An UI component that displays the feedback to the user."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "public class TimelineMonthView extends TimelineView {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private static final String FXML \u003d \"TimelineMonthView.fxml\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private Integer month;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private Integer year;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Constructor for TimelineMonthView for a particular month."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param month Represents the month of the timeline."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param year Represents the year of the timeline."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param eventList Represents the current list of events."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param uiParser Represents a parser to convert certain types of objects into other types of objects."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public TimelineMonthView(Integer month,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                             Integer year,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                             List\u003cEventSource\u003e eventList,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                             UiParser uiParser) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        super(uiParser, FXML);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.month \u003d month;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.year \u003d year;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        setTotalRows(YearMonth.of(year, month).lengthOfMonth());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        setTimelineTitle(\"Timeline: \" + uiParser.getEnglishDate(month, year));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        addGrids();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        addLabels(getLabels());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        addEventCardHolders();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        eventChange(eventList);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Returns an array of String containing values of the Month."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @return Returns an array of String containing values of the Month."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private String[] getLabels() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        String[] labels \u003d new String[getTotalRows()];"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        for (Integer day \u003d 0; day \u003c getTotalRows(); day++) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            labels[day] \u003d String.valueOf(day + 1);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return labels;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    void addEventCard(EventSource event) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        // Gets the event Hour"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        Integer eventDay \u003d getUiParser().getDay(event.getStartDateTime().toInstant());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        EventCard eventCard \u003d new EventCard(event, getUiParser());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        CardHolder eventCardHolder \u003d getEventCardHolder().get(eventDay - 1);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        eventCardHolder.addEvent(eventCard);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        // Set Constraints for the grid pane"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        RowConstraints rowConstraints \u003d getTimelineGrid().getRowConstraints().get(eventDay - 1);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        updateSizeDelay(rowConstraints, eventCardHolder);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    boolean isWithinTimeline(EventSource event) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        Integer[] dayMonthYear \u003d getUiParser().getDateToNumbers(event.getStartDateTime().toInstant());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return dayMonthYear[1].equals(month) \u0026\u0026 dayMonthYear[2].equals(year);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 79
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/panel/calendar/TimelineView.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package seedu.address.ui.panel.calendar;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.concurrent.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.concurrent.WorkerStateEvent;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.event.EventHandler;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.geometry.VPos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.layout.GridPane;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.layout.RowConstraints;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.events.EventSource;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.UiParser;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.UiPart;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.card.CardHolder;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.card.EventCard;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * Represents an abstract class for the different timelines placed in the CalendarPanel."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * Currently there are 3 types of timeline - day, week and month."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * @see TimelineDayView"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * @see TimelineWeekView"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * @see TimelineMonthView"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "public abstract class TimelineView extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private static final Integer SPACING \u003d 62;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private static final Integer TIMING \u003d 10;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private ArrayList\u003cCardHolder\u003e eventCardHolders;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private UiParser uiParser;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private Integer totalRows;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private Label timelineTitle;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private GridPane timelineGrid;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    TimelineView(UiParser uiParser, String fxml) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        super(fxml);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.uiParser \u003d uiParser;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Initializes the timeline by adding cardholders to hold the EventCards."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @see CardHolder ;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    void addEventCardHolders() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.eventCardHolders \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        for (int row \u003d 0; row \u003c totalRows; row++) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            CardHolder eventCardHolder \u003d new CardHolder();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            eventCardHolders.add(eventCardHolder);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            timelineGrid.add(eventCardHolder.getRoot(), 1, row);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Re-sizes the timeline view panel by setting all the RowConstraints sizes to be the same"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * height as the it\u0027s EventCardHolders, with an additional spacing."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @see RowConstraints"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    void resizeTimelineView() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        for (int row \u003d 0; row \u003c totalRows; row++) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            CardHolder eventCardHolder \u003d eventCardHolders.get(row);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            RowConstraints rowConstraints \u003d timelineGrid.getRowConstraints().get(row);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            rowConstraints.setPrefHeight(eventCardHolder.getHeight() + SPACING);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Updates the current row\u0027s constraints height after a certain delay so to obtain the"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * updated height of the EventCardHolder."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param rowConstraints The current row constraints."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param eventCardHolder The current EventCardHolder to obtain the height."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    void updateSizeDelay(RowConstraints rowConstraints, CardHolder eventCardHolder) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        Task\u003cVoid\u003e sleeper \u003d new Task\u003cVoid\u003e() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            @Override"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            protected Void call() throws Exception {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    Thread.sleep(TIMING);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                } catch (InterruptedException e) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    throw new Exception(e.getMessage());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                return null;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        };"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        sleeper.setOnSucceeded(new EventHandler\u003cWorkerStateEvent\u003e() {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            @Override"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            public void handle(WorkerStateEvent event) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                rowConstraints.setPrefHeight(eventCardHolder.getHeight() + SPACING);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        });"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        new Thread(sleeper).start();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Adds an array of labels into the Grid Pane."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param labels The labels to be added into the Grid Pane."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    void addLabels(String ...labels) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        int row \u003d 0;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        for (String label : labels) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            TimelineLabel timelineLabel \u003d new TimelineLabel(label);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            timelineGrid.add(timelineLabel.getRoot(), 0, row);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            row++;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Adds a set of RowConstraints into the Grid Pane."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @see RowConstraints"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    void addGrids() {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        for (int row \u003d 0; row \u003c totalRows; row++) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            RowConstraints rowConstraints \u003d new RowConstraints();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            rowConstraints.setValignment(VPos.TOP);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            rowConstraints.setPrefHeight(100);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            rowConstraints.setMinHeight(100);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            timelineGrid.getRowConstraints().add(rowConstraints);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Changes the timeline by resetting it with the new list of events."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param eventList The given event list containing all the events."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    void eventChange(List\u003cEventSource\u003e eventList) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        resetTimeline();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        for (EventSource event : eventList) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            if (isWithinTimeline(event)) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                addEventCard(event);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Resets the timeline by removing all of the EventCardHolders\u0027 EventCard."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private void resetTimeline() {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        for (int row \u003d 0; row \u003c totalRows; row++) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            // Reset RowConstraints"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            RowConstraints rowConstraints \u003d timelineGrid.getRowConstraints().get(row);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            rowConstraints.setPrefHeight(0);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            // Reset EventCards for each hour"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            eventCardHolders.get(row).removeEventCards();"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Creates an EventCard and adds it to the current timeline."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param event The given event."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @see EventCard"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    abstract void addEventCard(EventSource event);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Returns a boolean that checks if the given date of the event is within the particular timeline."
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param event The given event."
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @return a boolean that checks if the given date of the event is within the particular timeline."
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    abstract boolean isWithinTimeline(EventSource event);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    // Getters"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    ArrayList\u003cCardHolder\u003e getEventCardHolder() {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return this.eventCardHolders;"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    GridPane getTimelineGrid() {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return this.timelineGrid;"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    UiParser getUiParser() {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return this.uiParser;"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    Integer getTotalRows() {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return this.totalRows;"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    // Setters"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    void setTotalRows(int totalRows) {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.totalRows \u003d totalRows;"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    void setTimelineTitle(String timelineTitle) {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.timelineTitle.setText(timelineTitle);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 205
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/panel/calendar/TimelineWeekView.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package seedu.address.ui.panel.calendar;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.layout.RowConstraints;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.events.EventSource;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.UiParser;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.card.CardHolder;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.card.EventCard;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * An UI component that displays the feedback to the user."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "public class TimelineWeekView extends TimelineView {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private static final String FXML \u003d \"TimelineWeekView.fxml\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private Integer[][] days;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private Integer week;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private Integer month;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private Integer year;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Constructor for TimelineWeekView for a particular week."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param week Represents the week of the timeline."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param month Represents the month of the timeline."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param year Represents the year of the timeline."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param days Represents a list of dates, where each date contains a day, month and year."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param eventList Represents the current list of events."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param uiParser Represents a parser to convert certain types of objects into other types of objects."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public TimelineWeekView(Integer week,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                            Integer month,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                            Integer year,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                            Integer[][] days,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                            List\u003cEventSource\u003e eventList,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                            UiParser uiParser) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        super(uiParser, FXML);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.week \u003d week;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.month \u003d month;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.year \u003d year;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.days \u003d days;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        setTotalRows(7);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        setTimelineTitle(\"Timeline: \" + uiParser.getEnglishWeekDate(week, month, year));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        addGrids();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        addLabels(getLabels());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        addEventCardHolders();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        eventChange(eventList);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Returns an array of String containing values of the week."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @return Returns an array of String containing values of the week."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private String[] getLabels() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        String[] labels \u003d {\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"};"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return labels;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    void addEventCard(EventSource event) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        // Creates and add the event card"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        int eventIndex \u003d getUiParser().getWeekIndex(event.getStartDateTime().toInstant());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        EventCard eventCard \u003d new EventCard(event, getUiParser());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        CardHolder eventCardHolder \u003d getEventCardHolder().get(eventIndex - 1);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        eventCardHolder.addEvent(eventCard);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        // Set Constraints for the grid pane"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        RowConstraints rowConstraints \u003d getTimelineGrid().getRowConstraints().get(eventIndex - 1);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        updateSizeDelay(rowConstraints, eventCardHolder);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    boolean isWithinTimeline(EventSource event) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        Integer eventDay \u003d getUiParser().getDay(event.getStartDateTime().toInstant());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        for (Integer[] dayMonthYear : days) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            // Same day"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            if (dayMonthYear[0].equals(eventDay)) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                // Checks if the event is within the same week as the list of days."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                if ((dayMonthYear[1].equals(this.month) \u0026\u0026 dayMonthYear[2].equals(this.year))) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    // In the same week, month, and year"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    return true;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                if (dayMonthYear[1].equals(getUiParser().getPreviousMonth(this.month))"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        \u0026\u0026 dayMonthYear[2].equals((getUiParser().getPreviousYear (this.month, this.year)))) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    // In the same week, previous month and may be previous year"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    return true;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                if (dayMonthYear[1].equals(getUiParser().getNextMonth(this.month))"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        \u0026\u0026 dayMonthYear[2].equals((getUiParser().getNextYear(this.month, this.year)))) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    // In the same week, next month and may be next year"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    return true;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 103
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/panel/list/EventCardStub.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.ui.panel.list;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.events.EventSource;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.ui.UiParser;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.ui.UiPart;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * An UI component that displays information of a {@code Event}."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class EventCardStub extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final String FXML \u003d \"EventListCard.fxml\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public final EventSource eventSource;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private HBox cardPane;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private Label name;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private Label dateTime;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Constructor for EventCard. Creates an event card that will be placed in EventListPanel."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @param eventSource The instance of the event itself."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @param displayedIndex The number representing the event."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public EventCardStub(EventSource eventSource, int displayedIndex, UiParser uiParser) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.eventSource \u003d eventSource;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        name.setText(displayedIndex + \". \" + eventSource.getDescription());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        dateTime.setText(uiParser.parseDateToString(eventSource.getStartDateTime().toInstant()));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        // short circuit if same object"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        // instanceof handles nulls"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        if (!(other instanceof EventCardStub)) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        // state check"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        EventCardStub card \u003d (EventCardStub) other;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return eventSource.equals(card.eventSource);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 55
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/panel/list/EventListPanel.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.ui.panel.list;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.control.ListCell;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.control.ListView;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.events.EventSource;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.ui.UiParser;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.ui.UiPart;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * Panel containing the list of persons."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class EventListPanel extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private static final String FXML \u003d \"EventListPanel.fxml\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private final Logger logger \u003d LogsCenter.getLogger(EventListPanel.class);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private UiParser uiParser;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private ListView\u003cEventSource\u003e eventListView;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Constructor for EventListPanel. Creates an instance of a panel to store the Event Cards."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public EventListPanel(UiParser uiParser) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.uiParser \u003d uiParser;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        eventListView.setCellFactory(listView -\u003e new EventListViewCell());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public void setItems(List\u003cEventSource\u003e events) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.eventListView.setItems(FXCollections.observableList(events));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Custom {@code ListCell} that displays the graphics of a {@code Event} using a {@code EventCard}."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    class EventListViewCell extends ListCell\u003cEventSource\u003e {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        protected void updateItem(EventSource eventSource, boolean empty) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            super.updateItem(eventSource, empty);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            if (empty || eventSource \u003d\u003d null) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                setGraphic(null);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                setText(null);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                setGraphic(new EventCardStub(eventSource, getIndex() + 1, uiParser).getRoot());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 45,
      "WeomuCat": 12
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/panel/list/ListPanel.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.ui.panel.list;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.events.EventSource;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.listeners.EventListListener;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.ui.UiParser;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.ui.UiPart;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * An Ui that stores the logged feedback from the program to the user."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class ListPanel extends UiPart\u003cRegion\u003e implements EventListListener {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final String FXML \u003d \"ListPanel.fxml\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private UiParser uiParser;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private EventListPanel eventListPanel;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private VBox list;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private AnchorPane eventList;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private AnchorPane taskListl;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Constructor for ListPanel. Stores the event list, and task list[in v2.0]."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public ListPanel(UiParser uiParser) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.uiParser \u003d uiParser;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.eventListPanel \u003d new EventListPanel(uiParser);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        // eventList.getChildren().add(eventListPanel.getRoot());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public void onEventListChange(List\u003cEventSource\u003e events) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.eventListPanel.setItems(events);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 48
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/panel/log/LogBox.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.ui.panel.log;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.ui.UiPart;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * An UI component that displays the feedback to the user."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class LogBox extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final String FXML \u003d \"LogBox.fxml\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private Label box;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Constructor for LogBox. It is a dialog box that contains the feedback from the program to the user."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @param feedbackToUser The feedback from the program to the user."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public LogBox(String feedbackToUser, String color) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        box.setText(feedbackToUser);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        box.setStyle(\"-fx-background-color: \" + color);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 27
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/panel/log/LogPanel.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.ui.panel.log;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.ui.UiPart;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * An Ui that stores the logged feedback from the program to the user."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "public class LogPanel extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private static final String FXML \u003d \"LogPanel.fxml\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private VBox boxLog;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private ScrollPane scrollLog;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Constructor for the LogPanel. Sets the size of the LogPanel to the user\u0027s screen size."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public LogPanel() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Creates an instance of LogBox."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param feedbackToUser To provide the Log Box the feedback to the user."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public void createLogBox(String feedbackToUser, String color) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        requireNonNull(feedbackToUser);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        LogBox logBox \u003d new LogBox(feedbackToUser, color);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        boxLog.getChildren().add(logBox.getRoot());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 37,
      "WeomuCat": 5
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/systemtray/NotificationClickActionListener.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.ui.systemtray;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import java.awt.event.ActionEvent;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import java.awt.event.ActionListener;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": " * The Listener responding to a Notification being clicked."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "public class NotificationClickActionListener implements ActionListener {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final Logger logger \u003d LogsCenter.getLogger(SystemTrayCommunicator.class);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     * This Listener\u0027s reaction to an ActionEvent it is listening to being called."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     *     Specifically for this class, this is called whenever a notification is clicked on."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     * @param e The ActionEvent that this Listener is listening to."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public void actionPerformed(ActionEvent e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "         This is currently undefined behaviour for the current milestone."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "         In the future, as things get more developed, this should be replaced with opening up the app."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "         */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        logger.info(\"Notification Clicked\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 26,
      "WeomuCat": 3
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/systemtray/PopupListener.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.ui.systemtray;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * A listener for new popups to be posted"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class PopupListener {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static SystemTrayCommunicator systemTrayCommunicator;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public PopupListener(SystemTrayCommunicator systemTrayCommunicator) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.systemTrayCommunicator \u003d systemTrayCommunicator;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public void notify(PopupNotification popupNotification) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        systemTrayCommunicator.postNewNotification(popupNotification.name, popupNotification.description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 16
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/systemtray/PopupNotification.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.ui.systemtray;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": " * Represents a notification to be posted to the system tray."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "public class PopupNotification {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public final String name;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public final String description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Creates a new PopupNotification with the appropriate name and description."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     * @param name The name to show up when the notification is posted"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     * @param description The description to accompany the name when the notification is posted"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public PopupNotification (String name, String description) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        requireAllNonNull(name, description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 19,
      "WeomuCat": 4
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/systemtray/SystemTrayCommunicator.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.ui.systemtray;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import java.awt.AWTException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import java.awt.Image;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import java.awt.MenuItem;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import java.awt.PopupMenu;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import java.awt.SystemTray;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import java.awt.Toolkit;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import java.awt.TrayIcon;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import java.awt.TrayIcon.MessageType;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.MainApp;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": " * Controls interactions between the main program and the System Tray."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "public class SystemTrayCommunicator {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final Logger logger \u003d LogsCenter.getLogger(SystemTrayCommunicator.class);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    private static final String TRAY_ICON_NAME \u003d \"Horo\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    private static final String TRAY_ICON_IMAGE_PATH \u003d \"/images/system_tray_icon.png\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    private static final String NOTIFICATIONS_ON_TOOLTIP \u003d \"Notifications switched on\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    private static final String NOTIFICATIONS_OFF_TOOLTIP \u003d \"Notifications switched off\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    private static TrayIcon trayIcon;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    private static boolean systemTrayIsSupported;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    private boolean notificationsSwitchedOn \u003d true;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public SystemTrayCommunicator() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.initialise();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     * Sets up the System Tray app, if applicable."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private void initialise() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        systemTrayIsSupported \u003d SystemTray.isSupported();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        if (systemTrayIsSupported) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            logger.info(\"System tray is supported.\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            SystemTray tray \u003d SystemTray.getSystemTray();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            trayIcon \u003d getTrayIcon();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            resetToolTipMessage();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                tray.add(trayIcon);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            } catch (AWTException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                logger.warning(e.toString());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            logger.info(\"System tray is not supported.\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     * Posts a new notification to the System Tray."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     * @param name The name of the notification."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     * @param description The description of the notification."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public void postNewNotification(String name, String description) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        if (systemTrayIsSupported) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            trayIcon.displayMessage(name, description, MessageType.INFO);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     * Tells the System Tray Communicator that notifications are switched off."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public void switchOnNotifications() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        // This is purely a cosmetic change"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        notificationsSwitchedOn \u003d true;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        resetToolTipMessage();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     * Tells the SystemTrayCommunicator that notifications are switched off."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public void switchOffNotifications() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        // This is purely a cosmetic change"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        notificationsSwitchedOn \u003d false;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        resetToolTipMessage();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     * Changes the tooltip message based on whether notifications are switched on or off."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    private void resetToolTipMessage() {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        if (notificationsSwitchedOn) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            trayIcon.setToolTip(NOTIFICATIONS_ON_TOOLTIP);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            trayIcon.setToolTip(NOTIFICATIONS_OFF_TOOLTIP);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     * Creates a new icon on the System Tray, and returns its reference."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     * @return The reference to a new System Tray icon."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    private static TrayIcon getTrayIcon() {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        TrayIcon trayIcon \u003d new TrayIcon(getImage(), TRAY_ICON_NAME, getPopupMenu());"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        trayIcon.addActionListener(getNotificationClickActionListener());"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        return trayIcon;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     * Locates and returns the image to be used as the Tray Icon."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     * @return the image to be used as the Tray Icon."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    private static Image getImage() {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        return Toolkit.getDefaultToolkit().getImage(MainApp.class.getResource(TRAY_ICON_IMAGE_PATH));"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     * Creates and returns the PopupMenu designed for this app."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     * @return The PopupMenu designed for the System Tray app."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    private static PopupMenu getPopupMenu() {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        PopupMenu popup \u003d new PopupMenu();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        // Create pop-up menu items"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        MenuItem aboutItem \u003d new MenuItem(\"Hi this is Horo.\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        // Add created items to the pop-up menu"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        popup.add(aboutItem);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        return popup;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     * Creates and returns an instance of the ClickActionListener used for this app."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     *     The listener will be called whenever the user clicks on a notification."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     * @return An instance of the ClickActionListener used for this app."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    private static NotificationClickActionListener getNotificationClickActionListener() {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        return new NotificationClickActionListener();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 140,
      "WeomuCat": 7
    }
  },
  {
    "path": "src/main/resources/view/Calendar.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.ColumnConstraints?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.GridPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.RowConstraints?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.StackPane?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003cVBox fx:id\u003d\"calendarBase\" style\u003d\"-fx-background-radius: 8;\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003cStackPane minHeight\u003d\"50.0\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003cchildren\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cLabel fx:id\u003d\"monthYearTitle\" text\u003d\"\\$month\" textFill\u003d\"WHITE\"\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003cfont\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cFont size\u003d\"14.0\" /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/font\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003c/Label\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003c/children\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003cStackPane\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003cchildren\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cGridPane minHeight\u003d\"25.0\"\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003ccolumnConstraints\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cColumnConstraints halignment\u003d\"CENTER\" hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"50.0\" minWidth\u003d\"50.0\" prefWidth\u003d\"50.0\" /\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cColumnConstraints halignment\u003d\"CENTER\" hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"50.0\" minWidth\u003d\"50.0\" prefWidth\u003d\"50.0\" /\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cColumnConstraints halignment\u003d\"CENTER\" hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"50.0\" minWidth\u003d\"50.0\" prefWidth\u003d\"50.0\" /\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cColumnConstraints halignment\u003d\"CENTER\" hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"50.0\" minWidth\u003d\"50.0\" prefWidth\u003d\"50.0\" /\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cColumnConstraints halignment\u003d\"CENTER\" hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"50.0\" minWidth\u003d\"50.0\" prefWidth\u003d\"50.0\" /\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cColumnConstraints halignment\u003d\"CENTER\" hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"50.0\" minWidth\u003d\"50.0\" prefWidth\u003d\"50.0\" /\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cColumnConstraints halignment\u003d\"CENTER\" hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"50.0\" minWidth\u003d\"50.0\" prefWidth\u003d\"50.0\" /\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/columnConstraints\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003crowConstraints\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cRowConstraints maxHeight\u003d\"50.0\" minHeight\u003d\"50.0\" prefHeight\u003d\"50.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/rowConstraints\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003cchildren\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cLabel fx:id\u003d\"monday\" contentDisplay\u003d\"CENTER\" text\u003d\"M\" textAlignment\u003d\"CENTER\" textFill\u003d\"WHITE\" /\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cLabel fx:id\u003d\"tuesday\" contentDisplay\u003d\"CENTER\" text\u003d\"T\" textAlignment\u003d\"CENTER\" textFill\u003d\"WHITE\" GridPane.columnIndex\u003d\"1\" /\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cLabel fx:id\u003d\"wednesday\" contentDisplay\u003d\"CENTER\" text\u003d\"W\" textAlignment\u003d\"CENTER\" textFill\u003d\"WHITE\" GridPane.columnIndex\u003d\"2\" /\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cLabel fx:id\u003d\"thursday\" contentDisplay\u003d\"CENTER\" text\u003d\"T\" textAlignment\u003d\"CENTER\" textFill\u003d\"WHITE\" GridPane.columnIndex\u003d\"3\" /\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cLabel fx:id\u003d\"friday\" contentDisplay\u003d\"CENTER\" text\u003d\"F\" textAlignment\u003d\"CENTER\" textFill\u003d\"WHITE\" GridPane.columnIndex\u003d\"4\" /\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cLabel fx:id\u003d\"saturday\" contentDisplay\u003d\"CENTER\" text\u003d\"S\" textAlignment\u003d\"CENTER\" textFill\u003d\"WHITE\" GridPane.columnIndex\u003d\"5\" /\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cLabel fx:id\u003d\"sunday\" contentDisplay\u003d\"CENTER\" text\u003d\"S\" textAlignment\u003d\"CENTER\" textFill\u003d\"WHITE\" GridPane.columnIndex\u003d\"6\" /\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/children\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003c/GridPane\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003c/children\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003cStackPane\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003cchildren\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cGridPane fx:id\u003d\"calendarGrid\" alignment\u003d\"CENTER\"\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003ccolumnConstraints\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cColumnConstraints halignment\u003d\"CENTER\" hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"50.0\" minWidth\u003d\"50.0\" prefWidth\u003d\"50.0\" /\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cColumnConstraints halignment\u003d\"CENTER\" hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"50.0\" minWidth\u003d\"50.0\" prefWidth\u003d\"50.0\" /\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cColumnConstraints halignment\u003d\"CENTER\" hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"50.0\" minWidth\u003d\"50.0\" prefWidth\u003d\"50.0\" /\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cColumnConstraints halignment\u003d\"CENTER\" hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"50.0\" minWidth\u003d\"50.0\" prefWidth\u003d\"50.0\" /\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cColumnConstraints halignment\u003d\"CENTER\" hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"50.0\" minWidth\u003d\"50.0\" prefWidth\u003d\"50.0\" /\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cColumnConstraints halignment\u003d\"CENTER\" hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"50.0\" minWidth\u003d\"50.0\" prefWidth\u003d\"50.0\" /\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cColumnConstraints halignment\u003d\"CENTER\" hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"50.0\" minWidth\u003d\"50.0\" prefWidth\u003d\"50.0\" /\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/columnConstraints\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003crowConstraints\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cRowConstraints maxHeight\u003d\"50.0\" minHeight\u003d\"50.0\" prefHeight\u003d\"50.0\" valignment\u003d\"CENTER\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cRowConstraints maxHeight\u003d\"50.0\" minHeight\u003d\"50.0\" prefHeight\u003d\"50.0\" valignment\u003d\"CENTER\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cRowConstraints maxHeight\u003d\"50.0\" minHeight\u003d\"50.0\" prefHeight\u003d\"50.0\" valignment\u003d\"CENTER\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cRowConstraints maxHeight\u003d\"50.0\" minHeight\u003d\"50.0\" prefHeight\u003d\"50.0\" valignment\u003d\"CENTER\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cRowConstraints maxHeight\u003d\"50.0\" minHeight\u003d\"50.0\" prefHeight\u003d\"50.0\" valignment\u003d\"CENTER\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cRowConstraints maxHeight\u003d\"50.0\" minHeight\u003d\"50.0\" prefHeight\u003d\"50.0\" valignment\u003d\"CENTER\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/rowConstraints\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003cStackPane.margin\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cInsets top\u003d\"20.0\" /\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/StackPane.margin\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003c/GridPane\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003c/children\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c/VBox\u003e"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 77
    }
  },
  {
    "path": "src/main/resources/view/CalendarGridDay.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.StackPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.shape.Circle?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003cStackPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003cCircle fx:id\u003d\"calendarDayCircle\" fill\u003d\"#ff7777\" radius\u003d\"14.0\" stroke\u003d\"#ffffff00\" strokeType\u003d\"INSIDE\" /\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003cLabel fx:id\u003d\"calendarDay\" alignment\u003d\"CENTER\" contentDisplay\u003d\"CENTER\" text\u003d\"\\$\" textAlignment\u003d\"CENTER\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c/StackPane\u003e"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 12
    }
  },
  {
    "path": "src/main/resources/view/CalendarPanel.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.ColumnConstraints?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.GridPane?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.RowConstraints?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.StackPane?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003cVBox xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003cGridPane fx:id\u003d\"calendarPanelGrid\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        \u003ccolumnConstraints\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "          \u003cColumnConstraints /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "          \u003cColumnConstraints fillWidth\u003d\"false\" hgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        \u003c/columnConstraints\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        \u003crowConstraints\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "          \u003cRowConstraints /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "          \u003cRowConstraints vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        \u003c/rowConstraints\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003cchildren\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cStackPane fx:id\u003d\"timelinePlaceholder\" alignment\u003d\"TOP_LEFT\" prefWidth\u003d\"20.0\" GridPane.halignment\u003d\"LEFT\" GridPane.hgrow\u003d\"ALWAYS\" GridPane.rowSpan\u003d\"2\" GridPane.valignment\u003d\"TOP\" GridPane.vgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003cGridPane.margin\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cInsets right\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/GridPane.margin\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cStackPane alignment\u003d\"CENTER_RIGHT\" prefHeight\u003d\"150.0\" prefWidth\u003d\"200.0\" GridPane.columnIndex\u003d\"1\"\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003cchildren\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cVBox fx:id\u003d\"calendarScreenPlaceholder\" alignment\u003d\"CENTER_RIGHT\" fillWidth\u003d\"false\" /\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/children\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003cGridPane.margin\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cInsets /\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/GridPane.margin\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cStackPane alignment\u003d\"CENTER_RIGHT\" prefHeight\u003d\"150.0\" prefWidth\u003d\"200.0\" GridPane.columnIndex\u003d\"1\" GridPane.rowIndex\u003d\"1\"\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003cchildren\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cVBox fx:id\u003d\"detailsPlaceholder\" alignment\u003d\"CENTER_RIGHT\" fillWidth\u003d\"false\" /\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/children\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003cGridPane.margin\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cInsets /\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/GridPane.margin\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003c/children\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003c/GridPane\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c/VBox\u003e"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 46
    }
  },
  {
    "path": "src/main/resources/view/CalendarScreen.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.ColumnConstraints?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.GridPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.RowConstraints?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.StackPane?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003cVBox fx:id\u003d\"calendarBase\" style\u003d\"-fx-background-radius: 8;\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003cStackPane minHeight\u003d\"50.0\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003cchildren\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cLabel fx:id\u003d\"monthYearTitle\" text\u003d\"\\$month\" textFill\u003d\"WHITE\" underline\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003cfont\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cFont size\u003d\"14.0\" /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/font\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003c/Label\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003c/children\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003cStackPane\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003cchildren\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cGridPane minHeight\u003d\"25.0\"\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003ccolumnConstraints\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cColumnConstraints halignment\u003d\"CENTER\" hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"50.0\" minWidth\u003d\"50.0\" prefWidth\u003d\"50.0\" /\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cColumnConstraints halignment\u003d\"CENTER\" hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"50.0\" minWidth\u003d\"50.0\" prefWidth\u003d\"50.0\" /\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cColumnConstraints halignment\u003d\"CENTER\" hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"50.0\" minWidth\u003d\"50.0\" prefWidth\u003d\"50.0\" /\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cColumnConstraints halignment\u003d\"CENTER\" hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"50.0\" minWidth\u003d\"50.0\" prefWidth\u003d\"50.0\" /\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cColumnConstraints halignment\u003d\"CENTER\" hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"50.0\" minWidth\u003d\"50.0\" prefWidth\u003d\"50.0\" /\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cColumnConstraints halignment\u003d\"CENTER\" hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"50.0\" minWidth\u003d\"50.0\" prefWidth\u003d\"50.0\" /\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cColumnConstraints halignment\u003d\"CENTER\" hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"50.0\" minWidth\u003d\"50.0\" prefWidth\u003d\"50.0\" /\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/columnConstraints\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003crowConstraints\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cRowConstraints maxHeight\u003d\"50.0\" minHeight\u003d\"50.0\" prefHeight\u003d\"50.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/rowConstraints\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003cchildren\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cLabel fx:id\u003d\"monday\" contentDisplay\u003d\"CENTER\" text\u003d\"M\" textAlignment\u003d\"CENTER\" textFill\u003d\"WHITE\" /\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cLabel fx:id\u003d\"tuesday\" contentDisplay\u003d\"CENTER\" text\u003d\"T\" textAlignment\u003d\"CENTER\" textFill\u003d\"WHITE\" GridPane.columnIndex\u003d\"1\" /\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cLabel fx:id\u003d\"wednesday\" contentDisplay\u003d\"CENTER\" text\u003d\"W\" textAlignment\u003d\"CENTER\" textFill\u003d\"WHITE\" GridPane.columnIndex\u003d\"2\" /\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cLabel fx:id\u003d\"thursday\" contentDisplay\u003d\"CENTER\" text\u003d\"T\" textAlignment\u003d\"CENTER\" textFill\u003d\"WHITE\" GridPane.columnIndex\u003d\"3\" /\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cLabel fx:id\u003d\"friday\" contentDisplay\u003d\"CENTER\" text\u003d\"F\" textAlignment\u003d\"CENTER\" textFill\u003d\"WHITE\" GridPane.columnIndex\u003d\"4\" /\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cLabel fx:id\u003d\"saturday\" contentDisplay\u003d\"CENTER\" text\u003d\"S\" textAlignment\u003d\"CENTER\" textFill\u003d\"WHITE\" GridPane.columnIndex\u003d\"5\" /\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cLabel fx:id\u003d\"sunday\" contentDisplay\u003d\"CENTER\" text\u003d\"S\" textAlignment\u003d\"CENTER\" textFill\u003d\"WHITE\" GridPane.columnIndex\u003d\"6\" /\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/children\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003c/GridPane\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003c/children\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003cStackPane\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003cchildren\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cGridPane fx:id\u003d\"calendarGrid\" alignment\u003d\"CENTER\"\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003ccolumnConstraints\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cColumnConstraints halignment\u003d\"CENTER\" hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"50.0\" minWidth\u003d\"50.0\" prefWidth\u003d\"50.0\" /\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cColumnConstraints halignment\u003d\"CENTER\" hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"50.0\" minWidth\u003d\"50.0\" prefWidth\u003d\"50.0\" /\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cColumnConstraints halignment\u003d\"CENTER\" hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"50.0\" minWidth\u003d\"50.0\" prefWidth\u003d\"50.0\" /\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cColumnConstraints halignment\u003d\"CENTER\" hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"50.0\" minWidth\u003d\"50.0\" prefWidth\u003d\"50.0\" /\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cColumnConstraints halignment\u003d\"CENTER\" hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"50.0\" minWidth\u003d\"50.0\" prefWidth\u003d\"50.0\" /\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cColumnConstraints halignment\u003d\"CENTER\" hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"50.0\" minWidth\u003d\"50.0\" prefWidth\u003d\"50.0\" /\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cColumnConstraints halignment\u003d\"CENTER\" hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"50.0\" minWidth\u003d\"50.0\" prefWidth\u003d\"50.0\" /\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/columnConstraints\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003crowConstraints\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cRowConstraints maxHeight\u003d\"50.0\" minHeight\u003d\"50.0\" prefHeight\u003d\"50.0\" valignment\u003d\"CENTER\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cRowConstraints maxHeight\u003d\"50.0\" minHeight\u003d\"50.0\" prefHeight\u003d\"50.0\" valignment\u003d\"CENTER\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cRowConstraints maxHeight\u003d\"50.0\" minHeight\u003d\"50.0\" prefHeight\u003d\"50.0\" valignment\u003d\"CENTER\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cRowConstraints maxHeight\u003d\"50.0\" minHeight\u003d\"50.0\" prefHeight\u003d\"50.0\" valignment\u003d\"CENTER\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cRowConstraints maxHeight\u003d\"50.0\" minHeight\u003d\"50.0\" prefHeight\u003d\"50.0\" valignment\u003d\"CENTER\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cRowConstraints maxHeight\u003d\"50.0\" minHeight\u003d\"50.0\" prefHeight\u003d\"50.0\" valignment\u003d\"CENTER\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/rowConstraints\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003cStackPane.margin\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cInsets top\u003d\"20.0\" /\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/StackPane.margin\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003c/GridPane\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003c/children\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c/VBox\u003e"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 77
    }
  },
  {
    "path": "src/main/resources/view/CardHolder.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.StackPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003cStackPane fx:id\u003d\"eventCardHolderBase\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003cVBox\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cStackPane fx:id\u003d\"line0\" alignment\u003d\"CENTER_LEFT\" maxHeight\u003d\"1.5\" minHeight\u003d\"1.5\" prefHeight\u003d\"1.5\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cInsets left\u003d\"10.0\" right\u003d\"20.0\" top\u003d\"45.0\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/VBox.margin\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cStackPane\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003cchildren\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cVBox fx:id\u003d\"timeBox\" spacing\u003d\"2.0\"\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                     \u003cStackPane.margin\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        \u003cInsets /\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                     \u003c/StackPane.margin\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003c/VBox\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/children\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cInsets left\u003d\"10.0\" right\u003d\"20.0\" top\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/VBox.margin\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003c/children\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003c/VBox\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c/StackPane\u003e"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 31
    }
  },
  {
    "path": "src/main/resources/view/CommandBox.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.StackPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003cStackPane maxHeight\u003d\"50.0\" minHeight\u003d\"50.0\" prefHeight\u003d\"50.0\" style\u003d\"-fx-background-color: #262626; -fx-background-radius: 8;\" styleClass\u003d\"stack-pane\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  \u003cTextField fx:id\u003d\"commandTextField\" maxHeight\u003d\"50.0\" minHeight\u003d\"50.0\" onAction\u003d\"#handleCommandEntered\" prefHeight\u003d\"50.0\" promptText\u003d\"Enter command here...\" /\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/StackPane\u003e"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 2,
      "-": 6
    }
  },
  {
    "path": "src/main/resources/view/DarkTheme.css",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/** Constants **/"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "@font-face {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    font-family: Roboto Regular;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    src: url(\"Roboto-Regular.ttf\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "@font-face {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    font-family: Roboto Thin;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    src: url(\"Roboto-Thin.ttf\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "@font-face {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    font-family: Roboto Medium;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    src: url(\"Roboto-Medium.ttf\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "@font-face {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    font-family: Roboto Medium;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    src: url(\"Roboto-MediumItalic.ttf\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ".root {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /** Colors **/"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -backgroundColor: #121212;  /** Default Dark **/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -surfaceColor: #1E1E1E;     /** Lighter Dark **/"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -topColor: #383838;         /** Lightest Dark **/"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -primaryColor: #262833;     /** Dark tinted blue **/"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -logBoxColor: #4ACFAC;      /** Light Green **/"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -errorColor: #CF6679;       /** Red Error **/"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -lineColor: #FF7597;        /** Some Redish Pink **/"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -calendarDayColor: #607080; /** Light Purple Blue Box **/"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -welcomeColor: #7FC9FD;     /** Light Sky Blue **/"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -eventCardColor1: #FFAF5F;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -eventCardColor2: #4ACFAC;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -eventCardColor3: #7E8CE0;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -eventCardColor4: #FFA48E;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -white: #FFFFFF;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -black: #000000;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ".background {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-background-color: #121212;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    background-color: #121212;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ".label {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-family: \"Roboto Regular\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-text-fill: -white;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-opacity: 0.9;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ".text-field {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-size: 12pt;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-family: \"Roboto Regular\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ".tab-pane {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-padding: 0 0 0 1;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ".tab-pane .tab-header-area {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-padding: 0 0 0 0;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-min-height: 0;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-max-height: 0;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ".table-view {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-base: #1d1d1d;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-control-inner-background: #1d1d1d;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: #1d1d1d;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-table-cell-border-color: transparent;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-table-header-border-color: transparent;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-padding: 5;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ".table-view .column-header-background {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: transparent;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ".table-view .column-header, .table-view .filler {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-size: 35;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-width: 0 0 1 0;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: transparent;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-color:"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        transparent"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        transparent"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        derive(-fx-base, 80%)"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        transparent;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-insets: 0 10 1 0;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ".table-view .column-header .label {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-size: 20pt;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-family: -regularFont;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-text-fill: white;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-alignment: center-left;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-opacity: 1;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ".table-view:focused .table-row-cell:filled:focused:selected {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: -fx-focus-color;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ".split-pane:horizontal .split-pane-divider {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-background-color: #1F1F1F;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-padding: 0 0.15em 0 0.15em;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ".split-pane {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-radius: 1;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-width: 1;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: derive(#1d1d1d, 20%);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ".list-view {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-insets: 0;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-background-color:  transparent;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": ".list-cell {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-label-padding: 0 0 0 0;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-graphic-text-gap : 0;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": ".list-cell:filled:even {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: #3c3e3f;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": ".list-cell:filled:odd {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: #515658;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": ".list-cell:filled:selected {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: #424d5f;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": ".list-cell .label {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-text-fill: white;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": ".cell_big_label {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-family: -thinFont;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-size: 16px;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-text-fill: #010504;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": ".cell_small_label {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-family: \"Roboto Regular\";"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-size: 13px;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-text-fill: #010504;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "/*"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": " * Metro style Push Button"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": " * Author: Pedro Duque Vieira"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": " * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": ".button {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-padding: 5 22 5 22;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-color: #e2e2e2;"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-width: 2;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-radius: 0;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: #1d1d1d;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-family: \"Roboto Regular\", Helvetica, Arial, sans-serif;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-size: 11pt;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-text-fill: #d8d8d8;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-insets: 0 0 0 0, 0, 1, 2;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": ".button:hover {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: #3a3a3a;"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": ".button:pressed, .button:default:hover:pressed {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "  -fx-background-color: white;"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "  -fx-text-fill: #1d1d1d;"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": ".button:focused {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-color: white, white;"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-width: 1, 1;"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-style: solid, segments(1, 1);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-radius: 0, 0;"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-insets: 1 1 1 1, 0;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": ".button:disabled, .button:default:disabled {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-opacity: 0.4;"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: #1d1d1d;"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-text-fill: white;"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": ".button:default {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: -fx-focus-color;"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-text-fill: #ffffff;"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": ".button:default:hover {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: derive(-fx-focus-color, 30%);"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": ".dialog-pane {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: #1d1d1d;"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": ".dialog-pane \u003e *.button-bar \u003e *.container {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: #1d1d1d;"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": ".dialog-pane \u003e *.label.content {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-size: 14px;"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-weight: bold;"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-text-fill: white;"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": ".dialog-pane:header *.header-panel {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: derive(#1d1d1d, 25%);"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": ".dialog-pane:header *.header-panel *.label {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-size: 18px;"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-style: italic;"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-fill: white;"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-text-fill: white;"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": ".scroll-bar {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: derive(#1d1d1d, 20%);"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": ".scroll-bar .thumb {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: derive(#1d1d1d, 50%);"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-insets: 3;"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": ".scroll-bar .increment-button, .scroll-bar .decrement-button {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: transparent;"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-padding: 0 0 0 0;"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": ".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-shape: \" \";"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": ".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-padding: 1 8 1 8;"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": ".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-padding: 8 1 8 1;"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "#cardPane {"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: transparent;"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-width: 0;"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "#commandTypeLabel {"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-size: 11px;"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-text-fill: #F70D1A;"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "#commandTextField {"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-background-color: transparent #1F1F1F;"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-insets: 0;"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-background-radius: 12;"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-insets: 0;"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-width: 1;"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-family: -regularFont;"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-size: 13pt;"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-text-fill: white;"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/** For Main Window **/"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#viewTitlePane {"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-background-color: -surfaceColor;"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#viewTitle {"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-family: \"Roboto Medium\";"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-size: 24px;"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-style: italic;"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#popUp {"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-family: \"Roboto Medium\";"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-size: 12pt;"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-text-fill: -primaryColor;"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-background-color: -logBoxColor;"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-background-radius: 8;"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#gridManager {"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-background-color: -backgroundColor;"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/** For LogPanel **/"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#logPanelBase, #scrollLog, #boxLog {"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-background-color: -surfaceColor;"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-base: -surfaceColor;"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#logPanelBase, #scrollLog {"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-background-radius: 8;"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#scrollLog .corner {"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-background-color: transparent;"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#box {"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-family: \"Roboto Regular\";"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-size: 11pt;"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-text-fill: -primaryColor;"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-background-color: -logBoxColor;"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-background-radius: 8;"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-background-insets: 0-10;"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/** For CalendarPanel **/"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#calendarDay {"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-family: \"Roboto Medium\";"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-size: 11pt;"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-text-fill: -white;"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#calendarDayCircle {"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-opacity: 0;"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-fill: -calendarDayColor;"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#calendarBase {"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-background-color: -surfaceColor;"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#monday, #tuesday, #wednesday, #thursday, #friday, #saturday, #sunday {"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-family: \"Roboto Medium\";"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-size: 11pt;"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#monthYearTitle {"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-family: \"Roboto Medium\";"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-size: 14pt"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/** For Timeline **/"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#timelineBase, #timelineScrollPane, #timelineBox {"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-background-color: -surfaceColor;"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#timelineBase, #timelineScrollPane {"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-background-radius: 8;"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#detailsBase {"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-background-color: -backgroundColor;"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#timelineGrid {"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-background-color: -surfaceColor;"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#timelineTitle {"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-family: \"Roboto Medium\";"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-size: 16pt;"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-underline: true;"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#line0, #line1, #line2, #line3, #line4, #line5,"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#line6, #line7, #line8, #line9, #line10, #line11,"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#line12, #line13, #line14, #line15, #line16, #line17,"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#line18, #line19, #line20, #line21, #line22, #line23 {"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-background-color: -lineColor;"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-opacity: 0.6;"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/** For Event Card **/"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#eventCardBase {"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-background-color: -eventCardColor1;"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-background-radius: 8;"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-effect: dropshadow(three-pass-box, -backgroundColor, 8, 0.5, 0, 0);"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#eventCardName {"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-family: \"Roboto Medium\";"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-text-fill: -primaryColor;"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-size: 14pt;"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#eventCardDate {"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-family: \"Roboto Regular\";"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-text-fill: -primaryColor;"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-size: 10pt;"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Kyzure": 157,
      "-": 239
    }
  },
  {
    "path": "src/main/resources/view/Details.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003cVBox fx:id\u003d\"detailsBase\" prefHeight\u003d\"1040.0\" prefWidth\u003d\"1300.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" /\u003e"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 6
    }
  },
  {
    "path": "src/main/resources/view/EventCard.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003c?import javafx.scene.layout.StackPane?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003cStackPane fx:id\u003d\"eventCardBase\" alignment\u003d\"TOP_LEFT\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      \u003cVBox style\u003d\"-fx-background-color: transparent;\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "         \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            \u003cStackPane alignment\u003d\"TOP_LEFT\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "               \u003cchildren\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                  \u003cLabel fx:id\u003d\"eventCardName\" text\u003d\"\\$EventName\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                     \u003cStackPane.margin\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                        \u003cInsets left\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                     \u003c/StackPane.margin\u003e\u003c/Label\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "               \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "               \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                  \u003cInsets bottom\u003d\"2.0\" top\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "               \u003c/VBox.margin\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            \u003cStackPane alignment\u003d\"TOP_LEFT\"\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "               \u003cchildren\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                  \u003cLabel fx:id\u003d\"eventCardDate\" text\u003d\"\\$EventDate\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                     \u003cStackPane.margin\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                        \u003cInsets left\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                     \u003c/StackPane.margin\u003e\u003c/Label\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "               \u003c/children\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "               \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                  \u003cInsets bottom\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "               \u003c/VBox.margin\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "         \u003c/children\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      \u003c/VBox\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   \u003copaqueInsets\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      \u003cInsets /\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   \u003c/opaqueInsets\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003c/StackPane\u003e"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 40
    }
  },
  {
    "path": "src/main/resources/view/EventListCard.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.ColumnConstraints?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.FlowPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.GridPane?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.RowConstraints?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        \u003ccolumnConstraints\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        \u003c/columnConstraints\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        \u003cVBox alignment\u003d\"CENTER_LEFT\" GridPane.columnIndex\u003d\"0\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cpadding\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003c/padding\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003c/HBox\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cFlowPane fx:id\u003d\"tags\" /\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cLabel fx:id\u003d\"dateTime\" styleClass\u003d\"cell_small_label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        \u003c/VBox\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        \u003crowConstraints\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cRowConstraints /\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        \u003c/rowConstraints\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    \u003c/GridPane\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c/HBox\u003e"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 31
    }
  },
  {
    "path": "src/main/resources/view/EventListPanel.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.ListView?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003cVBox prefHeight\u003d\"900.0\" style\u003d\"-fx-background-color: transparent;\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    \u003cListView fx:id\u003d\"eventListView\" style\u003d\"-fx-background-color: transparent;\" VBox.vgrow\u003d\"ALWAYS\" /\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/VBox\u003e"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 2,
      "-": 6
    }
  },
  {
    "path": "src/main/resources/view/Extensions.css",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ".error {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-text-fill: #d06651 !important; /* The error class should always override the default text-fill style */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ".list-cell:empty {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    /* Empty cells will not have alternating colours */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-background: #2E2E2E;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ".tag-selector {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-width: 1;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-color: white;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-radius: 3;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-radius: 3;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ".tooltip-text {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-text-fill: white;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 1,
      "-": 19
    }
  },
  {
    "path": "src/main/resources/view/ListPanel.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003c?import javafx.scene.layout.ColumnConstraints?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003c?import javafx.scene.layout.GridPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003c?import javafx.scene.layout.RowConstraints?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003cVBox fx:id\u003d\"list\" style\u003d\"-fx-background-color: transparent;\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      \u003cGridPane\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        \u003ccolumnConstraints\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "          \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "          \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        \u003c/columnConstraints\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        \u003crowConstraints\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "          \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "          \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "          \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        \u003c/rowConstraints\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      \u003c/GridPane\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003c/VBox\u003e"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 5,
      "WeomuCat": 18
    }
  },
  {
    "path": "src/main/resources/view/LogBox.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003cjavafx.scene.layout.HBox fx:id\u003d\"logBoxBase\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      \u003cLabel fx:id\u003d\"box\" alignment\u003d\"TOP_LEFT\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" text\u003d\"Label\" textFill\u003d\"WHITE\" wrapText\u003d\"true\" HBox.hgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "         \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            \u003cInsets left\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "         \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "         \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "         \u003c/padding\u003e\u003c/Label\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   \u003cpadding\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      \u003cInsets bottom\u003d\"10.0\" top\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   \u003c/padding\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003c/javafx.scene.layout.HBox\u003e"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 20
    }
  },
  {
    "path": "src/main/resources/view/LogPanel.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003cVBox fx:id\u003d\"logPanelBase\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003cScrollPane fx:id\u003d\"scrollLog\" fitToWidth\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003ccontent\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cVBox fx:id\u003d\"boxLog\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003cpadding\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cInsets left\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/padding\u003e\u003c/VBox\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003c/content\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c/VBox\u003e"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 18
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import java.net.URL?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.Scene?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.image.Image?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.ColumnConstraints?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.GridPane?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.RowConstraints?\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.StackPane?\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.stage.Stage?\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003cfx:root minHeight\u003d\"700.0\" minWidth\u003d\"1000.0\" title\u003d\"Address App\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cicons\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/icons\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cscene\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cScene\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cstylesheets\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003cURL value\u003d\"@DarkTheme.css\" /\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003cURL value\u003d\"@Extensions.css\" /\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/stylesheets\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cVBox fx:id\u003d\"vBoxPane\"\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                \u003cGridPane fx:id\u003d\"gridManager\"\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    \u003ccolumnConstraints\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    \u003c/columnConstraints\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    \u003crowConstraints\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        \u003cRowConstraints vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        \u003cRowConstraints vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        \u003cRowConstraints vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        \u003cRowConstraints vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        \u003cRowConstraints vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    \u003c/rowConstraints\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    \u003cchildren\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        \u003cStackPane fx:id\u003d\"viewTitlePane\" layoutX\u003d\"10.0\" layoutY\u003d\"43.0\" GridPane.rowIndex\u003d\"1\"\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                            \u003cchildren\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                                \u003cLabel fx:id\u003d\"viewTitle\" text\u003d\"View\" textAlignment\u003d\"CENTER\" textFill\u003d\"WHITE\" StackPane.alignment\u003d\"CENTER\"\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                                    \u003cfont\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                                        \u003cFont name\u003d\"Segoe UI Light\" size\u003d\"24.0\" /\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                                    \u003c/font\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                                    \u003cStackPane.margin\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                                        \u003cInsets /\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                                    \u003c/StackPane.margin\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                           \u003cpadding\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                              \u003cInsets bottom\u003d\"5.0\" top\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                           \u003c/padding\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                                \u003c/Label\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                            \u003c/children\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                     \u003cGridPane.margin\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        \u003cInsets bottom\u003d\"8.0\" /\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                     \u003c/GridPane.margin\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        \u003cStackPane fx:id\u003d\"viewPlaceholder\" alignment\u003d\"BOTTOM_LEFT\" GridPane.halignment\u003d\"LEFT\" GridPane.rowIndex\u003d\"2\" GridPane.valignment\u003d\"CENTER\"\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                            \u003cpadding\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                                \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                            \u003c/padding\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" alignment\u003d\"CENTER_LEFT\" GridPane.rowIndex\u003d\"3\"\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                            \u003cpadding\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                                \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                            \u003c/padding\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cStackPane fx:id\u003d\"popUpPanel\" minHeight\u003d\"-Infinity\" prefHeight\u003d\"25.0\" GridPane.vgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                     \u003copaqueInsets\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        \u003cInsets /\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                     \u003c/opaqueInsets\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                     \u003cGridPane.margin\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        \u003cInsets top\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                     \u003c/GridPane.margin\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    \u003c/children\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                \u003c/GridPane\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/VBox\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/Scene\u003e"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/scene\u003e"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 58,
      "-": 22
    }
  },
  {
    "path": "src/main/resources/view/PopUpBox.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003cLabel fx:id\u003d\"popUp\" text\u003d\"Label\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "   \u003cpadding\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "   \u003c/padding\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c/Label\u003e"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 10
    }
  },
  {
    "path": "src/main/resources/view/TimelineDayView.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.ColumnConstraints?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.GridPane?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.StackPane?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003cVBox fx:id\u003d\"timelineBase\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003cStackPane\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003cchildren\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cLabel fx:id\u003d\"timelineTitle\" alignment\u003d\"CENTER\" contentDisplay\u003d\"CENTER\" text\u003d\"Timeline\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003c/children\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cInsets /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003c/VBox.margin\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003cScrollPane fx:id\u003d\"timelineScrollPane\" fitToWidth\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003ccontent\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cGridPane fx:id\u003d\"timelineGrid\" alignment\u003d\"CENTER_LEFT\"\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "              \u003ccolumnConstraints\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                \u003cColumnConstraints hgrow\u003d\"NEVER\" maxWidth\u003d\"80.0\" minWidth\u003d\"80.0\" prefWidth\u003d\"80.0\" /\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                \u003cColumnConstraints hgrow\u003d\"ALWAYS\" /\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "              \u003c/columnConstraints\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003c/GridPane\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003c/content\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cInsets /\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003c/VBox.margin\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c/VBox\u003e"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 35
    }
  },
  {
    "path": "src/main/resources/view/TimelineLabel.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.StackPane?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003cStackPane alignment\u003d\"CENTER_LEFT\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003cLabel fx:id\u003d\"timelineLabel\" text\u003d\"00:00\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003cpadding\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cInsets bottom\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003c/padding\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003c/Label\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "   \u003cpadding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"20.0\" top\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "   \u003c/padding\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c/StackPane\u003e"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 18
    }
  },
  {
    "path": "src/main/resources/view/TimelineMonthView.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.ColumnConstraints?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.GridPane?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.StackPane?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003cVBox fx:id\u003d\"timelineBase\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        \u003cStackPane\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cchildren\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                \u003cLabel fx:id\u003d\"timelineTitle\" alignment\u003d\"CENTER\" contentDisplay\u003d\"CENTER\" text\u003d\"Timeline\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003c/children\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                \u003cInsets /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003c/VBox.margin\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"timelineScrollPane\" fitToWidth\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                \u003cGridPane fx:id\u003d\"timelineGrid\" alignment\u003d\"CENTER_LEFT\"\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    \u003ccolumnConstraints\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        \u003cColumnConstraints hgrow\u003d\"NEVER\" maxWidth\u003d\"60.0\" minWidth\u003d\"60.0\" prefWidth\u003d\"60.0\" /\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        \u003cColumnConstraints hgrow\u003d\"ALWAYS\" /\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    \u003c/columnConstraints\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                \u003c/GridPane\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                \u003cInsets /\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003c/VBox.margin\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c/VBox\u003e"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 35
    }
  },
  {
    "path": "src/main/resources/view/TimelineWeekView.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.ColumnConstraints?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.GridPane?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.StackPane?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003cVBox fx:id\u003d\"timelineBase\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        \u003cStackPane\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cchildren\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                \u003cLabel fx:id\u003d\"timelineTitle\" alignment\u003d\"CENTER\" contentDisplay\u003d\"CENTER\" text\u003d\"Timeline\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003c/children\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                \u003cInsets /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003c/VBox.margin\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"timelineScrollPane\" fitToWidth\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                \u003cGridPane fx:id\u003d\"timelineGrid\" alignment\u003d\"CENTER_LEFT\"\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    \u003ccolumnConstraints\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        \u003cColumnConstraints hgrow\u003d\"NEVER\" maxWidth\u003d\"100.0\" minWidth\u003d\"100.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        \u003cColumnConstraints hgrow\u003d\"ALWAYS\" /\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    \u003c/columnConstraints\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                \u003c/GridPane\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                \u003cInsets /\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003c/VBox.margin\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c/VBox\u003e"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 35
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/AddEventCommandTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static seedu.address.logic.commands.AddEventCommandBuilder.OPTION_END_DATE_TIME;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static seedu.address.logic.commands.AddEventCommandBuilder.OPTION_REMIND_DATE_TIME;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static seedu.address.logic.commands.AddEventCommandBuilder.OPTION_TAGS;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "class AddEventCommandTest {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void build_fullCommand_success() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String description \u003d \"description\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String start \u003d \"11/11/1111 11:00\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String end \u003d \"11/11/1111 12:00\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String remind \u003d \"11/11/1111 08:00\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String[] tags \u003d new String[]{\"a\", \"b\", \"c\"};"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertDoesNotThrow(() -\u003e {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            AddEventCommand.newBuilder(null)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .acceptSentence(description)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .acceptSentence(start)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .acceptSentence(OPTION_END_DATE_TIME)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .acceptSentence(end)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .acceptSentence(OPTION_REMIND_DATE_TIME)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .acceptSentence(remind)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .acceptSentence(OPTION_TAGS)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .acceptSentence(tags[0])"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .acceptSentence(tags[1])"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .acceptSentence(tags[2])"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        });"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void execute_requiredCommand_success() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String description \u003d \"description\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String start \u003d \"11/11/1111 11:00\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertDoesNotThrow(() -\u003e {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            // TODO: Create stub"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            ModelManager model \u003d new ModelManager();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            assertEquals(model.getEventList().size(), 0);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            Command command \u003d AddEventCommand.newBuilder(model)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .acceptSentence(description)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .acceptSentence(start)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            // TODO: Equality test"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            command.execute();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            assertEquals(model.getEventList().size(), 1);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        });"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 58
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/DeleteEventCommandTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static seedu.address.logic.commands.DeleteEventCommandBuilder.OPTION_TAGS;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.events.DateTime;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.events.EventSource;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "class DeleteEventCommandTest {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void build_fullCommand_success() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String[] indexes \u003d new String[]{\"1\", \"2\", \"3\"};"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String[] tags \u003d new String[]{\"a\", \"b\", \"c\"};"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertDoesNotThrow(() -\u003e {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            DeleteEventCommand.newBuilder(null)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .acceptSentence(indexes[0])"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .acceptSentence(indexes[1])"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .acceptSentence(indexes[2])"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .acceptSentence(OPTION_TAGS)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .acceptSentence(tags[0])"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .acceptSentence(tags[1])"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .acceptSentence(tags[2])"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        });"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void execute_requiredCommand_success() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        // TODO: This should throw an exception"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertDoesNotThrow(() -\u003e {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            ModelManager model \u003d new ModelManager();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            assertEquals(model.getEventList().size(), 0);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            Command command \u003d DeleteEventCommand.newBuilder(model)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            command.execute();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            assertEquals(model.getEventList().size(), 0);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        });"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void execute_deleteOne_success() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String index \u003d \"2\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertDoesNotThrow(() -\u003e {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            ModelManager model \u003d new ModelManager();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            model.addEvents("
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                EventSource.newBuilder(\"a\", DateTime.now()).build(),"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                EventSource.newBuilder(\"b\", DateTime.now()).build(),"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                EventSource.newBuilder(\"c\", DateTime.now()).build());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            assertEquals(model.getEventList().size(), 3);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            Command command \u003d DeleteEventCommand.newBuilder(model)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .acceptSentence(index)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            command.execute();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            assertEquals(model.getEventList().size(), 2);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        });"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void execute_deleteOneInvalidIndex_failed() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String[] indexes \u003d new String[]{\"-1\", \"0\", \"1\"};"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        for (String index : indexes) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            assertThrows(CommandException.class, () -\u003e {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                ModelManager model \u003d new ModelManager();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                assertEquals(model.getEventList().size(), 0);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                Command command \u003d DeleteEventCommand.newBuilder(model)"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    .acceptSentence(index)"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    .build();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                command.execute();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            });"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void execute_deleteMultiple_success() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String[] indexes \u003d new String[]{\"2\", \"3\", \"4\"};"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertDoesNotThrow(() -\u003e {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            ModelManager model \u003d new ModelManager();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            model.addEvents("
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                EventSource.newBuilder(\"a\", DateTime.now()).build(),"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                EventSource.newBuilder(\"b\", DateTime.now()).build(),"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                EventSource.newBuilder(\"c\", DateTime.now()).build(),"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                EventSource.newBuilder(\"d\", DateTime.now()).build(),"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                EventSource.newBuilder(\"e\", DateTime.now()).build()"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            );"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            assertEquals(model.getEventList().size(), 5);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            Command command \u003d DeleteEventCommand.newBuilder(model)"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .acceptSentence(indexes[0])"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .acceptSentence(indexes[1])"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .acceptSentence(indexes[2])"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            command.execute();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            assertEquals(model.getEventList().size(), 2);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        });"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void execute_deleteMultipleInvalidIndexes_failed() {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String[] indexes \u003d new String[]{\"1\", \"2\", \"3\"};"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertThrows(CommandException.class, () -\u003e {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            ModelManager model \u003d new ModelManager();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            model.addEvents("
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                EventSource.newBuilder(\"a\", DateTime.now()).build(),"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                EventSource.newBuilder(\"b\", DateTime.now()).build()"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            );"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            assertEquals(model.getEventList().size(), 2);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            Command command \u003d DeleteEventCommand.newBuilder(model)"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .acceptSentence(indexes[0])"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .acceptSentence(indexes[1])"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .acceptSentence(indexes[2])"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            command.execute();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        });"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 131
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/EditEventCommandTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static seedu.address.logic.commands.EditEventCommandBuilder.OPTION_DESCRIPTION;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static seedu.address.logic.commands.EditEventCommandBuilder.OPTION_END_DATE_TIME;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static seedu.address.logic.commands.EditEventCommandBuilder.OPTION_REMIND_DATE_TIME;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static seedu.address.logic.commands.EditEventCommandBuilder.OPTION_START_DATE_TIME;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static seedu.address.logic.commands.EditEventCommandBuilder.OPTION_TAGS;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.events.DateTime;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.events.EventSource;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "class EditEventCommandTest {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void build_fullCommand_success() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String[] indexes \u003d new String[]{\"1\", \"2\", \"3\"};"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String description \u003d \"description\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String start \u003d \"11/11/1111 11:00\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String end \u003d \"11/11/1111 12:00\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String remind \u003d \"11/11/1111 08:00\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String[] tags \u003d new String[]{\"a\", \"b\", \"c\"};"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertDoesNotThrow(() -\u003e {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            EditEventCommand.newBuilder(null)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .acceptSentence(indexes[0])"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .acceptSentence(indexes[1])"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .acceptSentence(indexes[2])"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .acceptSentence(OPTION_DESCRIPTION)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .acceptSentence(description)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .acceptSentence(OPTION_START_DATE_TIME)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .acceptSentence(start)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .acceptSentence(OPTION_END_DATE_TIME)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .acceptSentence(end)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .acceptSentence(OPTION_REMIND_DATE_TIME)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .acceptSentence(remind)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .acceptSentence(OPTION_TAGS)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .acceptSentence(tags[0])"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .acceptSentence(tags[1])"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .acceptSentence(tags[2])"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        });"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void execute_requiredCommand_success() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String[] indexes \u003d new String[]{\"1\", \"2\", \"3\"};"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertDoesNotThrow(() -\u003e {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            ModelManager model \u003d new ModelManager();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            model.addEvents("
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                EventSource.newBuilder(\"a\", DateTime.now()).build(),"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                EventSource.newBuilder(\"b\", DateTime.now()).build(),"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                EventSource.newBuilder(\"c\", DateTime.now()).build()"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            );"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            Command command \u003d EditEventCommand.newBuilder(model)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .acceptSentence(indexes[0])"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .acceptSentence(indexes[1])"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .acceptSentence(indexes[2])"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            assertEquals(model.getEventList().size(), 3);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            // TODO: Equality test"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            command.execute();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            assertEquals(model.getEventList().size(), 3);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        });"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void execute_editOneInvalidIndex_failed() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String[] indexes \u003d new String[]{\"-1\", \"0\", \"1\"};"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        for (String index : indexes) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            assertThrows(CommandException.class, () -\u003e {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                ModelManager model \u003d new ModelManager();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                assertEquals(model.getEventList().size(), 0);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                Command command \u003d EditEventCommand.newBuilder(model)"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    .acceptSentence(index)"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    .build();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                command.execute();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            });"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void execute_editMultipleInvalidIndex_failed() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String[] indexes \u003d new String[]{\"1\", \"2\", \"3\"};"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertThrows(CommandException.class, () -\u003e {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            ModelManager model \u003d new ModelManager();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            model.addEvents("
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                EventSource.newBuilder(\"a\", DateTime.now()).build(),"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                EventSource.newBuilder(\"b\", DateTime.now()).build()"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            );"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            assertEquals(model.getEventList().size(), 2);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            Command command \u003d EditEventCommand.newBuilder(model)"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .acceptSentence(indexes[0])"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .acceptSentence(indexes[1])"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .acceptSentence(indexes[2])"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            command.execute();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        });"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 113
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/arguments/ArgumentTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.commands.arguments;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.exceptions.ArgumentException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "class ArgumentTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void build_acceptNull_failure() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e new ArgumentMock().accept(null));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void build_optionalArgument_success() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertDoesNotThrow(() -\u003e new ArgumentMock().build(false));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void build_acceptOptionalArgument_success() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String[] arguments \u003d { \"\", \" \", \"a\" };"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        for (String arg : arguments) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            assertDoesNotThrow(() -\u003e {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                new ArgumentMock()"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    .accept(arg)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    .build(false);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            });"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void build_requiredArgument_failure() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertThrows(ArgumentException.class, () -\u003e new ArgumentMock().build(true));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void build_acceptRequiredArgument_success() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String[] arguments \u003d { \"\", \" \", \"a\" };"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        for (String test : arguments) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            assertDoesNotThrow(() -\u003e {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                new ArgumentMock()"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    .accept(test)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    .build(true);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            });"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static class ArgumentMock extends Argument\u003cObject\u003e {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        ArgumentMock() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            super(new ArgumentBuilderStub());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        Object parse(String userInput) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            // should not be called when argument is optional."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            Objects.requireNonNull(userInput);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static class ArgumentBuilderStub extends ArgumentBuilder\u003cObject\u003e {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        ArgumentBuilderStub() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            super(\"\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        Argument\u003cObject\u003e argumentBuild() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            return new ArgumentMock();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 78
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/arguments/VariableArgumentsTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.commands.arguments;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "class VariableArgumentsTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void build_acceptNull_failure() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e new VariableArgumentsMock().accept(null));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void build_noArguments_success() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertDoesNotThrow(() -\u003e new VariableArgumentsMock().build());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void build_multipleArguments_success() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String[] arguments \u003d { \"\", \" \", \"a\" };"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertDoesNotThrow(() -\u003e {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            new VariableArgumentsMock()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .accept(arguments[0])"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .accept(arguments[1])"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .accept(arguments[2])"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        });"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static class VariableArgumentsMock extends VariableArguments\u003cObject\u003e {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        VariableArgumentsMock() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            super(new VariableArgumentsBuilderStub());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        Object parse(String userInput) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static class VariableArgumentsBuilderStub extends VariableArgumentsBuilder\u003cObject\u003e {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        VariableArgumentsBuilderStub() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            super(\"\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        VariableArguments\u003cObject\u003e argumentBuild() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            return new VariableArgumentsMock();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 55
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/parser/CommandParserTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import org.junit.jupiter.api.BeforeAll;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.AddEventCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.DeleteEventCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.EditEventCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "class CommandParserTest {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final String COMMAND_ADD_EVENT \u003d \"add_event\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final String COMMAND_DELETE_EVENT \u003d \"delete_event\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final String COMMAND_EDIT_EVENT \u003d \"edit_event\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static CommandParser commandParser;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @BeforeAll"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    static void setUp() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        CommandKeywordParser keywordParser \u003d new CommandKeywordParser();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        keywordParser.addCommand(COMMAND_ADD_EVENT, () -\u003e AddEventCommand.newBuilder(null));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        keywordParser.addCommand(COMMAND_DELETE_EVENT, () -\u003e DeleteEventCommand.newBuilder(null));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        keywordParser.addCommand(COMMAND_EDIT_EVENT, () -\u003e EditEventCommand.newBuilder(null));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        commandParser \u003d new CommandParser(keywordParser);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void parse_invalidInputFormat_failure() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String[] tests \u003d { \"\", \" \" };"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        for (String test : tests) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            assertThrows(ParseException.class, () -\u003e commandParser.parse(test));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void parse_addEventCommand_success() throws ParseException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String test \u003d \"add_event \u0027Celebrate Rori Birthday\u0027 \u002718/08/2019 16:00\u0027\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertTrue(commandParser.parse(test) instanceof AddEventCommand);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void parse_deleteEventCommand_success() throws ParseException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String test \u003d \"delete_event 1 2 3\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertTrue(commandParser.parse(test) instanceof DeleteEventCommand);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void parse_editEventCommand_success() throws ParseException {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String test \u003d \"edit_event 1 2 3\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertTrue(commandParser.parse(test) instanceof EditEventCommand);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 56
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/parser/CommandParserTestUtil.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " * Contains helper methods for testing command parsers."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class CommandParserTestUtil {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "     * equals to {@code expectedCommand}."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static void assertParseSuccess(Parser\u003c? extends Command\u003e parser, String userInput, Command expectedCommand) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "            Command command \u003d parser.parse(userInput);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "            assertEquals(expectedCommand, command);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (ParseException pe) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new IllegalArgumentException(\"Invalid userInput.\", pe);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "     * equals to {@code expectedMessage}."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void assertParseFailure(Parser parser, String userInput, String expectedMessage) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "            parser.parse(userInput);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"The expected ParseException was not thrown.\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (ParseException pe) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "            assertEquals(expectedMessage, pe.getMessage());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 1,
      "-": 37
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/parser/DateTimeParserTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static seedu.address.model.events.DateTime.USER_DATE_TIME_PATTERN;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.time.ZoneId;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "class DateTimeParserTest {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final DateTimeParser PARSER \u003d"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        new DateTimeParser(DateTimeFormatter.ofPattern(USER_DATE_TIME_PATTERN)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        .withZone(ZoneId.systemDefault()));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void parse_invalidDateTime_failure() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String[] tests \u003d { \"\", \" \", \"a\", \"101010 1010\", \"9/9/9 9:00\", \"13/13/1313 13:13\" };"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        for (String test : tests) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            assertThrows(ParseException.class, () -\u003e PARSER.parse(test));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void parse_validDateTime_success() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String[] tests \u003d { \"12/12/1212 12:12\", \"01/01/0001 00:00\", \"31/12/9999 23:59\" };"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        for (String test : tests) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            assertDoesNotThrow(() -\u003e PARSER.parse(test));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 35
    }
  },
  {
    "path": "src/test/java/seedu/address/ui/UiParserTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.time.Instant;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.time.ZoneId;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class UiParserTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private LocalDate date \u003d LocalDate.parse(\"2019-11-18\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private Instant instant \u003d date.atStartOfDay(ZoneId.systemDefault()).toInstant();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void getDateToNumbersTest() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        UiParser uiParser \u003d new UiParser();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        Integer[] dayMonthYear \u003d uiParser.getDateToNumbers(instant);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertEquals(dayMonthYear[0], 18);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertEquals(dayMonthYear[1], 11);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertEquals(dayMonthYear[2], 2019);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void parseDateToStringTest() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        UiParser uiParser \u003d new UiParser();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String dateString \u003d uiParser.parseDateToString(instant);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertEquals(dateString, \"18/11/2019 00:00\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void getDayTest() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        UiParser uiParser \u003d new UiParser();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        Integer day \u003d uiParser.getDay(instant);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertEquals(day, 18);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void getHourTest() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        UiParser uiParser \u003d new UiParser();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        Integer hour \u003d uiParser.getHour(instant);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertEquals(hour, 0);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void getTimeTest() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        UiParser uiParser \u003d new UiParser();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String time \u003d uiParser.getTime(instant);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertEquals(time, \"00:00\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void getEnglishDateTest() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        UiParser uiParser \u003d new UiParser();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String dayMonthYear \u003d uiParser.getEnglishDate(20, 5, 1998);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String dayMonth \u003d uiParser.getEnglishDate(7, 2007);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertEquals(dayMonthYear, \"20 May 1998\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertEquals(dayMonth, \"July 2007\");;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 61
    }
  }
]
