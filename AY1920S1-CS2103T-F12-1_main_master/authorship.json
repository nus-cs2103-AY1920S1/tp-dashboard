[
  {
    "path": "README.adoc",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d Horo"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "ifdef::env-github,env-browser[:relfileprefix: docs/]"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "https://travis-ci.org/AY1920S1-CS2103T-F12-1/main[image:https://travis-ci.org/AY1920S1-CS2103T-F12-1/main.svg?branch\u003dmaster[Build Status]]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "https://ci.appveyor.com/project/marcusteh1238/main[image:https://ci.appveyor.com/api/projects/status/clgkon6uh8hw678u?svg\u003dtrue[Build status]]"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "https://coveralls.io/github/AY1920S1-CS2103T-F12-1/main?branch\u003dmaster[image:https://coveralls.io/repos/github/AY1920S1-CS2103T-F12-1/main/badge.svg?branch\u003dmaster[Coverage Status]]"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "https://gitter.im/se-edu/Lobby[image:https://badges.gitter.im/se-edu/Lobby.svg[Gitter chat]]"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "ifdef::env-github[]"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "image::docs/images/Ui.png[width\u003d\"600\"]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "endif::[]"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "ifndef::env-github[]"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "image::images/Ui.png[width\u003d\"600\"]"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "endif::[]"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "Ever forget to go for a group meeting or need reminders for your assignment date? Fret not anymore."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "Horo provides you the ability to store your Events and Tasks, while providing a reminder for whenever you set it."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "You can even tag it to sort by a certain order, as well as import or export your calendar to transfer between computers! +"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "{empty}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "* This is a desktop Reminder application. It has a GUI but most of the user interactions happen using a CLI (Command Line Interface)."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "* It is a Java application *written in an OOP fashion*, developed and intended for students that need reminders for their Events and Tasks."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Site Map"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "* \u003c\u003cUserGuide#, User Guide\u003e\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "* \u003c\u003cDeveloperGuide#, Developer Guide\u003e\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "* \u003c\u003cAboutUs#, About Us\u003e\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "* \u003c\u003cContactUs#, Contact Us\u003e\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Acknowledgements"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "* Some parts of this sample application were inspired by the excellent http://code.makery.ch/library/javafx-8-tutorial/[Java FX tutorial] by"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "_Marco Jakob_."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "* Libraries used: https://openjfx.io/[JavaFX], https://github.com/FasterXML/jackson[Jackson], https://github.com/junit-team/junit5[JUnit5], https://github.com/skyscreamer/JSONassert[JSONAssert]"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "* The application was based of *AddressBook-Level3* project created by SE-EDU initiative at https://se-education.org"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Licence : link:LICENSE[MIT]"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 9,
      "marcusteh1238": 3,
      "WeomuCat": 1,
      "-": 26
    }
  },
  {
    "path": "build.gradle",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "// Gradle Configuration File"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "// For more details take a look at the Java Quickstart chapter in the Gradle"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "// user guide available at http://gradle.org/docs/5.2.1/userguide/tutorial_java_projects.html"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import org.gradle.api.tasks.testing.logging.TestLogEvent"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027jacoco\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.kt3k.coveralls\u0027 version \u00272.4.0\u0027"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027org.asciidoctor.convert\u0027 version \u00271.5.6\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "// Specifies the entry point of the application"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "mainClassName \u003d \u0027seedu.address.Main\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "sourceCompatibility \u003d JavaVersion.VERSION_11"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "targetCompatibility \u003d JavaVersion.VERSION_11"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.1\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "jacocoTestReport {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    reports {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        xml.enabled false"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        csv.enabled false"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        html.destination file(\"${buildDir}/jacocoHtml\")"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    String jUnitVersion \u003d \u00275.4.0\u0027"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    String javaFxVersion \u003d \u002711.0.1\u0027"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    // https://mvnrepository.com/artifact/org.skyscreamer/jsonassert"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    testCompile group: \u0027org.skyscreamer\u0027, name: \u0027jsonassert\u0027, version: \u00271.2.3\u0027"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    archiveName \u003d \u0027Horo.jar\u0027"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    destinationDir \u003d file(\"${buildDir}/jar/\")"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "task coverage(type: JacocoReport) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    classDirectories.from files(sourceSets.main.output)"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    executionData.from files(jacocoTestReport.executionData)"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    afterEvaluate {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        classDirectories.from files(classDirectories.files.collect {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        })"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    reports {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        html.enabled \u003d true"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        xml.enabled \u003d true"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "coveralls {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    sourceDirs \u003d sourceSets.main.allSource.srcDirs.absolutePath"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    jacocoReportPath \u003d \"${buildDir}/reports/jacoco/coverage/coverage.xml\""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "tasks.coveralls {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    dependsOn coverage"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    onlyIf { System.env.\u0027CI\u0027 }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        events TestLogEvent.FAILED, TestLogEvent.SKIPPED"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        // Prints the currently running test\u0027s name in the CI\u0027s build log,"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        // so that we can check if tests are being silently skipped or"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "        // stalling the build."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        if (System.env.\u0027CI\u0027) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "            events \u003c\u003c TestLogEvent.STARTED"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "    jacoco {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "        destinationFile \u003d new File(\"${buildDir}/jacoco/test.exec\")"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "asciidoctor {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "    backends \u0027html5\u0027"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "    sourceDir \u0027docs\u0027"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "    outputDir \"${buildDir}/docs\""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "    options \u003d ["
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "        template_dirs: [file(\"${sourceDir}/templates\")],"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "    ]"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "    attributes \u003d ["
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "        linkcss: true,"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "        stylesheet: \u0027gh-pages.css\u0027,"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        \u0027source-highlighter\u0027: \u0027coderay\u0027,"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "        icons: \u0027font\u0027,"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "        experimental: true,"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "        sectlinks: true,"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "        idprefix: \u0027\u0027,  // for compatibility with GitHub preview"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "        idseparator: \u0027-\u0027,"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "        \u0027site-root\u0027: \"${sourceDir}\",  // must be the same as sourceDir, do not modify"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "        \u0027site-name\u0027: \u0027AddressBook-Level3\u0027,"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "        \u0027site-githuburl\u0027: \u0027https://github.com/se-edu/addressbook-level3\u0027,"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "        \u0027site-seedu\u0027: true,  // delete this line if your project is not a fork (not a SE-EDU project)"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "    ]"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "    options[\u0027template_dirs\u0027].each {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "        inputs.files fileTree(it)"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "// Copies stylesheets into the directory containing generated HTML files as"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "// Asciidoctor does not copy linked CSS files to the output directory when rendering."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "// This is needed for linked stylesheets and embedded stylesheets which import other files."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "task copyStylesheets(type: Copy) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "    from \"${asciidoctor.sourceDir}/stylesheets\""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "    into \"${asciidoctor.outputDir}/html5/stylesheets\""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "asciidoctor.dependsOn copyStylesheets"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "defaultTasks \u0027clean\u0027, \u0027test\u0027, \u0027coverage\u0027, \u0027asciidoctor\u0027"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 2,
      "WeomuCat": 2,
      "-": 153
    }
  },
  {
    "path": "docs/AboutUs.adoc",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d About Us"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ":site-section: AboutUs"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ":relfileprefix: team/"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ":imagesDir: images"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ":stylesDir: stylesheets"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Horo was developed by a team of 5-man. +"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "We are a team based in the http://www.comp.nus.edu.sg[School of Computing, National University of Singapore]."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Project Team"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003d\u003d\u003d Marcus Teh"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "image::marcusteh1238.png[width\u003d\"150\", align\u003d\"left\"]"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "{empty}[https://github.com/marcusteh1238[github]] [\u003c\u003cmarcusteh1238#, portfolio\u003e\u003e]"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Role: Developer +"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Responsibilities: Testing, Integration and Git Expert"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "\u0027\u0027\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003d\u003d\u003d Timothy Yu Zhiwen"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "image::kyzure.png[width\u003d\"150\", align\u003d\"left\"]"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "{empty}[https://github.com/Kyzure[github]] [\u003c\u003ckyzure#, portfolio\u003e\u003e]"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Role: Developer +"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Responsibilities: Documentation and UI"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "\u0027\u0027\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003d\u003d\u003d Denis"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "image::weomucat.png[width\u003d\"150\", align\u003d\"left\"]"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "{empty}[http://github.com/WeomuCat[github]] [\u003c\u003cweomucat#, portfolio\u003e\u003e]"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "Role: Developer +"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Responsibilities: Logic, Model and Intellij Expert"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "\u0027\u0027\u0027"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003d\u003d\u003d Bruce Ong"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "image::bruceskellator.png[width\u003d\"150\", align\u003d\"left\"]"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "{empty}[http://github.com/bruceskellator[github]] [\u003c\u003cbruceskellator#, portfolio\u003e\u003e]"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "Role: Developer +"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Responsibilities: Code quality, Undo and Redo"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "\u0027\u0027\u0027"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003d\u003d\u003d Ong Cheng Geng"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "image::chenggeng97.png[width\u003d\"150\", align\u003d\"left\"]"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "{empty}[http://github.com/ChengGeng97[github]] [\u003c\u003cchenggeng97#, portfolio\u003e\u003e]"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "Role: Developer +"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Responsibilities: Scheduling and tracking, Reminder and Notification"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "\u0027\u0027\u0027"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 23,
      "-": 33
    }
  },
  {
    "path": "docs/ContactUs.adoc",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d Contact Us"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ":site-section: ContactUs"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ":stylesDir: stylesheets"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "* *Bug reports, Suggestions* : Post in our https://github.com/AY1920S1-CS2103T-F12-1/main/issues[issue tracker] if you noticed bugs or have suggestions on how to improve."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "* *Contributing* : We welcome pull requests. Follow the process described https://github.com/oss-generic/process[here]"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "* *Email us* : You can also reach us at `e0310405 [at] u.nus.edu`"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 2,
      "-": 5
    }
  },
  {
    "path": "docs/DeveloperGuide.adoc",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003d Horo - Developer Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ":site-section: DeveloperGuide"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ":toc:"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ":toc-title:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ":toc-placement: preamble"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ":sectnums:"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ":imagesDir: images"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ":stylesDir: stylesheets"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ":xrefstyle: full"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "ifdef::env-github[]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ":tip-caption: :bulb:"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ":note-caption: :information_source:"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ":warning-caption: :warning:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "endif::[]"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ":repoURL: https://github.com/AY1920S1-CS2103T-F12-1/main"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "By: `Team AY1920S1-CS2103T-F12-1`      Since: `Sept 2019`      Licence: `MIT`"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d\u003d Introduction"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d\u003d\u003d About the Application"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "*Horo* is a command-line interface scheduling application. It helps the user maintain a to-do list and a calendar, and posts timely reminders on their desktop."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d\u003d\u003d Purpose"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "This guide specifies the architecture and software design decisions for Horo, and instructions for building upon the current codebase. This is done in hopes of ensuring extensibility and maintainability of Horo for both current and future developers."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d\u003d\u003d How to use this Guide"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "todo"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Setting up"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "Refer to the guide \u003c\u003cSettingUp#, here\u003e\u003e."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Design"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "[[Design-Architecture]]"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Architecture"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ".Architecture Diagram"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "image::ArchitectureDiagram.png[]"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "The *_Architecture Diagram_* given above explains the high-level design of Horo. Given below is a quick overview of each component."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`Main` consists of a class called `MainApp`. It is responsible for:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- At app launch: Initializes the components in the correct sequence, and connects them up with each other."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- At shut down: Shuts down the components and invokes cleanup method where necessary."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`LogsCenter` is used by many classes to write log messages to Horo\u0027s log file."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "The rest of Horo is managed by seven components:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ". \u003c\u003cDesign-CommandManager,*`CommandManager`*\u003e\u003e : Responsible for executing commands from the user."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ". \u003c\u003cDesign-Ics,*`Ics`*\u003e\u003e : Responsible for handling the importing and exporting of ICS files."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ". \u003c\u003cDesign-ModelManager,*`ModelManager`*\u003e\u003e : Responsible for reading and writing to the in-memory data of Horo."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ". \u003c\u003cDesign-NotificationManager,*`NotificationManager`*\u003e\u003e : Responsible for sending notifications to the user."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ". \u003c\u003cDesign-StorageManager,*`StorageManager`*\u003e\u003e : Responsible for reading and writing the Model to an external disk."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ". \u003c\u003cDesign-UiManager,*`UiManager`*\u003e\u003e : Responsible for managing the user interface (UI) of Horo."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ". \u003c\u003cDesign-UndoRedoManager,*`UndoRedoManager`*\u003e\u003e : Responsible for tracking changes in ModelManager, and reverting its history when needed."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Most components follow the https://en.wikipedia.org/wiki/Observer_pattern[observer design pattern], to reduce tight coupling and increase cohesion."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "They implement these listeners:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ". `CommandInputListener` : The component will be notified about command input from the user."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ". `ModelDataListener` : The component will be notified whenever the Model changes."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ". `UserOutputListener` : The component will be notified whenever a message needs to be displayed to the user."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "The sections below give more details of each component."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "[[Design-UiManager]]"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003d\u003d\u003d UI Component"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ".Main structure of the UI Component"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "image::UiClassDiagram.png[]"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "*API* : link:{repoURL}/blob/master/src/main/java/seedu/address/logic/UiManager.java[`UiManager.java`]"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "The UI consists of a `MainWindow` that is contains 3 main view parts - `CalendarPanel`, `ListPanel`, `LogPanel`. It also holds several other UI parts e.g. `PopUpPanel` and `Command Box`. Every one of the UI classes will abstract from the abstract `UiPart` class."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "The `UI` component uses JavaFx UI framework, and layout of these UI parts are defined in `.fxml` files which are found in the `src/main/resources/view` folder. One example of the layout would be: link:{repoURL}/blob/master/src/main/java/seedu/address/ui/MainWindow.java[`MainWindow`], whose FXML link is specified in link:{repoURL}/blob/master/src/main/resources/view/MainWindow.fxml[`MainWindow.fxml`]"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "The `UI` component does the following:"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* Executes user two different types commands using the `Logic` component."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "** One command, when executed, affect the actual Events."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "** The other command is executed to change the view of the UI. There are currently 3 main views in the application: `CalendarPanel`, `ListPanel`, `LogPanel`."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* Listens for any changes in both lists of Tasks and Events using a listener:  link:{repoURL}/blob/master/src/main/java/seedu/address/model/listeners/ModelDataListener.java[`ModelDataListener`]."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003d\u003d\u003d\u003d Calendar UI View"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ".Structure of the Calendar UI View"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "image::UiCalendarClassDiagram.png[]"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "The Calendar View is made up of the link:{repoURL}/blob/master/src/main/java/seedu/address/ui/panel/calendar/CalendarPanel.java[`CalendarPanel`], which holds several different other UI parts linked together to form the overall UI. In the Calendar View, it displays three different UI parts of the Calendar: `CalendarScreen`, `TimelineView` and `UpcomingView`."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "link:{repoURL}/blob/master/src/main/java/seedu/address/ui/panel/calendar/CalendarScreen.java[`CalendarScreen`] is the screen which displays the calendar of a certain month and year to the user. It contains 6 x 7 instance of `CalendarGridDay`, which displays the days of the month."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "link:{repoURL}/blob/master/src/main/java/seedu/address/ui/panel/calendar/TimelineView.java[`TimelineView`] is the screen which displays the timeline using 3 different classes which abstract from `TimelineView`."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* link:{repoURL}/blob/master/src/main/java/seedu/address/ui/panel/calendar/TimelineDayView.java[`TimelineDayView`] displays the timeline of a particular day in a certain month and year."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* link:{repoURL}/blob/master/src/main/java/seedu/address/ui/panel/calendar/TimelineWeekView.java[`TimelineWeekView`] displays the timeline of a particular week. The week is according to the `CalendarScreen`, where each row represents a week of a month."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* link:{repoURL}/blob/master/src/main/java/seedu/address/ui/panel/calendar/TimelineMonthView.java[`TimelineMonthView`] displays the timeline of a particular month in a certain year."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Each of these timeline will hold up to a certain amount of `CardHolder` depending on the type of `TimelineView`. Each of these `CardHolder` will then hold an amount of `Card` for displaying the event name and date. The details of `Card` will be explained in the one of the next few sections."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "link:{repoURL}/blob/master/src/main/java/seedu/address/ui/panel/calendar/UpcomingView.java[`UpcomingView`] represents a miniature list of Events and Tasks that has a start date or due date in the same month as the user\u0027s system current month, but not before the date as the user\u0027s date. This list will then hold up to a certain amount of `UpcomingEventCard` and `UpcomingTaskCard` which will be explained together with `Card` as well."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003d\u003d\u003d\u003d List UI View"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ".Structure of the List UI View"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "image::UiListClassDiagram.png[]"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "The List View is made up of the link:{repoURL}/blob/master/src/main/java/seedu/address/ui/panel/list/ListPanel.java[`ListPanel`] which contains two lists views, `EventListView` and `TaskListView`"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* link:{repoURL}/blob/master/src/main/java/seedu/address/ui/panel/list/EventListView.java[`EventListView`] displays the list of Events containing every piece of information of the Events."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* link:{repoURL}/blob/master/src/main/java/seedu/address/ui/panel/list/TaskListView.java[`TaskListView`] displays the list of Task, containing every piece of information of each Task."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Similar to `TimelineView`, `EventListView` and `TaskListView` will contain a list of `Card` to display the information."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003d\u003d\u003d\u003d Log UI View"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ".Structure of the Log UI View"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "image::UiLogClassDiagram.png[]"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "The Log View is made up of the link:{repoURL}/blob/master/src/main/java/seedu/address/ui/panel/log/LogPanel.java[`LogPanel`] which contains the list of `LogBox`."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "link:{repoURL}/blob/master/src/main/java/seedu/address/ui/panel/log/LogBox.java[`LogBox`] displays literal information back to the user when it is called by `MainWindow` when it listens for a command."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "link:{repoURL}/blob/master/src/main/java/seedu/address/ui/panel/PopUpBox.java[`PopUpBox`] is rather similar to LogBox. It holds up to the same amount of information, as much until the size of the application window, and collapses the rest. It represents the pop up that animates and displays for a few seconds to the user about the given command."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003d\u003d\u003d\u003d Card UI \u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Firstly, there are two types of ways to display information to the user regarding a Event or Task."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* For Events, it is `EventCard`, which is abstracted from the `Card` abstract class, followed by `UpcomingEventCard`"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* For Tasks, it is `TaskCard`, which is abstracted from the `Card` abstract class, followed by `UpcomingTaskCard`."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "An link:{repoURL}/blob/master/src/main/java/seedu/address/ui/card/EventCard.java[`EventCard`] may display the following information:"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ". Event Description"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ". Event Start Date"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ". Event End Date (Optional)"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ". Event Reminder Date (Optional)"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ". Event Tags (Optional)"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ". Event Index (For deleting or editing)"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "An link:{repoURL}/blob/master/src/main/java/seedu/address/ui/card/TaskCard.java[`TaskCard`] may display the following information:"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ". Task Description"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ". Task Due Date (Optional)"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ". Task Reminder Date (Optional)"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ". Task Tags (Optional)"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ". Task Index (For deleting or editing)"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "As for link:{repoURL}/blob/master/src/main/java/seedu/address/ui/card/UpcomingEventCard.java[`UpcomingEventCard`] and link:{repoURL}/blob/master/src/main/java/seedu/address/ui/card/UpcomingTaskCard.java[`UpcomingTaskCard`], they only hold the Description of the Event or Task."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "[[Design-CommandManager]]"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003d\u003d\u003d CommandManager Component"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "The `CommandManager` class manages the addition and invoking of `Commands` in Horo."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ".Class diagram of CommandManager"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "image::CommandManagerClassDiagram.png[]"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Referring to the diagram above, it performs the following operations:"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ". Listen for user input in `onCommandInput()`."
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ". Pass the user input to `commandParser`, to obtain a `Command`."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ". Execute the `Command` and obtain a `UserOutput`."
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ". Notify all `userOutputListeners` about the `UserOutput`."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "To give a more concrete example of how `CommandManager` functions, refer to the sequence diagram below of *adding a task* to Horo:"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ".Sequence diagram of adding a task"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "image::CommandManagerAddTaskSequenceDiagram.png[]"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "CommandManager closely follows the https://en.wikipedia.org/wiki/Command_pattern[command design pattern]."
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003d\u003d\u003d\u003d Command"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "A `Command` is defined to be an immutable function, that can be invoked at any time, to perform any set of instructions."
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "After executing the set of instructions, it will optionally return output to be displayed to the user."
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "In Horo, a `Command` implemented as an abstract class with an abstract `execute()` method."
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "To create a new concrete command, extend from `Command` and implement `execute()`."
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "If your concrete command requires any dependencies during execution, it is recommended to pass in the dependency from the constructor."
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "For example, if your command needs to be able to access `ModelManager`:"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "[source,java]"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "----"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class MyCommand extends Command {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final ModelManager model;"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    MyCommand(ModelManager model) {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.model \u003d model;"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    UserOutput execute() {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.model.doSomething();"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        // ..."
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "----"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003d\u003d\u003d\u003d CommandParser"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "A `CommandParser` is defined to be able to parse a `String` of user input, and return a `Command`."
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "In Horo, a `CommandParser` is implemented as a finite state machine (FSM). It parses user input token by token, and it transitions from state to state depending on the next token."
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "What the FSM is trying to do is tokenize user input into:"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ". `Command keyword`"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ". `Command phrase(s)`"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "A *command keyword* is defined as the first sequence of consecutive, non-whitespace characters of the user input."
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "For the rest of this guide, a sequence of consecutive, non-whitespace characters will be referred to as a ‘word’."
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "A word can be described in the form of a regular expression (regex) as `[^\\s]+`."
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Examples of valid command keywords:"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- `exit`"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- `add_event`"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- `123`"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- `😺`"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "A *command phrase* is defined as either a word, or multiple words delimited by whitespace surrounded by quotes."
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Command phrases come after a command keyword."
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Examples of valid command phrases:"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- `Horse`"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- `”Homework”`"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- `”Horo’s Birthday”`"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- `”24/10/2019 07:00”`"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- `’24/10/2019 07:00’`"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- `--description`"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`CommandParser` is trying to tokenize any command input into one command keyword, and zero or more command phrases."
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "(i.e. `[keyword] [phrase] [phrase] [phrase] ...`)."
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "To understand how the FSM works, study the activity diagram below:"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ".Activity diagram of CommandParser"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "image::CommandParserActivityDiagram.png[]"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "After tokenizing, the command keyword is sent to a `CommandKeywordParser`, which returns a `CommandBuilder`."
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "The remaining command phrases are sent to the `CommandBuilder`, which builds the `Command` we want."
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d Design Considerations"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "[%header, cols\u003d\"1h, 2a, 2a\"]"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "|"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "| Option 1"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "| Option 2"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "| What"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "| Use `String.split()` to break up command input into tokens."
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "| Implement a FSM to break up command input into tokens."
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "| Difficulty"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "| Easy"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "| Moderate"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "| How"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "| Split the command input by whitespaces, into words. The first word will be the *command keyword*."
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "All subsequent words will have to be joined into *command phrases*."
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "| Create a `State` class, and design a state diagram to tokenize the command input into a *command keyword* and *command phrases*."
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "| Evaluation"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "| I did not choose this option because:"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Joining words into command phrases can become quite complex, especially when introducing quotation marks."
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Additionally, it is difficult for future developers to maintain and extend logic like this."
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "| *I chose this option because:*"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "A state machine is easy to understand and configure."
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "A state machine can tokenize complex command inputs, allowing future developers to parse advanced command inputs."
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003d\u003d\u003d\u003d CommandKeywordParser"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "A `CommandKeywordParser` is defined to be able to parse a command keyword, and return a `CommandBuilder`."
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "In Horo, a `CommandKeywordParser` uses a `HashMap` to map a command keyword to a `Supplier\u003cCommandBuilder\u003e`."
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003d\u003d\u003d\u003d CommandBuilder"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "A `CommandBuilder` is defined to be able to accept an arbitrary amount of command phrases, and eventually create a `Command` using those phrases."
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "In Horo, a `CommandBuilder` is implemented such that the entire definition of a `Command` is in the `CommandBuilder`."
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "The `CommandBuilder` will use those definitions to automagically parse command phrases."
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ".Class diagram of CommandBuilder"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "image::CommandBuilderClassDiagram.png[]"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Referring to the diagram above, the definition the command is implemented in two methods:"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ". `defineCommandArguments()`"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ". `defineCommandOptions()`"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "A *command option* is defined to have a keyword and a list of arguments."
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "An *option’s keyword* is defined to be a command phrase."
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "An *option’s argument* is defined to be a command phrase that is not an option’s keyword, and lies after it."
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Example of option’s keyword \u0026 arguments below. The option’s keyword is underlined:"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- `+++\u003cu\u003e--description\u003c/u\u003e+++ Horse`"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- `+++\u003cu\u003e--tags\u003c/u\u003e+++ Animal Cat Dog`"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- `+++\u003cu\u003e-d\u003c/u\u003e+++ Horse`"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "A *command argument* is defined to be a command phrase that is not an option’s keyword."
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "This is similar to an option’s argument, except that the position of this argument in the user input is important."
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "A command argument is a command phrase that lies after the command keyword, and before any command option’s keywords."
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Example of command’s arguments below. The command’s keyword is underlined."
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- `+++\u003cu\u003eadd_event\u003c/u\u003e+++ Horse “24/10/2019 10:00”`"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- `+++\u003cu\u003edelete_event\u003c/u\u003e+++ 1 2 3`"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "To understand how `CommandBuilder` works, study the activity diagram below:"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ".Activity diagram of CommandBuilder"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "image::CommandBuilderActivityDiagram.png[]"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "The `CommandBuilder` API provides a simple way for developers to create a `Command`."
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "For example, to create a `MyCommand` which takes in one String argument, and have an option which also takes in one String argument, you could do this:"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "[source, java]"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "----"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "class MyCommandBuilder extends CommandBuilder {"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private String arg1;"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private String arg2;"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    protected RequiredArgumentList defineCommandArguments() {"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return ArgumentList.required()"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .addArgument(StringArgument.newBuilder(\"Argument 1\", s -\u003e this.arg1 \u003d s));"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    protected Map\u003cString, OptionalArgumentList\u003e defineCommandOptions() {"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return Map.of("
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            \"--option\", ArgumentList.optional()"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .addArgument(StringArgument.newBuilder(\"Argument 2\", s -\u003e this.arg2 \u003d s))"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        );"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    protected Command commandBuild() {"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return new MyCommand(this.arg1, this.arg2);"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "----"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "[source, java]"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "----"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "class MyCommand extends Command {"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final String arg1;"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final String arg2;"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public MyCommand(String arg1, String arg2) {"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.arg1 \u003d arg1;"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.arg2 \u003d arg2;"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public UserOutput execute() {"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        // Do something with arg1 and arg2"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "----"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Simply register `MyCommandBuilder` to `CommandManager` to use your new command:"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "[source]"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "----"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "commandManager.addCommand(\"mycommand\", MyCommandBuilder::new)"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "----"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "CommandBuilder closely follows the https://en.wikipedia.org/wiki/Builder_pattern[builder design pattern]."
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d Design Considerations"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "[%header, cols\u003d\"1h, 2a, 2a\"]"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "|"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "| Option 1"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "| Option 2"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "| What"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "| Each `Command` is created by parsing user input using it\u0027s own `Parser`."
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "| Each `Command` is defined by a `CommandBuilder`, and created by a `CommandParser`."
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "| Difficulty"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "| Easy"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "| Moderate"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "| How"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "| Implement a utility class which can parse user input into arguments. Use this class in each command parser."
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "| Implement `CommandBuilder` which can build a `Command` with any number of arguments. Commands provide what arguments they require."
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "| Evaluation"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "| I did not choose this option because:"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Each command parser will need to implement logic to use the utility class, handle argument checking and parsing errors."
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "It is difficult for future developers to create, extend and test `Commands`."
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "| *I chose this option because:*"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Each `Command` does not require any logic, only arguments are required to be defined."
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Since all logic is in `CommandBuilder`, it is simple for developers to test."
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003d\u003d\u003d\u003d Argument"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "A command’s argument and an option’s argument are both considered an `Argument`. An argument will be parsed from a command phrase to another object. The `Argument` class is a generic class, where the type of the class defines what type of object the command phrase be parsed into."
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "For example, an `Argument\u003cDateTime\u003e` which receives “24/10/2019 10:00” will be parsed into a `DateTime` object."
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003d\u003d\u003d\u003d Variable Argument"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "A `VariableArgument` is a special type of argument. A variable argument will be parsed from a list of command phrases to a list of similar type objects. The `VariableArgument` class is a generic class, where the type of the class defines what types of objects the command phrases should be parsed into. A variable argument can accept zero or more command phrases to be parsed."
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "For example, a `VariableArgument\u003cInteger\u003e` which receives {1, 2, 3} will be parsed into a list of Integers. `A VariableArgument\u003cInteger\u003e` which receives {} will be parsed into an empty list."
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003d\u003d\u003d\u003d ArgumentList"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "A command is said to contain a list of arguments, and it’s options are said to contain a list of arguments too. Both are considered an `ArgumentList`. An `ArgumentList` is defined to contain zero or more `Arguments`, and zero or one `VariableArguments`."
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Additionally, if a variable argument is defined, it will be treated as the last argument in the `ArgumentList`. This is because a variable argument can accept zero or more command phrases, which will prevent other arguments from receiving command phrases if it is not the last argument."
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "[[Design-ModelManager]]"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003d\u003d\u003d ModelManager Component"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "The `ModelManager` is responsible for the reading and writing of events and tasks in Horo."
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ".Class diagram of the ModelManager"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "image::ModelManagerClassDiagram.png[]"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "The `ModelManager` has three main functions:"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ". Stores all events and tasks in a wrapper class `ModelData`."
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ". Notifies all `ModelDataListeners` whenever the `ModelData` changes."
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ". Allows any class with a reference to `ModelManager` to update the current `ModelData`."
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "To give a more concrete example of how `ModelManager` notifies its listeners, refer to the sequence diagram below of *adding a task* to Horo:"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ".Sequence diagram of adding a task"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "image::ModelManagerAddTaskSequenceDiagram.png[]"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003d\u003d\u003d\u003d ModelData"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`ModelData` is designed to be a wrapper class which contains a *snapshot* of Horo\u0027s events and tasks."
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "It is immutable, and automatically creates deep copies of all events and tasks, to prevent any rouge modifications."
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003d\u003d\u003d\u003d EventSource"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "An `EventSource` is a representation of an event in Horo."
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "It is immutable. It has two required fields, and three optional fields:"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Required:"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ". Description : Long description of the event"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ". Start `DateTime` : The beginning of the event"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Optional:"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ". End `DateTime` : The end of the event, if the event has no end it is considered to be an instant in the timeline."
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ". Reminder `DateTime` : When a reminder should be given to the user, used in the \u003c\u003cnotification system\u003e\u003e."
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ". Tag(s) : User defined tags, which help in organizing the user\u0027s events."
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "The `EventSourceBuilder` API provides a simple way for developers to create an `EventSource`."
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "For example, to create an `EventSource` with three tags:"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "[source]"
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "----"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "EventSource e \u003d EventSource.newBuilder(\"CS2103T Lecture\", DateTime.now())"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    .setTags(List.of(\"CS2103T\", \"NUS\", \"Lecture\"))"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    .build();"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "----"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003d\u003d\u003d\u003d TaskSource"
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "A `TaskSource` is a representation of a task in Horo."
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "It is immutable. It has one required field, and three optional fields:"
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Required:"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ". Description : Long description of the task"
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Optional:"
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ". Due `DateTime` : When the task should be due."
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ". Reminder `DateTime` : When a reminder should be given to the user, used in the \u003c\u003cnotification system\u003e\u003e."
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ". Tag(s) : User defined tags, which help in organizing the user\u0027s tasks."
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "The `TaskSourceBuilder` API provides a simple way for developers to create a `TaskSource`."
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "For example, to create a `TaskSource` with two tags:"
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "[source]"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "----"
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "TaskSource t \u003d TaskSource.newBuilder(\"Buy Groceries\")"
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    .setTags(List.of(\"Shopping\", \"Groceries\"))"
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    .build();"
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "----"
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003d\u003d\u003d\u003d DateTime"
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "A `DateTime` is a representation of an instant of time, without timezone information."
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "It is stored as the number of https://en.wikipedia.org/wiki/Unix_time[seconds from epoch]. It is immutable."
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "The `DateTimeBuilder` API provides a simple way for developers to create a `DateTime`."
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "For example, to create a `DateTime` representing `1st November 2019, 12:00PM (UTC)`:"
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "[source]"
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "----"
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "DateTime d \u003d DateTime.newBuilder(1, 11, 2019, 12, 0, ZoneOffset.UTC)"
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    .build();"
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "----"
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "[[Design-StorageManager]]"
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003d\u003d\u003d StorageManager Component"
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "The `StorageManager` is responsible for the saving and loading of Horo\u0027s Model to the external disk."
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ".Class diagram of StorageManager"
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "image::StorageManagerClassDiagram.png[]"
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "The `StorageManager` has four main functions:"
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ". Load the model on Horo startup."
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ". Save the model whenever the model changes (notified via `ModelDataListener`)."
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ". Serialize the model into Javascript Object Notation (JSON) before saving."
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ". Deserialize the model from JSON before passing it to `ModelManager`."
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "For serialization and deserialization of the model, our team has decided to use the well known https://github.com/FasterXML/jackson[Jackson library]."
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`EventSource`, `TaskSource` and their respective builders, have appropriate annotations to facilitate serialization and deserialization of JSON."
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "To give a more concrete example of how `StorageManager` saves the model, refer to the sequence diagram below of *adding a task* to Horo:"
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ".Sequence diagram of adding a task"
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "image::StorageManagerAddTaskSequenceDiagram.png[]"
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Implementation"
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "-"
        },
        "content": "This section describes some noteworthy details on how certain features are implemented."
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "-"
        },
        "content": "// tag::undoredo[]"
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "[[Design-UndoRedoManager]]"
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d\u003d\u003d Undo/Redo feature"
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d\u003d\u003d\u003d Implementation Details"
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "The undo/redo mechanism is facilitated by `UndoRedoManager`, which contains `undoStateList` - a history of `ModelData` states."
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "Each `ModelData` object contains two lists: one to store `EventSources` and the other to store `TaskSources`,"
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "together representing the state of all event and task data at that point in time. `UndoRedoManager` also contains a `undoIndex`,"
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "which keeps track of the index of the `ModelData` being used presently, as well as a `ModelManager` object."
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "`ModelManager` contains a `ModelData` object. Horo\u0027s `StorageManager`, `UiManager` and `UndoRedoManager` components"
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "implement the `ModelDataListener` interface which listens for any changes to this `ModelData` so that they can be updated accordingly."
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "Every time a state-changing command (that is not `undo` or `redo`) is executed, the a new `ModelData` representing the modified version"
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "will replace the old one and this new version will then be deep-copied and added to `undoStateList`."
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "Should there be a need to revert back to a past or future state (if undo or redo is called), `ModelManager#modelData` will retrieve their data from the"
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "appropriate copy of `ModelData` in the list of duplicates."
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "`UndoRedoManager` also implements the following operations:"
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "* `UndoRedoManager#undo()` -- Restore `ModelManager#modelData` to their previous versions from the appropriate duplicate in `undoStateList`"
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "* `UndoRedoManager#redo()` -- Restore `ModelManager#modelData` to their future versions from the appropriate duplicate in `undoStateList`"
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "* `UndoRedoManager#clearFutureHistory()` -- Delete all `ModelData` states that occur in `undoStateList` after the index given by the `undoIndex`"
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "The `UndoCommand` and `RedoCommand` will interact directly with `UndoRedoManager` while other state-changing commands"
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "(such as adding or deleting tasks) will interact only with `ModelManager`."
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "The `ModelDataListener` interface helps us achieve the desired undo-redo functionality:"
      },
      {
        "lineNumber": 594,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 595,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "This listener interface contains a single method, `onModelDataChange(ModelData modelData)`."
      },
      {
        "lineNumber": 596,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 597,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "The `UndoRedoManager` implements the `ModelDataListener` interface’s method `onModelDataChange(ModelData modelData)` to “listen” for any changes to"
      },
      {
        "lineNumber": 598,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "`ModelManager#modelData` (e.g. when an event or task is added or deleted)"
      },
      {
        "lineNumber": 599,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "If such a change exists, it will be handled by first instantiating a model data with a deep-copied version of the"
      },
      {
        "lineNumber": 600,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "`taskList` and the modified `eventList`, calling `UndoRedoManager#clearFutureHistory()`, and finally to committing the state to `undoStateList`"
      },
      {
        "lineNumber": 601,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 602,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "On the other hand, whenever an undo or redo is executed, `ModelManager`\u0027s `ModelData` is updated"
      },
      {
        "lineNumber": 603,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "to match the data of the model data with index `undoIndex` in `undoStateList` so that the correct version of model data is being reflected in the GUI."
      },
      {
        "lineNumber": 604,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 605,
        "author": {
          "gitId": "-"
        },
        "content": "Given below is an example usage scenario and how the undo/redo mechanism behaves at each step."
      },
      {
        "lineNumber": 606,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 607,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "Step 1. The user runs the program for the first time. The `UndoRedoManager` will be initialized with the initial `undoStateList`."
      },
      {
        "lineNumber": 608,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "A `ModelData` object will be added to `undoStateList` and the `undoIndex` will point to that single model data in the list."
      },
      {
        "lineNumber": 609,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 610,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "image::process1.png[]"
      },
      {
        "lineNumber": 611,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 612,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "Step 2. The user executes `add_event “Suntec City Computer Fair” --at “17/11/2019 12:00”`."
      },
      {
        "lineNumber": 613,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "`ModelManager#ModelData` will be reset to a new `ModelData` object with the added event."
      },
      {
        "lineNumber": 614,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "Then, `UndoRedoManager#onModelDataChange(ModelData modelData)` will be called (as there has been a change to the `eventList`),"
      },
      {
        "lineNumber": 615,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "deep-copying the modified `ModelData`."
      },
      {
        "lineNumber": 616,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "All future states beyond the `undoIndex` will be cleared as they are no longer useful. In this particular case, there are no future states to be cleared."
      },
      {
        "lineNumber": 617,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "Finally, the deep-copy of the new model data state will be committed; added to `undoStateList`."
      },
      {
        "lineNumber": 618,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "The `undoIndex` is incremented by one to contain the index of the newly inserted model data state."
      },
      {
        "lineNumber": 619,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 620,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "image::process2.png[]"
      },
      {
        "lineNumber": 621,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 622,
        "author": {
          "gitId": "-"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 623,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "If a command fails its execution, it will not result in any change to `ModelManager#ModelData`."
      },
      {
        "lineNumber": 624,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "Hence, there is no change to trigger the listener methods and thus no `ModelData` will be saved to `undoStateList`."
      },
      {
        "lineNumber": 625,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 626,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "Step 3. Suppose the user decides that adding the task was a mistake. He/she then executes the undo command to rectify the error."
      },
      {
        "lineNumber": 627,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "The undo command will decrement the `undoIndex` by one to contain the index of the previous undo redo state, thereafter triggering the"
      },
      {
        "lineNumber": 628,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "`UndoRedoManager#notifyModelResetListeners` method. This method updates `ModelManager#modelData` to match the data of the"
      },
      {
        "lineNumber": 629,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "model data with index `undoIndex` in `undoStateList`."
      },
      {
        "lineNumber": 630,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 631,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "image::process3.png[]"
      },
      {
        "lineNumber": 632,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 633,
        "author": {
          "gitId": "-"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 634,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "If the `undoIndex` is 0, pointing to the initial model data state, then there are no previous model data states to restore."
      },
      {
        "lineNumber": 635,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "The undo command uses `UndoRedoManager#canUndo()` to check if this is the case."
      },
      {
        "lineNumber": 636,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "If so, it will return an error to the user rather than attempting to perform the undo."
      },
      {
        "lineNumber": 637,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 638,
        "author": {
          "gitId": "-"
        },
        "content": "The following sequence diagram shows how the undo operation works:"
      },
      {
        "lineNumber": 639,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 640,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "image::UndoSequenceDiagram.png[width\u003d100%]"
      },
      {
        "lineNumber": 641,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 642,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "The redo command does the opposite — it calls `UndoRedoManager#redo()`, which increments the `undoIndex` by one to contain the index of the previously undone state."
      },
      {
        "lineNumber": 643,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "The `UndoRedoManager#notifyModelResetListeners` then causes `ModelManager#modelData` to be reset to this state’s data."
      },
      {
        "lineNumber": 644,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 645,
        "author": {
          "gitId": "-"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 646,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "If the `undoIndex` is at index `undoStateList.size() - 1`, pointing to the latest model data state, then there are no undone model data states to restore."
      },
      {
        "lineNumber": 647,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "The `redo` command uses `UndoRedoManager#canRedo()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo."
      },
      {
        "lineNumber": 648,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 649,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "Step 4. The user decides to execute the command `log`. Non-state-changing commands such as `log` do not manipulate task and event data."
      },
      {
        "lineNumber": 650,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "Since no changes to `ModelManager#modelData` have been made, the listener methods will not be triggered and no model data will be saved to `undoStateList`."
      },
      {
        "lineNumber": 651,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "Thus, the `undoStateList` remains unchanged."
      },
      {
        "lineNumber": 652,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 653,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "image::process4.png[]"
      },
      {
        "lineNumber": 654,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 655,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "Step 5. The user executes `delete_event 1`, removing the event from the `eventList` in `ModelManager#modelData`."
      },
      {
        "lineNumber": 656,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "`UndoRedoManager#onModelDataChange(ModelData modelData)` will be called (as there has been a change to the `ModelData`),"
      },
      {
        "lineNumber": 657,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "purging all future states beyond the `undoIndex` as they are no longer useful."
      },
      {
        "lineNumber": 658,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "The modified model data will be deep-copied and a new model data containing the deep-copies will also be added to `undoStateList`."
      },
      {
        "lineNumber": 659,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "The `undoIndex` is incremented by one to contain the index of the newly inserted model data state."
      },
      {
        "lineNumber": 660,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 661,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "image::process5.png[]"
      },
      {
        "lineNumber": 662,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 663,
        "author": {
          "gitId": "-"
        },
        "content": "The following activity diagram summarizes what happens when a user executes a new command:"
      },
      {
        "lineNumber": 664,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 665,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "image::CommitActivityDiagram1.png[]"
      },
      {
        "lineNumber": 666,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 667,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d Design Considerations"
      },
      {
        "lineNumber": 668,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 669,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ".Aspect: How undo \u0026 redo executes"
      },
      {
        "lineNumber": 670,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 671,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "||Approach 1 (current choice) |Approach 2"
      },
      {
        "lineNumber": 672,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 673,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "|Pros"
      },
      {
        "lineNumber": 674,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "|Easy to understand and implement."
      },
      {
        "lineNumber": 675,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "|Uses less memory as we only need to keep track of what commands have been executed and their parameters,"
      },
      {
        "lineNumber": 676,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "as opposed to storing all task and event data between every change."
      },
      {
        "lineNumber": 677,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 678,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "|Cons"
      },
      {
        "lineNumber": 679,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "|Performance issues may arise due to the relatively larger memory usage required."
      },
      {
        "lineNumber": 680,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "|Every command will have to be implemented twice, since their inverse operations will all be different. This is"
      },
      {
        "lineNumber": 681,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "compounded by the fact that we have to ensure the correctness of every inverse operation individually as well."
      },
      {
        "lineNumber": 682,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 683,
        "author": {
          "gitId": "-"
        },
        "content": "// end::undoredo[]"
      },
      {
        "lineNumber": 684,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 685,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "// tag::notification[]"
      },
      {
        "lineNumber": 686,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "[[Design-NotificationManager]]"
      },
      {
        "lineNumber": 687,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d\u003d\u003d Notification System"
      },
      {
        "lineNumber": 688,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d\u003d\u003d\u003d Class Architecture"
      },
      {
        "lineNumber": 689,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ".Class diagram for Notification System"
      },
      {
        "lineNumber": 690,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "image::NotificationClassDiagram.png[]"
      },
      {
        "lineNumber": 691,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 692,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "The Notification System is facilitated by the  `NotificationManager`, which is found in the Logic component. Other constituent classes of the Notification System can be found in the Logic and UI components, depending on their functionality. These classes and their functionalities are listed below:"
      },
      {
        "lineNumber": 693,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 694,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d *Logic Classes*"
      },
      {
        "lineNumber": 695,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "Logic classes are responsible for deciding if a notification should be posted. As with other components, their functionality is accessed through the `NotificationManager` class. The `NotificationManager` class maintains a reference to a `NotificationCheckingThread` as well as a `SystemTrayCommunicator`."
      },
      {
        "lineNumber": 696,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 697,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "The logic classes of the Notification System can be found under the `notification` package under the `Logic` component."
      },
      {
        "lineNumber": 698,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 699,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "- The `NotificationCheckingThread` is a daemon thread that runs in parallel with the main application. It checks for new notifications to post every minute."
      },
      {
        "lineNumber": 700,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "- The `NotificationChecker` is responsible for checking `Model` for any notifications that need to be posted."
      },
      {
        "lineNumber": 701,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 702,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 703,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d *UI Classes*"
      },
      {
        "lineNumber": 704,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "UI classes are responsible for displaying notifications to the user."
      },
      {
        "lineNumber": 705,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 706,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "The UI classes of the Notification System can be found under the `systemtray` package under the `ui` component."
      },
      {
        "lineNumber": 707,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 708,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "- The `PopupListener` class is the main channel of communication between the logic and UI classes. When a notification needs to be posted, it will relay the information from the logic to UI classes."
      },
      {
        "lineNumber": 709,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "- The `SystemTrayCommunicator` handles posting notifications and displaying the app\u0027s icon on the System Tray. It listens to the `NotificationCheckingThread` through a `PopupListener`."
      },
      {
        "lineNumber": 710,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "- The `PopupNotification` class carries the information that will be posted to a popup notification."
      },
      {
        "lineNumber": 711,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "- The `NotificationClickActionListener` is called when the user clicks on a popup notification."
      },
      {
        "lineNumber": 712,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 713,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 714,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d\u003d\u003d\u003d Class Behaviour"
      },
      {
        "lineNumber": 715,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "As with other Manager classes, an instance of the  `NotificationManager` is created upon the starting of MainApp. The NotificationManager proceeds to initialize and run a `NotificationCheckingThread`, as well as a `SystemTrayCommunicator`. Upon being started, the `NotificationCheckingThread` will enter a `notificationCheckingLoop` by calling its method of the same name."
      },
      {
        "lineNumber": 716,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 717,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "To give a better explanation of how the `NotificationCheckingThread` works, a single run of its loop is illustrated below:"
      },
      {
        "lineNumber": 718,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 719,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ".Sequence diagram for NotificationCheckingThread\u0027s main loop"
      },
      {
        "lineNumber": 720,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "image::NotificationCheckingLoopSequenceDiagram.png[]"
      },
      {
        "lineNumber": 721,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 722,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "Step 1. The `NotificationCheckingThread` calls the `NotificationChecker` to generate instances of `PopupNotification` through a call to `NotificationChecker#getListOfPopupNotifications()`"
      },
      {
        "lineNumber": 723,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 724,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "Step 2. For each `PopupNotification` generated by the NotificationChecker, a call to `PopupListener#notify()` is made."
      },
      {
        "lineNumber": 725,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 726,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "Step 3. This prompts the `SystemTrayCommunicator` to post a new notification."
      },
      {
        "lineNumber": 727,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 728,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "Step 4. The `NotificationCheckingThread` sleeps until the start of the next minute, found by the method `NotificationCheckingThread#findMillisecondsToNextMinute()`."
      },
      {
        "lineNumber": 729,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 730,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d\u003d\u003d\u003d Design Considerations"
      },
      {
        "lineNumber": 731,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d Aspect: How the Notification system should run"
      },
      {
        "lineNumber": 732,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "* **Alternative 1 (current choice):** Running the Notification system as a separate thread in the same application"
      },
      {
        "lineNumber": 733,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "** Pros: Easier to implement and test."
      },
      {
        "lineNumber": 734,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "** Cons: The user would have to leave the application on if they always wanted to be notified."
      },
      {
        "lineNumber": 735,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "* **Alternative 2:** Running the Notification system as a background application"
      },
      {
        "lineNumber": 736,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "** Pros: This would allow notifications to be posted to the user\u0027s desktop even if the Horo main app were not open."
      },
      {
        "lineNumber": 737,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "** Cons: This would require the creation of a separate application that the user would have to install on their computer. Because different Java applications are ran in different instances of Java Virtual Machines, this could vastly complicate implementation as the Notification System and the rest Horo would be unable to interact directly."
      },
      {
        "lineNumber": 738,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 739,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "Alternative 1 was eventually chosen as it was simpler to implement and test, and remain within the initial scope of Horo\u0027s development. The application can be potentially changed to use Alternative 2 in the future."
      },
      {
        "lineNumber": 740,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 741,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "// end::notification[]"
      },
      {
        "lineNumber": 742,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 743,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Logging"
      },
      {
        "lineNumber": 744,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 745,
        "author": {
          "gitId": "-"
        },
        "content": "We are using `java.util.logging` package for logging. The `LogsCenter` class is used to manage the logging levels and logging destinations."
      },
      {
        "lineNumber": 746,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 747,
        "author": {
          "gitId": "-"
        },
        "content": "* The logging level can be controlled using the `logLevel` setting in the configuration file (See \u003c\u003cImplementation-Configuration\u003e\u003e)"
      },
      {
        "lineNumber": 748,
        "author": {
          "gitId": "-"
        },
        "content": "* The `Logger` for a class can be obtained using `LogsCenter.getLogger(Class)` which will log messages according to the specified logging level"
      },
      {
        "lineNumber": 749,
        "author": {
          "gitId": "-"
        },
        "content": "* Currently log messages are output through: `Console` and to a `.log` file."
      },
      {
        "lineNumber": 750,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 751,
        "author": {
          "gitId": "-"
        },
        "content": "*Logging Levels*"
      },
      {
        "lineNumber": 752,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 753,
        "author": {
          "gitId": "-"
        },
        "content": "* `SEVERE` : Critical problem detected which may possibly cause the termination of the application"
      },
      {
        "lineNumber": 754,
        "author": {
          "gitId": "-"
        },
        "content": "* `WARNING` : Can continue, but with caution"
      },
      {
        "lineNumber": 755,
        "author": {
          "gitId": "-"
        },
        "content": "* `INFO` : Information showing the noteworthy actions by the App"
      },
      {
        "lineNumber": 756,
        "author": {
          "gitId": "-"
        },
        "content": "* `FINE` : Details that is not usually noteworthy but may be useful in debugging e.g. print the actual list instead of just its size"
      },
      {
        "lineNumber": 757,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 758,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "// tag::ics[]"
      },
      {
        "lineNumber": 759,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "[[Design-Ics]]"
      },
      {
        "lineNumber": 760,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003d\u003d\u003d Ics Component"
      },
      {
        "lineNumber": 761,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 762,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "*API* : link:{repoURL}/src/main/java/seedu/address/ics/IcsParser.java[`IcsParser.java`]"
      },
      {
        "lineNumber": 763,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 764,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "The ICS component is made up of 2 main sub-components: ICS file parser, and ICS file exporter."
      },
      {
        "lineNumber": 765,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 766,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "The file parser makes use of a custom parser that converts files with the `.ics` file extension"
      },
      {
        "lineNumber": 767,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "to `EventSource` and `TaskSource` objects in Horo."
      },
      {
        "lineNumber": 768,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 769,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "Here is an overview of how the ICS component looks like:"
      },
      {
        "lineNumber": 770,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 771,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ".ICS Component Architecture"
      },
      {
        "lineNumber": 772,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "image::IcsComponentDiagram.png[]"
      },
      {
        "lineNumber": 773,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 774,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "Right now, this is how the `*IcsExporter*` class exports Horo\u0027s `*EventSource*` and `*TaskSource*` data."
      },
      {
        "lineNumber": 775,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "Notice that the file is created onnly when it is known that the directory provided by the user is valid."
      },
      {
        "lineNumber": 776,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "This is to prevent extra uncaught errors being thrown."
      },
      {
        "lineNumber": 777,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 778,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ".Activity Diagram of an Export Command"
      },
      {
        "lineNumber": 779,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "image::ExportCommandActivityDiagram.png[]"
      },
      {
        "lineNumber": 780,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 781,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "In order to generate the file content from Horo\u0027s saved data, the file exporter uses the `*IcsConverter*` class to convert `*EventSource*` and `*TaskSource*` objects"
      },
      {
        "lineNumber": 782,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "stored in the `*ModelManager*` singleton object into their ICS String representations."
      },
      {
        "lineNumber": 783,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 784,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "They will then be concatenated together using a `*StringBuilder*` object. Boilerplate information will be added"
      },
      {
        "lineNumber": 785,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "at the start and end of the save file to make the file valid to be imported to other Calendar applications."
      },
      {
        "lineNumber": 786,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 787,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "Check out the"
      },
      {
        "lineNumber": 788,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "link:https://en.wikipedia.org/wiki/ICalendar[iCalendar Wiki Page] for more information on the specifications."
      },
      {
        "lineNumber": 789,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 790,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 791,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* Can export Horo\u0027s save data as a file"
      },
      {
        "lineNumber": 792,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "The `ICS` Component,with a `.ics` extension."
      },
      {
        "lineNumber": 793,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* Can import other Horo\u0027s save data from a `.ics` file."
      },
      {
        "lineNumber": 794,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 795,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "\u003d\u003d\u003d\u003d Design Considerations"
      },
      {
        "lineNumber": 796,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 797,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d Aspect: Handling of Horo TaskSource and EventSource conversion to ICS Strings"
      },
      {
        "lineNumber": 798,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "- **Alternative 1 (Current Choice):** Use of a separate class `IcsConverter` to convert `TaskSource` and `EventSource` objects"
      },
      {
        "lineNumber": 799,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    their ICS string representations."
      },
      {
        "lineNumber": 800,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 801,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    * Pros: Adherence to Single Responsibility Principle,"
      },
      {
        "lineNumber": 802,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        decouples `IcsExporter` from the `TaskSource` and `EventSource` classes, and keeps code reusable and scalable."
      },
      {
        "lineNumber": 803,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    * Cons: Not consistent with Object-Oriented Programming structure."
      },
      {
        "lineNumber": 804,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "- **Alternative 2:** Create a common `IcsConvertible` Interface for `TaskSource` and `EventSource` to implement a `toIcsString()` function."
      },
      {
        "lineNumber": 805,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 806,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    * Pros: Adheres to Object-Oriented Programming structure."
      },
      {
        "lineNumber": 807,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    * Cons: Hard to reuse functions and modify code."
      },
      {
        "lineNumber": 808,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 809,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "Alternative 1 was chosen eventually, as I felt that it is more important to adhere to the Single Responsibility Principle"
      },
      {
        "lineNumber": 810,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "and keep all code relevant to converting objects to ICS Strings in the same class."
      },
      {
        "lineNumber": 811,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 812,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "This further makes it easier for future debugging,"
      },
      {
        "lineNumber": 813,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "and makes adding new exportable objects a lot easier as there are common functions that can be used."
      },
      {
        "lineNumber": 814,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "// end::ics[]"
      },
      {
        "lineNumber": 815,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 816,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "// tag::uiImplementation[]"
      },
      {
        "lineNumber": 817,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003d\u003d\u003d UI Component"
      },
      {
        "lineNumber": 818,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 819,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003d\u003d\u003d\u003d Implementation during change in Events and Tasks"
      },
      {
        "lineNumber": 820,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ".A general Sequence Diagram during a change in the Event and Task Lists model."
      },
      {
        "lineNumber": 821,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "image::UiSequenceDiagram.png[]"
      },
      {
        "lineNumber": 822,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 823,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "The UI system is managed by the `UiManager`, which is found in `Logic` component and is responsible for any change in the models and hence updating the necessary UI portions. The UiManager then holds a single instance of the `MainWindow`, which represents the base of the UI, and holds the different panels of the UI. Here is the sequence of a change in Events and Tasks for the UI."
      },
      {
        "lineNumber": 824,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 825,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Step 1. `UiManager` will be called using `onModelListChange(lists)` method. This will, in turn, take in the `ModelLists`, split them into the `events` and `tasks`, and sort them. Afterward, two HashMaps, `eventHash` and `taskHash` are created to deal with the indexing of the UI later on."
      },
      {
        "lineNumber": 826,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 827,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Step 2. `MainWindow` will be called by `UiManager` using `onModelListChange(events, tasks, eventHash, taskHash)`, which will in turn proceed to call the methods that will update the different views represented by:"
      },
      {
        "lineNumber": 828,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 829,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* `CalendarPanel` - `onModelListChange(events, tasks, eventHash, taskHash)`"
      },
      {
        "lineNumber": 830,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* `ListPanel` - `onEventListChange(events, eventHash)` and `onTaskListChange(tasks, taskHash)`"
      },
      {
        "lineNumber": 831,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 832,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Step 3. `UiManager` will also be called using `onUserOutput(output, colorTheme)`, which will in turn call `onUserOutput(output, colorTheme)` for MainWindow."
      },
      {
        "lineNumber": 833,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 834,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "As for these 3 main panels, each of them will be explained further below"
      },
      {
        "lineNumber": 835,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 836,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ".Sequence Diagram for `CalendarPanel`"
      },
      {
        "lineNumber": 837,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "image::UiCalendarPanelSequenceDiagram.png[]"
      },
      {
        "lineNumber": 838,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 839,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Step 2.1. `CalendarPanel` will be called by `onModelListChange(events, tasks, eventHash, taskHash)`, and will proceed to zip the two lists into a single list for sorting purposes."
      },
      {
        "lineNumber": 840,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 841,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Step 2.2. Afterward, it will call `onChange` for the 3 smaller components:"
      },
      {
        "lineNumber": 842,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 843,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* `TimelineView` - When called, it will reset the current timeline using `resetTimeline()`"
      },
      {
        "lineNumber": 844,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 845,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* `CalendarScreen` - When called, it will change the calendar to the given date, as well as calling `changeColor(eventTaskList)` to change the color of a day in the calendar."
      },
      {
        "lineNumber": 846,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 847,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* `UpcomingView` - When called, it will simply reset the view to input the correct events and tasks."
      },
      {
        "lineNumber": 848,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 849,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ".Sequence Diagram for `ListPanel`"
      },
      {
        "lineNumber": 850,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "image::UiListPanelSequenceDiagram.png[]"
      },
      {
        "lineNumber": 851,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 852,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Step 2.3. `ListPanel` will be called using `onEventListChange(events, eventHash)` first. It will proceed to call `EventListPanel` to change the list according to the given list of events."
      },
      {
        "lineNumber": 853,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 854,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Step 2.4. Additionally, `ListPanel` will also be called using `onTaskListChange(tasks, taskHash)`, which will eventually call `TaskListPanel` to change the list accordingly as well."
      },
      {
        "lineNumber": 855,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 856,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ".Sequence Diagram for `LogPanel`"
      },
      {
        "lineNumber": 857,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "image::UiLogPanelSequenceDiagram.png[]"
      },
      {
        "lineNumber": 858,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 859,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Step 3.1. When `MainWindow` gets called using `onUserOutput(output, colorTheme)`, it will proceed to get the actual color scheme in the form of a `String`, and creates 2 different boxes to display the output."
      },
      {
        "lineNumber": 860,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 861,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Step 3.2. It will call `LogPanel` to create a `LogBox` using `createLogBox(feedbackToUser, color)` to display the output to the user in `LogPanel`"
      },
      {
        "lineNumber": 862,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 863,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Step 3.3. Next, it creates `PopUpBox` and display it temporarily on any of the panels, and proceed to unused afterward."
      },
      {
        "lineNumber": 864,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "// end::uiImplementation[]"
      },
      {
        "lineNumber": 865,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 866,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "// tag::uiDayView[]"
      },
      {
        "lineNumber": 867,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003d\u003d\u003d\u003d Implementation when changing the date of timeline"
      },
      {
        "lineNumber": 868,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 869,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ".Sequence Diagram for changing the timeline date"
      },
      {
        "lineNumber": 870,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "image::UiViewDaySequenceDiagram.png[]"
      },
      {
        "lineNumber": 871,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 872,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Here is an example of the sequence for the UI when `DayViewCommand` is executed to change the date of the timeline."
      },
      {
        "lineNumber": 873,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 874,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Step 1. When the command is executed, it will proceed to call `UiManager` through `viewDay(calendarDate)`, which in turn will call `MainWindow` and subsequently `CalendarPanel`."
      },
      {
        "lineNumber": 875,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 876,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Step 2. `CalendarPanel` will proceed to execute `changeCalendarScreenDate(calendarDate)`, which will create an instance of `CalendarScreen` to display the calendar."
      },
      {
        "lineNumber": 877,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 878,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Step 3. Afterward, a new instance of `TimelineDayView` will be created to display the timeline."
      },
      {
        "lineNumber": 879,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 880,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Step 4. Lastly, `MainWindow` will call `viewCalendar` which will be explained in the next section, allowing `CalendarPanel` to be visible while the other panels remain invisible."
      },
      {
        "lineNumber": 881,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 882,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "// end::uiDayView[]"
      },
      {
        "lineNumber": 883,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 884,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003d\u003d\u003d\u003d Implementation when changing views"
      },
      {
        "lineNumber": 885,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ".Sequence Diagram for changing to Calendar View"
      },
      {
        "lineNumber": 886,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "image::UiViewCalendarSequenceDiagram.png[]"
      },
      {
        "lineNumber": 887,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 888,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Here is an example of the sequence for the UI when `CalendarViewCommand` is executed."
      },
      {
        "lineNumber": 889,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 890,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Step 1. When the command is executed, it will proceed to call `UiManager` through `viewCalendar(calendarDate)`, which will proceed to check if the giving date is null or a date. The validity check is previously check in the parser."
      },
      {
        "lineNumber": 891,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 892,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Step 2. If calendarDate is null, the `UiManager` will simply call `MainWindow` to switch the view with the method `viewCalendar()`."
      },
      {
        "lineNumber": 893,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 894,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Step 3. `MainWindow` will obtain the `Region` of the 3 panels: `CalendarPanel`, `ListPanel` and `LogPanel`, and proceed to set only `CalendarPanel` to be visible."
      },
      {
        "lineNumber": 895,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 896,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Step 4. If calendarDate is not null, `UiManager` will then call `MainWindow` using `changeCalendarScreenDate(calendarDate)`, to change the `CalendarScreen` to the given date."
      },
      {
        "lineNumber": 897,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 898,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Step 5. Afterward, it will proceed and continue with Step 3, which is simply calling `viewCalendar()` again."
      },
      {
        "lineNumber": 899,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 900,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Since the sequence for `CalendarViewCommand` is roughly similar to `ListViewCommand` and `LogViewCommand`, those 2 commands will not be explained."
      },
      {
        "lineNumber": 901,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 902,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "// tag::uiDesign[]"
      },
      {
        "lineNumber": 903,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003d\u003d\u003d\u003d Design Considerations"
      },
      {
        "lineNumber": 904,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 905,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "The design considerations are more towards how the appearance of the UI, as well as how the architecture of the code would have changed depending on such appearance."
      },
      {
        "lineNumber": 906,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 907,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ".Old design of the UI for Horo"
      },
      {
        "lineNumber": 908,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "image::oldUI.png[]"
      },
      {
        "lineNumber": 909,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 910,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ".Current design of the UI for Horo"
      },
      {
        "lineNumber": 911,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "image::Ui.png[]"
      },
      {
        "lineNumber": 912,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 913,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d Aspect: Design of the `CalendarPanel`"
      },
      {
        "lineNumber": 914,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* Alternative 1: The `CalendarPanel` is of an actual calendar, depicting a limited number of events and tasks on each day of the month."
      },
      {
        "lineNumber": 915,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 916,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "** **Pros**: It will provide a better representation of a calendar, allowing people to judge how much is going on in a day of that month in one look."
      },
      {
        "lineNumber": 917,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 918,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "** **Cons**: Due to the nature of how limited in size a calendar can be, the user will be required to either check `ListPanel` for the details of an event or task, or have an extra screen beside the calendar for the user to check the details."
      },
      {
        "lineNumber": 919,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 920,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "** **Cons**: Similarly, a calendar can only input up to a fixed amount of events or tasks there are on a particular day."
      },
      {
        "lineNumber": 921,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 922,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* Alternative 2 (current choice): The `CalendarPanel` consists of a mini-calendar as well as a timeline. An additional slot for upcoming events and tasks was later designed with an increase in space."
      },
      {
        "lineNumber": 923,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 924,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "** **Pros**: Provides a much greater space to show how much events or tasks one can have in a day, week or month."
      },
      {
        "lineNumber": 925,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 926,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "** **Pros**: The user can easily manage and check the Events and Tasks of a certain day."
      },
      {
        "lineNumber": 927,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 928,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "** **Cons**: Even though it is a timeline, it is still rather similar to list view, just with the timeline added to limit the number of events or tasks seen on that day, week or month."
      },
      {
        "lineNumber": 929,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 930,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "** **Cons**: The user will not be able to easily know what Events or Tasks there are, unless they change the view to Month view. On the other hand, the increase in space allows a small section for the upcoming events and tasks which tackles this problem."
      },
      {
        "lineNumber": 931,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 932,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d Aspect: Design of the `LogPanel`"
      },
      {
        "lineNumber": 933,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* Alternative 1: The `LogPanel` is placed side-by-side with any other panel."
      },
      {
        "lineNumber": 934,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 935,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "** **Pros**: The users can always have a visualization of the success of their commands"
      },
      {
        "lineNumber": 936,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 937,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "** **Cons**: A large portion of the space is used for the `LogPanel`, even if it is scaled down compared to the other panels."
      },
      {
        "lineNumber": 938,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 939,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "** **Cons**: Appearance-wise, it looks extremely clunky due to most of the users\u0027 time will be looking at the calendar or list itself instead of the log."
      },
      {
        "lineNumber": 940,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 941,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* Alternative 2 (current choice): The `LogPanel` is placed separately as a different panel that can be accessed at any time from other panels. After each command is typed, a pop-up box will appear to indicate the success or failure of the command."
      },
      {
        "lineNumber": 942,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 943,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "** **Pros**: Most of the time, users would only want to know if their command is successful or not. Thus having the pop-up box will be sufficient for such an indication."
      },
      {
        "lineNumber": 944,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 945,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "** **Cons**: The user will have to check the `LogPanel`"
      },
      {
        "lineNumber": 946,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 947,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "The initial design is as of the image above showing the old UI. However, we decided to scrape it and did an overhaul of the UI using alternative 2 instead. This is due to our decision of wanting a better-looking and minimalist UI instead of one packed with information."
      },
      {
        "lineNumber": 948,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 949,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "// end::uiDesign[]"
      },
      {
        "lineNumber": 950,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 951,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Documentation"
      },
      {
        "lineNumber": 952,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 953,
        "author": {
          "gitId": "-"
        },
        "content": "Refer to the guide \u003c\u003cDocumentation#, here\u003e\u003e."
      },
      {
        "lineNumber": 954,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 955,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Testing"
      },
      {
        "lineNumber": 956,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 957,
        "author": {
          "gitId": "-"
        },
        "content": "Refer to the guide \u003c\u003cTesting#, here\u003e\u003e."
      },
      {
        "lineNumber": 958,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 959,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Dev Ops"
      },
      {
        "lineNumber": 960,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 961,
        "author": {
          "gitId": "-"
        },
        "content": "Refer to the guide \u003c\u003cDevOps#, here\u003e\u003e."
      },
      {
        "lineNumber": 962,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 963,
        "author": {
          "gitId": "-"
        },
        "content": "[appendix]"
      },
      {
        "lineNumber": 964,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Product Scope"
      },
      {
        "lineNumber": 965,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 966,
        "author": {
          "gitId": "-"
        },
        "content": "*Target user profile*:"
      },
      {
        "lineNumber": 967,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 968,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* is a student"
      },
      {
        "lineNumber": 969,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* has a need to manage their Events and Tasks for visualization."
      },
      {
        "lineNumber": 970,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* requires reminders for their Events and Tasks."
      },
      {
        "lineNumber": 971,
        "author": {
          "gitId": "-"
        },
        "content": "* prefer desktop apps over other types"
      },
      {
        "lineNumber": 972,
        "author": {
          "gitId": "-"
        },
        "content": "* can type fast"
      },
      {
        "lineNumber": 973,
        "author": {
          "gitId": "-"
        },
        "content": "* prefers typing over mouse input"
      },
      {
        "lineNumber": 974,
        "author": {
          "gitId": "-"
        },
        "content": "* is reasonably comfortable using CLI apps"
      },
      {
        "lineNumber": 975,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 976,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "*Value proposition*: manage Reminders as well as viewing Events and Tasks much faster than a typical mouse/GUI driven app"
      },
      {
        "lineNumber": 977,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 978,
        "author": {
          "gitId": "-"
        },
        "content": "[appendix]"
      },
      {
        "lineNumber": 979,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d User Stories"
      },
      {
        "lineNumber": 980,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 981,
        "author": {
          "gitId": "-"
        },
        "content": "Priorities: High (must have) - `* * \\*`, Medium (nice to have) - `* \\*`, Low (unlikely to have) - `*`"
      },
      {
        "lineNumber": 982,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 983,
        "author": {
          "gitId": "-"
        },
        "content": "[width\u003d\"59%\",cols\u003d\"22%,\u003c23%,\u003c25%,\u003c30%\",options\u003d\"header\",]"
      },
      {
        "lineNumber": 984,
        "author": {
          "gitId": "-"
        },
        "content": "|\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 985,
        "author": {
          "gitId": "-"
        },
        "content": "|Priority |As a ... |I want to ... |So that I can..."
      },
      {
        "lineNumber": 986,
        "author": {
          "gitId": "-"
        },
        "content": "|`* * *` |new user |see usage instructions |refer to instructions when I forget how to use the App"
      },
      {
        "lineNumber": 987,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 988,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "|`* * *` |user |add an Event or Task |keep track of an Event or Task that I have in the future"
      },
      {
        "lineNumber": 989,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 990,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "|`* * *` |user |delete an Event or Task |remove the Event or Task I no longer need."
      },
      {
        "lineNumber": 991,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 992,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "|`* * *` |user |find an Event or Task by name |locate the details of the Event or Task without having to go through the entire list"
      },
      {
        "lineNumber": 993,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 994,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "|`* * *` |user |find an Event or Task by tags|remember the details of the Event or Task that I forget about"
      },
      {
        "lineNumber": 995,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 996,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "|`* * *` |user|undo and redo commands |undo any commands which wrongly inputted"
      },
      {
        "lineNumber": 997,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 998,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "|`* * *` |user|edit my Events and Tasks |change the details of the event, be it location, date or time"
      },
      {
        "lineNumber": 999,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 1000,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "|`* * *` |user that works on multiple computer |port my data between computers |keep track on all my computers."
      },
      {
        "lineNumber": 1001,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 1002,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "|`* * *` |student |have constant reminders to track the deadline of my assignments |not forget to complete and submit them"
      },
      {
        "lineNumber": 1003,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 1004,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "|`* * *` |student |keep track of how long it takes for me to complete a task |gauge how long I will need to take for future similar tasks"
      },
      {
        "lineNumber": 1005,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 1006,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "|`* * *` |student with weekly assignments and lectures |have my reminders to be recurring | be reminded without having to input the information in again"
      },
      {
        "lineNumber": 1007,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1008,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "|`* * *` |busy student |have a convenient way to visually see my assignments and projects |complete them in the right priority"
      },
      {
        "lineNumber": 1009,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1010,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "|`* * *` |busy user |be informed if any different events clash with each other |understand which event to prioritize or reschedule"
      },
      {
        "lineNumber": 1011,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1012,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "|`* *` |user |add a contacts | add them into Events to remind myself who I am meeting up with"
      },
      {
        "lineNumber": 1013,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1014,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "|`* *` |user |archive my completed Tasks | remind myself if I complete a task but forgot about it"
      },
      {
        "lineNumber": 1015,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1016,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "|`* *` |user |create custom commands that contain the execution of multiple sub-commands |quickly input in a command without the need to edit it"
      },
      {
        "lineNumber": 1017,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1018,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "|`* *` |student |visualize my timetable |plan for when it is time to take a break from studying"
      },
      {
        "lineNumber": 1019,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 1020,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "|`* *` |student |find a time for my project teammates to meet up |schedule a meeting without clashing together with other events"
      },
      {
        "lineNumber": 1021,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 1022,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "|`*` |user |import contacts in vCard format| integrate them with my events"
      },
      {
        "lineNumber": 1023,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 1024,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "|`*` |user |export contacts in vCard format | integrate them with my other computers"
      },
      {
        "lineNumber": 1025,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 1026,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "|`*` |student |keep track of sub-tasks in a main task | know my current progress in a report"
      },
      {
        "lineNumber": 1027,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1028,
        "author": {
          "gitId": "-"
        },
        "content": "|\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 1029,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1030,
        "author": {
          "gitId": "-"
        },
        "content": "_{More to be added}_"
      },
      {
        "lineNumber": 1031,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1032,
        "author": {
          "gitId": "-"
        },
        "content": "[appendix]"
      },
      {
        "lineNumber": 1033,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Use Cases"
      },
      {
        "lineNumber": 1034,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1035,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "(For all use cases below, the *System* is the `Horo` and the *Actor* is the `user`, unless specified otherwise)"
      },
      {
        "lineNumber": 1036,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1037,
        "author": {
          "gitId": "-"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 1038,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003d\u003d\u003d Use case 1: Add a Task"
      },
      {
        "lineNumber": 1039,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1040,
        "author": {
          "gitId": "-"
        },
        "content": "*MSS*"
      },
      {
        "lineNumber": 1041,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1042,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "1.  User requests to add a Task"
      },
      {
        "lineNumber": 1043,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "2.  Horo replies that the Task has been added"
      },
      {
        "lineNumber": 1044,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 1045,
        "author": {
          "gitId": "-"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 1046,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1047,
        "author": {
          "gitId": "-"
        },
        "content": "*Extensions*"
      },
      {
        "lineNumber": 1048,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1049,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* 1a. The user adds additional sub-commands to the Task command"
      },
      {
        "lineNumber": 1050,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "+"
      },
      {
        "lineNumber": 1051,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 1052,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 1053,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 1054,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* 2a. The given add Task command is of the wrong format."
      },
      {
        "lineNumber": 1055,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "+"
      },
      {
        "lineNumber": 1056,
        "author": {
          "gitId": "-"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 1057,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "** 2a1. Horo displays an error message."
      },
      {
        "lineNumber": 1058,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "+"
      },
      {
        "lineNumber": 1059,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Use case resumes at step 1."
      },
      {
        "lineNumber": 1060,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 1061,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 1062,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003d\u003d\u003d Use case 2: Delete a Task"
      },
      {
        "lineNumber": 1063,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 1064,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "*MSS*"
      },
      {
        "lineNumber": 1065,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 1066,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "1.  User requests to delete a specific Task from the already displayed list"
      },
      {
        "lineNumber": 1067,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "2.  Horo deletes the Task"
      },
      {
        "lineNumber": 1068,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 1069,
        "author": {
          "gitId": "-"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 1070,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1071,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "*Extensions*"
      },
      {
        "lineNumber": 1072,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 1073,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 1074,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* 2a. The given delete Task command is of the wrong format."
      },
      {
        "lineNumber": 1075,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 1076,
        "author": {
          "gitId": "-"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 1077,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "** 2a1. Horo displays an error message."
      },
      {
        "lineNumber": 1078,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 1079,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Use case resumes at step 1."
      },
      {
        "lineNumber": 1080,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1081,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 1082,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003d\u003d\u003d Use case 3: Find a Task by name"
      },
      {
        "lineNumber": 1083,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 1084,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "*MSS*"
      },
      {
        "lineNumber": 1085,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 1086,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "1.  User requests to find a Task"
      },
      {
        "lineNumber": 1087,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "2.  Horo displays the list of Task with the keywords found in its name"
      },
      {
        "lineNumber": 1088,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "+"
      },
      {
        "lineNumber": 1089,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 1090,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 1091,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "*Extensions*"
      },
      {
        "lineNumber": 1092,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 1093,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 1094,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* 2a. The given find Task command is of the wrong format."
      },
      {
        "lineNumber": 1095,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "+"
      },
      {
        "lineNumber": 1096,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 1097,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "** 2a1. Horo displays an error message."
      },
      {
        "lineNumber": 1098,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "+"
      },
      {
        "lineNumber": 1099,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Use case resumes at step 1."
      },
      {
        "lineNumber": 1100,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 1101,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 1102,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003d\u003d\u003d Use case 4: Undo and Redo commands"
      },
      {
        "lineNumber": 1103,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 1104,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "*MSS*"
      },
      {
        "lineNumber": 1105,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 1106,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "1.  User requests to add an Task"
      },
      {
        "lineNumber": 1107,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "2.  Horo replies that the Task has been added"
      },
      {
        "lineNumber": 1108,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "3.  User requests to undo the command"
      },
      {
        "lineNumber": 1109,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "4.  Horo replies that the previous command has been undone"
      },
      {
        "lineNumber": 1110,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "+"
      },
      {
        "lineNumber": 1111,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 1112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1113,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "*Extensions*"
      },
      {
        "lineNumber": 1114,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 1115,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* 1a. The user adds additional sub-commands to the Task command"
      },
      {
        "lineNumber": 1116,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "+"
      },
      {
        "lineNumber": 1117,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 1118,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 1119,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* 2a. The given add Task command is of the wrong format."
      },
      {
        "lineNumber": 1120,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "+"
      },
      {
        "lineNumber": 1121,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 1122,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "** 2a1. Horo displays an error message."
      },
      {
        "lineNumber": 1123,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Use case resumes at step 1"
      },
      {
        "lineNumber": 1124,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 1125,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* 4a. User decides the to Redo the added Task"
      },
      {
        "lineNumber": 1126,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "+"
      },
      {
        "lineNumber": 1127,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 1128,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "** 3a1. Horo replies that the added Task has been redone"
      },
      {
        "lineNumber": 1129,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "+"
      },
      {
        "lineNumber": 1130,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Use case ends"
      },
      {
        "lineNumber": 1131,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 1132,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 1133,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003d\u003d\u003d Use case 5: Edit a Task"
      },
      {
        "lineNumber": 1134,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 1135,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "*MSS*"
      },
      {
        "lineNumber": 1136,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 1137,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "1.  User requests to add a Task"
      },
      {
        "lineNumber": 1138,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "2.  Horo replies that the Task has been added"
      },
      {
        "lineNumber": 1139,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "3.  User request to edit a Task with the sub-commands"
      },
      {
        "lineNumber": 1140,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "4.  Horo replies that the Task has been edited"
      },
      {
        "lineNumber": 1141,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "+"
      },
      {
        "lineNumber": 1142,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 1143,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 1144,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "*Extensions*"
      },
      {
        "lineNumber": 1145,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 1146,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* 1a. The user adds additional sub-commands to the Task command"
      },
      {
        "lineNumber": 1147,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "+"
      },
      {
        "lineNumber": 1148,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 1149,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 1150,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* 2a. The given add Task command is of the wrong format."
      },
      {
        "lineNumber": 1151,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "+"
      },
      {
        "lineNumber": 1152,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 1153,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "** 2a1. Horo displays an error message."
      },
      {
        "lineNumber": 1154,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "+"
      },
      {
        "lineNumber": 1155,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Use case resumes at step 1."
      },
      {
        "lineNumber": 1156,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 1157,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* 4a. The given edit Task command is of the wrong format."
      },
      {
        "lineNumber": 1158,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "+"
      },
      {
        "lineNumber": 1159,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 1160,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "** 4a1. Horo displays an error message."
      },
      {
        "lineNumber": 1161,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "+"
      },
      {
        "lineNumber": 1162,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Use case resumes at step 3."
      },
      {
        "lineNumber": 1163,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "+"
      },
      {
        "lineNumber": 1164,
        "author": {
          "gitId": "-"
        },
        "content": "_{More to be added}_"
      },
      {
        "lineNumber": 1165,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1166,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 1167,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "\u003d\u003d\u003d Use case 6: Export Command"
      },
      {
        "lineNumber": 1168,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "*MSS*"
      },
      {
        "lineNumber": 1169,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 1170,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "1.  User requests to export Horo data."
      },
      {
        "lineNumber": 1171,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "2.  Horo creates a file in the same directory as Horo."
      },
      {
        "lineNumber": 1172,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "3.  Horo replies that its data has been successfully exported."
      },
      {
        "lineNumber": 1173,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "+"
      },
      {
        "lineNumber": 1174,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "Use Case Ends."
      },
      {
        "lineNumber": 1175,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 1176,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "*Extensions*"
      },
      {
        "lineNumber": 1177,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 1178,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "* 2a. The user specifies which directory to export the save data to."
      },
      {
        "lineNumber": 1179,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "+"
      },
      {
        "lineNumber": 1180,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "Use Case resumes at step 3."
      },
      {
        "lineNumber": 1181,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 1182,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 1183,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "\u003d\u003d\u003d Use case 7: Import Command"
      },
      {
        "lineNumber": 1184,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "*MSS*"
      },
      {
        "lineNumber": 1185,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 1186,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "1.  User requests to import Horo data from a specific file."
      },
      {
        "lineNumber": 1187,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "2.  The file is imported into Horo."
      },
      {
        "lineNumber": 1188,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "3.  Horo replies that the data has successfully been imported into Horo."
      },
      {
        "lineNumber": 1189,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "+"
      },
      {
        "lineNumber": 1190,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "Use Case Ends."
      },
      {
        "lineNumber": 1191,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 1192,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "**Extensions**"
      },
      {
        "lineNumber": 1193,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 1194,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "* 1a.  The file does not exist or is corrupted."
      },
      {
        "lineNumber": 1195,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "** 1a1. Horo replies with an error message."
      },
      {
        "lineNumber": 1196,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "+"
      },
      {
        "lineNumber": 1197,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "Use Case Ends."
      },
      {
        "lineNumber": 1198,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 1199,
        "author": {
          "gitId": "-"
        },
        "content": "[appendix]"
      },
      {
        "lineNumber": 1200,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Non Functional Requirements"
      },
      {
        "lineNumber": 1201,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1202,
        "author": {
          "gitId": "-"
        },
        "content": ".  Should work on any \u003c\u003cmainstream-os,mainstream OS\u003e\u003e as long as it has Java `11` or above installed."
      },
      {
        "lineNumber": 1203,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ".  Should be able to hold up to 1000 Events and Tasks without a noticeable sluggishness in performance for typical usage."
      },
      {
        "lineNumber": 1204,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ".  Should function on both `32-bit environment` and `64-bit environment`"
      },
      {
        "lineNumber": 1205,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ".  Should work without any internet required."
      },
      {
        "lineNumber": 1206,
        "author": {
          "gitId": "-"
        },
        "content": ".  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse."
      },
      {
        "lineNumber": 1207,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1208,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1209,
        "author": {
          "gitId": "-"
        },
        "content": "_{More to be added}_"
      },
      {
        "lineNumber": 1210,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1211,
        "author": {
          "gitId": "-"
        },
        "content": "[appendix]"
      },
      {
        "lineNumber": 1212,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Glossary"
      },
      {
        "lineNumber": 1213,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1214,
        "author": {
          "gitId": "-"
        },
        "content": "[[mainstream-os]] Mainstream OS::"
      },
      {
        "lineNumber": 1215,
        "author": {
          "gitId": "-"
        },
        "content": "Windows, Linux, Unix, OS-X"
      },
      {
        "lineNumber": 1216,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1217,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "[[event]] Event::"
      },
      {
        "lineNumber": 1218,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "A thing that happens or takes place during a certain period of time, or of a general time."
      },
      {
        "lineNumber": 1219,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 1220,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "[[task]] Task::"
      },
      {
        "lineNumber": 1221,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "A piece of work that is to be completed or taken note of."
      },
      {
        "lineNumber": 1222,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1223,
        "author": {
          "gitId": "-"
        },
        "content": "[appendix]"
      },
      {
        "lineNumber": 1224,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Product Survey"
      },
      {
        "lineNumber": 1225,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1226,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "*reminder-bot on Discord*"
      },
      {
        "lineNumber": 1227,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1228,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Author: JellyWX"
      },
      {
        "lineNumber": 1229,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1230,
        "author": {
          "gitId": "-"
        },
        "content": "Pros:"
      },
      {
        "lineNumber": 1231,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1232,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* A reminder bot on a popular voice and text chat application"
      },
      {
        "lineNumber": 1233,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* Capable of parsing english language as compared to CLI styled commands"
      },
      {
        "lineNumber": 1234,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1235,
        "author": {
          "gitId": "-"
        },
        "content": "Cons:"
      },
      {
        "lineNumber": 1236,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1237,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* Lack of visualization of the Events and Tasks"
      },
      {
        "lineNumber": 1238,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* Parsing english language makes it slower to type with a longer requirement as compared to CLI styled commands"
      },
      {
        "lineNumber": 1239,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1240,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "*Google Calendar*"
      },
      {
        "lineNumber": 1241,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1242,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Company: Google"
      },
      {
        "lineNumber": 1243,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1244,
        "author": {
          "gitId": "-"
        },
        "content": "Pros:"
      },
      {
        "lineNumber": 1245,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1246,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* A Calendar application that is capable of storing Events and Tasks as well."
      },
      {
        "lineNumber": 1247,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* Mostly uses GUI for interaction with user instead of having CLI, favouring to the common crowd."
      },
      {
        "lineNumber": 1248,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1249,
        "author": {
          "gitId": "-"
        },
        "content": "Cons:"
      },
      {
        "lineNumber": 1250,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1251,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* Mostly uses GUI for interaction with user instead of having CLI, which does not favour those who prefers CLI."
      },
      {
        "lineNumber": 1252,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* It requires an account to be usable."
      },
      {
        "lineNumber": 1253,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* The desktop version requires a browser, which in turn requires Internet and hence not offline."
      },
      {
        "lineNumber": 1254,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1255,
        "author": {
          "gitId": "-"
        },
        "content": "[appendix]"
      },
      {
        "lineNumber": 1256,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Instructions for Manual Testing"
      },
      {
        "lineNumber": 1257,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1258,
        "author": {
          "gitId": "-"
        },
        "content": "Given below are instructions to test the app manually."
      },
      {
        "lineNumber": 1259,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1260,
        "author": {
          "gitId": "-"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 1261,
        "author": {
          "gitId": "-"
        },
        "content": "These instructions only provide a starting point for testers to work on; testers are expected to do more _exploratory_ testing."
      },
      {
        "lineNumber": 1262,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1263,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Launch and Shutdown"
      },
      {
        "lineNumber": 1264,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1265,
        "author": {
          "gitId": "-"
        },
        "content": ". Initial launch"
      },
      {
        "lineNumber": 1266,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1267,
        "author": {
          "gitId": "-"
        },
        "content": ".. Download the jar file and copy into an empty folder"
      },
      {
        "lineNumber": 1268,
        "author": {
          "gitId": "-"
        },
        "content": ".. Double-click the jar file +"
      },
      {
        "lineNumber": 1269,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  Expected: Shows the GUI with the calendar at today\u0027s date, with no events or tasks."
      },
      {
        "lineNumber": 1270,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1271,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003d\u003d\u003d Adding, Deleting and Editing Events"
      },
      {
        "lineNumber": 1272,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 1273,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ". Adding"
      },
      {
        "lineNumber": 1274,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 1275,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ".. Start Horo with no save data."
      },
      {
        "lineNumber": 1276,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ".. Enter `list` into the command box."
      },
      {
        "lineNumber": 1277,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ".. Enter `add_event \"My Event Description\" \"11/11/2019 12:00\"` into the command box."
      },
      {
        "lineNumber": 1278,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ".. Expected: An event will be created with the title \"My Event Description\", with start date \"11/11/2019 12:00\"."
      },
      {
        "lineNumber": 1279,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 1280,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ". Editing"
      },
      {
        "lineNumber": 1281,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 1282,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ".. Enter `edit_event 0 --description \"New Event Description\"` into the command box."
      },
      {
        "lineNumber": 1283,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ".. Expected: Your event \"My Event Description\" will be renamed to \"New Event Description\"."
      },
      {
        "lineNumber": 1284,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 1285,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ". Deleting"
      },
      {
        "lineNumber": 1286,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 1287,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ".. Enter `delete_event 0` into the command box."
      },
      {
        "lineNumber": 1288,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ".. Expected: Your event \"New Event Description\" will be deleted, leaving an empty list view."
      },
      {
        "lineNumber": 1289,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 1290,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003d\u003d\u003d Import and Export"
      },
      {
        "lineNumber": 1291,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 1292,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ". Export"
      },
      {
        "lineNumber": 1293,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 1294,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ".. Start Horo with no save data."
      },
      {
        "lineNumber": 1295,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ".. Enter the `export` command. +"
      },
      {
        "lineNumber": 1296,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "Expected: A save file with the name `Horo_export_\u003ctimestamp\u003e.ics` will be created in the"
      },
      {
        "lineNumber": 1297,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "same directory as Horo\u0027s jar file."
      },
      {
        "lineNumber": 1298,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ".. Enter the command `export **--directory** \u003cDIRECTORY\u003e`,"
      },
      {
        "lineNumber": 1299,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "where \u003cDIRECTORY\u003e is the directory where the save file will be created. +"
      },
      {
        "lineNumber": 1300,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "Expected: The save file will be created in the specified directory."
      },
      {
        "lineNumber": 1301,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 1302,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ". Import from iCalendar file."
      },
      {
        "lineNumber": 1303,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ".. Create some events and tasks in Horo."
      },
      {
        "lineNumber": 1304,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ".. Take note of the current events and tasks by entering the `list` command,"
      },
      {
        "lineNumber": 1305,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "going into the list view."
      },
      {
        "lineNumber": 1306,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ".. Enter the `export` command."
      },
      {
        "lineNumber": 1307,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ".. Delete the save data from Horo and re-launch the app."
      },
      {
        "lineNumber": 1308,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ".. Import the save data using the import command `import \u003cFILEPATH\u003e`. +"
      },
      {
        "lineNumber": 1309,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "Expected: The imported events and tasks should be the same as when they were exported."
      },
      {
        "lineNumber": 1310,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 1311,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "// tag::notifmanualtesting[]"
      },
      {
        "lineNumber": 1312,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d\u003d\u003d Notification System"
      },
      {
        "lineNumber": 1313,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 1314,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ". Posting notifications to the desktop"
      },
      {
        "lineNumber": 1315,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ".. Prerequisites: Make sure notifications have been switched on by using the `notif_on` command. +"
      },
      {
        "lineNumber": 1316,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                  Make sure the System Tray is supported."
      },
      {
        "lineNumber": 1317,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ".. Test case: `add_event \"Test Event\" \"[CURRENT DATE] [CURRENT TIME INCREMENTED BY ONE MINUTE]\"` +"
      },
      {
        "lineNumber": 1318,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "   Expected: Upon the next minute, a notification should be posted to your desktop through the system tray."
      },
      {
        "lineNumber": 1319,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ".. Test case: `add_task \"Test Task\" --due \"[CURRENT DATE] [CURRENT TIME INCREMENTED BY ONE MINUTE]\"`"
      },
      {
        "lineNumber": 1320,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "   Expected: Upon the next minute, a notification should be posted to your desktop through the system tray."
      },
      {
        "lineNumber": 1321,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "// end::notifmanualtesting[]"
      },
      {
        "lineNumber": 1322,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 1323,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "// tag::uiManualTest[]"
      },
      {
        "lineNumber": 1324,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003d\u003d\u003d Ui System"
      },
      {
        "lineNumber": 1325,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 1326,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ". Change between different UI views"
      },
      {
        "lineNumber": 1327,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ".. Prerequisites: Make sure you are on a different view panel than the one you are going to execute."
      },
      {
        "lineNumber": 1328,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ".. Test case: `list` +"
      },
      {
        "lineNumber": 1329,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Expected: Changes to the list view panel."
      },
      {
        "lineNumber": 1330,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ".. Test case: `log` +"
      },
      {
        "lineNumber": 1331,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Expected: Changes to the log view panel."
      },
      {
        "lineNumber": 1332,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ".. Test case: `calendar` +"
      },
      {
        "lineNumber": 1333,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Expected: Changes to the calendar view panel."
      },
      {
        "lineNumber": 1334,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 1335,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ". Change date of the calendar without changing the timeline."
      },
      {
        "lineNumber": 1336,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ".. Test case: `calendar --date \"10/2019\"` +"
      },
      {
        "lineNumber": 1337,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Expected: Calendar date will change accordingly"
      },
      {
        "lineNumber": 1338,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ".. If you are not in the calendar view panel, it should change the current view to the calendar view."
      },
      {
        "lineNumber": 1339,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 1340,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ". Change date of the timeline in calendar view"
      },
      {
        "lineNumber": 1341,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ".. Test case: `week dd/MM/yyyy` +"
      },
      {
        "lineNumber": 1342,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Expected: Changes the timeline to the week view containing that day in the given week."
      },
      {
        "lineNumber": 1343,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 1344,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ".. Test case: `month MM/yyyy` +"
      },
      {
        "lineNumber": 1345,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Expected: Changes the timeline to the month view of the specified month and year."
      },
      {
        "lineNumber": 1346,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 1347,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ".. Test case: `day dd/MM/yyyy` +"
      },
      {
        "lineNumber": 1348,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Expected: Changes the timeline to the day view of the specified day, month and year."
      },
      {
        "lineNumber": 1349,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 1350,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ".. For all the test cases, if you are not in calendar view panel, it should change the current view to the calendar view."
      },
      {
        "lineNumber": 1351,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "// end::uiManualTest[]"
      },
      {
        "lineNumber": 1352,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 1353,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003d\u003d\u003d Undoing and Redoing Commands"
      },
      {
        "lineNumber": 1354,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 1355,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ". Undoing an `add_event` or `add_task` command"
      },
      {
        "lineNumber": 1356,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ".. Firstly, switch to the List-view of Horo"
      },
      {
        "lineNumber": 1357,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "... `listview`"
      },
      {
        "lineNumber": 1358,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ".. Input the following command to add an event:"
      },
      {
        "lineNumber": 1359,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "... `add_event \"Test Event\" \"[CURRENT DATE] [CURRENT TIME]`"
      },
      {
        "lineNumber": 1360,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ".. To add a task, input the following command:"
      },
      {
        "lineNumber": 1361,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "... `add_task \"Test Task\"`"
      },
      {
        "lineNumber": 1362,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ".. Expected: The added event or task is now visible in the List-view of Horo"
      },
      {
        "lineNumber": 1363,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ".. Now, run the undo command"
      },
      {
        "lineNumber": 1364,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "... `undo`"
      },
      {
        "lineNumber": 1365,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ".. Expected: The added event or task is no longer visible in the List-view of Horo"
      },
      {
        "lineNumber": 1366,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 1367,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ". Redoing an `add_event` or `add_task` command"
      },
      {
        "lineNumber": 1368,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ".. Continuing from the above undo command, now run the redo command"
      },
      {
        "lineNumber": 1369,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "... `redo`"
      },
      {
        "lineNumber": 1370,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ".. Expected: the formerly added event or task reappears in the List-view of Horo"
      },
      {
        "lineNumber": 1371,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 1372,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ". Undoing `delete_event` or `delete_task` command"
      },
      {
        "lineNumber": 1373,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ".. Firstly, switch to the List-view of Horo"
      },
      {
        "lineNumber": 1374,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "... `listview`"
      },
      {
        "lineNumber": 1375,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ".. Input the following command to add an event: (Since our delete command allows multiple deletion, try adding more than one)"
      },
      {
        "lineNumber": 1376,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "... `add_event \"Test Event\" \"[CURRENT DATE] [CURRENT TIME]`"
      },
      {
        "lineNumber": 1377,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ".. To add a task, input the following command:"
      },
      {
        "lineNumber": 1378,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "... `add_task \"Test Task\"`"
      },
      {
        "lineNumber": 1379,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ".. Expected: The added event or task is now visible in the List-view of Horo"
      },
      {
        "lineNumber": 1380,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ".. Now, delete the event or task that you have added (you can delete multiple by specifying multiple indexes delimited by spaces)"
      },
      {
        "lineNumber": 1381,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "... `delete_event [INDEX/ES OF EVENT IN LIST VIEW]`"
      },
      {
        "lineNumber": 1382,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "... `delete_task [INDEX/ES OF TASK IN LIST VIEW]`"
      },
      {
        "lineNumber": 1383,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "... Example: `delete_event 0 1 2` (deletes the events with index 0, 1 and 2)"
      },
      {
        "lineNumber": 1384,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ".. Expected: The added events or tasks are no longer visible in the List-view of Horo"
      },
      {
        "lineNumber": 1385,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ".. Run the undo command"
      },
      {
        "lineNumber": 1386,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "... `undo`"
      },
      {
        "lineNumber": 1387,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ".. Expected: The deleted events and tasks are again visible in the List-view of Horo"
      },
      {
        "lineNumber": 1388,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 1389,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ". Redoing a `delete_event` or `delete_task` command"
      },
      {
        "lineNumber": 1390,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ".. Continuing from the above undo command, now run the redo command"
      },
      {
        "lineNumber": 1391,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "... `redo`"
      },
      {
        "lineNumber": 1392,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ".. Expected: the formerly added events or tasks are once again removed from the List-view of Horo"
      },
      {
        "lineNumber": 1393,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 1394,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ". Undoing `edit_event` or `edit_task` command"
      },
      {
        "lineNumber": 1395,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ".. Firstly, switch to the List-view of Horo"
      },
      {
        "lineNumber": 1396,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "... `listview`"
      },
      {
        "lineNumber": 1397,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ".. Input the following command to add an event:"
      },
      {
        "lineNumber": 1398,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "... `add_event \"Test Event\" \"[CURRENT DATE] [CURRENT TIME]`"
      },
      {
        "lineNumber": 1399,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ".. To add a task, input the following command:"
      },
      {
        "lineNumber": 1400,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "... `add_task \"Test Task\"`"
      },
      {
        "lineNumber": 1401,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ".. Expected: The added event or task is now visible in the List-view of Horo"
      },
      {
        "lineNumber": 1402,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ".. Now, edit the event or task that you have added (the description, due date and tags are optional)"
      },
      {
        "lineNumber": 1403,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "... `edit_event [INDEX OF EVENT IN LIST VIEW] [NEW DESCRIPTION] [NEW DUE DATE] [NEW TAG]`"
      },
      {
        "lineNumber": 1404,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "... Example: `edit_task 1 --description \"Buy Rori a present\" --due \"17/08/2019 12:00\" --tag Present`"
      },
      {
        "lineNumber": 1405,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ".. Expected: Any of the specified new description, due date or tag of the event or task will replace the old information in the List-view"
      },
      {
        "lineNumber": 1406,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ".. Run the undo command"
      },
      {
        "lineNumber": 1407,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "... `undo`"
      },
      {
        "lineNumber": 1408,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ".. Expected: The task or event will contain its old data before the edit was being made"
      },
      {
        "lineNumber": 1409,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 1410,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ". Redoing a `edit_event` or `edit_task` command"
      },
      {
        "lineNumber": 1411,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ".. Continuing from the above undo command, now run the redo command"
      },
      {
        "lineNumber": 1412,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "... `redo`"
      },
      {
        "lineNumber": 1413,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ".. Expected: the event or task has been updated again to the new information that was initially specified in the edit command"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 76,
      "Kyzure": 411,
      "marcusteh1238": 95,
      "bruceskellator": 133,
      "WeomuCat": 420,
      "-": 278
    }
  },
  {
    "path": "docs/UserGuide.adoc",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d Horo - User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ":site-section: UserGuide"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ":toc:"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ":toc-title:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ":toc-placement: preamble"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ":sectnums:"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ":imagesDir: images"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ":stylesDir: stylesheets"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ":xrefstyle: full"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ":experimental:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "ifdef::env-github[]"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ":tip-caption: :bulb:"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ":note-caption: :information_source:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "endif::[]"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ":repoURL: https://github.com/AY1920S1-CS2103T-F12-1/main"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "By: `Team AY1920S1-CS2103T-F12-1`      Since: `Sept 2019`      Licence: `MIT`"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Introduction"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "*Horo* is a command-line interface scheduling application."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "It helps the user maintain a to-do list and a calendar, and posts timely reminders on their desktop."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "This User Guide provides documentation of *Horo*\u0027s functionalities."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Users may refer to this guide as a reference for what the application can do, as well as the commands that Horo will accept."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Quick Start"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ".  Ensure you have Java `11` or above installed in your Computer."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ".  Download the latest `horo.jar` link:{repoURL}/releases[here]."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ".  Copy the file to the folder you want to use as the home folder for Horo."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ".  Double-click the file to start the app. The GUI should appear in a few seconds."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* It is prefable to change your `horo.jar` location to an empty folder."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ".  If double-clicking fails to start the app then do the following steps:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "*  Open up Command Prompt"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "*  Change directory to your `horo.jar` location saved location."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "*  Type `java -jar horo.jar` and GUI should appear in a few seconds."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ".Startup Screen Shot of Horo"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "image::Ui.png[width\u003d\"790\"]"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ".  Type the command in the command box and press kbd:[Enter] to execute it."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ".  Some example commands you can try:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "* `*add_task* \"Buy Groceries\"`: adds a task to Horo."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "* `*delete_task* 0` : deletes the first task in Horo."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "* `*exit*` : exits Horo."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ".  Refer to \u003c\u003cFeatures\u003e\u003e for details of each command."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "[[Features]]"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Features"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "//tag::commandFormat[]"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "*Command Format for Horo*"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "* You can enter a command by typing the command name first followed by arguments of the command."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- E.g. `*command_name* \u003cargument1\u003e \u003cargument2\u003e...`"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "* If you want to type an argument containing blank spaces, surround your sentence within quotation marks."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- E.g. `\"Buy Groceries\"`"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- E.g. `*add_task* \"Buy Groceries\"`"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "* Command parameters are prefixed by `--`, and they are optional."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- E.g. `*--date* 09/2019`"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- E.g. `*calendar* *--date* 09/2019`"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "* Please take note that commands with extra arguments given are truncated."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- E.g. The `*calendar*` command does not accept any arguments, therefore if you enter `*calendar* 09/2019`, `09/2019` will be silently discarded."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "*Command Format for this User Guide*"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "* Arguments are fully capitalized which are to be supplied by you."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- E.g. `*add_task* TASK`"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "* Arguments suffixed with ellipsis (`...`) indicate that the argument can be entered zero or more times."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- E.g. `*delete_task* INDEX...`"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "* Parameters separated by a vertical bar `|` can be used interchangeably."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- e.g. given the command format `-d|--description DESCRIPTION`, the following inputs accomplish the same thing:"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- `*--description* \"Buy Groceries\"`"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- `*-d* \"Buy Groceries\"`"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "//end::commandFormat[]"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d\u003d\u003d Asking for help : `help` **`[coming in v2.0]`**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "Provides a guide if you ever need help with Horo\u0027s commands and command formats."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Command Format: +"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*help*`"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d\u003d\u003d Calendar, Events and Task"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "The following commands are related to Events and Tasks, which Horo recognises as different entities. Stated below are the differences between Events and Tasks:"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "* Event:"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "- Will show up on the Calendar."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "- Cannot be marked as done. **`[coming in v2.0]`**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "- Will be automatically removed from the Calendar past its due date, provided it is a non-recurring event."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "* Task"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "- Will show up on the Calendar only if a due-date is specified. Otherwise it will be specified in the List."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "- Can be marked as done. **`[coming in v2.0]`**"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "- If not accomplished by its due date, will be automatically archived into an undone list."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d\u003d\u003d\u003d Adding Events"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ".Add Event Command"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "image::AddEventCommandScreenShot.png[]"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "You may use the `add_event` command to add an event to the calendar."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Command Format:"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "****"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "*add_event* DESCRIPTION START_DATE"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "****"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Command Parameters:"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- `*--end* END_DATE`"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- `*--remind* REMIND_DATE`"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- `*--tag* TAG...`"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Argument Format:"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- `START_DATE` : `\"DD/MM/YYYY HH:MM\"`"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- `END_DATE` : `\"DD/MM/YYYY HH:MM\"`"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- `REMIND_DATE` : `\"DD/MM/YYYY HH:MM\"`"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- `*add_event* \"Rori\u0027s Birthday\" \"18/08/2019 16:00\"`"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- `*add_event* \"Rori\u0027s Birthday\" \"18/08/2019 16:00\" *--end* \"18/08/2019 20:00\"`"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- `*add_event* \"Rori\u0027s Birthday\" \"18/08/2019 16:00\" *--end* \"18/08/2019 20:00\" *--remind* \"18/08/2019 12:00\" *--tag* Birthday Rori`"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`REMIND_DATE` must be before `START_DATE`, and `START_DATE` must be before `END_DATE`."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d\u003d\u003d\u003d Deleting Events"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ".Delete Event Command"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "image::DeleteEventCommandScreenShot.png[]"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "You may use the `delete_event` command to delete one or more events from the calendar."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Command Format:"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "****"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "*delete_event* INDEX..."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "****"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Command Parameters:"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- `*--tag* TAG...`"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- `*delete_event* 0`"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- `*delete_event* 0 1 2` : Deletes events 0, 1 and 2."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- `*delete_event* *--tag* Birthday` : Deletes events tagged as `Birthday`."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- `*delete_event* *--tag* Birthday Rori` : Deletes events tagged as `Birthday` and `Rori`."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- `*delete_event* 0 1 2 *--tag* Birthday Rori` : Deletes events 0, 1 and 2 only if they have been tagged as `Birthday` and `Rori`."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- Events which match both `INDEX` and `TAG` will be deleted."
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- `INDEX` can be found on the event\u0027s top right corner."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ".Index found on the top right of the event."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "image::EventCardScreenShot.png[]"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d\u003d\u003d\u003d Editing Events"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ".Edit Event Command"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "image::EditEventCommandScreenShot.png[]"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "You may use the `edit_event` command to edit one or more existing events."
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Command Format:"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "****"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "*edit_event* INDEX..."
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "****"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Command Parameters:"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- `*--description* DESCRIPTION`"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- `*--start* START_DATE`"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- `*--end* END_DATE`"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- `*--remind* REMIND_DATE`"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- `*--tag* TAG...`"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Argument Format:"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- `START_DATE` : `\"DD/MM/YYYY HH:MM\"`"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- `END_DATE` : `\"DD/MM/YYYY HH:MM\"`"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- `REMIND_DATE` : `\"DD/MM/YYYY HH:MM\"`"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- `*edit_event* 0 1 2 *--tag* Rori` : Edits events 0, 1 and 2."
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- `*edit_event* 0 *--description* \"Play Monster Hunter\" *--start* \"17/08/2019 19:00\" *--remind* \"17/08/2019 12:00\" *--tag* Kyzure`"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- Events which matches `INDEX` will be edited."
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- Specifying `TAG...` will replace all tags instead of appending it."
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- `REMIND_DATE` must be before `START_DATE`, and `START_DATE` must be before `END_DATE`."
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003d\u003d\u003d\u003d Adding Tasks"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ".Adds Task to Task List"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "image::AddTaskCommandScreenShot.png[]"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "You may use the `add_task` command to add a task to the to-do list."
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Command Format:"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "****"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "*add_task* DESCRIPTION"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "****"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Command Parameters:"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- `*--due* DUE_DATE`"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- `*--tag* TAG...`"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Argument Format:"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- `DUE_DATE` : `\"DD/MM/YYYY HH:MM\"`"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "Examples: +"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- `*add_task* \"Buy Rori a birthday cake\"`"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- `*add_task* \"Buy Rori a birthday cake\" *--due* \"18/08/2019 12:00\"`"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- `*add_task* \"Buy Rori a birthday cake\" *--tag* \"Birthday Rori\"`"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003d\u003d\u003d\u003d Deleting Tasks"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ".Delete Task from the task list."
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "image::DeleteTaskCommandScreenShot.png[]"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "You may use the `delete_task` command to delete one or more tasks from the to-do list."
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Command Format:"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "****"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "*delete_task* INDEX..."
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "****"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Command Parameters:"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- `*--tag* TAG...`"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- `*delete_task* 0`"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- `*delete_task* 0 1 2` : Deletes tasks 0, 1 and 2."
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- `*delete_task* *--tag* Birthday` : Deletes tasks tagged as `Birthday`."
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- `*delete_task* *--tag* Birthday Rori` : Deletes tasks tagged as `Birthday` and `Rori`."
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- `*delete_task* 0 1 2 *--tag* Birthday Rori` : Deletes tasks 0, 1 and 2 only if they have been tagged as `Birthday` and `Rori`."
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- Tasks which match both `INDEX` and `TAG` will be deleted."
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- `INDEX` can be found on the task\u0027s top right corner."
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ".Index found on the top right of the task."
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "image::TaskCardScreenShot.png[]"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003d\u003d\u003d\u003d Editing Tasks"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ".Edit Task for Tasks"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "image::EditTaskCommandScreenShot.png[]"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "The `edit_task` command edits 1 or more existing events. Events should be specified by their index only."
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Command Format:"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "****"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "*edit_task* INDEX..."
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "****"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Command Parameters:"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- `*--description* DESCRIPTION`"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- `*--due* DUE_DATE`"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- `*--tag* TAG...`"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Argument Format:"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- `DUE_DATE` : `\"DD/MM/YYYY HH:MM\"`"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- `*edit_task* 0 1 2 *--tag* Present` : Edits tasks 0, 1 and 2."
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- `*edit_task* 0 *--description* \"Buy Rori a present\" *--due* \"17/08/2019 12:00\" *--tag* Present`"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Specifying `TAG...` will replace all tags instead of appending it."
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d\u003d\u003d\u003d Making recurring Events: `recur` **`[coming in v2.0]`**"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "The `recur` command makes an Event show up repeatedly in the Calendar."
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Command Format:"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "*recur* INDEX..."
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Command Parameters:"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- `*-f*|*--frequency*` FREQUENCY"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- `*recur* 0 1 2 *-f* daily` : This will make events 0, 1 and 2 recur daily on the calendar."
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- `*recur* 0 1 2 *--frequency* daily` : This will make events 0, 1 and 2 recur daily on the calendar."
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d\u003d\u003d\u003d Finding Events and Tasks **`[coming in v2.0]`**"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "The `find` command returns Events or Tasks whose name or tag contains the specified keyword. If no optional arguments are specified, all items which name or tags contain the keyword will be returned."
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Command Format:"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "****"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "*find* KEYWORD"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "****"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Command Parameters:"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- `*--event* KEYWORD`"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- `*--task* KEYWORD`"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- `*--tag* KEYWORD...`"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- `*find* Birthday`"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- `*find* *--event* Rori`"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- `*find* *--task* Rori`"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- `*find* *--tag* Birthday`"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- `*find* *--tag* Birthday Pet`"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d\u003d\u003d\u003d Completing Tasks **`[coming in v2.0]`**"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "The `done` command marks a Task as complete. Tasks may be specified by index, or by their associated tags."
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Command Format:"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "*done* INDEX..."
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Command Parameters:"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- `*--tag* TAG...`"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "-"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- `*done* 0`"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- `*done* 0 1 2`"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- `*done* --tag Birthday`"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- `*done* 0 1 2 --tag Birthday`"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d\u003d\u003d Tagging System **`[coming in v2.0]`**"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "The following commands are related to the tagging of Events and Tasks, which gives you finer control over editing your events and tasks."
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d\u003d\u003d\u003d Adding Tags to Events**`[coming in v2.0]`**"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "The `tag_event` command adds tags to the specified Events."
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Command Format:"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "*tag_event* INDEX..."
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Command Parameters:"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- `*--tag* TAG...`"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "-"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- `*tag_event* 0 1 2`"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- `*tag_event* 0 1 2 *--tag* Birthday`"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d\u003d\u003d\u003d Adding Tags to Tasks**`[coming in v2.0]`**"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "The `tag_task` command adds tags to the specified Tasks."
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Command Format:"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "*tag_task* INDEX..."
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Command Parameters:"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- `*--tag* TAG...`"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "-"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- `*tag_task* 0 1 2`"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- `*tag_task* 0 1 2 *--tag* Birthday`"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d\u003d\u003d\u003d Removing Tags from events **`[coming in v2.0]`**"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "The `untag_event` command removes tags from the specified Events."
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Command Format:"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "****"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "*untag_event* INDEX..."
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "****"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Command Parameters:"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- `*--tag* TAG...`"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- `*untag_event* 0 1 2` +"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- `*untag_event* 0 1 2 *--tag* Birthdays`"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d\u003d\u003d\u003d Removing Tags from Tasks **`[coming in v2.0]`**"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "The `untag_task` command removes tags from the specified Tasks."
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Command Format:"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "****"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "*untag_task* INDEX..."
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "****"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Command Parameters:"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- *--tag* TAG..."
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- `*untag_task* 0 1 2` +"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- `*untag_task* 0 1 2 *--tag* Birthdays`"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "// tag::uiCalendarView[]"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d\u003d\u003d UI"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "The following commands are related to the changing the display of the UI."
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "Take note that UI-related commands are not affected by the `undo` and `redo` commands (For more information, see \u003c\u003cUndo-Redo\u003e\u003e)."
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003d\u003d\u003d\u003d Changing Screen View to Calendar View"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ".Calendar View Command for Calendar"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "image::Ui.png[]"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "The `calendar` command switches the display to the Calendar View, which displays a calendar of the specified month and year in addition to a timeline of the specified day, week or month."
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "The Calendar View will display the specified date. If no date is specified, the last specified date will be displayed. This defaults to the current date."
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "Upon the initial launch of the application, the timeline and calendar dates will be set to the system\u0027s current date."
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Command Format: +"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*calendar*` +"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Command Parameters: +"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*--date* MONTH_YEAR`"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Argument Format: +"
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`MONTH_YEAR` : `MM/YYYY`"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Example: +"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "`*calendar*` : Switches back to calendar view without changing the date. +"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*calendar* *--date* 10/2019`"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "// end::uiCalendarView[]"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "// tag::uiTimelineDay[]"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003d\u003d\u003d\u003d Changing Timeline to a given day"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ".Day View Command for the Timeline"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "image::DayViewCommandScreenShot.png[]"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "The `day` command sets the timeline in the Calendar View to that of the specified day. Furthermore, this command will switch the current view to Calendar View as well."
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Command Format: +"
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*day* DATE`"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Argument Format: +"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`DATE` : `DD/MM/YYYY`"
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Example: +"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*day* 11/10/2019`"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "// end::uiTimelineDay[]"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003d\u003d\u003d\u003d Changing Timeline to a given week"
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ".Week View Command for the Timeline"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "image::WeekViewCommandScreenShot.png[]"
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "The `week` command sets the timeline in the Calendar View to the week of the specified day of the month, as well as switching the current view to Calendar View."
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Command Format: +"
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*week* DATE`"
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Argument Format: +"
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`DATE` : `DD/MM/YYYY`"
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Example: +"
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*week* 01/11/2019`"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003d\u003d\u003d\u003d Changing Timeline to a given month"
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ".Month View Command for the Timeline"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "image::MonthViewCommandScreenShot.png[]"
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "The `month` command sets the timeline in the Calendar view to that of the specified month and switches the current view to Calendar View."
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Command Format: +"
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*month* MONTH_YEAR`"
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Argument Format: +"
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`MONTH_YEAR` : `MM/YYYY`"
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Example: +"
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*month* 11/2019`"
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003d\u003d\u003d\u003d Changing Screen View to List View"
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ".List View Command"
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "image::ListCommandScreenShot.png[]"
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "The `list` command will switch the display to the List View, which displays a list of upcoming events on the left, and a to-do list of tasks on the right side."
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Command Format and Example: +"
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*list*`"
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003d\u003d\u003d\u003d Changing Screen View to Log View"
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ".Log View Command"
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "image::LogCommandScreenShot.png[]"
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "The `log` command switches the display to the Log View, which displays a catalogue of all past responses to input commands."
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Command Format and Example: +"
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*log*`"
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "// tag:notification[]"
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "// tag:chenggengppp[]"
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003d\u003d\u003d Notification System"
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Horo will post notifications to your system tray to remind you that an event is starting or that a task is due."
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "Take note that Horo can only post reminders as long as the application is open. To tell if Horo is running, check that the appropriate icon appears in the system tray"
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ".Horo tray icon"
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "image::HoroIconScreenShot.png[]"
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "Also take note that notifications are switched on by default upon launch. This status is not carried over between sessions. If you would like to switch notifications off, you would have to do so whenever you start Horo up."
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "You can tell if notifications are switched on by mousing over the icon in the system tray."
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ".Mousing over the Horo tray icon"
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "image::IconMouseOverScreenShot.png[]"
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003d\u003d\u003d\u003d Notification Popups"
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "When Horo posts a notification, it should appear at the bottom-right side of the screen, where the system tray should be."
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ".A Popup Notification"
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "image::PopUpScreenShot.png[]"
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "Take note that that following commands are UI-related commands, and are thus unaffected by the `undo` and `redo` commands (For more information, see \u003c\u003cUndo-Redo\u003e\u003e)."
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003d\u003d\u003d\u003d Switch notifications on"
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "The `notif_on` command switches notifications on. +"
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Command Format: +"
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*notif_on*`"
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "1. If you would like to switch notifications on, type the command *`notif_on`* into the command box and press kbd:[Enter] to execute it. +"
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ".`notif_on` command in the Command Box"
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "image::NotificationOnCommandBoxScreenShot.png[]"
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "2. An in-app popup should appear, displaying \"Notifications switched on\". The log view should also record this action. +"
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ".Feedback for the `notif_on` command"
      },
      {
        "lineNumber": 594,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "image::NotificationOnFeedbackScreenShot.png[]"
      },
      {
        "lineNumber": 595,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 596,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 597,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "// end:chenggengppp[]"
      },
      {
        "lineNumber": 598,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 599,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003d\u003d\u003d\u003d Switch notifications off"
      },
      {
        "lineNumber": 600,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "The `notif_off` command switches notifications off. +"
      },
      {
        "lineNumber": 601,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 602,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Command Format: +"
      },
      {
        "lineNumber": 603,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*notif_off*`"
      },
      {
        "lineNumber": 604,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 605,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "1. If you would like to switch notifications off, type the command *`notif_off`* into the command box and press kbd:[Enter] to execute it. +"
      },
      {
        "lineNumber": 606,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 607,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ".`notif_off` command in the Command Box"
      },
      {
        "lineNumber": 608,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "image::NotificationOffCommandBoxScreenShot.png[]"
      },
      {
        "lineNumber": 609,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 610,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 611,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "2. An in-app popup should appear, displaying \"Notifications switched off\". The log view should also record this action. +"
      },
      {
        "lineNumber": 612,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 613,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ".Feedback for the `notif_off` command"
      },
      {
        "lineNumber": 614,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "image::NotificationOffFeedbackScreenShot.png[]"
      },
      {
        "lineNumber": 615,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 616,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 617,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "// end:notification[]"
      },
      {
        "lineNumber": 618,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 619,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d\u003d\u003d Undo-Redo"
      },
      {
        "lineNumber": 620,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "The following commands allow you to undo and redo previously input commands."
      },
      {
        "lineNumber": 621,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 622,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "The below commands will only affect state-changing, and not UI-related commands. The commands that will be affected are as follows:"
      },
      {
        "lineNumber": 623,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 624,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "* *add_event*"
      },
      {
        "lineNumber": 625,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "* *delete_event*"
      },
      {
        "lineNumber": 626,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "* *edit_event*"
      },
      {
        "lineNumber": 627,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "* *add_task*"
      },
      {
        "lineNumber": 628,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "* *delete_task*"
      },
      {
        "lineNumber": 629,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "* *edit_task*"
      },
      {
        "lineNumber": 630,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "* *import*"
      },
      {
        "lineNumber": 631,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "* *export*"
      },
      {
        "lineNumber": 632,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 633,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 634,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d\u003d\u003d\u003d Undo"
      },
      {
        "lineNumber": 635,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 636,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ".Undo Command"
      },
      {
        "lineNumber": 637,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "image::UndoCommandScreenShot.png[]"
      },
      {
        "lineNumber": 638,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 639,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "The `undo` command undoes the previous command. +"
      },
      {
        "lineNumber": 640,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "Commands can be undone up to the program\u0027s launch."
      },
      {
        "lineNumber": 641,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 642,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Command Format: +"
      },
      {
        "lineNumber": 643,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*undo*`"
      },
      {
        "lineNumber": 644,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 645,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 646,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "Suppose that you have deleted the wrong task from Horo. Rather than having to type the `add_task` command"
      },
      {
        "lineNumber": 647,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "along with the description of the deleted task (to add back the wrongly deleted task), you can simply type in `undo`,"
      },
      {
        "lineNumber": 648,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "which will revert Horo to the state before the deletion of the wrong task was executed."
      },
      {
        "lineNumber": 649,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 650,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "This means Horo is now restored to its desired state, as if you did not commit the deletion mistake at all!"
      },
      {
        "lineNumber": 651,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "You can now proceed to delete the right task."
      },
      {
        "lineNumber": 652,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 653,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "Illustration:"
      },
      {
        "lineNumber": 654,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "Suppose that we wanted to delete task 2 in the list, but deleted task 3 instead."
      },
      {
        "lineNumber": 655,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "(Horo also has a list view on top of the calendar view; I will illustrate the feature with with the list view)"
      },
      {
        "lineNumber": 656,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 657,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "To undo:"
      },
      {
        "lineNumber": 658,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 659,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "1. Type undo in the command box, and press the Enter key to execute it. +"
      },
      {
        "lineNumber": 660,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 661,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ".`undo` command in the Command Box"
      },
      {
        "lineNumber": 662,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "image::undoScenario1.png[]"
      },
      {
        "lineNumber": 663,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 664,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 665,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "2. The result box will display the message: \"Previous command has been undone!\" +"
      },
      {
        "lineNumber": 666,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 667,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ".Feedback for the `undo` command"
      },
      {
        "lineNumber": 668,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "image::undoScenario2.png[]"
      },
      {
        "lineNumber": 669,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 670,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 671,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "3. You can see that the wrongly deleted task (task 3) is visible in the list once again. +"
      },
      {
        "lineNumber": 672,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 673,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ".Result of the `undo` command"
      },
      {
        "lineNumber": 674,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "image::undoScenario3.png[]"
      },
      {
        "lineNumber": 675,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 676,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 677,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "*The `undo` command undoes previous commands in reverse chronological order.* +"
      },
      {
        "lineNumber": 678,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 679,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "Suppose that you have executed the following commands in this order: +"
      },
      {
        "lineNumber": 680,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 681,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "1.\tAdding a task +"
      },
      {
        "lineNumber": 682,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "2.\tEditing a task +"
      },
      {
        "lineNumber": 683,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 684,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "Now, if you execute the `undo` command, you will first revert Horo to the state before a task was edited."
      },
      {
        "lineNumber": 685,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "Then, if you execute `undo` again, you will revert Horo to the state before a task was added. +"
      },
      {
        "lineNumber": 686,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 687,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "*The `undo` command only works on state-changing commands.* +"
      },
      {
        "lineNumber": 688,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 689,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "State-changing commands are those that manipulate task and event data stored in Horo. Examples include `add_task`, `delete_task` and `edit_task`."
      },
      {
        "lineNumber": 690,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "`Undo` commands only work on these types of commands because there is an actual change in the state of Horo that can be undone. +"
      },
      {
        "lineNumber": 691,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 692,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "On the other hand, non-state-changing commands include `find` and `help`. These commands are only concerned with producing"
      },
      {
        "lineNumber": 693,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "user output for the user in the GUI, but do not modify any of the data stored in Horo. As such, these types of commands"
      },
      {
        "lineNumber": 694,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "are ignored by the `undo` operation since there is nothing to `undo`. +"
      },
      {
        "lineNumber": 695,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 696,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "As such, if we first add a task to Horo, then we call the `help` command, calling `undo` will ignore the `help` command and proceed"
      },
      {
        "lineNumber": 697,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "to revert Horo to before a task was added. +"
      },
      {
        "lineNumber": 698,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 699,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "*The `undo` command only executes if there are previous states to revert back to.* +"
      },
      {
        "lineNumber": 700,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 701,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "If no command has been previously executed, or if Horo has already been reverted to the earliest possible state by multiple `undos`,"
      },
      {
        "lineNumber": 702,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "then calling `undo` further will amount to no effect."
      },
      {
        "lineNumber": 703,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 704,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d\u003d\u003d\u003d Redo"
      },
      {
        "lineNumber": 705,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 706,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ".Redo Command"
      },
      {
        "lineNumber": 707,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "image::RedoCommandScreenShot.png[]"
      },
      {
        "lineNumber": 708,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 709,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "The `redo` command redoes a previously undone command."
      },
      {
        "lineNumber": 710,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "The `redo` command is able to redo any undone commands that have not been succeeded by a separate state-changing command"
      },
      {
        "lineNumber": 711,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "(e.g. add_event, delete_event, edit)."
      },
      {
        "lineNumber": 712,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 713,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "If you had executed any state-changing command (except for `undo` or `redo`) just after undoing the `add_event` command,"
      },
      {
        "lineNumber": 714,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "calling redo will then amount to no effect."
      },
      {
        "lineNumber": 715,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 716,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "If you\u0027ve ever used another application with undo-redo functionality, just imagine that Horo\u0027s undo-redo functions are as intuitive as theirs."
      },
      {
        "lineNumber": 717,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 718,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 719,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Command Format: +"
      },
      {
        "lineNumber": 720,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*redo*`"
      },
      {
        "lineNumber": 721,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 722,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 723,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "Illustration:"
      },
      {
        "lineNumber": 724,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "Suppose that you wrongly deleted task 3 from the list, but actually wanted to delete task 2 instead."
      },
      {
        "lineNumber": 725,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "As a result, you type in the `undo` command, and Horo is restored to the previous state where task 3 still exists."
      },
      {
        "lineNumber": 726,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 727,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "However, now you decide that you want to remove task 3 from the list after all. Without having to key in the `delete_task` command,"
      },
      {
        "lineNumber": 728,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "you can simply type in `redo` and the most recent command that was undone (the deletion of task 3) will be re-executed."
      },
      {
        "lineNumber": 729,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "This results in a list where task 3 is deleted."
      },
      {
        "lineNumber": 730,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 731,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "To redo:"
      },
      {
        "lineNumber": 732,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 733,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "1. Type redo in the command box, and press the Enter key to execute it. +"
      },
      {
        "lineNumber": 734,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 735,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ".`redo` command in the Command Box"
      },
      {
        "lineNumber": 736,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "image::undoScenario4.png[]"
      },
      {
        "lineNumber": 737,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 738,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 739,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "2. The result box will display the message \"Previous undone command has been redone!\" +"
      },
      {
        "lineNumber": 740,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 741,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ".Feedback for the `redo` command"
      },
      {
        "lineNumber": 742,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "image::undoScenario5.png[]"
      },
      {
        "lineNumber": 743,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 744,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 745,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "3. You can see that task 3 has been removed from the list. +"
      },
      {
        "lineNumber": 746,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 747,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ".Result of the `redo` command"
      },
      {
        "lineNumber": 748,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "image::undoScenario6.png[]"
      },
      {
        "lineNumber": 749,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 750,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 751,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "*The `redo` command redoes previously undone commands in reverse chronological order.* +"
      },
      {
        "lineNumber": 752,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 753,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "Suppose that you have executed the following commands in this order: +"
      },
      {
        "lineNumber": 754,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 755,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "1.\tAdding a task +"
      },
      {
        "lineNumber": 756,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "2.\tEditing a task +"
      },
      {
        "lineNumber": 757,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 758,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "As discussed in Undoing a previous command, if we run `undo` twice, we will revert Horo to before a task was edited,"
      },
      {
        "lineNumber": 759,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "and then revert Horo to before a task was added. +"
      },
      {
        "lineNumber": 760,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "Our sequence of `undo` commands are in this order: +"
      },
      {
        "lineNumber": 761,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 762,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "1.\tUndo editing of a task +"
      },
      {
        "lineNumber": 763,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "2.\tUndo adding of a task +"
      },
      {
        "lineNumber": 764,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 765,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "Now, if we run the `redo` command, Horo will be restored to the state after the task was added. If we execute redo again,"
      },
      {
        "lineNumber": 766,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "Horo will be restored to the state after the task was edited. +"
      },
      {
        "lineNumber": 767,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 768,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "*The `redo` command only executes if the most recent state-changing command(s) are undo commands.* +"
      },
      {
        "lineNumber": 769,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 770,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "If no `undo` command has been executed since the starting up of Horo, or `undo` commands have been executed"
      },
      {
        "lineNumber": 771,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "but other state-changing commands were executed after those `undos`, then executing the `redo` command amounts to no effect. +"
      },
      {
        "lineNumber": 772,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 773,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "For example, let\u0027s say I deleted a task from the list, undid that deletion, and then added another task to the list."
      },
      {
        "lineNumber": 774,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "Executing the `redo` command here will not do anything because `add_task` was executed after the `undo`."
      },
      {
        "lineNumber": 775,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 776,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "// tag::ics[]"
      },
      {
        "lineNumber": 777,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "\u003d\u003d\u003d iCalendar (ICS) Integration"
      },
      {
        "lineNumber": 778,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 779,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "Horo stores data in the ICS format. Files saved in this format have the extension `.ics`."
      },
      {
        "lineNumber": 780,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "This allows for data to be imported from and exported to other calendar applications that also use the `.ics` format."
      },
      {
        "lineNumber": 781,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 782,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "This means you can export and import your calendar events and todo items straight from Google Calendar into Horo,"
      },
      {
        "lineNumber": 783,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "and vice versa!"
      },
      {
        "lineNumber": 784,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "It also means that you can export and import your save data between different machines running Horo."
      },
      {
        "lineNumber": 785,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 786,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "\u003d\u003d\u003d\u003d Export Current Data"
      },
      {
        "lineNumber": 787,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 788,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ".Export Command"
      },
      {
        "lineNumber": 789,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "image::ExportCommandScreenShot.png[]"
      },
      {
        "lineNumber": 790,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 791,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ".Exported File"
      },
      {
        "lineNumber": 792,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "image::ExportFileScreenShot.png[]"
      },
      {
        "lineNumber": 793,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 794,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "The `export` command exports your current calendar as an ICS file to the specified directory."
      },
      {
        "lineNumber": 795,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "If no directory is specified, the file will be created in the same directory as Horo."
      },
      {
        "lineNumber": 796,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 797,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "If you want to export the ICS file to a certain directory like your desktop,"
      },
      {
        "lineNumber": 798,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "all you have to do is specify it with the `*--directory*` parameter."
      },
      {
        "lineNumber": 799,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 800,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Command Format: +"
      },
      {
        "lineNumber": 801,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*export*` +"
      },
      {
        "lineNumber": 802,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*export* *--directory* DIRECTORY`"
      },
      {
        "lineNumber": 803,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 804,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Example: +"
      },
      {
        "lineNumber": 805,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*export* *--directory* \"C:\\Users\\USER_NAME\\Desktop\\Horo\"`"
      },
      {
        "lineNumber": 806,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 807,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "\u003d\u003d\u003d\u003d Import other ICS Data"
      },
      {
        "lineNumber": 808,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 809,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 810,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ".Imported File"
      },
      {
        "lineNumber": 811,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "image::ImportFileScreenShot.png[]"
      },
      {
        "lineNumber": 812,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 813,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ".Import Command"
      },
      {
        "lineNumber": 814,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "image::ImportCommandScreenShot.png[]"
      },
      {
        "lineNumber": 815,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 816,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "The `import` command imports an ICS file from the specified filepath."
      },
      {
        "lineNumber": 817,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 818,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Command Format: +"
      },
      {
        "lineNumber": 819,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*import* FILEPATH`"
      },
      {
        "lineNumber": 820,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 821,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Example: +"
      },
      {
        "lineNumber": 822,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*import* \"C:\\Users\\USER_NAME\\Desktop\\OtherCalendars\\Others.ics\"`"
      },
      {
        "lineNumber": 823,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "// end::ics[]"
      },
      {
        "lineNumber": 824,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 825,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003d\u003d\u003d Exiting the program"
      },
      {
        "lineNumber": 826,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 827,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "Exits the program."
      },
      {
        "lineNumber": 828,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 829,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Command Format: +"
      },
      {
        "lineNumber": 830,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*exit*`"
      },
      {
        "lineNumber": 831,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 832,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 833,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d FAQ"
      },
      {
        "lineNumber": 834,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 835,
        "author": {
          "gitId": "-"
        },
        "content": "*Q*: How do I transfer my data to another Computer? +"
      },
      {
        "lineNumber": 836,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "*A*: Install the app on the other computer and overwrite the empty data file it creates with Horo\u0027s save file."
      },
      {
        "lineNumber": 837,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 838,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 839,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Command Summary"
      },
      {
        "lineNumber": 840,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 841,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "* *Help* : `*help*` +"
      },
      {
        "lineNumber": 842,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "* *Adding an Event* : `*add_event* DESCRIPTION START_DATE *--end* END_DATE *--remind* REMIND_DATE *--tag* TAG...` +"
      },
      {
        "lineNumber": 843,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "* *Deleting Events* : `*delete_event* INDEX... *--tag* TAG...` +"
      },
      {
        "lineNumber": 844,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "* *Editing Events* : `*edit_event* INDEX... *--description* DESCRIPTION *--start* START_DATE *--end* END_DATE *--remind* REMIND_DATE *--tag* TAG...` +"
      },
      {
        "lineNumber": 845,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "* *Adding a Task* : `*add_task* DESCRIPTION *--due* DUE_DATE *--tag* TAG...` +"
      },
      {
        "lineNumber": 846,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "* *Deleting Tasks* : `*delete_task* INDEX... *--tag* TAG...` +"
      },
      {
        "lineNumber": 847,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "* *Editing Tasks* : `*edit_task* INDEX... *--description* DESCRIPTION *--due* DUE_DATE *--tag* TAG...` +"
      },
      {
        "lineNumber": 848,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "* *Adding a Tag* : `*tag* INDEX... *--tag* TAG...` +"
      },
      {
        "lineNumber": 849,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "* *Removing a Tag* : `*remove_tag* INDEX... *--tag* TAG...` +"
      },
      {
        "lineNumber": 850,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "* *Find* : `*find* KEYWORD... *--tag* TAG` +"
      },
      {
        "lineNumber": 851,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "* *Calendar View* : `*calendar* *--date* MONTH_YEAR`"
      },
      {
        "lineNumber": 852,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "* *Day View for Timeline* : `*day* DATE`"
      },
      {
        "lineNumber": 853,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "* *Week View for Timeline* : `*week* DATE`"
      },
      {
        "lineNumber": 854,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "* *Month View for Timeline* : `*month* MONTH_YEAR`"
      },
      {
        "lineNumber": 855,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "* *List View* : `*list*`"
      },
      {
        "lineNumber": 856,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "* *Log View* : `*log*`"
      },
      {
        "lineNumber": 857,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "* *Undo* : `*undo*`"
      },
      {
        "lineNumber": 858,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "* *Redo* : `*redo*`"
      },
      {
        "lineNumber": 859,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "* *Switch notifications on* : `*notif_on*`"
      },
      {
        "lineNumber": 860,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "* *Switch notifications off* : `*notif_off*`"
      },
      {
        "lineNumber": 861,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "* *Export .ics File* : `*export* *--directory* DIRECTORY`"
      },
      {
        "lineNumber": 862,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "* *Import .ics File* : `*import* FILE_PATH`"
      },
      {
        "lineNumber": 863,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "* *Exiting the Program* : `*exit*`"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 129,
      "Kyzure": 141,
      "marcusteh1238": 22,
      "bruceskellator": 118,
      "WeomuCat": 339,
      "-": 114
    }
  },
  {
    "path": "docs/diagrams/ArchitectureDiagram.puml",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@startuml"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "!include \u003coffice/Concepts/documents\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "!include \u003coffice/Users/user\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "hide circles"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "hide empty members"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "skinparam packageStyle rectangle"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "skinparam shadowing false"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package Horo {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    class CommandManager"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    class Ics"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    class ModelManager"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    class NotificationManager"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    class StorageManager"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    class UiManager"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    class UndoRedoManager"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    class LogsCenter"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    class Main"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "class \"\u003c$user\u003e\" as User"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "class \"\u003c$documents\u003e\" as Documents"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "CommandManager \u003c..\u003e UiManager"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Ics --\u003e ModelManager"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "ModelManager ..\u003e StorageManager"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "ModelManager ..\u003e UiManager"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "ModelManager ..\u003e UndoRedoManager"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "NotificationManager --\u003e ModelManager"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "StorageManager --\u003e ModelManager"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "StorageManager \u003c..\u003e Documents"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "UndoRedoManager --\u003e ModelManager"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "User \u003c..\u003e UiManager"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "@enduml"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 31,
      "-": 11
    }
  },
  {
    "path": "docs/diagrams/CommandBuilderActivityDiagram.puml",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "@startuml"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u0027 Style"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "skinparam shadowing false"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "start"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ":Receive command definitions"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Set __context__ to the command\u0027s ArgumentList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "repeat"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ":Accept new command phrase;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "if (Command phrase is an option keyword?) then (yes)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    :Set __context__ to the option\u0027s ArgumentList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "else (no)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    :Accept command phrase into __context__;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "endif"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "repeat while (More command phrases?) is (yes)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "-\u003e no;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ":Build command;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "stop"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "@enduml"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 26
    }
  },
  {
    "path": "docs/diagrams/CommandBuilderClassDiagram.puml",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "@startuml"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u0027 Style"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "hide empty members"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "skinparam boxPadding 100"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "skinparam classAttributeIconSize 0"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "skinparam genericDisplay old"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "skinparam packageStyle rectangle"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "skinparam lineType ortho"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "skinparam shadowing false"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    abstract class Command"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    abstract class CommandBuilder {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        - context : ArgumentList"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        - commandArguments : ArgumentList"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        - commandOptions : Map\u003cString, ArgumentList\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        # defineCommandArguments() \u0026#123;abstract\u0026#125; : RequiredArgumentList"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        # defineCommandOptions() \u0026#123;abstract\u0026#125; : Map\u003cString, OptionalArgumentList\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        + acceptPhrase(phrase : String)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        + build() : Command"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    package Argument {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        abstract class Argument\u003cT\u003e {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            + accept(input : String)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        abstract class ArgumentBuilder\u003cT\u003e {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            + build() : Argument\u003cT\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        abstract class VariableArguments\u003cT\u003e {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            + accept(input : String)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        abstract class VariableArgumentsBuilder\u003cT\u003e {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            + build() : VariableArguments\u003cT\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        package List {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            class ArgumentList {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                - arguments : List\u003cArgument\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                - variableArguments : VariableArguments"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                + acceptArgument(input : String)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            abstract class ArgumentListBuilder {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                +addArgument(argument : ArgumentBuilder)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                +setVariableArguments(argument : VariableArgumentsBuilder)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                +build() : ArgumentList"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            class RequiredArgumentList extends ArgumentListBuilder {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                +addArgument(argument : ArgumentBuilder)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                +setVariableArguments(argument : VariableArgumentsBuilder)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            class OptionalArgumentList extends ArgumentListBuilder {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                +addArgument(argument : ArgumentBuilder)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                +setVariableArguments(argument : VariableArgumentsBuilder)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "CommandBuilder *--\"*\" ArgumentList"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "CommandBuilder ..\u003e RequiredArgumentList"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "CommandBuilder ..\u003e OptionalArgumentList"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "CommandBuilder .\u003e Command"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "ArgumentBuilder ..\u003e Argument"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "VariableArgumentsBuilder ..\u003e VariableArguments"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "ArgumentList *--\"*\" Argument"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "ArgumentList *--\"0..1\" VariableArguments"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "ArgumentListBuilder .\u003e ArgumentList"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "ArgumentListBuilder ..\u003e ArgumentBuilder"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "ArgumentListBuilder ..\u003e VariableArgumentsBuilder"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "@enduml"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 82
    }
  },
  {
    "path": "docs/diagrams/CommandManagerAddTaskSequenceDiagram.puml",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "@startuml"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u0027 Style"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "skinparam boxPadding 10"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "skinparam shadowing false"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "box Logic"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    participant CommandManager"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    participant CommandParser"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    participant CommandKeywordParser"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    participant AddTaskCommandBuilder"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    participant AddTaskCommand"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "end box"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "box Model"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    participant ModelManager"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "end box"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "box Ui"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    participant UserOutputListener"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "end box"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "[-\u003e CommandManager : onCommandInput(\"add_task Homework\")"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "activate CommandManager"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "CommandManager -\u003e CommandParser : parse(\"add_task Homework\")"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "activate CommandParser"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "CommandParser -\u003e CommandKeywordParser : parse(\"add_task\")"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "activate CommandKeywordParser"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "create AddTaskCommandBuilder"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "CommandKeywordParser -\u003e AddTaskCommandBuilder"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "activate AddTaskCommandBuilder"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "CommandKeywordParser \u003c-- AddTaskCommandBuilder : builder"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "deactivate AddTaskCommandBuilder"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "CommandParser \u003c-- CommandKeywordParser : builder"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "deactivate CommandKeywordParser"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "CommandParser -\u003e AddTaskCommandBuilder : acceptPhrase(\"Homework\")"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "activate AddTaskCommandBuilder"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "CommandParser \u003c-- AddTaskCommandBuilder"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "deactivate AddTaskCommandBuilder"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "CommandParser -\u003e AddTaskCommandBuilder : build()"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "activate AddTaskCommandBuilder"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "create AddTaskCommand"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "AddTaskCommandBuilder -\u003e AddTaskCommand"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "activate AddTaskCommand"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "AddTaskCommandBuilder \u003c-- AddTaskCommand : command"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "deactivate AddTaskCommand"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "CommandParser \u003c-- AddTaskCommandBuilder : command"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "deactivate AddTaskCommandBuilder"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "destroy AddTaskCommandBuilder"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "CommandManager \u003c-- CommandParser : command"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "deactivate CommandParser"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "CommandManager -\u003e AddTaskCommand : execute()"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "activate AddTaskCommand"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "AddTaskCommand -\u003e ModelManager : setModelData()"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "activate ModelManager"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "AddTaskCommand \u003c-- ModelManager"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "deactivate ModelManager"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "CommandManager \u003c-- AddTaskCommand  : output"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "deactivate AddTaskCommand"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "destroy AddTaskCommand"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "CommandManager -\u003e UserOutputListener : onUserOutput(output)"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "activate UserOutputListener"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "CommandManager \u003c-- UserOutputListener"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "deactivate UserOutputListener"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "[\u003c-- CommandManager"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "deactivate CommandManager"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "@enduml"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 81
    }
  },
  {
    "path": "docs/diagrams/CommandManagerClassDiagram.puml",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@startuml"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u0027 Style"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "hide empty members"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "skinparam classAttributeIconSize 0"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "skinparam genericDisplay old"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "skinparam packageStyle rectangle"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "skinparam lineType polyline"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "skinparam shadowing false"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "package Logic {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    class CommandManager implements CommandInputListener {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        - commandParser : CommandParser"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        - keywordParser : CommandKeywordParser"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        - userOutputListeners : List\u003cUserOutputListener\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        + addCommand(keyword : String, builder : CommandBuilder)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        + addUserOutputListener(listener : UserOutputListener)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        + onCommandInput(input : String)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    package Parser {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        interface Parser\u003cT\u003e {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            + parse() : T"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        class CommandParser implements Parser {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            + parse() : Command"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        class CommandKeywordParser implements Parser {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            + addCommand(builder : CommandBuilder)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            + parse() : CommandBuilder"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    package Command {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        abstract class Command {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            + execute() : UserOutput"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        abstract class CommandBuilder {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            + build() : Command"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        interface CommandInputListener {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            + onCommandInput(input : String)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package Ui {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    class UserOutput {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        + toString() : String"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    interface UserOutputListener {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        + onUserOutput(output : UserOutput)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "CommandManager *--\"1\" CommandParser"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "CommandManager *--\"1\" CommandKeywordParser"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "CommandManager o--\"*\" UserOutputListener"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "CommandManager ..\u003eCommandBuilder"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "CommandParser o-- CommandKeywordParser"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "CommandKeywordParser o--\"*\" CommandBuilder"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Command ..\u003e UserOutput"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "CommandBuilder ..\u003e Command"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "UserOutputListener ..\u003e UserOutput"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "@enduml"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 51,
      "-": 17
    }
  },
  {
    "path": "docs/diagrams/CommandParserActivityDiagram.puml",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "@startuml"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u0027 Style"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "skinparam shadowing false"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "start"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ":Receive __command__ from user input;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "if (Start of __command__ contains whitespace(s)?) then (yes)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    :Remove whitespace(s) from start of __command__;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "else (no)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "endif"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "if (Start of __command__ contains a word?) then (yes)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    :This word is our **command keyword**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    Remove word from start of __command__;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "else (no)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    :Throw exception : Invalid command format!;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    stop"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "endif"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "while (Start of __command__ contains whitespace(s)?) is (yes)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    :Remove whitespace(s) from start of __command__;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "if (Start of __command__ contains a phrase?) then (yes)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    :This phrase is our **command phrase**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    Remove phrase from start of __command__;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "else (no)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    stop"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "endif"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "endwhile (no)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "stop"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "@enduml"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 35
    }
  },
  {
    "path": "docs/diagrams/ExportCommandActivityDiagram.puml",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "@startuml"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "!include style.puml"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "start"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ":User executes export command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "if () then ([directory \\nspecified])"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    : Use specified \\ndirectory as output folder;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    if () then ([directory \\nis valid])"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    else ([else])"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        :Display Error \\nMessage to User;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        stop"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    endif"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "else([else])"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    : Use default directory \\nas output folder;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "endif"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ": Create File;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ": Generate File content \\nfrom Horo\u0027s saved data;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ": Write to File;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ": Return \"Command Excecuted \\nSuccessfully\" message to user;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "stop"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "@enduml"
      }
    ],
    "authorContributionMap": {
      "marcusteh1238": 20
    }
  },
  {
    "path": "docs/diagrams/IcsComponentDiagram.puml",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "@startuml"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "!include style.puml"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "skinparam arrowThickness 1.1"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "skinparam arrowColor LOGIC_COLOR_T4"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "skinparam classBackgroundColor LOGIC_COLOR"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "class IcsExporter"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "class IcsParser"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "class IcsConverter"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "class EventSource"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "class TaskSource"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "IcsExporter ..\u003e IcsConverter"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "IcsConverter ..\u003e EventSource"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "IcsConverter ..\u003e TaskSource"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "IcsParser ..\u003e EventSource"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "IcsParser ..\u003e TaskSource"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "@enduml"
      }
    ],
    "authorContributionMap": {
      "marcusteh1238": 18
    }
  },
  {
    "path": "docs/diagrams/ModelManagerAddTaskSequenceDiagram.puml",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "@startuml"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u0027 Style"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "skinparam boxPadding 10"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "skinparam shadowing false"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "box Logic"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    participant AddTaskCommand"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "end box"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "box Model"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    participant ModelManager"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "end box"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "participant ModelDataListener1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "participant ModelDataListener2"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "participant ModelDataListener3"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "[-\u003e AddTaskCommand : execute()"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "activate AddTaskCommand"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "AddTaskCommand -\u003e ModelManager : setModelData()"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "activate ModelManager"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "ModelManager -\u003e ModelDataListener1 : onModelDataChange()"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "activate ModelDataListener1"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "ModelManager \u003c-- ModelDataListener1"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "deactivate ModelDataListener1"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "ModelManager -\u003e ModelDataListener2 : onModelDataChange()"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "activate ModelDataListener2"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "ModelManager \u003c-- ModelDataListener2"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "deactivate ModelDataListener2"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "ModelManager -\u003e ModelDataListener3 : onModelDataChange()"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "activate ModelDataListener3"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "ModelManager \u003c-- ModelDataListener3"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "deactivate ModelDataListener3"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "AddTaskCommand \u003c-- ModelManager"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "deactivate ModelManager"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "[\u003c-- AddTaskCommand"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "deactivate AddTaskCommand"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "destroy AddTaskCommand"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "@enduml"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 46
    }
  },
  {
    "path": "docs/diagrams/ModelManagerClassDiagram.puml",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "@startuml"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u0027 Style"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "hide empty members"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "skinparam classAttributeIconSize 0"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "skinparam genericDisplay old"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "skinparam packageStyle rectangle"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "skinparam lineType ortho"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "skinparam shadowing false"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package Model {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    class ModelManager {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        - data : ModelData"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        + setModelData(data : ModelData)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        + getModelData() : ModelData"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    class ModelData {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        - events : UniqueOrderedSet\u003cEventSource\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        - tasks : UniqueOrderedSet\u003cTaskSource\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    class UniqueOrderedSet\u003cE\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    package Event {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        class EventSource"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        class EventSourceBuilder {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            + build : EventSource"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    package Task {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        class TaskSource"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        class TaskSourceBuilder {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            + build : TaskSource"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "ModelManager *--\"1\" ModelData"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "ModelData *--\"2\" UniqueOrderedSet"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "ModelData *--\"*\" EventSource"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "ModelData *--\"*\" TaskSource"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "EventSourceBuilder ..\u003e EventSource"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "TaskSourceBuilder ..\u003e TaskSource"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "@enduml"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 46
    }
  },
  {
    "path": "docs/diagrams/NotificationCheckingLoopSequenceDiagram.puml",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "@startuml"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "!include style.puml"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "box Logic LOGIC_COLOR_T1"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "participant \":NotificationCheckingThread\" as NotificationCheckingThread LOGIC_COLOR"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "participant \":NotificationChecker\" as NotificationChecker LOGIC_COLOR"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "end box"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "box Ui UI_COLOR_T1"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "participant \"pn:PopupNotification\" as PopupNotification UI_COLOR"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "participant \":PopupListener\" as PopupListener UI_COLOR"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "participant \":SystemTrayCommunicator\" as SystemTrayCommunicator UI_COLOR"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "end box"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "[-\u003e NotificationCheckingThread : run()"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "loop infinitely"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    activate NotificationCheckingThread"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    NotificationCheckingThread -\u003e NotificationChecker : getListOfPopupNotifications()"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    activate NotificationChecker"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    create PopupNotification"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    NotificationChecker -\u003e PopupNotification"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    activate PopupNotification"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    PopupNotification --\u003e NotificationChecker : pn"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    deactivate PopupNotification"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    NotificationChecker --\u003e NotificationCheckingThread : pn"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    deactivate NotificationChecker"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    NotificationCheckingThread -\u003e PopupListener : notify(pn)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    activate PopupListener"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    PopupListener -\u003e SystemTrayCommunicator : postNewNotification(pn)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    activate SystemTrayCommunicator"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    SystemTrayCommunicator --\u003e PopupListener"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    deactivate SystemTrayCommunicator"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    PopupListener --\u003e NotificationCheckingThread"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    deactivate PopupListener"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    destroy PopupNotification"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    deactivate NotificationCheckingThread"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "end"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "@enduml"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 50
    }
  },
  {
    "path": "docs/diagrams/NotificationClassDiagram.puml",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "@startuml"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "!include style.puml"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "skinparam arrowThickness 1.1"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "skinparam arrowColor LOGIC_COLOR_T4"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "package Logic {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    Class NotificationManager LOGIC_COLOR"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    Class NotificationCheckingThread LOGIC_COLOR"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    Class NotificationChecker LOGIC_COLOR"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "package Ui {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    Class SystemTrayCommunicator UI_COLOR"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    Class PopupListener UI_COLOR"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    Class PopupNotification UI_COLOR"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    Class NotificationClickActionListener UI_COLOR"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "package Model{"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    Class HiddenModel #FFFFFF"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "Class HiddenOutside #FFFFFF"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "HiddenOutside .right.\u003e NotificationManager"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "NotificationManager -down-\u003e \"1\" NotificationCheckingThread : runs \u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "NotificationManager -right-\u003e \"1\" SystemTrayCommunicator : creates \u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "NotificationCheckingThread -down-\u003e \"1\" NotificationChecker"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "NotificationCheckingThread .right.\u003e PopupNotification"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "NotificationCheckingThread -right-\u003e PopupListener : notifies \u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "NotificationChecker .right.\u003e PopupNotification"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "NotificationChecker -down-\u003e Model"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "PopupListener -up-\u003e SystemTrayCommunicator : notifies \u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "PopupListener .down.\u003e PopupNotification"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "SystemTrayCommunicator -right-\u003e NotificationClickActionListener"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "@enduml"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 41
    }
  },
  {
    "path": "docs/diagrams/StorageManagerAddTaskSequenceDiagram.puml",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "@startuml"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u0027 Style"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "skinparam boxPadding 10"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "skinparam shadowing false"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "box Logic"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    participant AddTaskCommand"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "end box"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "box Model"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    participant ModelManager"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "end box"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "box Logic"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    participant StorageManager"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "end box"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "[-\u003e AddTaskCommand : execute()"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "activate AddTaskCommand"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "AddTaskCommand -\u003e ModelManager : setModelData()"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "activate ModelManager"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "ModelManager -\u003e StorageManager : onModelDataChange()"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "activate StorageManager"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "opt eventsFile !\u003d null"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "StorageManager -\u003e] : saveEvents()"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "StorageManager \u003c--"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "end"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "opt tasksFile !\u003d null"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "StorageManager -\u003e] : saveTasks()"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "StorageManager \u003c--"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "end"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "ModelManager \u003c-- StorageManager"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "deactivate StorageManager"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "AddTaskCommand \u003c-- ModelManager"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "deactivate ModelManager"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "[\u003c-- AddTaskCommand"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "deactivate AddTaskCommand"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "destroy AddTaskCommand"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "@enduml"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 47
    }
  },
  {
    "path": "docs/diagrams/StorageManagerClassDiagram.puml",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "@startuml"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u0027 Style"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "hide empty members"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "skinparam classAttributeIconSize 0"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "skinparam genericDisplay old"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "skinparam packageStyle rectangle"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "skinparam lineType ortho"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "skinparam shadowing false"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package Logic {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    class StorageManager implements ModelDataListener {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        - modelManager : ModelManager"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        - eventsFile : Path"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        - tasksFile : Path"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        + load()"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        + onModelDataChange(data : ModelData)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        + setEventsFile(path : Path)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        + setTasksFile(path : Path)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package Model {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    interface ModelDataListener {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        + onModelDataChange(data : ModelData)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    class ModelManager {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        + setModelData(data : ModelData)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    class ModelData"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "StorageManager o--\"1\" ModelManager"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "StorageManager ..\u003e ModelData"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "@enduml"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 35
    }
  },
  {
    "path": "docs/diagrams/UiCalendarClassDiagram.puml",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "@startuml"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "!include style.puml"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "skinparam arrowThickness 1.1"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "skinparam arrowColor UI_COLOR_T4"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "skinparam classBackgroundColor UI_COLOR"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d Packages \u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package Ui \u003c\u003cRectangle\u003e\u003e {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027Class \"{abstract}\\nUiPart\" as UiPart"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Class \"{abstract}\\nCard\" as Card"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Class MainWindow"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Class CardHolder"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Class EventCard"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Class TaskCard"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Class UpcomingEventCard"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Class UpcomingTaskCard"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    package Calendar \u003c\u003cRectangle\u003e\u003e {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        Class \"{abstract}\\nTimelineView\" as TimelineView"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        Class CalendarPanel"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        Class TimelineDayView"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        Class TimelineWeekView"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        Class TimelineMonthView"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        Class CalendarScreen"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        Class CalendarGridDay"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        Class UpcomingView"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package Logic \u003c\u003cRectangle\u003e\u003e {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    Class UiManager"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package Model \u003c\u003cRectangle\u003e\u003e {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    Class EventSource"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    Class TaskSource"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    Interface ModelDataListener \u003c\u003cInterface\u003e\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Class HiddenOutside #FFFFFF"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "HiddenOutside .down.\u003e UiManager"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d UiManager \u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "UiManager *--\u003e MainWindow"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "UiManager ..|\u003e ModelDataListener"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d MainWindow \u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "MainWindow *-down--\u003e CalendarPanel"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d CalendarPanel \u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "CalendarPanel *-right--\u003e TimelineView"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "CalendarPanel *-left-\u003e CalendarScreen"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "CalendarPanel *-up--\u003e UpcomingView"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d CardHolder \u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "CardHolder *-down-\u003e Card"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d Card \u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d EventCard \u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "EventCard --|\u003e Card"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "EventCard *-up-\u003e EventSource"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d TaskCard \u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "TaskCard --|\u003e Card"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "TaskCard *-up-\u003e TaskSource"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d TimelineView \u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "TimelineView *-up--\u003e CardHolder"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d TimelineDayView \u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "TimelineDayView -up--|\u003e TimelineView"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d TimelineWeekView \u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "TimelineWeekView -up--|\u003e TimelineView"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d TimelineMonthView \u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "TimelineMonthView -up--|\u003e TimelineView"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d CalendarScreen \u003d\u003d\u003d\u003d\u0027"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "CalendarScreen *-down-\u003e CalendarGridDay"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d UpcomingView \u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "UpcomingView *-up-\u003e UpcomingEventCard"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "UpcomingView *-up-\u003e UpcomingTaskCard"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d UpcomingEventCard \u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "UpcomingEventCard *-up-\u003e EventSource"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d UpcomingTaskCard \u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "UpcomingTaskCard *-up-\u003e TaskSource"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "EventSource ..[hidden]down|\u003e TaskSource"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "UpcomingTaskCard ..[hidden]left|\u003e MainWindow"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "@enduml"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 96
    }
  },
  {
    "path": "docs/diagrams/UiCalendarPanelSequenceDiagram.puml",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "*@startuml"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "!include style.puml"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "box Ui UI_COLOR_T1"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "participant \":CalendarPanel\" as CalendarPanel UI_COLOR"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "participant \":TimelineView\" as TimelineView UI_COLOR"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "participant \":CalendarScreen\" as CalendarScreen UI_COLOR"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "participant \":UpcomingView\" as UpcomingView UI_COLOR"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "end box"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "[-\u003e CalendarPanel : onModelListChange(events, tasks, eventHash, taskHash)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "activate CalendarPanel"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "CalendarPanel -\u003e CalendarPanel : combineList(events, tasks)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "activate CalendarPanel #009100"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "CalendarPanel --\u003e CalendarPanel : eventTaskList"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "deactivate CalendarPanel"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "CalendarPanel -\u003e TimelineView : onChange(eventTaskList, eventHash, taskHash)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "activate TimelineView"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "TimelineView -\u003e TimelineView : resetTimeline()"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "activate TimelineView"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "TimelineView --\u003e TimelineView"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "deactivate TimelineView"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "TimelineView --\u003e CalendarPanel"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "deactivate TimelineView"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "CalendarPanel -\u003e CalendarScreen : onChange(eventTaskList)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "activate CalendarScreen"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "CalendarScreen -\u003e CalendarScreen : changeColor(eventTaskList)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "activate CalendarScreen"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "CalendarScreen --\u003e CalendarScreen"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "deactivate CalendarScreen"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "CalendarScreen --\u003e CalendarPanel"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "deactivate CalendarScreen"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "CalendarPanel -\u003e UpcomingView : onChange(eventTaskList)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "activate UpcomingView"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "UpcomingView --\u003e CalendarPanel"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "deactivate UpcomingView"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "CalendarPanel --\u003e["
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "deactivate CalendarPanel"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "@enduml"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 43
    }
  },
  {
    "path": "docs/diagrams/UiClassDiagram.puml",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@startuml"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "!include style.puml"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "skinparam arrowThickness 1.1"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "skinparam arrowColor UI_COLOR_T4"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "skinparam classBackgroundColor UI_COLOR"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d Packages \u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "package UI \u003c\u003cRectangle\u003e\u003e {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "Interface Ui \u003c\u003cInterface\u003e\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "Class \"{abstract}\\nUiPart\" as UiPart"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "Class MainWindow"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "Class CommandBox"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Class CalendarPanel"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Class ListPanel"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Class LogPanel"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Class PopUpBox"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package Logic \u003c\u003cRectangle\u003e\u003e {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    Class UiManager"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "package Model \u003c\u003cRectangle\u003e\u003e {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    Interface UserOutputListener \u003c\u003cInterface\u003e\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    Interface ModelDataListener \u003c\u003cInterface\u003e\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package List \u003c\u003cRectangle\u003e\u003e {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package Calendar \u003c\u003cRectangle\u003e\u003e {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package Log \u003c\u003cRectangle\u003e\u003e {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "Class HiddenOutside #FFFFFF"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "HiddenOutside .down.\u003e Ui"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d UiManager \u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "UiManager .left.|\u003e Ui"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "UiManager -right-|\u003e ModelDataListener"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "UiManager -right-|\u003e UserOutputListener"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "UiManager *-down-\u003e MainWindow"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d MainWindow \u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "MainWindow *-down-\u003e CommandBox"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "MainWindow *-down-\u003e ListPanel"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "MainWindow *-down-\u003e CalendarPanel"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "MainWindow *-down-\u003e LogPanel"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "MainWindow *-down-\u003e PopUpBox"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "MainWindow -|\u003e UiPart"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d CommandBox \u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "CommandBox -down-|\u003e UiPart"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d CalendarPanel \u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "CalendarPanel -down--|\u003e UiPart"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "CalendarPanel -down..\u003e Calendar"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d ListPanel \u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "ListPanel -down--|\u003e UiPart"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "ListPanel -down..\u003e List"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d LogPanel \u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "LogPanel -down--|\u003e UiPart"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "LogPanel -down..\u003e Log"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d PopUpBox \u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "PopUpBox -down--\u003e UiPart"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d Positioning \u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "MainWindow -[hidden]-|\u003e UiPart"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "UiManager -[hidden]-|\u003e MainWindow"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "ModelDataListener -[hidden]down-|\u003e UserOutputListener"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "@enduml"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 46,
      "-": 32
    }
  },
  {
    "path": "docs/diagrams/UiListClassDiagram.puml",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "@startuml"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "!include style.puml"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "skinparam arrowThickness 1.1"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "skinparam arrowColor UI_COLOR_T4"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "skinparam classBackgroundColor UI_COLOR"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d Packages \u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package Ui \u003c\u003cRectangle\u003e\u003e {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    Class MainWindow"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    Class EventCard"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    Class TaskCard"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    package List \u003c\u003cRectangle\u003e\u003e {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        Class ListPanel"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        Class EventListPanel"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        Class TaskListPanel"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package Logic \u003c\u003cRectangle\u003e\u003e {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    Class UiManager"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package Model \u003c\u003cRectangle\u003e\u003e {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    Class EventSource"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    Class TaskSource"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    Interface ModelDataListener \u003c\u003cInterface\u003e\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Class HiddenOutside #FFFFFF"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "HiddenOutside .left\u003e UiManager"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d UiManager \u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "UiManager *--\u003e MainWindow"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "UiManager .up.|\u003e ModelDataListener"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d MainWindow \u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "MainWindow -down-\u003e ListPanel"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d ListPanel \u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "ListPanel *-down-\u003e EventListPanel"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "ListPanel *-down-\u003e TaskListPanel"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d EventListPanel \u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "EventListPanel *-up--\u003e EventCard"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d TaskListPanel \u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "TaskListPanel *--\u003e TaskCard"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d EventCard \u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "EventCard *-up-\u003e EventSource"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d TaskCard \u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "TaskCard *-up-\u003e TaskSource"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "EventSource .[hidden]right.|\u003e TaskSource"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "EventListPanel .[hidden]down|\u003e TaskListPanel"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "TaskCard .[hidden]up|\u003e TaskSource"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "@enduml"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 59
    }
  },
  {
    "path": "docs/diagrams/UiListPanelSequenceDiagram.puml",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "*@startuml"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "!include style.puml"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "box Ui UI_COLOR_T1"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "participant \":ListPanel\" as ListPanel UI_COLOR"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "participant \":EventListPanel\" as EventListPanel UI_COLOR"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "participant \":TaskListPanel\" as TaskListPanel UI_COLOR"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "end box"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d Event List \u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "[-\u003e ListPanel : onEventListChange(events, eventHash)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "activate ListPanel"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "ListPanel -\u003e EventListPanel : onEventListChange(events, eventHash)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "activate EventListPanel"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "EventListPanel --\u003e ListPanel"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "deactivate EventListPanel"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "ListPanel --\u003e["
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "deactivate ListPanel"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d Task List \u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "[-\u003e ListPanel : onTaskListChange(tasks, taskHash)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "activate ListPanel"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "ListPanel -\u003e TaskListPanel : onTaskListChange(tasks, taskHash)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "activate TaskListPanel"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "TaskListPanel--\u003e ListPanel"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "deactivate TaskListPanel"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "ListPanel --\u003e["
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "deactivate ListPanel"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "@enduml"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 35
    }
  },
  {
    "path": "docs/diagrams/UiLogClassDiagram.puml",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "@startuml"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "!include style.puml"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "skinparam arrowThickness 1.1"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "skinparam arrowColor UI_COLOR_T4"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "skinparam classBackgroundColor UI_COLOR"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d Packages \u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package UI \u003c\u003cRectangle\u003e\u003e {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Class MainWindow"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Class PopUpBox"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    package Log \u003c\u003cRectangle\u003e\u003e {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        Class LogPanel"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        Class LogBox"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package Logic \u003c\u003cRectangle\u003e\u003e {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    Class UiManager"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package Model \u003c\u003cRectangle\u003e\u003e {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    Interface UserOutputListener \u003c\u003cInterface\u003e\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Class HiddenOutside #FFFFFF"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "HiddenOutside ..\u003e UiManager"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d UiManager\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "UiManager .left..|\u003e UserOutputListener"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "UiManager *--\u003e MainWindow"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d MainWindow \u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "MainWindow *-down--\u003e LogPanel"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "MainWindow .left.\u003e PopUpBox"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d LogPanel \u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "LogPanel *-right--\u003e LogBox"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "@enduml"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 39
    }
  },
  {
    "path": "docs/diagrams/UiLogPanelSequenceDiagram.puml",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "*@startuml"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "!include style.puml"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "box Ui UI_COLOR_T1"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "participant \":MainWindow\" as MainWindow UI_COLOR"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "participant \":LogPanel\" as LogPanel UI_COLOR"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "participant \"logBox:LogBox\" as LogBox UI_COLOR"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "participant \"popUpBox:PopUpBox\" as PopUpBox UI_COLOR"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "end box"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "[-\u003e MainWindow : onUserOutput(output, colorTheme)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "activate MainWindow"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "MainWindow -\u003e MainWindow : getColor(colorTheme)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "activate MainWindow"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "MainWindow --\u003e MainWindow : color"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "deactivate MainWindow"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "MainWindow -[hidden]--\u003e MainWindow"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d LogPanel \u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "MainWindow -\u003e LogPanel : createLogBox(feedbackToUser, color)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "activate LogPanel"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "create LogBox"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "LogPanel -\u003e LogBox : LogBox()"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "activate LogBox"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "LogBox --\u003e LogPanel : logBox"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "deactivate LogBox"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "LogPanel --\u003e MainWindow"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "deactivate LogPanel"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "LogPanel -[hidden]--\u003e LogPanel"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "MainWindow -\u003e MainWindow : createPopUpBox"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "activate MainWindow"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "create PopUpBox"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "MainWindow -\u003e PopUpBox : PopUpBox()"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "activate PopUpBox"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "PopUpBox --\u003e MainWindow : popUpBox"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "deactivate PopUpBox"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "PopUpBox -[hidden]-\u003e PopUpBox"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "destroy PopUpBox"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "MainWindow --\u003e MainWindow"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "deactivate MainWindow"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "MainWindow -[hidden]\u003e MainWindow"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "MainWindow --\u003e["
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "deactivate MainWindow"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "@enduml"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 47
    }
  },
  {
    "path": "docs/diagrams/UiSequenceDiagram.puml",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "@startuml"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "!include style.puml"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "box Logic LOGIC_COLOR_T1"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "participant \":UiManager\" as UiManager LOGIC_COLOR"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "end box"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "box Ui UI_COLOR_T1"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "participant \":MainWindow\" as MainWindow UI_COLOR"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "participant \":CalendarPanel\" as CalendarPanel UI_COLOR"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "participant \"ListPanel\" as ListPanel UI_COLOR"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "end box"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d UiManager \u003d\u003d\u003d\u003d\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "[-\u003e UiManager : onModelListChange(lists)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "activate UiManager"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "UiManager -\u003e UiManager : sortDateEventList(events)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "activate UiManager #0000A2"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "UiManager --\u003e UiManager : events"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "deactivate UiManager"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "UiManager -[hidden]-\u003e UiManager"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "UiManager -\u003e UiManager : sortDateTaskList(tasks)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "activate UiManager #0000A2"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "UiManager --\u003e UiManager : tasks"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "deactivate UiManager"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "UiManager -[hidden]-\u003e UiManager"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "UiManager -\u003e UiManager : addEventIndex(events)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "activate UiManager #0000A2"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "UiManager --\u003e UiManager : eventHash"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "deactivate UiManager"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "UiManager -[hidden]-\u003e UiManager"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "UiManager -\u003e UiManager : addTaskIndex(tasks)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "activate UiManager #0000A2"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "UiManager --\u003e UiManager : taskHash"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "deactivate UiManager"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "UiManager -[hidden]-\u003e UiManager"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d MainWindow \u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "UiManager -\u003e MainWindow : onModelListChange(events, tasks, eventHash, taskHash)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "activate MainWindow"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d CalendarPanel \u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "MainWindow -\u003e CalendarPanel : onModelListChange(events, tasks, eventHash, taskHash)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "activate CalendarPanel"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "CalendarPanel --\u003e MainWindow"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "deactivate CalendarPanel"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "CalendarPanel -[hidden]--\u003e CalendarPanel"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d ListPanel \u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "MainWindow -\u003e ListPanel : onEventListChange(events, eventHash)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "activate ListPanel"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "ListPanel --\u003e MainWindow"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "deactivate ListPanel"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "ListPanel -[hidden]--\u003e ListPanel"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "MainWindow -\u003e ListPanel : onTaskListChange(tasks, taskHash)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "activate ListPanel"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "ListPanel --\u003e MainWindow"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "deactivate ListPanel"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "ListPanel -[hidden]--\u003e ListPanel"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d MainWindow \u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "MainWindow --\u003e UiManager"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "deactivate MainWindow"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "MainWindow -[hidden]--\u003e MainWindow"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "deactivate UiManager"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "UiManager -[hidden]--\u003e UiManager"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d UiManager \u003d\u003d\u003d\u003d\u0027"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "[-\u003e UiManager : onUserOutput(output, colorTheme)"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "activate UiManager"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "UiManager -\u003e MainWindow : onUserOutput(output, colorTheme)"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "activate MainWindow"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "MainWindow --\u003e UiManager"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "deactivate MainWindow"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "UiManager --\u003e["
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "deactivate UiManager"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "UiManager -[hidden]--\u003e UiManager"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "@enduml"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 85
    }
  },
  {
    "path": "docs/diagrams/UiViewCalendarSequenceDiagram.puml",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "@startuml"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "!include style.puml"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "box Logic LOGIC_COLOR_T1"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "participant \":UiManager\" as UiManager LOGIC_COLOR"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "end box"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "box Ui UI_COLOR_T1"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "participant \":MainWindow\" as MainWindow UI_COLOR"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "participant \":CalendarPanel\" as CalendarPanel UI_COLOR"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "participant \"ListPanel\" as ListPanel UI_COLOR"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "participant \"LogPanel\" as LogPanel UI_COLOR"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "end box"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "box JavaFX UI_COLOR_T2"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "participant \":Region\" as Region UI_COLOR"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "end box"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d UiManager \u003d\u003d\u003d\u003d\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "[-\u003e UiManager : viewCalendar(calendarDate)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "activate UiManager"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d MainWindow \u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "alt calendarDate \u003d\u003d null"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    UiManager -\u003e MainWindow : viewCalendar()"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    activate MainWindow"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    \u0027\u003d\u003d\u003d\u003d CalendarPanel \u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    MainWindow -\u003e CalendarPanel : getRoot()"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    activate CalendarPanel"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    CalendarPanel -\u003e MainWindow : calendarRegion"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    deactivate CalendarPanel"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    MainWindow -\u003e Region : calendarRegion.setVisible(true)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    activate Region"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        Region --\u003e MainWindow"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    deactivate Region"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    \u0027\u003d\u003d\u003d\u003d ListPanel \u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    MainWindow -\u003e ListPanel : getRoot()"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    activate ListPanel"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    ListPanel -\u003e MainWindow : listRegion"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    deactivate ListPanel"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    MainWindow -\u003e Region : listRegion.setVisible(false)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    activate Region"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        Region --\u003e MainWindow"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    deactivate Region"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    \u0027\u003d\u003d\u003d\u003d LogPanel \u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    MainWindow -\u003e LogPanel : getRoot()"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    activate LogPanel"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    LogPanel -\u003e MainWindow : logRegion"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    deactivate LogPanel"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    MainWindow -\u003e Region : logRegion.setVisible(false)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    activate Region"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        Region --\u003e MainWindow"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    deactivate Region"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "else calendarDate !\u003d null"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    UiManager -\u003e MainWindow : changeCalendarScreenDate(calendarDate)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    MainWindow -\u003e CalendarPanel : changeCalendarScreenDate(calendarDate)"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    activate CalendarPanel"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    CalendarPanel --\u003e MainWindow"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    deactivate CalendarPanel"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    MainWindow -\u003e MainWindow : viewCalendar()"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "end"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "MainWindow --\u003e UiManager"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "deactivate MainWindow"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "UiManager --\u003e["
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "deactivate UiManager"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "UiManager -[hidden]--\u003e UiManager"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "@enduml"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 76
    }
  },
  {
    "path": "docs/diagrams/UiViewDaySequenceDiagram.puml",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "@startuml"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "!include style.puml"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "box Logic LOGIC_COLOR_T1"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "participant \":UiManager\" as UiManager LOGIC_COLOR"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "end box"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "box Ui UI_COLOR_T1"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "participant \":MainWindow\" as MainWindow UI_COLOR"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "participant \":CalendarPanel\" as CalendarPanel UI_COLOR"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "participant \"timelineView:TimelineDayView\" as TimelineDayView UI_COLOR"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "participant \"calendarScreen:CalendarScreen\" as CalendarScreen UI_COLOR"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "end box"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d UiManager \u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "[-\u003e UiManager : viewDay(calendarDate)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "activate UiManager"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "UiManager -\u003e MainWindow : viewDay(calendarDate)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "activate MainWindow"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "MainWindow -\u003e CalendarPanel : changeToDayView(calendarDate)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "activate CalendarPanel"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "CalendarPanel -\u003e CalendarPanel : changeCalendarScreenDate(calendarDate)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "activate CalendarPanel"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "create CalendarScreen"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "CalendarPanel -\u003e CalendarScreen : CalendarScreen()"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "activate CalendarScreen"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "CalendarScreen --\u003e CalendarPanel : calendarScreen"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "deactivate CalendarScreen"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "CalendarPanel --\u003e CalendarPanel"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "deactivate CalendarPanel"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "create TimelineDayView"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "CalendarPanel -\u003e TimelineDayView : TimelineDayView()"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "activate TimelineDayView"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "TimelineDayView --\u003e CalendarPanel : timelineView"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "deactivate TimelineDayView"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "CalendarPanel --\u003e MainWindow"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "deactivate CalendarPanel"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "MainWindow -\u003e CalendarPanel : viewCalendar()"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "activate CalendarPanel"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "CalendarPanel --\u003e MainWindow"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "deactivate CalendarPanel"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "MainWindow --\u003e UiManager"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "deactivate MainWindow"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "UiManager --\u003e["
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "deactivate UiManager"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "UiManager -[hidden]--\u003e UiManager"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "@enduml"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 53
    }
  },
  {
    "path": "docs/stylesheets/gh-pages.css",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "@import url(https://fonts.googleapis.com/css?family\u003dRoboto|Open+Sans);"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "@import \"asciidoctor.css\"; /* Default asciidoc style framework - important */"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "/* Custom block: details */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ".sidebarblock.details \u003e .content {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    border-left: .25rem solid rgba(0, 0, 0, 0.1);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ".sidebarblock.details \u003e .content {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    padding-left: .5rem"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ".sidebarblock.details {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    background-color: transparent;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    border: none;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    padding-bottom: 0;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    padding-top: 0;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "/* Overrides for asciidoctor.css */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "a {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    color: #0074c7;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "h1,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "#content h1 \u003e a.link,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "h2,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "h2 \u003e a.link,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "h3,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "h3 \u003e a.link,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "#toctitle,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "#toctitle \u003e a.link,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ".sidebarblock \u003e .content \u003e .title,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ".sidebarblock \u003e .content \u003e .title \u003e a.link,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "h4,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "h4 \u003e a.link,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "h5,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "h5 \u003e a.link,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "h6,"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "h6 \u003e a.link {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    color: #e46c0a;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ".subheader,"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ".admonitionblock td.content \u003e .title,"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ".audioblock \u003e .title,"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ".exampleblock \u003e .title,"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ".imageblock \u003e .title,"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ".listingblock \u003e .title,"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ".literalblock \u003e .title,"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ".stemblock \u003e .title,"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ".openblock \u003e .title,"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ".paragraph \u003e.title,"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ".quoteblock \u003e .title,"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "table.tableblock \u003e .title,"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ".verseblock \u003e .title,"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ".videoblock \u003e .title,"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ".dlist \u003e .title,"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ".olist \u003e .title,"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ".ulist \u003e .title,"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ".qlist \u003e .title,"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ".hdlist \u003e .title {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    color: rgb(197, 90, 17);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "@media screen {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    #footer {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        background-color: #f6f6f6;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        border-top: 1px #d2d2d2 solid;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        border-bottom: 1px #d2d2d2 solid;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        font-family: \"Open Sans\", \"DejaVu Sans\", sans-serif;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    #footer-text {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        color: #595959;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        line-height: 1;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "/* Utilities */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ".container {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    width: 100%;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    max-width: 62.5rem;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    margin-left: auto;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    margin-right: auto;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "/* Colors */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ".bg-light {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    background-color: #f8f9fa;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ".bg-lighter {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    background-color: #fbfbfb;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "/* Navbar */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ".navbar {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    display: flex;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    flex-wrap: nowrap;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    justify-content: center;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    font-family: \"Open Sans\", \"DejaVu Sans\", sans-serif;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    font-size: 1rem;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    padding: 0px 1rem;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": ".navbar-lg {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "    font-size: 1.3rem;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ".navbar-light {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "    border-bottom: 1px #d2d2d2 solid;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ".navbar a {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "    text-decoration: none;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": ".navbar-light a {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "    color: #595959;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": ".navbar-light a:hover,"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": ".navbar-light a:focus {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "    color: #000000;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": ".navbar a.active,"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": ".navbar a.active:hover,"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": ".navbar a.active:focus {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "    font-weight: bold;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": ".navbar-light a.active,"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": ".navbar-light a.active:hover,"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": ".navbar-light a.active:focus {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "    color: #000000;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": ".navbar-light .nav-link {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "    border-bottom: 2px transparent solid;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": ".navbar-light .nav-link.active {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "    border-bottom: 2px #e46c0a solid;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": ".navbar-lg .nav-link.active {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "    border-bottom: 0;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": ".navbar \u003e .container {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "    display: flex;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "    flex-wrap: wrap;"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "    justify-content: center;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": ".navbar-brand {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "    display: inline-block;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "    margin-right: 1rem;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "    padding: 0.8125rem 0rem;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "    padding-left: 0.9375rem;"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "    font-size: 1.25rem;"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": ".navbar-brand img {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "    height: 1.4rem;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "    margin: 0rem 0.4rem;"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "    padding: 0;"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "    vertical-align: middle;"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": ".navbar-lg .navbar-brand {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "    font-size: 1.7rem;"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": ".navbar-lg .navbar-brand img {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "    height: 2.3rem;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": ".navbar-nav {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "    display: flex;"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "    flex-wrap: wrap;"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "    flex-grow: 1;"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "    align-items: center;"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "    margin: 0px;"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "    padding: 0px;"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "    list-style: none;"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "    line-height: inherit;"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": ".nav-link {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "    display: block;"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "    margin: 0px;"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "    border: 0px;"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "    padding: 1rem 1rem;"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "/* Do not display site header on print mediums */"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "@media print {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "    #seedu-header {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "        display: none;"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "    #site-header {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "        display: none;"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 1,
      "-": 213
    }
  },
  {
    "path": "docs/team/bruceskellator.adoc",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "\u003d Bruce Ong - Project Portfolio"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ":site-section: AboutUs"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ":imagesDir: ../images"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ":stylesDir: ../stylesheets"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "---"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "\u003d\u003d Project: Horo (Calendar/Scheduling App)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "---"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "\u003d\u003d Overview"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "\u003d\u003d\u003d Project Description"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "My team of 5 software engineering students were given the task of enhancing a basic command line interface"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "desktop addressbook application for our Software Engineering Project. We decided to morph it into a schedule-manager called Horo."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "Horo allows one to record down daily events and tasks, all of which can be easily accessed in the form of a visual aid- Horo’s built-in calendar."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "This portfolio documents my contributions towards the development of Horo."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "\u003d\u003d\u003d Project Scope"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "Over the course of 6 weeks, as a requirement of the National University of Singapore\u0027s CS2103T Software Engineering module,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "students were grouped into teams tasked with either enhancing or morphing a basic Command Line Interface"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "(CLI) application. My team designed Horo with university students in mind, to provide them a convenient way to organise"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "their activities better through a modern and minimalistic interface."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "\u003d\u003d\u003d Portfolio Purpose"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "My role was to design and implement the undo and redo features. The sections that follow highlight my approach"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "to implementing these enhancements, as well as the contributions I have made to the user and developer guides."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "\u003d\u003d Summary of Contributions"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "This section shows a summary of my coding, documentation, and other helpful contributions to the team project. +"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "\u003d\u003d\u003d Enhancement Added: Ability to undo and redo previous commands"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "[cols\u003d\"2,9\"]"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "|\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "|What it does  | The `undo` command is able to undo any of the previous commands that have been executed;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "it restores the state of Horo as though the previous command had not been executed at all. The `redo` command does the"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "exact opposite. It redoes a previously undone command"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "|Justification | Suppose the user accidentally deletes the wrong task from Horo, or adds a task only to find that"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "there was a misspelling of the task description and the wrong event time provided. Of course, the user can simply add"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "he task back or edit the task using other Horo commands. However, this can be rather tedious if such mistakes happen"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "often. As such, providing an `undo` command allows the user to conveniently “undo” mistakes. A `redo` command is also"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "provided as a natural counterpart to the `undo` command."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "|Highlights    | Since my team was morphing the addressbook, as opposed to starting from scratch, I was not fully aware"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "of how the data was being conveyed from the addressbook to the GUI. As such, my first implementation correctly"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "manipulated the data, but all changes were not reflected on the GUI. I had to change my approach slightly in order"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "to fix this issue."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "|\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "\u003d\u003d\u003d Code Contributed"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "link:https://nus-cs2103-ay1920s1.github.io/tp-dashboard/#search\u003dbruceskellator\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2019-09-06\u0026timeframe\u003dcommit\u0026mergegroup\u003dfalse\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dfalse[RepoSense Link]"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "|\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "| Functional Code | link:https://github.com/AY1920S1-CS2103T-F12-1/main/blob/master/src/main/java/seedu/address/logic/UndoRedoManager.java[1]"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "link:https://github.com/AY1920S1-CS2103T-F12-1/main/blob/master/src/main/java/seedu/address/model/ModelManager.java[2]"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "link:https://github.com/AY1920S1-CS2103T-F12-1/main/blob/master/src/main/java/seedu/address/model/ModelData.java[3]"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "link:https://github.com/AY1920S1-CS2103T-F12-1/main/blob/master/src/main/java/seedu/address/logic/commands/UndoCommand.java[4]"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "link:https://github.com/AY1920S1-CS2103T-F12-1/main/blob/master/src/main/java/seedu/address/logic/commands/UndoCommandBuilder.java[5]"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "link:https://github.com/AY1920S1-CS2103T-F12-1/main/blob/master/src/main/java/seedu/address/logic/commands/RedoCommand.java[6]"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "link:https://github.com/AY1920S1-CS2103T-F12-1/main/blob/master/src/main/java/seedu/address/logic/commands/RedoCommandBuilder.java[7]"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "| Test Code       | link:https://github.com/AY1920S1-CS2103T-F12-1/main/blob/master/src/test/java/seedu/address/logic/UndoRedoManagerTest.java[1]"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "link:https://github.com/AY1920S1-CS2103T-F12-1/main/blob/master/src/test/java/seedu/address/model/ModelDataTest.java[2]"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "|\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "\u003d\u003d\u003d Other Contributions"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "|\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "|Helped to create Add, Delete and Edit Task commands |"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "link:https://github.com/AY1920S1-CS2103T-F12-1/main/blob/master/src/main/java/seedu/address/logic/commands/AddTaskCommand.java[1]"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "link:https://github.com/AY1920S1-CS2103T-F12-1/main/blob/master/src/main/java/seedu/address/logic/commands/DeleteTaskCommand.java[2]"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "link:https://github.com/AY1920S1-CS2103T-F12-1/main/blob/master/src/main/java/seedu/address/logic/commands/EditTaskCommand.java[3]"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "|\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "\u003d\u003d Contributions to the User Guide"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "My team had to update the original addressbook User Guide, as many of our enhancements comprised either"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "new instructions or existing ones that have been tailored to Horo. The following is an excerpt from our"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "Horo User Guide, showing the additions that I have made in relation to the undo and redo features."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "\u003d\u003d\u003d Undo"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "The `undo` command undoes the previous command. +"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "Commands can be undone up to the program\u0027s launch."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "Command Format: +"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "`*undo*`"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "Suppose that you have deleted the wrong task from Horo. Rather than having to type the `add_task` command"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "along with the description of the deleted task (to add back the wrongly deleted task), you can simply type in `undo`,"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "which will revert Horo to the state before the deletion of the wrong task was executed."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "This means Horo is now restored to its desired state, as if you did not commit the deletion mistake at all!"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "You can now proceed to delete the right task."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "Illustration:"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "Suppose that we wanted to delete task 2 in the list, but deleted task 3 instead."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "(Horo also has a list view on top of the calendar view; I will illustrate the feature with with the list view)"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "To undo:"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "1. Type undo in the command box, and press the Enter key to execute it. +"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ".`undo` command in the Command Box"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "image::undoScenario1.png[]"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "2. The result box will display the message: “Previous command has been undone!” +"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ".Feedback for the `undo` command"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "image::undoScenario2.png[]"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "3. You can see that the wrongly deleted task (task 3) is visible in the list once again. +"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ".Result of the `undo` command"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "image::undoScenario3.png[]"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "*The `undo` command undoes previous commands in reverse chronological order.* +"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "Suppose that you have executed the following commands in this order: +"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "1.\tAdding a task +"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "2.\tEditing a task +"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "Now, if you execute the `undo` command, you will first revert Horo to the state before a task was edited."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "Then, if you execute `undo` again, you will revert Horo to the state before a task was added. +"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "*The `undo` command only works on state-changing commands.* +"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "State-changing commands are those that manipulate task and event data stored in Horo. Examples include `add_task`, `delete_task` and `edit_task`."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "`Undo` commands only work on these types of commands because there is an actual change in the state of Horo that can be undone. +"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "On the other hand, non-state-changing commands include `find` and `help`. These commands are only concerned with producing"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "user output for the user in the GUI, but do not modify any of the data stored in Horo. As such, these types of commands"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "are ignored by the `undo` operation since there is nothing to `undo`. +"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "As such, if we first add a task to Horo, then we call the `help` command, calling `undo` will ignore the `help` command and proceed"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "to revert Horo to before a task was added. +"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "*The `undo` command only executes if there are previous states to revert back to.* +"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "If no command has been previously executed, or if Horo has already been reverted to the earliest possible state by multiple `undos`,"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "then calling `undo` further will amount to no effect."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "\u003d\u003d\u003d Redo"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "The `redo` command redoes a previously undone command."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "The `redo` command is able to redo any undone commands that have not been succeeded by a separate state-changing command"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "(e.g. add_event, delete_event, edit)."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "If you had executed any state-changing command (except for `undo` or `redo`) just after undoing the `add_event` command,"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "calling redo will then amount to no effect."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "If you\u0027ve ever used another application with undo-redo functionality, just imagine that Horo\u0027s undo-redo functions are as intuitive as theirs."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "Command Format: +"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "`*redo*`"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "Illustration:"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "Suppose that you wrongly deleted task 3 from the list, but actually wanted to delete task 2 instead."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "As a result, you type in the `undo` command, and Horo is restored to the previous state where task 3 still exists."
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "However, now you decide that you want to remove task 3 from the list after all. Without having to key in the `delete_task` command,"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "you can simply type in `redo` and the most recent command that was undone (the deletion of task 3) will be re-executed."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "This results in a list where task 3 is deleted."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "To redo:"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "1. Type redo in the command box, and press the Enter key to execute it. +"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ".`redo` command in the Command Box"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "image::undoScenario4.png[]"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "2. The result box will display the message “Previous undone command has been redone!” +"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ".Feedback for the `redo` command"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "image::undoScenario5.png[]"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "3. You can see that task 3 has been removed from the list. +"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ".Result of the `redo` command"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "image::undoScenario6.png[]"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "*The `redo` command redoes previously undone commands in reverse chronological order.* +"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "Suppose that you have executed the following commands in this order: +"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "1.\tAdding a task +"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "2.\tEditing a task +"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "As discussed in Undoing a previous command, if we run `undo` twice, we will revert Horo to before a task was edited,"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "and then revert Horo to before a task was added. +"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "Our sequence of `undo` commands are in this order: +"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "1.\tUndo editing of a task +"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "2.\tUndo adding of a task +"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "Now, if we run the `redo` command, Horo will be restored to the state after the task was added. If we execute redo again,"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "Horo will be restored to the state after the task was edited. +"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "*The `redo` command only executes if the most recent state-changing command(s) are undo commands.* +"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "If no `undo` command has been executed since the starting up of Horo, or `undo` commands have been executed"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "but other state-changing commands were executed after those `undos`, then executing the `redo` command amounts to no effect. +"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "For example, let’s say I deleted a task from the list, undid that deletion, and then added another task to the list."
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "Executing the `redo` command here will not do anything because `add_task` was executed after the `undo`."
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "\u003d\u003d Contributions to the Developer Guide"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "The following section shows my contributions to the developer guide in relation to the undo and redo features."
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "\u003d\u003d\u003d Undo/Redo feature"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "\u003d\u003d\u003d\u003d Implementation Details"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "The undo/redo mechanism is facilitated by `UndoRedoManager`, which contains `undoStateList` - a history of `ModelData` states."
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "Each `ModelData` object contains two lists: one to store `EventSources` and the other to store `TaskSources`,"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "together representing the state of all event and task data at that point in time. `UndoRedoManager` also contains a `undoIndex`,"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "which keeps track of the index of the `ModelData` being used presently, as well as a `ModelManager` object."
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "`ModelManager` contains a `ModelData` object. Horo\u0027s `StorageManager`, `UiManager` and `UndoRedoManager` components"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "implement the `ModelDataListener` interface which listens for any changes to this `ModelData` so that they can be updated accordingly."
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "Every time a state-changing command (that is not `undo` or `redo`) is executed, the a new `ModelData` representing the modified version"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "will replace the old one and this new version will then be deep-copied and added to `undoStateList`."
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "Should there be a need to revert back to a past or future state (if undo or redo is called), `ModelManager#modelData` will retrieve their data from the"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "appropriate copy of `ModelData` in the list of duplicates."
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "`UndoRedoManager` also implements the following operations:"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "* `UndoRedoManager#undo()` -- Restore `ModelManager#modelData` to their previous versions from the appropriate duplicate in `undoStateList`"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "* `UndoRedoManager#redo()` -- Restore `ModelManager#modelData` to their future versions from the appropriate duplicate in `undoStateList`"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "* `UndoRedoManager#clearFutureHistory()` -- Delete all `ModelData` states that occur in `undoStateList` after the index given by the `undoIndex`"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "The `UndoCommand` and `RedoCommand` will interact directly with `UndoRedoManager` while other state-changing commands"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "(such as adding or deleting tasks) will interact only with `ModelManager`."
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "The `ModelDataListener` interface helps us achieve the desired undo-redo functionality:"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "This listener interface contains a single method, `onModelDataChange(ModelData modelData)`."
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "The `UndoRedoManager` implements the `ModelDataListener` interface’s method `onModelDataChange(ModelData modelData)` to “listen” for any changes to"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "`ModelManager#modelData` (e.g. when an event or task is added or deleted)"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "If such a change exists, it will be handled by first instantiating a model data with a deep-copied version of the"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "`taskList` and the modified `eventList`, calling `UndoRedoManager#clearFutureHistory()`, and finally to committing the state to `undoStateList`"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "On the other hand, whenever an undo or redo is executed, `ModelManager`\u0027s `ModelData` is updated"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "to match the data of the model data with index `undoIndex` in `undoStateList` so that the correct version of model data is being reflected in the GUI."
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "Given below is an example usage scenario and how the undo/redo mechanism behaves at each step."
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "Step 1. The user runs the program for the first time. The `UndoRedoManager` will be initialized with the initial `undoStateList`."
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "A `ModelData` object will be added to `undoStateList` and the `undoIndex` will point to that single model data in the list."
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "image::process1.png[]"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "Step 2. The user executes `add_event “Suntec City Computer Fair” --at “17/11/2019 12:00”`."
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "`ModelManager#ModelData` will be reset to a new `ModelData` object with the added event."
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "Then, `UndoRedoManager#onModelDataChange(ModelData modelData)` will be called (as there has been a change to the `eventList`),"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "deep-copying the modified `ModelData`."
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "All future states beyond the `undoIndex` will be cleared as they are no longer useful. In this particular case, there are no future states to be cleared."
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "Finally, the deep-copy of the new model data state will be committed; added to `undoStateList`."
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "The `undoIndex` is incremented by one to contain the index of the newly inserted model data state."
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "image::process2.png[]"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "If a command fails its execution, it will not result in any change to `ModelManager#ModelData`."
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "Hence, there is no change to trigger the listener methods and thus no `ModelData` will be saved to `undoStateList`."
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "Step 3. Suppose the user decides that adding the task was a mistake. He/she then executes the undo command to rectify the error."
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "The undo command will decrement the `undoIndex` by one to contain the index of the previous undo redo state, thereafter triggering the"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "`UndoRedoManager#notifyModelResetListeners` method. This method updates `ModelManager#modelData` to match the data of the"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "model data with index `undoIndex` in `undoStateList`."
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "image::process3.png[]"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "If the `undoIndex` is 0, pointing to the initial model data state, then there are no previous model data states to restore."
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "The undo command uses `UndoRedoManager#canUndo()` to check if this is the case."
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "If so, it will return an error to the user rather than attempting to perform the undo."
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "The following sequence diagram shows how the undo operation works:"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "image::UndoSequenceDiagram.png[width\u003d100%]"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "The redo command does the opposite — it calls `UndoRedoManager#redo()`, which increments the `undoIndex` by one to contain the index of the previously undone state."
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "The `UndoRedoManager#notifyModelResetListeners` then causes `ModelManager#modelData` to be reset to this state’s data."
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "If the `undoIndex` is at index `undoStateList.size() - 1`, pointing to the latest model data state, then there are no undone model data states to restore."
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "The `redo` command uses `UndoRedoManager#canRedo()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo."
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "Step 4. The user decides to execute the command `log`. Non-state-changing commands such as `log` do not manipulate task and event data."
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "Since no changes to `ModelManager#modelData` have been made, the listener methods will not be triggered and no model data will be saved to `undoStateList`."
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "Thus, the `undoStateList` remains unchanged."
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "image::process4.png[]"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "Step 5. The user executes `delete_event 1`, removing the event from the `eventList` in `ModelManager#modelData`."
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "`UndoRedoManager#onModelDataChange(ModelData modelData)` will be called (as there has been a change to the `ModelData`),"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "purging all future states beyond the `undoIndex` as they are no longer useful."
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "The modified model data will be deep-copied and a new model data containing the deep-copies will also be added to `undoStateList`."
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "The `undoIndex` is incremented by one to contain the index of the newly inserted model data state."
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "image::process5.png[]"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "The following activity diagram summarizes what happens when a user executes a new command:"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "image::CommitActivityDiagram1.png[]"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "\u003d\u003d\u003d\u003d Design Considerations"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ".Aspect: How undo \u0026 redo executes"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "||Approach 1 (current choice) |Approach 2"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "|Pros"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "|Easy to understand and implement."
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "|Uses less memory as we only need to keep track of what commands have been executed and their parameters,"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "as opposed to storing all task and event data between every change."
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "|Cons"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "|Performance issues may arise due to the relatively larger memory usage required."
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "|Every command will have to be implemented twice, since their inverse operations will all be different. This is"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "compounded by the fact that we have to ensure the correctness of every inverse operation individually as well."
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "|\u003d\u003d\u003d"
      }
    ],
    "authorContributionMap": {
      "bruceskellator": 331
    }
  },
  {
    "path": "docs/team/chenggeng97.adoc",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d Ong Cheng Geng - Project Portfolio"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ":site-section: AboutUs"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ":imagesDir: ../images"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ":stylesDir: ../stylesheets"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "---"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d\u003d Project: Horo (Calendar/Scheduling App)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "---"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d\u003d Overview"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d\u003d\u003d Project Description"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "This is a portfolio that documents my contributions towards a Calendar and Scheduling application called Horo. Horo helps the user maintain a to-do list and to schedule their activities, and is able to post reminders to their desktop."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "Here is a screenshot of our application in the default Calendar view."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ".Horo Calendar view screenshot"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "image::HoroMainViewDescription.png[]"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d\u003d\u003d Project Scope"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "Horo was made for the CS2103T Software Engineering module, offered by the National University of Singapore\u0027s School of Computing. Over the course of 6 weeks, students were grouped into teams tasked with either enhancing or morphing a basic Command Line Interface (CLI) application. I contributed to the project by writing both functional and test code, as well as documenting these contributions in the product\u0027s User and Developer guides."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d\u003d\u003d Portfolio Purpose"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "My role in this project was to design and implement the Notification system of the application. Subsequent sections will go into greater detail with regards to my contributions to both the code and documentation."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "Note the following symbols and formatting used throughout this document:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "|\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "| `notif_on` | Text highlighted in grey in the User Guide indicates that a term is a command that can be executed by the program if input through the command line."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "| `NotificationManager`| Text highlighted in grey in the Developer Guide indicates that a term is a class or an object used in the source code of the application."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "|\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d\u003d Summary of Contributions"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "This section lists the code and documentation I contributed to the project."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d\u003d\u003d Major Enhancement Added: Notification System"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "[cols\u003d\"2,8\"]"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "|\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "|What it does  | The Notification System runs in parallel to the main thread of the app. Every minute, it checks whether the user should be reminded of any Event or Task, and posts a new notification if necessary."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "|Justification | The Notification System is a natural extension of an application meant for tracking deadlines and schedules. It serves to remind a forgetful or busy user of their commitments."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "|Highlights    | •\tAn initial design for the notification system involved running it not as a parallel thread, but as a separate background application. This would allow notifications to be posted even if the main app were closed. However, this design was eventually reworked.  Going forward with the original design would necessitate the development of a second application that the user would have to install in addition to Horo. This would have been at odds with module requirements and learning objectives."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                  {empty} +"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                  {empty} +"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                 •\tAn alternative design involved running instantiating the Notification System as a separate component to UI, Logic and Model. However, this design would have been at odds with OOP principles. The Notification System was thus further split into separate extensions of the Logic and UI packages."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "|\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d\u003d\u003d\u003d Code Contributed"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "link:https://nus-cs2103-ay1920s1.github.io/tp-dashboard/#search\u003dchenggeng\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2019-09-06\u0026timeframe\u003dcommit\u0026mergegroup\u003dfalse\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dfalse\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dChengGeng97\u0026tabRepo\u003dAY1920S1-CS2103T-F12-1%2Fmain%5Bmaster%5D[RepoSense Link]"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "|\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "| Notification System         | link:https://github.com/AY1920S1-CS2103T-F12-1/main/blob/master/src/main/java/seedu/address/logic/NotificationManager.java[1] link:https://github.com/AY1920S1-CS2103T-F12-1/main/blob/master/src/main/java/seedu/address/logic/notification/NotificationCheckingThread.java[2] link:https://github.com/AY1920S1-CS2103T-F12-1/main/blob/master/src/main/java/seedu/address/logic/notification/NotificationChecker.java[3] link:https://github.com/AY1920S1-CS2103T-F12-1/main/blob/master/src/main/java/seedu/address/ui/systemtray/SystemTrayCommunicator.java[4] link:https://github.com/AY1920S1-CS2103T-F12-1/main/blob/master/src/main/java/seedu/address/ui/systemtray/PopupNotification.java[5] link:https://github.com/AY1920S1-CS2103T-F12-1/main/blob/master/src/main/java/seedu/address/ui/systemtray/PopupListener.java[6] link:https://github.com/AY1920S1-CS2103T-F12-1/main/blob/master/src/main/java/seedu/address/ui/systemtray/NotificationClickActionListener.java[7]"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "| Notification Tests          | link:https://github.com/AY1920S1-CS2103T-F12-1/main/blob/master/src/test/java/seedu/address/logic/notification/NotificationCheckerTest.java[1] link:https://github.com/AY1920S1-CS2103T-F12-1/main/blob/master/src/test/java/seedu/address/logic/notification/NotificationCheckingThreadTest.java[2] link:https://github.com/AY1920S1-CS2103T-F12-1/main/blob/master/src/test/java/seedu/address/ui/systemtray/PopupNotificationTest.java[3]"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "| Task Tests                  | link:https://github.com/AY1920S1-CS2103T-F12-1/main/blob/master/src/test/java/seedu/address/model/tasks/TaskSourceTest.java[1] link:https://github.com/AY1920S1-CS2103T-F12-1/main/blob/master/src/test/java/seedu/address/model/tasks/TaskSourceBuilderTest.java[2]"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "| Task-Related Command Tests  | link:https://github.com/AY1920S1-CS2103T-F12-1/main/blob/master/src/test/java/seedu/address/logic/commands/AddTaskCommandTest.java[1] link:https://github.com/AY1920S1-CS2103T-F12-1/main/blob/master/src/test/java/seedu/address/logic/commands/DeleteTaskCommandTest.java[2] link:https://github.com/AY1920S1-CS2103T-F12-1/main/blob/master/src/test/java/seedu/address/logic/commands/EditTaskCommandTest.java[3]"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "|\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d\u003d\u003d Other Contributions"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "|\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "|Project Documentation | Reviewed pull requests  link:https://github.com/AY1920S1-CS2103T-F12-1/main/pull/78[#78] link:https://github.com/AY1920S1-CS2103T-F12-1/main/pull/95[#95] link:https://github.com/AY1920S1-CS2103T-F12-1/main/pull/107[#107]"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "|Documentation         | Edited the User Guide for better clarity and to fix grammatical mistakes link:https://github.com/AY1920S1-CS2103T-F12-1/main/pull/121[#121]"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "|\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d\u003d Contributions to the User Guide"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "The following section includes excerpts of my contribution to the Horo User Guide, explaining the Notification System and the `notif_on` and `notif_off` commands."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "// tag::ug[]"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "include::../UserGuide.adoc[tag\u003dchenggengppp]"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "// end::ug[]"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d\u003d Contributions to the Developer Guide"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "The following section includes excerpts of my contributions to the Horo Developer Guide."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d\u003d\u003d Class Architecture and Behaviour"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "This sub-section includes my explanations of the class architecture and behaviour behind the Notification System."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "// tag::dg[]"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "include::../DeveloperGuide.adoc[tag\u003dnotification]"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "// end::dg[]"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d\u003d\u003d Intructions for Manual Testing"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "This sub-section includes instructions I have provided for manual testing of the notification system."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "include::../DeveloperGuide.adoc[tag\u003dnotifmanualtesting]"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 86
    }
  },
  {
    "path": "docs/team/kyzure.adoc",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003d Timothy Yu Zhiwen - Project Portfolio for Horo"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ":site-section: AboutUs"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ":imagesDir: ../images"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ":stylesDir: ../stylesheets"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ":toc:"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ":toc-title:"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ":toc-placement: preamble"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ":sectnums:"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "ifdef::env-github[]"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ":tip-caption: :bulb:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ":note-caption: :information_source:"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ":warning-caption: :warning:"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "endif::[]"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ":repoURL: https://github.com/AY1920S1-CS2103T-F12-1/main"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d\u003d Overview"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Tasked to enhance or morph a simple command line interface (CLI) desktop address book application, our team of 5 Computer Science Students decided to morph the program into a calendar scheduling application for students. From the word \"Horology\", we came up with the name **Horo** for our program. It is capable of maintaining a calendar and to-do list, posting timely reminders for the users."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Here is a screenshot of **Horo**:"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ".Screenshot of Horo\u0027s Graphical User Interface"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "image::UiView.png[]"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "I played the role of designing the User Interface (UI) and the logic of how my teammates\u0027 code will interact with the UI. The following sections below will display the following morphing I did in detail, including certain documentation added to the User and Developer Guide."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "__Note: The following symbols and format are explained as:__"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ".Symbol and Formats"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "|`*list*`| A bold text with highlight as well as the change to monospaced indicates a command input by you which is to be executed by the Horo."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "|`TimelineView`| A text with highlight as well as monospaced font indicates a component, class or object in the structure of **Horo**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003d\u003d Summary of contributions"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003d\u003d\u003d Enhancement Ui and Calendar Logic"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003d\u003d\u003d\u003d What is it:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "There are 3 different UI screens/panels you can switch between: Calendar Panel, List Panel, Log Panel. Each of the panels shows you a different screen provided with different information."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003d\u003d\u003d\u003d What does it do:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "This is accessed using the commands calendar, list, log respectively and provides a different screen to you depending on what you wish to see."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003d\u003d\u003d\u003d Why it is necessary:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "It provides you a Graphical User Interface (GUI) so you can easily view their Events or Tasks with a simple switch between the views."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003d\u003d\u003d Code Contributed"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003d\u003d\u003d\u003d Sample Code Contributed:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Here is a link:https://nus-cs2103-ay1920s1.github.io/tp-dashboard/#search\u003dKyzure\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2019-09-06\u0026timeframe\u003dcommit\u0026mergegroup\u003dfalse\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dfalse\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dKyzure\u0026tabRepo\u003dAY1920S1-CS2103T-F12-1%2Fmain%5Bmaster%5D[`Repo Sense Link`] that indicates the amount of code I have written for the project. Additionally, our code has an authorship signature, with mine being - `//@@author Kyzure`, or `\u003c!-- @@author Kyzure -$$-\u003e$$`. This authorship can be found at the top of any of the class, or method."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* link:{repoURL}/blob/master/src/main/java/seedu/address/ui[`Ui Controller Code`] - The packages `systemTray` and `listeners` are not written by me, as well as code without my authorship."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* link:{repoURL}/blob/master/src/main/resources/view[`JavaFX Code for .fxml files`]"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* link:{repoURL}/blob/master/src/main/java/seedu/address/model/CalendarDate.java[`Calendar Date Model Code`]"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* link:{repoURL}/blob/master/src/main/java/seedu/address/logic/commands[`Command Code`] - Only the following is written by me: `DayViewCommand`, `WeekViewCommand`, `MonthViewCommand`, `CalendarViewCommand`, `ListViewCommand`, `LogViewCommand`."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003d\u003d\u003d Other Contribution"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003d\u003d\u003d\u003d Documentation:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* Provided a baseline for both User and Developer Guide at the beginning, and improve the design to make it more readable for the user. (Pull requests link:{repoURL}/pull/11[#11], link:{repoURL}/pull/94[#94], link:{repoURL}/pull/95[#95], link:{repoURL}/pull/119[#119], link:{repoURL}/pull/128[#128], link:{repoURL}/pull/226[#226])"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003d\u003d\u003d\u003d Community:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* Reviewed Pull Requests: link:{repoURL}/pull/41[#41]"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003d\u003d Contributions to the User Guide"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "|_The following sections are an excerpt from my contribution to the User Guide to indicate my ability for writing readable help sections to the user._"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "include::../UserGuide.adoc[tag\u003duiCalendarView]"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "include::../UserGuide.adoc[tag\u003duiTimelineDay]"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003d\u003d Contributions to the Developer Guide"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "|_The following sections are an excerpt from my contribution to the Developer Guide to showcase my prowess in the technical aspect of the project._"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "include::../DeveloperGuide.adoc[tag\u003duiImplementation]"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "include::../DeveloperGuide.adoc[tag\u003duiDayView]"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "include::../DeveloperGuide.adoc[tag\u003duiDesign]"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 17,
      "Kyzure": 69
    }
  },
  {
    "path": "docs/team/marcusteh1238.adoc",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "\u003d Teh Hao Rui Marcus - Project Portfolio"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ":site-section: AboutUs"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ":imagesDir: ../images"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ":stylesDir: ../stylesheets"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ":repoURL: https://github.com/AY1920S1-CS2103T-F12-1/main"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "\u003d\u003d Project Horo - Overview"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "Our group of 5 software engineering students were tasked to enhance or morph"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "a basic command line interface Address Book application for our Software Engineering project."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "We chose to morph it into a personal time management helper app called **Horo**."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "**Horo** enables users to keep tracks of their upcoming tasks and events,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "reminding users when a deadline or event draws near,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "and users can also share their data through iCalendar (ICS) files."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "This is how the main page of our app looks like:"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ".Horo\u0027s Graphical User Interface (GUI)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "image::HoroMainViewDescription.png[]"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "In this project, my role was to design and implement the code for the export and import commands."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "The following sections illustrate these enhancements in more detail,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "including some of the relevant documentation I have added"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "to the User Guide and Developer Guide in relation to these enhancements."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "Note the following symbols and formatting used in this document:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "[cols\u003d\"2,5\"]"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "| `export`  | A grey highlight (called a mark-up) indicates that"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "this is a command that can be inputted into the command line and executed by the application.|"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "`*IcsExporter*`| A text with a grey highlight as well as a bold font indicates a component, class or object in Horo."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "\u003d\u003d Summary of Contributions"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "This section summarizes my contributions to the team project, including coding and documentation."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "---"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "_Enhancement added:_ The ability to import and export *Horo*’s Event and Task data through ICS files."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "- How to use it:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    * The command `export` allows users to export *Horo*’s data into an ICS file."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        This file will be in the same directory as the *Horo* app."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    * The user may use the command `import \u003cfilepath\u003e`, where `\u003cfilepath\u003e` is the path to the ICS file,"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        or any other *Horo* save file, in order to import its data to the current app."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "- Justification:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    * If users want to share their event details with their friends,"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        they can easily do so by exporting *Horo*’s save data, sharing the ICS file,"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        and having their friends import the save data from the file."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "- Highlights:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    * As ICS is a widely used format for exporting and importing calendars into various calendar apps,"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        our app can also import and export data to and from other calendar apps."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    * Although there are existing libraries for ICS files, my code is not dependant on any of them,"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        as I did not want to introduce bugs into our app, thus I wrote a custom parser that better suited our needs."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "_Code Contributed:_ I mainly contributed code to the `**ics**` package of our repository."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "To view a breakdown of my contributions to the repository, click"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "link:https://nus-cs2103-ay1920s1.github.io/tp-dashboard/#search\u003dmarcusteh1238\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2019-09-06\u0026timeframe\u003dcommit\u0026mergegroup\u003dfalse\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dfalse[here]!"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "_Other contributions:_"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "- Project Management"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    * Managed the release of v1.1."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    * Came up with the code integration workflow."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "- Documentation:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    * Added information about the ICS package to the User Guide and Developer Guide. (Pull Requests"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        link:{repoURL}/pull/11[#11], link:{repoURL}/pull/98[#98])"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "- Team:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    * Reviewed Pull Requests with non-trivial review comments:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        link:{repoURL}/pull/51[#51], link:{repoURL}/pull/55[#55]"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    * Reported bugs found on Horo in the Discord server."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "- Tools:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    * Integrated Travis Continuous Integration to the team repository."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    * Integrated a Github webhook to the team’s Discord server."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "\u003d\u003d Contributions to the User Guide"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "| As part of the requirements, we had to update the original User Guide with instructions"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "regarding how to use our new features."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "This section contains an excerpt from the User Guide showing how to use the export command."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "This shows how I am able to give an understandable guide to new users of Horo."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "---"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "include::../UserGuide.adoc[tag\u003dics]"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "\u003d\u003d Contributions to the Developer Guide"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "| The following section shows my additions to the Horo Developer Guide for the import and export features,"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "showing how I can write documentation that can be useful to other developers."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "include::../DeveloperGuide.adoc[tag\u003dics]"
      }
    ],
    "authorContributionMap": {
      "marcusteh1238": 93
    }
  },
  {
    "path": "docs/team/weomucat.adoc",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003d Project Portfolio Page"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ":imagesdir: ../images"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Author: Denis Tjia \u003cdenis@u.nus.edu\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003d\u003d\u003d\u003d Preface"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "The purpose of this portfolio is to document the contributions that I have made to a software engineering project, during my second year of study at the National University of Singapore."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003d\u003d\u003d\u003d About the Project"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "The project was structured to resemble an intermediate stage of a real life software project."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "We were tasked to implement enhancements to the software, and also ensure that the finished product can be easily taken over by other developers."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "My team of five decided to remix the application to keep track of events and tasks, very much like a calendar application."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Our application, named *Horo*, aims to allow efficient management and organization of daily events and tasks, for any busy student."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ".Graphical user interface (GUI) of Horo"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "image::Ui.png[GUI, 600]"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "For this project, I was given a few critical roles:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ". Designing the overall code architecture."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ". Implementation of the `Logic` and `Model` in Horo."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003c\u003c\u003c"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003d\u003d\u003d\u003d Major Contribution"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "[cols\u003d\"1h, 5a\"]"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "| What"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "| Design of `CommandManager`, under `Logic`."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "The `CommandManager` class manages the addition and invoking of `Commands` in *Horo*."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "| Why"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "| This feature serves to make it very simple for future developers to add new commands."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "It was also designed to be very extensible for developers to build upon it."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "| Highlights"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "|"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- `CommandBuilder` is an application programming interface (API) for adding new commands."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- `CommandParser` parses user input using a finite state machine (FSM)."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "| Functional Code"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "|"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "https://github.com/AY1920S1-CS2103T-F12-1/main/blob/master/src/main/java/seedu/address/logic/CommandManager.java[CommandManager],"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "https://github.com/AY1920S1-CS2103T-F12-1/main/blob/master/src/main/java/seedu/address/logic/commands/CommandBuilder.java[CommandBuilder],"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "https://github.com/AY1920S1-CS2103T-F12-1/main/blob/master/src/main/java/seedu/address/logic/parser/CommandParser.java[CommandParser]"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "| Test Code"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "|"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "https://github.com/AY1920S1-CS2103T-F12-1/main/blob/master/src/test/java/seedu/address/logic/CommandManagerTest.java[CommandManagerTest],"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "https://github.com/AY1920S1-CS2103T-F12-1/main/blob/master/src/test/java/seedu/address/logic/parser/CommandParserTest.java[CommandParserTest]"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "| Credits"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "| Design Patterns: Elements of Reusable Object-Oriented Software (1994) by The \"Gang of Four\"."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003d\u003d\u003d\u003d Minor Contribution"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "[cols\u003d\"1h, 5a\"]"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "| What"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "| Implementation of `AddEventCommand`, `DeleteEventCommand` and `EditEventCommand`."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "| Why"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "| These commands allow the user to create, modify and delete events in Horo!"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "| Functional Code"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "|"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "https://github.com/AY1920S1-CS2103T-F12-1/main/blob/master/src/main/java/seedu/address/logic/commands/AddEventCommand.java[AddEventCommand],"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "https://github.com/AY1920S1-CS2103T-F12-1/main/blob/master/src/main/java/seedu/address/logic/commands/DeleteEventCommand.java[DeleteEventCommand],"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "https://github.com/AY1920S1-CS2103T-F12-1/main/blob/master/src/main/java/seedu/address/logic/commands/EditEventCommand.java[EditEventCommand]"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "| Test Code"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "|"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "https://github.com/AY1920S1-CS2103T-F12-1/main/blob/master/src/test/java/seedu/address/logic/commands/AddEventCommandTest.java[AddEventCommandTest],"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "https://github.com/AY1920S1-CS2103T-F12-1/main/blob/master/src/test/java/seedu/address/logic/commands/DeleteEventCommandTest.java[DeleteEventCommandTest],"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "https://github.com/AY1920S1-CS2103T-F12-1/main/blob/master/src/test/java/seedu/address/logic/commands/EditEventCommandTest.java[EditEventCommandTest]"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003d\u003d\u003d\u003d Other Contributions"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "[cols\u003d\"1h, 5a\"]"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "| Project Management"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "|"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- Managed all https://github.com/AY1920S1-CS2103T-F12-1/main/releases[releases] (v1.1 - v1.4)"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- Integration of my team’s code:"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "https://github.com/AY1920S1-CS2103T-F12-1/main/pull/49#pullrequestreview-299621979[#49]"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "https://github.com/AY1920S1-CS2103T-F12-1/main/pull/86#discussion_r338410745[#86]"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "https://github.com/AY1920S1-CS2103T-F12-1/main/pull/132[#132]"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "| Community"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "|"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- Give suggestions to a team member: https://github.com/AY1920S1-CS2103T-F12-1/main/pull/52#issuecomment-539463845[#52]"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- Report bugs to a team member:"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "https://github.com/AY1920S1-CS2103T-F12-1/main/pull/72#issuecomment-542713626[#72]"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "| Tools"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "| Integrated a third party library https://github.com/skyscreamer/JSONassert[JSONAssert], to help with JSON unit testing."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "https://github.com/AY1920S1-CS2103T-F12-1/main/pull/223/commits/4b1e2808bdc1477d9ae4e934415b5ff46333352f[#223]"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "| Code Contribution"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "| https://nus-cs2103-ay1920s1.github.io/tp-dashboard/#search\u003dweomucat\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2019-09-06\u0026timeframe\u003dcommit\u0026mergegroup\u003dfalse\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dfalse\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dWeomuCat\u0026tabRepo\u003dAY1920S1-CS2103T-F12-1%2Fmain%5Bmaster%5D[RepoSense]"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003c\u003c\u003c"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003d\u003d\u003d\u003d User Guide Contributions"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "****"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "The section below contains excerpts taken from the https://github.com/AY1920S1-CS2103T-F12-1/main/blob/master/docs/UserGuide.adoc[User Guide], written by me."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "****"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003d\u003d\u003d 3. Features"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "include::../UserGuide.adoc[tag\u003dcommandFormat]"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003c\u003c\u003c"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003d\u003d\u003d 3.2.2. Deleting Events"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ".Delete Event Command"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "image::DeleteEventCommandScreenShot.png[DeleteEventCommandScreenShot, 550]"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "You may use the `delete_event` command to delete one or more events from the calendar."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Command Format:"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "****"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "*delete_event* INDEX..."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "****"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Command Parameters:"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- `*--tag* TAG...`"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- `*delete_event* 0`"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- `*delete_event* 0 1 2` : Deletes events 0, 1 and 2."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- `*delete_event* *--tag* Birthday` : Deletes events tagged as `Birthday`."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- `*delete_event* *--tag* Birthday Rori` : Deletes events tagged as `Birthday` and `Rori`."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- `*delete_event* 0 1 2 *--tag* Birthday Rori` : Deletes events 0, 1 and 2 only if they have been tagged as `Birthday` and `Rori`."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- Events which match both `INDEX` and `TAG` will be deleted."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- `INDEX` can be found on the event\u0027s top right corner."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ".Index found on the top right of the event."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "image::EventCardScreenShot.png[EventCardScreenShot, 350]"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003c\u003c\u003c"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003d\u003d\u003d\u003d Developer Guide Contributions"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "****"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "The section below contains excerpts of the CommandManager taken from the https://github.com/AY1920S1-CS2103T-F12-1/main/blob/master/docs/DeveloperGuide.adoc[Developer Guide], written by me."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "****"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "[[Design-CommandManager]]"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003d\u003d\u003d 3.3 CommandManager Component"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "The `CommandManager` class manages the addition and invoking of `Commands` in Horo."
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ".Class diagram of CommandManager"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "image::CommandManagerClassDiagram.png[CommandManager, 550]"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Referring to the diagram above, it performs the following operations:"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ". Listen for user input in `onCommandInput()`."
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ". Pass the user input to `commandParser`, to obtain a `Command`."
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ". Execute the `Command` and obtain a `UserOutput`."
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ". Notify all `userOutputListeners` about the `UserOutput`."
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003c\u003c\u003c"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "To give a more concrete example of how `CommandManager` functions, refer to the sequence diagram below of *adding a task* to Horo:"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ".Sequence diagram of adding a task"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "image::CommandManagerAddTaskSequenceDiagram.png[]"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003d\u003d\u003d 3.3.2 CommandParser"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`CommandParser` is trying to tokenize any command input into one command keyword, and zero or more command phrases."
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "(i.e. `[keyword] [phrase] [phrase] [phrase] ...`)."
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "To understand how the FSM works, study the activity diagram below:"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ".Activity diagram of CommandParser"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "image::CommandParserActivityDiagram.png[CommandParser, 300]"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d Design Considerations"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "[%header, cols\u003d\"1h, 2a, 2a\"]"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "|"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "| Option 1"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "| Option 2"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "| What"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "| Use `String.split()` to break up command input into tokens."
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "| Implement a FSM to break up command input into tokens."
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "| Difficulty"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "| Easy"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "| Moderate"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "| How"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "| Split the command input by whitespaces, into words. The first word will be the *command keyword*."
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "All subsequent words will have to be joined into *command phrases*."
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "| Create a `State` class, and design a state diagram to tokenize the command input into a *command keyword* and *command phrases*."
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "| Evaluation"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "| I did not choose this option because:"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Joining words into command phrases can become quite complex, especially when introducing quotation marks."
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Additionally, it is difficult for future developers to maintain and extend logic like this."
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "| *I chose this option because:*"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "A state machine is easy to understand and configure."
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "A state machine can tokenize complex command inputs. This grants future developers the ability to parse more advanced command inputs."
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003d\u003d\u003d 3.3.4 CommandBuilder"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "A `CommandBuilder` is defined to be able to accept an arbitrary amount of command phrases, and eventually create a `Command` using those phrases."
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ".Class diagram of CommandBuilder"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "image::CommandBuilderClassDiagram.png[]"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Referring to the diagram above, the definition the command is implemented in two methods:"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ". `defineCommandArguments()`"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ". `defineCommandOptions()`"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "..."
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "To understand how `CommandBuilder` works, study the activity diagram below:"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ".Activity diagram of CommandBuilder"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "image::CommandBuilderActivityDiagram.png[CommandBuilderActivityDiagram, 300]"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d Design Considerations"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "[%header, cols\u003d\"1h, 2a, 2a\"]"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "|"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "| Option 1"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "| Option 2"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "| What"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "| Each `Command` is created by parsing user input using it\u0027s own `Parser`."
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "| Each `Command` is defined by a `CommandBuilder`, and created by a `CommandParser`."
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "| Difficulty"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "| Easy"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "| Moderate"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "| How"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "| Implement a utility class which can parse user input into arguments. Use this class in each command parser."
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "| Implement `CommandBuilder` which can build a `Command` with any number of arguments. Commands provide what arguments they require."
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "| Evaluation"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "| I did not choose this option because:"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Each command parser will need to implement logic to use the utility class, handle argument checking and parsing errors."
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "It is difficult for future developers to create, extend and test `Commands`."
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "| *I chose this option because:*"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Each `Command` does not require any logic, only arguments are required to be defined."
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Since all logic is in `CommandBuilder`, it is simple for developers to test."
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003c\u003c\u003c"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "****"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "The section below contains excerpts of the Architecture and Model from the https://github.com/AY1920S1-CS2103T-F12-1/main/blob/master/docs/DeveloperGuide.adoc[Developer Guide], written by me."
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "****"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003d\u003d\u003d 3.1. Architecture"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ".Architecture Diagram"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "image::ArchitectureDiagram.png[ArchitectureDiagram, 300]"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "The *_Architecture Diagram_* given above explains the high-level design of Horo. Given below is a quick overview of each component."
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "..."
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "The rest of Horo is managed by seven components:"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ". `CommandManager` : Responsible for executing commands from the user."
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ". `Ics` : Responsible for handling the importing and exporting of ICS files."
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ". `ModelManager` : Responsible for reading and writing to the in-memory data of Horo."
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ". `NotificationManager` : Responsible for sending notifications to the user."
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ". `StorageManager` : Responsible for reading and writing the Model to an external disk."
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ". `UiManager` : Responsible for managing the user interface (UI) of Horo."
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ". `UndoRedoManager` : Responsible for tracking changes in ModelManager, and reverting its history when needed."
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Most components follow the https://en.wikipedia.org/wiki/Observer_pattern[observer design pattern], to reduce tight coupling and increase cohesion."
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "They implement these listeners:"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ". `CommandInputListener` : The component will be notified about command input from the user."
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ". `ModelDataListener` : The component will be notified whenever the Model changes."
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ". `UserOutputListener` : The component will be notified whenever a message needs to be displayed to the user."
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003d\u003d\u003d 3.4. ModelManager Component"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "The `ModelManager` is responsible for the reading and writing of events and tasks in Horo."
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ".Class diagram of the ModelManager"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "image::ModelManagerClassDiagram.png[ModelManagerClassDiagram, 500]"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "The `ModelManager` has three main functions:"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ". Stores all events and tasks in a wrapper class `ModelData`."
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ". Notifies all `ModelDataListeners` whenever the `ModelData` changes."
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ". Allows any class with a reference to `ModelManager` to update the current `ModelData`."
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "To give a more concrete example of how `ModelManager` notifies its listeners, refer to the sequence diagram below of *adding a task* to Horo:"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ".Sequence diagram of adding a task"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "image::ModelManagerAddTaskSequenceDiagram.png[]"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 333
    }
  },
  {
    "path": "src/main/java/seedu/address/MainApp.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.time.ZoneId;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.Locale;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.CommandManager;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.logic.NotificationManager;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.StorageManager;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.UiManager;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.UndoRedoManager;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.logic.commands.AddEventCommand;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import seedu.address.logic.commands.AddTaskCommand;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.logic.commands.CalendarViewCommand;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.logic.commands.DayViewCommand;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.logic.commands.DeleteEventCommand;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.DeleteTaskCommand;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.logic.commands.EditEventCommand;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.EditTaskCommand;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.ExitCommand;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.logic.commands.ExportIcsCommand;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.logic.commands.ImportIcsCommand;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.logic.commands.ListViewCommand;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.logic.commands.LogViewCommand;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.logic.commands.MonthViewCommand;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.logic.commands.NotificationOffCommand;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.logic.commands.NotificationOnCommand;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.logic.commands.RedoCommand;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.logic.commands.UndoCommand;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.logic.commands.WeekViewCommand;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": " * Runs the application."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "public class MainApp extends Application {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static final Locale LOCALE \u003d Locale.ENGLISH;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static final ZoneId TIME_ZONE \u003d ZoneId.systemDefault();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final String VERSION \u003d \"1.4\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final String COMMAND_ADD_EVENT \u003d \"add_event\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final String COMMAND_DELETE_EVENT \u003d \"delete_event\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final String COMMAND_EDIT_EVENT \u003d \"edit_event\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    private static final String COMMAND_ADD_TASK \u003d \"add_task\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final String COMMAND_DELETE_TASK \u003d \"delete_task\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final String COMMAND_EDIT_TASK \u003d \"edit_task\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    private static final String COMMAND_UNDO \u003d \"undo\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    private static final String COMMAND_REDO \u003d \"redo\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    private static final String COMMAND_IMPORT_ICS \u003d \"import\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    private static final String COMMAND_EXPORT_ICS \u003d \"export\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    private static final String COMMAND_NOTIFICATION_OFF \u003d \"notif_off\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    private static final String COMMAND_NOTIFICATION_ON \u003d \"notif_on\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private static final String COMMAND_DAY_VIEW \u003d \"day\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private static final String COMMAND_WEEK_VIEW \u003d \"week\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private static final String COMMAND_MONTH_VIEW \u003d \"month\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private static final String COMMAND_CALENDAR_VIEW \u003d \"calendar\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private static final String COMMAND_LIST_VIEW \u003d \"list\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private static final String COMMAND_LOG_VIEW \u003d \"log\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final String COMMAND_EXIT \u003d \"exit\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private CommandManager commandManager;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private ModelManager modelManager;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private NotificationManager notificationManager;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private UiManager uiManager;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private StorageManager storageManager;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private UndoRedoManager undoRedoManager;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    public void init() throws Exception {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing Horo ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        super.init();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        commandManager \u003d new CommandManager();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        modelManager \u003d new ModelManager();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        notificationManager \u003d new NotificationManager(modelManager);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        storageManager \u003d new StorageManager(modelManager);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        storageManager.setEventsFile(Paths.get(\"data\", \"events.json\"));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        storageManager.setTasksFile(Paths.get(\"data\", \"tasks.json\"));"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        uiManager \u003d new UiManager();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        undoRedoManager \u003d new UndoRedoManager(modelManager);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        registerCommands();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        addListeners();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     * Registers each of the commands to the CommandManager."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private void registerCommands() {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        commandManager.addCommand(COMMAND_ADD_EVENT, () -\u003e AddEventCommand.newBuilder(modelManager));"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        commandManager.addCommand(COMMAND_DELETE_EVENT, () -\u003e DeleteEventCommand.newBuilder(modelManager));"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        commandManager.addCommand(COMMAND_EDIT_EVENT, () -\u003e EditEventCommand.newBuilder(modelManager));"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        commandManager.addCommand(COMMAND_ADD_TASK, () -\u003e AddTaskCommand.newBuilder(modelManager));"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        commandManager.addCommand(COMMAND_DELETE_TASK, () -\u003e DeleteTaskCommand.newBuilder(modelManager));"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        commandManager.addCommand(COMMAND_EDIT_TASK, () -\u003e EditTaskCommand.newBuilder(modelManager));"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        commandManager.addCommand(COMMAND_UNDO, () -\u003e UndoCommand.newBuilder(undoRedoManager));"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        commandManager.addCommand(COMMAND_REDO, () -\u003e RedoCommand.newBuilder(undoRedoManager));"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        commandManager.addCommand(COMMAND_IMPORT_ICS, () -\u003e ImportIcsCommand.newBuilder(modelManager));"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        commandManager.addCommand(COMMAND_EXPORT_ICS, () -\u003e ExportIcsCommand.newBuilder(modelManager));"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        commandManager.addCommand(COMMAND_NOTIFICATION_OFF, () -\u003e"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            NotificationOffCommand.newBuilder(notificationManager));"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        commandManager.addCommand(COMMAND_NOTIFICATION_ON, () -\u003e"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            NotificationOnCommand.newBuilder(notificationManager));"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        commandManager.addCommand(COMMAND_DAY_VIEW, () -\u003e DayViewCommand.newBuilder(uiManager));"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        commandManager.addCommand(COMMAND_WEEK_VIEW, () -\u003e WeekViewCommand.newBuilder(uiManager));"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        commandManager.addCommand(COMMAND_MONTH_VIEW, () -\u003e MonthViewCommand.newBuilder(uiManager));"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        commandManager.addCommand(COMMAND_CALENDAR_VIEW, () -\u003e CalendarViewCommand.newBuilder(uiManager));"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        commandManager.addCommand(COMMAND_LIST_VIEW, () -\u003e ListViewCommand.newBuilder(uiManager));"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        commandManager.addCommand(COMMAND_LOG_VIEW, () -\u003e LogViewCommand.newBuilder(uiManager));"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        commandManager.addCommand(COMMAND_EXIT, ExitCommand::newBuilder);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     * Registers each listener to the appropriate manager."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private void addListeners() {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        commandManager.addUserOutputListener(uiManager);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        modelManager.addModelDataListener(uiManager);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        modelManager.addModelDataListener(storageManager);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        modelManager.addModelDataListener(undoRedoManager);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        uiManager.addCommandInputListener(commandManager);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "    public void start(Stage primaryStage) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        logger.info(\"Starting Horo v\" + VERSION);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        // Start UiManager"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        uiManager.start(primaryStage);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        // Load Model from storage"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        storageManager.load();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        // Start UndoRedoManager"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        undoRedoManager.start();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "    public void stop() {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Horo ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 7,
      "Kyzure": 28,
      "marcusteh1238": 4,
      "bruceskellator": 6,
      "WeomuCat": 68,
      "-": 41
    }
  },
  {
    "path": "src/main/java/seedu/address/commons/core/LogsCenter.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.commons.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.ConsoleHandler;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.FileHandler;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.SimpleFormatter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " * Configures and manages loggers and handlers, including their logging level"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " * Named {@link Logger}s can be obtained from this class\u003cbr\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " * These loggers have been configured to output messages to the console and a {@code .log} file by default,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": " *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": " *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "public class LogsCenter {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final int MAX_FILE_COUNT \u003d 5;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final String LOG_FILE \u003d \"horo.log\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    private static Level currentLogLevel \u003d Level.INFO;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    private static FileHandler fileHandler;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    private static ConsoleHandler consoleHandler;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a logger with the given name."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    public static Logger getLogger(String name) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        Logger logger \u003d Logger.getLogger(name);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.setUseParentHandlers(false);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        removeHandlers(logger);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        addConsoleHandler(logger);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        addFileHandler(logger);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        return Logger.getLogger(name);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a Logger for the given class name."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        if (clazz \u003d\u003d null) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "            return Logger.getLogger(\"\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        return getLogger(clazz.getSimpleName());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates the {@code consoleHandler} if it is null."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    private static void addConsoleHandler(Logger logger) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        if (consoleHandler \u003d\u003d null) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "            consoleHandler \u003d createConsoleHandler();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.addHandler(consoleHandler);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "     * Remove all the handlers from {@code logger}."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    private static void removeHandlers(Logger logger) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        Arrays.stream(logger.getHandlers())"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "                .forEach(logger::removeHandler);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates {@code fileHandler} if it is null."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    private static void addFileHandler(Logger logger) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "            if (fileHandler \u003d\u003d null) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "                fileHandler \u003d createFileHandler();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.addHandler(fileHandler);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.warning(\"Error adding file handler for logger.\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a {@code FileHandler} for the log file."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws IOException if there are problems opening the file."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    private static FileHandler createFileHandler() throws IOException {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        fileHandler.setFormatter(new SimpleFormatter());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        fileHandler.setLevel(currentLogLevel);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        return fileHandler;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    private static ConsoleHandler createConsoleHandler() {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        ConsoleHandler consoleHandler \u003d new ConsoleHandler();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        consoleHandler.setLevel(currentLogLevel);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        return consoleHandler;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 1,
      "-": 100
    }
  },
  {
    "path": "src/main/java/seedu/address/commons/core/Messages.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.commons.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": " * Container for user visible messages."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class Messages {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command!\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format!\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static final String MESSAGE_INVALID_COMMAND_PARSER \u003d \"CommandParser Error: You should not see this!\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        + \" Please open a bug report.\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static final String MESSAGE_REQUIRED_COMMAND_ARGUMENT \u003d \"Argument \u0027%s\u0027 is required!\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static final String MESSAGE_INVALID_DATE_TIME \u003d \"Invalid date or format!\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        + \" Please enter in \u0027DD/MM/YYYY hh:mm\u0027 format.\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static final String MESSAGE_INVALID_ICS_DATE_TIME \u003d \"Invalid date or format!\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        + \" Please enter in \u0027YYYYMMDDThhmmssZ\u0027 format.\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static final String MESSAGE_INVALID_CALENDAR_DAY \u003d \"Invalid date or format!\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        + \" Please enter in \u0027DD/MM/YYYY\u0027 format.\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static final String MESSAGE_INVALID_CALENDAR_MONTH \u003d \"Invalid month, year or format!\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        + \" Please enter in \u0027MM/YYYY\u0027 format.\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static final String MESSAGE_INVALID_INDEX \u003d \"Invalid index! Please enter an integer. Between [0, 2^31)\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static final String MESSAGE_INVALID_EVENT_INDEX \u003d \"Invalid index! Event with index \u0027%s\u0027 does not exist.\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public static final String MESSAGE_INVALID_TASK_INDEX \u003d \"Invalid index! Task with index \u0027%s\u0027 does not exist.\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static final String MESSAGE_INVALID_EVENT_END_DATE \u003d \"Event \u0027END_DATE\u0027 must be after \u0027START_DATE\u0027!\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static final String MESSAGE_INVALID_EVENT_REMIND_DATE \u003d \"Event \u0027REMIND_DATE\u0027 cannot be after \u0027START_DATE\u0027!\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static final String MESSAGE_EXIT_SUCCESS \u003d \"Exiting Horo!\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /* Events \u0026 Tasks */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static final String MESSAGE_ADD_EVENT_DUPLICATE \u003d \"Unable to add event: A duplicate event already exists!\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static final String MESSAGE_ADD_EVENT_SUCCESS \u003d \"New event added: %s\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static final String MESSAGE_ADD_TASK_DUPLICATE \u003d \"Unable to add task: A duplicate task already exists!\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public static final String MESSAGE_ADD_TASK_SUCCESS \u003d \"New task added: %s\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static final String MESSAGE_DELETE_EVENT_FAILURE \u003d \"No matching events.\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static final String MESSAGE_DELETE_EVENT_NO_PARAMETERS \u003d \"Please fill in at least INDEXES or TAGS.\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static final String MESSAGE_DELETE_EVENT_SUCCESS \u003d \"Events deleted: %s\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static final String MESSAGE_DELETE_TASK_FAILURE \u003d \"No matching tasks.\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static final String MESSAGE_DELETE_TASK_NO_PARAMETERS \u003d \"Please fill in at least INDEXES or TAGS.\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public static final String MESSAGE_DELETE_TASK_SUCCESS \u003d \"Tasks deleted: %s\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static final String MESSAGE_EDIT_EVENT_DUPLICATE \u003d \"Unable to edit event: A duplicate event already exists!\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static final String MESSAGE_EDIT_EVENT_NO_INDEXES \u003d \"Please provide at least one INDEX.\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static final String MESSAGE_EDIT_EVENT_NO_PARAMETERS \u003d \"Please provide at least one parameter.\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static final String MESSAGE_EDIT_EVENT_SUCCESS \u003d \"Events edited: %s\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static final String MESSAGE_EDIT_TASK_DUPLICATE \u003d \"Unable to edit task: A duplicate task already exists!\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static final String MESSAGE_EDIT_TASK_NO_INDEXES \u003d \"Please provide at least one INDEX.\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static final String MESSAGE_EDIT_TASK_NO_PARAMETERS \u003d \"Please provide at least one parameter.\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public static final String MESSAGE_EDIT_TASK_SUCCESS \u003d \"Tasks edited: %s\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /* Ics */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    public static final String MESSAGE_IMPORT_ICS_SUCCESS \u003d \"ICS file at %s has been successfully imported!\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    public static final String MESSAGE_EXPORT_ICS_SUCCESS \u003d \"Horo has successfully been exported at the filepath: %s\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static final String MESSAGE_IMPORT_ICS_DUPLICATE \u003d \"Unable to import:\""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        + \" A duplicate event or task already exists!\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /* Notifications */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static final String MESSAGE_NOTIFICATION_OFF \u003d \"Notifications have been turned off.\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static final String MESSAGE_NOTIFICATION_ON \u003d \"Notifications have been turned on.\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /* Ui */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public static final String MESSAGE_DAY_VIEW_SUCCESS \u003d \"Changed Day to: %s\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public static final String MESSAGE_WEEK_VIEW_SUCCESS \u003d \"Changed Week to week of: %s\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public static final String MESSAGE_MONTH_VIEW_SUCCESS \u003d \"Changed Month to: %s\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public static final String MESSAGE_CALENDAR_VIEW_SUCCESS \u003d \"Switched to Calendar View.\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public static final String MESSAGE_LIST_VIEW_SUCCESS \u003d \"Switched to List View.\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public static final String MESSAGE_LOG_VIEW_SUCCESS \u003d \"Switched to Log View\";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /* Undo/Redo */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static final String MESSAGE_NOTHING_TO_UNDO \u003d \"There is nothing to undo!\";"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static final String MESSAGE_UNDO_SUCCESS \u003d \"Previous command has been undone!\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static final String MESSAGE_NOTHING_TO_REDO \u003d \"There is nothing to redo!\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static final String MESSAGE_REDO_SUCCESS \u003d \"Previous undone command has been redone!\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 1,
      "Kyzure": 7,
      "marcusteh1238": 2,
      "bruceskellator": 4,
      "WeomuCat": 58,
      "-": 9
    }
  },
  {
    "path": "src/main/java/seedu/address/ics/IcsConverter.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "package seedu.address.ics;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import java.time.Instant;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import seedu.address.model.DateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import seedu.address.model.events.EventSource;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import seedu.address.model.tasks.TaskSource;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "//@@author marcusteh1238"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": " * This is the class responsible for converting Events and Tasks into their relevant ICS strings."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "public class IcsConverter {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    //@@author marcusteh1238"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * Converts an EventSource object into its String representation in the Ics file format."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * Its details and start time will be saved in this String representation."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * @param event The EventSource object to be converted to the Ics file format."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * @return The String representation of the EventSource in the Ics file format."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    public static String convertEvent(EventSource event) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        StringBuilder icsStringBuilder \u003d new StringBuilder(\"BEGIN:VEVENT\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        String uid \u003d generateUid();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        String dtStamp \u003d DateTime.now().toIcsString();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        String start \u003d event.getStartDateTime().toIcsString();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        String tagString \u003d event.getTags() !\u003d null"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                ? getTagString(event.getTags())"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                : \"\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        icsStringBuilder"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                .append(\"\\n\").append(\"UID:\").append(uid)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                .append(\"\\n\").append(\"DTSTAMP:\").append(dtStamp)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                .append(\"\\n\").append(\"DTSTART:\").append(start)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                .append(\"\\n\").append(\"SUMMARY:\").append(event.getDescription());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        if (event.getEndDateTime() !\u003d null) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            String end \u003d event.getEndDateTime().toIcsString();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            icsStringBuilder"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                    .append(\"\\n\").append(\"DTEND:\").append(end);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        if (!tagString.equals(\"\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            icsStringBuilder.append(\"\\n\").append(\"DESCRIPTION:\").append(tagString);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        icsStringBuilder.append(\"\\n\").append(\"END:VEVENT\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        return icsStringBuilder.toString();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    //@@author marcusteh1238"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * Converts a TaskSource object into its String representation in the Ics file format."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * Its details and due date will be saved in this String representation."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * @param task The TaskSource object to be converted to the Ics file format."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * @return The String representation of the TaskSource in the Ics file format."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    public static String convertTask(TaskSource task) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        StringBuilder icsStringBuilder \u003d new StringBuilder(\"BEGIN:VTODO\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        String uid \u003d generateUid();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        String dtStamp \u003d DateTime.now().toIcsString();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        String tagString \u003d task.getTags() !\u003d null"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                ? getTagString(task.getTags())"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                : \"\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        icsStringBuilder"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                .append(\"\\n\").append(\"UID:\").append(uid)"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                .append(\"\\n\").append(\"DTSTAMP:\").append(dtStamp)"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                .append(\"\\n\").append(\"SUMMARY:\").append(task.getDescription());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        if (task.getDueDate() !\u003d null) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            icsStringBuilder.append(\"\\n\").append(\"DUE:\").append(task.getDueDate().toIcsString());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        if (!tagString.equals(\"\")) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            icsStringBuilder.append(\"\\n\").append(\"DESCRIPTION:\").append(tagString);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        icsStringBuilder.append(\"\\n\").append(\"END:VTODO\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        return icsStringBuilder.toString();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    //@@author marcusteh1238"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * Generates a unique UID that complies with section RFC5545 of the iCalendar specification."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * This is achieved by using the Instant of the function call."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * @return A UID String."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    public static String generateUid() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        Instant currentInstant \u003d Instant.now();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        return currentInstant + \"@Horo\";"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    //@@author marcusteh1238"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * Generates a String representing the tags to be stored in the ICS object\u0027s description."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * @param tags The tags of the EventSource or TaskSource object."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * @return The tags represented by a string, where each tag is surrounded by square brackets (eg. [School][Home])."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    public static String getTagString(Set\u003cString\u003e tags) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        StringBuilder stringBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        for (String tag : tags) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            stringBuilder"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                    .append(\"[\")"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                    .append(tag)"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                    .append(\"]\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        return stringBuilder.toString();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcusteh1238": 108
    }
  },
  {
    "path": "src/main/java/seedu/address/ics/IcsException.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "package seedu.address.ics;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "//@@author marcusteh1238"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": " * Exception is created within the IcsParser class when something wrong happens while an ICS file is being imported."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "public class IcsException extends Exception {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    public IcsException(String message) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcusteh1238": 11
    }
  },
  {
    "path": "src/main/java/seedu/address/ics/IcsExporter.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "package seedu.address.ics;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import static seedu.address.commons.util.FileUtil.createIfMissing;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import static seedu.address.commons.util.FileUtil.writeToFile;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.DateTime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import seedu.address.model.events.EventSource;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import seedu.address.model.tasks.TaskSource;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "//@@author marcusteh1238"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": " * Class responsible for exporting Horo\u0027s tasks and events into an .ics file."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "public class IcsExporter {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    private static final String EXPORT_ERROR_MESSAGE \u003d \"Error occurred while exporting file! \""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            + \"Please ensure that the filepath specified is valid!\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    private static final String PROD_ID \u003d \"-//Horo//Exported Calendar// v1.0//EN\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    private static final String CALENDAR_VERSION \u003d \"2.0\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    private static final Logger logger \u003d LogsCenter.getLogger(IcsExporter.class);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    private List\u003cEventSource\u003e eventList;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    private List\u003cTaskSource\u003e taskList;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    public IcsExporter(ModelManager model) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        this.eventList \u003d model.getEvents();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        this.taskList \u003d model.getTasks();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        requireNonNull(eventList);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        requireNonNull(taskList);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    //@@author marcusteh1238"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * Saves the events in an ics file, whose location is specified in the parameter."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * @param filepathString the path of where the file should be made."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * @throws IcsException if the file or directory cannot be created."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    public void export(String filepathString) throws IcsException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            logger.info(\"Attempting to create file at \" + filepathString);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            Path filepath \u003d Path.of(filepathString);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            createIfMissing(filepath);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            writeToFile(filepath, generateIcsFileContent(this.eventList, this.taskList));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            logger.info(\"File successfully created at: \" + filepathString);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            throw new IcsException(EXPORT_ERROR_MESSAGE);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    //@@author marcusteh1238"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * Generates the contents in the .ics file from the event list."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * @param eventList The list of EventSource objects to be exported."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * @param taskList The list of TaskSource objects to be exported."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * @return The .ics file content to be exported."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    protected String generateIcsFileContent(List\u003cEventSource\u003e eventList, List\u003cTaskSource\u003e taskList) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        StringBuilder stringBuilder \u003d new StringBuilder(\"BEGIN:VCALENDAR\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        stringBuilder"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                .append(\"\\n\").append(\"VERSION:\").append(CALENDAR_VERSION)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                .append(\"\\n\").append(\"PRODID:\").append(PROD_ID);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        for (EventSource eventSource : eventList) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            String icsEventString \u003d IcsConverter.convertEvent(eventSource);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            stringBuilder.append(\"\\n\").append(icsEventString);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        for (TaskSource taskSource : taskList) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            String icsEventString \u003d IcsConverter.convertTask(taskSource);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            stringBuilder.append(\"\\n\").append(icsEventString);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        stringBuilder.append(\"\\n\").append(\"END:VCALENDAR\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        return stringBuilder.toString();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    //@@author marcusteh1238"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * Generates a unique name for the exported ICS file, based on the current Instant."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * @return The file name for the exported ICS file."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    public static String getExportFileName() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        String timestamp \u003d DateTime.now().toIcsString();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        return \"Horo_export_\" + timestamp + \".ics\";"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 2,
      "marcusteh1238": 91,
      "WeomuCat": 1
    }
  },
  {
    "path": "src/main/java/seedu/address/ics/IcsParser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.ics;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import java.time.Duration;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.model.DateTime;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.events.EventSource;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import seedu.address.model.events.EventSourceBuilder;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import seedu.address.model.tasks.TaskSource;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import seedu.address.model.tasks.TaskSourceBuilder;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "//@@author marcusteh1238"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "/***"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": " * Parses an ICS file to allow importing into Horo."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": " */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "public class IcsParser {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    private static final String FILE_DOES_NOT_EXIST \u003d \"Sorry, the file path you\u0027ve specified is invalid!\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    private static final String FILE_CANNOT_BE_READ \u003d \"Sorry, the file specified cannot be read!\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    private static final String FILE_CANNOT_BE_FOUND \u003d \"Sorry, the file specified cannot be found!\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    private static final String INVALID_FILE_EXTENSION \u003d \"The file specified is not an ICS file!\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    private static final String FILE_IS_CORRUPTED \u003d \"The ICS file is corrupted!\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    private static final String TIMESTAMP_IS_INVALID \u003d \"The timestamp provided is invalid!\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    private static final Logger logger \u003d LogsCenter.getLogger(IcsParser.class);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    private File icsFile;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    private IcsParser(String path) throws IcsException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        this.icsFile \u003d getIcsFile(path);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    public static IcsParser getParser(String path) throws IcsException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        return new IcsParser(path);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    private File getIcsFile(String path) throws IcsException {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        File file \u003d new File(path);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        if (!file.exists()) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            throw new IcsException(FILE_DOES_NOT_EXIST);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        } else if (!file.canRead()) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            throw new IcsException(FILE_CANNOT_BE_READ);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        } else if (!file.toString().endsWith(\".ics\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            throw new IcsException(INVALID_FILE_EXTENSION);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        return file;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    //@@author marcusteh1238"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * Parses the file provided in the file path and returns an ArrayList of EventSources."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * @return An ArrayList of EventSources from the file."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * @throws IcsException Thrown if the file cannot be found or read,"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * is not a proper Ics file, or if a description for an event in the file is empty."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    public EventSource[] parseEvents() throws IcsException {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        logger.info(\"Parsing Events\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        String fileContent \u003d getFileContent();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        return getEventsFromFile(fileContent);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    //@@author marcusteh1238"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * Parses the file provided in the file path and returns an ArrayList of TaskSources."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * @return An ArrayList of TaskSources from the file."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * @throws IcsException Thrown if the file cannot be found or read,"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * is not a proper Ics file, or if a description for an event in the file is empty."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    public TaskSource[] parseTasks() throws IcsException {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        logger.info(\"Parsing Tasks\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        String fileContent \u003d getFileContent();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        return getTasksFromFile(fileContent);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    //@@author marcusteh1238"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * Obtains the file content of the ics file specified in the filepath."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * @return A single String of the whole file."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * @throws IcsException Thrown if the file cannot be found or read."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    private String getFileContent() throws IcsException {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            BufferedReader br \u003d new BufferedReader(new FileReader(icsFile));"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            StringBuilder sb \u003d new StringBuilder(\"\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            boolean first \u003d true;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            while (br.ready()) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                String line \u003d br.readLine();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                if (first) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                    sb.append(line);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                    first \u003d false;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                    sb.append(\"\\n\").append(line);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            return sb.toString();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            throw new IcsException(FILE_CANNOT_BE_FOUND);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            throw new IcsException(FILE_CANNOT_BE_READ);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    //@@author marcusteh1238"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * Parses the Ics file for its Events only and returns an array of EventSource objects."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * @param fileContent The contents of the Ics file."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * @return An ArrayList of EventSources provided by the Ics file."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * @throws IcsException If the file is not a proper Ics file, or if a description for an event is empty."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     */"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    public EventSource[] getEventsFromFile(String fileContent) throws IcsException {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        ArrayList\u003cEventSource\u003e events \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        Pattern pattern \u003d Pattern.compile(\"BEGIN:VEVENT(.*?)END:VEVENT\", Pattern.DOTALL);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        Matcher matcher \u003d pattern.matcher(fileContent);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        int count \u003d matcher.groupCount();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        while (matcher.find()) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            String icsString \u003d matcher.group(1);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            EventSource newEvent \u003d parseSingleEvent(icsString);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            events.add(newEvent);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        return eventSourceArray(events);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    //@@author marcusteh1238"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * Parses the Ics file for its Tasks only and returns an array of TaskSource objects."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * @param fileContent The contents of the Ics file."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * @return An ArrayList of TaskSources provided by the Ics file."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * @throws IcsException If the file is not a proper Ics file, or if a description for a task is empty."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     */"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    public TaskSource[] getTasksFromFile(String fileContent) throws IcsException {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        ArrayList\u003cTaskSource\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        Pattern pattern \u003d Pattern.compile(\"BEGIN:VTODO(.*?)END:VTODO\", Pattern.DOTALL);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        Matcher matcher \u003d pattern.matcher(fileContent);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        int count \u003d matcher.groupCount();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        while (matcher.find()) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            String icsString \u003d matcher.group(1);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            TaskSource newTask \u003d parseSingleTask(icsString);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            tasks.add(newTask);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        return taskSourceArray(tasks);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    //@@author marcusteh1238"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * Converts an ArrayList of EventSource objects into an array."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * @param events the ArrayList of EventSource objects."
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * @return An array of EventSource objects."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     */"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    private EventSource[] eventSourceArray(ArrayList\u003cEventSource\u003e events) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        int size \u003d events.size();"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        EventSource[] array \u003d new EventSource[size];"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        for (int i \u003d 0; i \u003c size; i++) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            array[i] \u003d events.get(i);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        return array;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    //@@author marcusteh1238"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * Converts an ArrayList of TaskSource objects into an array."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * @param tasks the ArrayList of EventSource objects."
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * @return An array of TaskSource objects."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     */"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    private TaskSource[] taskSourceArray(ArrayList\u003cTaskSource\u003e tasks) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        int size \u003d tasks.size();"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        TaskSource[] array \u003d new TaskSource[size];"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        for (int i \u003d 0; i \u003c size; i++) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            array[i] \u003d tasks.get(i);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        return array;"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    //@@author marcusteh1238"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * Creates an EventSource object from the data provided in the ICS File."
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * Currently it will only parse the Start time and Description of the ICS VEvent."
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * @param segment A String that represents the Event object in the ICS File."
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * @return an EventSource object representing the data provided."
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * @throws IcsException Exception thrown when there was an issue while making the EventSource object."
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     */"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    public static EventSource parseSingleEvent(String segment) throws IcsException {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        String[] lines \u003d segment.split(\"\\\\r?\\\\n\");"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        String description \u003d \"\";"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        DateTime eventStart \u003d null;"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        DateTime eventEnd \u003d null;"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        ArrayList\u003cString\u003e tags \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        for (String line : lines) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            if (line.startsWith(\"SUMMARY:\")) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                description \u003d line.replaceFirst(\"SUMMARY:\", \"\");"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                if (description.equals(\"\")) {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                    description \u003d \"\u003cempty\u003e\";"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            } else if (line.startsWith(\"DTSTART:\")) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                String timestamp \u003d line.replaceFirst(\"DTSTART:\", \"\");"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                eventStart \u003d timestamp.equals(\"\")"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                        ? DateTime.now()"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                        : parseTimeStamp(timestamp);"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            } else if (line.startsWith(\"DTEND:\")) {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                String timestamp \u003d line.replaceFirst(\"DTEND:\", \"\");"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                eventEnd \u003d parseTimeStamp(timestamp);"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            } else if (line.equals(\"END:VCALENDAR\") \u0026\u0026 !line.equals(lines[lines.length - 1])) {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                throw new IcsException(FILE_IS_CORRUPTED);"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            } else if (line.startsWith(\"DESCRIPTION:\")) {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                tags.addAll(getTagsFromIcsDescription(line));"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        if (description.equals(\"\") || eventStart \u003d\u003d null) {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            throw new IcsException(FILE_IS_CORRUPTED);"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        EventSourceBuilder builder \u003d EventSource.newBuilder(description, eventStart);"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        if (eventEnd !\u003d null) {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            builder.setEnd(eventEnd);"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        }"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        if (tags.size() !\u003d 0) {"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            builder.setTags(tags);"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        return builder.build();"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    //@@author marcusteh1238"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * Creates an TaskSource object from the data provided in the ICS File."
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * @param segment A String that represents the Task object in the ICS File."
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * @return a TaskSource object representing the data provided."
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * @throws IcsException Exception thrown when there was an issue while making the TaskSource object."
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     */"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    public static TaskSource parseSingleTask(String segment) throws IcsException {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        String[] lines \u003d segment.split(\"\\\\r?\\\\n\");"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        String description \u003d \"\";"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        DateTime taskStart \u003d null;"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        DateTime due \u003d null;"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        Duration duration \u003d null;"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        ArrayList\u003cString\u003e tags \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        for (String line : lines) {"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            if (line.startsWith(\"SUMMARY:\")) {"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                description \u003d line.replaceFirst(\"SUMMARY:\", \"\");"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                if (description.equals(\"\")) {"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                    description \u003d \"\u003cempty\u003e\";"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                }"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            } else if (line.startsWith(\"DUE:\")) {"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                String timestamp \u003d line.replaceFirst(\"DUE:\", \"\");"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                due \u003d timestamp.equals(\"\")"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                        ? DateTime.now()"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                        : parseTimeStamp(timestamp);"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            } else if (line.startsWith(\"DURATION:\")) {"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                String durationString \u003d line.replaceFirst(\"DURATION:\", \"\");"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                    duration \u003d Duration.parse(durationString);"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                    throw new IcsException(FILE_IS_CORRUPTED);"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                }"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            } else if (line.startsWith(\"DTSTART:\")) {"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                String startString \u003d line.replaceFirst(\"DURATION:\", \"\");"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                taskStart \u003d startString.equals(\"\")"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                        ? DateTime.now()"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                        : parseTimeStamp(startString);"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            } else if (line.startsWith(\"DESCRIPTION:\")) {"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                tags.addAll(getTagsFromIcsDescription(line));"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            }"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        }"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        if (description.equals(\"\")) {"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            throw new IcsException(FILE_IS_CORRUPTED);"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        }"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        TaskSourceBuilder builder \u003d TaskSource.newBuilder(description);"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        if (due \u003d\u003d null \u0026\u0026 !(duration \u003d\u003d null || taskStart \u003d\u003d null)) {"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            due \u003d taskStart.plus(duration);"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            builder.setDueDate(due);"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        } else if (due !\u003d null) {"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            builder.setDueDate(due);"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        }"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        if (tags.size() !\u003d 0) {"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            builder.setTags(tags);"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        }"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        return builder.build();"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    //@@author marcusteh1238"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * Converts the timestamp from the format given in the ICS file to a DateTime object."
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * @param icsTimeStamp A timestamp in the default ICS file specification format."
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * @return A DateTime object representing the timestamp."
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * @throws IcsException Thrown when the timestamp provided is invalid."
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     */"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    public static DateTime parseTimeStamp(String icsTimeStamp) throws IcsException {"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            return DateTime.fromIcsString(icsTimeStamp);"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            throw new IcsException(TIMESTAMP_IS_INVALID);"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        }"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    //@@author marcusteh1238"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * Obtain a list of tags from the \"DESCRIPTION\" field of the ICS object."
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * @param icsDescription The Description of the ICS object."
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * @return An ArrayList of tags."
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     */"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    public static ArrayList\u003cString\u003e getTagsFromIcsDescription(String icsDescription) {"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        Matcher matcher \u003d Pattern.compile(\"\\\\[([^\\\\]]+)\").matcher(icsDescription);"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        ArrayList\u003cString\u003e tags \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        int pos \u003d -1;"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        while (matcher.find(pos + 1)) {"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            pos \u003d matcher.start();"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            tags.add(matcher.group(1));"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        }"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        return tags;"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 1,
      "marcusteh1238": 311,
      "WeomuCat": 11
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/CommandManager.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.function.Supplier;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.CommandBuilder;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.listeners.CommandInputListener;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.parser.CommandKeywordParser;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.parser.CommandParser;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.ui.ColorTheme;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.ui.UserOutput;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.ui.listeners.UserOutputListener;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents a class that invokes commands based on command input it receives from a Ui."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents the invoker class in https://en.wikipedia.org/wiki/Command_pattern."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class CommandManager implements CommandInputListener {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final Logger logger \u003d LogsCenter.getLogger(CommandManager.class);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final CommandKeywordParser keywordParser;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final CommandParser commandParser;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final List\u003cUserOutputListener\u003e userOutputListeners;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public CommandManager() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.keywordParser \u003d new CommandKeywordParser();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.commandParser \u003d new CommandParser(this.keywordParser);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.userOutputListeners \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Adds a command to be tracked by CommandManager."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @param keyword the command keyword"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @param builder the supplier to invoke"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public void addCommand(String keyword, Supplier\u003cCommandBuilder\u003e builder) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.keywordParser.addCommand(keyword, builder);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public void addUserOutputListener(UserOutputListener listener) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.userOutputListeners.add(listener);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public void onCommandInput(String input) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            Command command \u003d this.commandParser.parse(input);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            UserOutput output \u003d command.execute();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            userOutputListeners.forEach(l -\u003e l.onUserOutput(output, ColorTheme.SUCCESS));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            logger.info(\"Invalid command: \" + input);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            logger.info(e.getMessage());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            userOutputListeners.forEach(l -\u003e l.onUserOutput(new UserOutput(e.getMessage()), ColorTheme.FAILURE));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            logger.info(\"Command entered: \" + input);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            logger.info(e.getMessage());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            userOutputListeners.forEach(l -\u003e l.onUserOutput(new UserOutput(e.getMessage()), ColorTheme.FAILURE));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 65
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/NotificationManager.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "package seedu.address.logic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.logic.notification.NotificationChecker;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.logic.notification.NotificationCheckingThread;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.ui.systemtray.PopupListener;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.ui.systemtray.SystemTrayCommunicator;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": " * A class that manages the multi-threading operations necessary for posting notifications."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "public class NotificationManager {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    private NotificationCheckingThread notificationCheckingThread;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    private SystemTrayCommunicator systemTrayCommunicator;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public NotificationManager(ModelManager modelManager) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        NotificationChecker notificationChecker \u003d new NotificationChecker(modelManager);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        notificationCheckingThread \u003d new NotificationCheckingThread(notificationChecker);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        systemTrayCommunicator \u003d new SystemTrayCommunicator();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        notificationCheckingThread.addPopupListener(new PopupListener(systemTrayCommunicator));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        notificationCheckingThread.setDaemon(true);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        notificationCheckingThread.start();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     * Switches off notifications."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public void switchOffNotifications() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        notificationCheckingThread.switchOffNotifications();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        systemTrayCommunicator.switchOffNotifications();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     * Switches on notifications."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public void switchOnNotifications() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        notificationCheckingThread.switchOnNotifications();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        systemTrayCommunicator.switchOnNotifications();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 41
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/StorageManager.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import com.fasterxml.jackson.core.type.TypeReference;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import com.fasterxml.jackson.databind.ObjectMapper;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import com.fasterxml.jackson.databind.SerializationFeature;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.storage.exceptions.StorageIoException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.ModelData;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.events.EventSource;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.events.EventSourceBuilder;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.listeners.ModelDataListener;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.tasks.TaskSource;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.tasks.TaskSourceBuilder;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Manages saving and loading (to local storage) of the Model in Horo."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class StorageManager implements ModelDataListener {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final ObjectMapper mapper;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final ModelManager model;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private Path eventsFile;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private Path tasksFile;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private boolean start;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public StorageManager(ModelManager model) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.mapper \u003d new ObjectMapper()"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .enable(SerializationFeature.INDENT_OUTPUT);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.model \u003d model;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.start \u003d true;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public void setEventsFile(Path eventsFile) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.eventsFile \u003d eventsFile;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public void setTasksFile(Path tasksFile) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.tasksFile \u003d tasksFile;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Load Model from local storage."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public void load() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            List\u003cEventSourceBuilder\u003e eventBuilders;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            if (this.eventsFile \u003d\u003d null || Files.notExists(this.eventsFile)) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                eventBuilders \u003d List.of();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                eventBuilders \u003d this.mapper.readValue(this.eventsFile.toFile(),"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    new TypeReference\u003cList\u003cEventSourceBuilder\u003e\u003e() {});"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            List\u003cTaskSourceBuilder\u003e taskBuilders;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            if (this.tasksFile \u003d\u003d null || Files.notExists(this.tasksFile)) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                taskBuilders \u003d List.of();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                taskBuilders \u003d this.mapper.readValue(this.tasksFile.toFile(),"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    new TypeReference\u003cList\u003cTaskSourceBuilder\u003e\u003e() {});"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            // Create events and tasks from builders."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            List\u003cEventSource\u003e events \u003d eventBuilders.stream()"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .map(EventSourceBuilder::build)"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .collect(Collectors.toList());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            List\u003cTaskSource\u003e tasks \u003d taskBuilders.stream()"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .map(TaskSourceBuilder::build)"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .collect(Collectors.toList());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            if (this.start) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                // Ignore changes to model made by itself."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                this.start \u003d false;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                this.model.setModelData(new ModelData(events, tasks));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                this.start \u003d true;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            throw new StorageIoException();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public void onModelDataChange(ModelData modelData) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        if (!start) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            Files.createDirectories(this.eventsFile.getParent());"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            Files.createDirectories(this.tasksFile.getParent());"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            if (this.eventsFile !\u003d null) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                this.mapper.writeValue(this.eventsFile.toFile(), modelData.getEvents());"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            if (this.tasksFile !\u003d null) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                this.mapper.writeValue(this.tasksFile.toFile(), modelData.getTasks());"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            throw new StorageIoException();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 112
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/UiManager.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.Alert;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.Alert.AlertType;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.MainApp;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.util.StringUtil;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.listeners.CommandInputListener;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.CalendarDate;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.ModelData;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.events.EventDateComparator;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.events.EventSource;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.listeners.ModelDataListener;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.tasks.TaskDateComparator;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import seedu.address.model.tasks.TaskSource;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.ColorTheme;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.ui.MainWindow;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.ui.Ui;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.ui.UserOutput;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.ui.listeners.UserOutputListener;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": " * The manager of the UI component."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Responsible for creating and destroying the graphical ui."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class UiManager implements Ui, UserOutputListener, ModelDataListener {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static final int WINDOW_WIDTH \u003d 1280;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static final int WINDOW_HEIGHT \u003d 720;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private static final String ICON_APPLICATION \u003d \"/images/horo_icon_32.png\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    private MainWindow mainWindow;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private List\u003cCommandInputListener\u003e uiListeners;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public UiManager() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.uiListeners \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    public void start(Stage primaryStage) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.info(\"Starting UI...\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        //Set the application icon."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        primaryStage.getIcons().add(getImage(ICON_APPLICATION));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            mainWindow \u003d new MainWindow(primaryStage, commandInput -\u003e {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                this.uiListeners.forEach(listener -\u003e listener.onCommandInput(commandInput));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            });"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "            mainWindow.show(); //This should be called before creating other UI parts"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "            mainWindow.fillInnerParts();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (Throwable e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.severe(StringUtil.getDetails(e));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public void addCommandInputListener(CommandInputListener listener) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.uiListeners.add(listener);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    private Image getImage(String imagePath) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        return new Image(MainApp.class.getResourceAsStream(imagePath));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "     * Shows an alert dialog on {@code owner} with the given parameters."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "     * This method only returns after the user has closed the alert dialog."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "                                               String contentText) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        final Alert alert \u003d new Alert(type);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        alert.initOwner(owner);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        alert.setTitle(title);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        alert.setHeaderText(headerText);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        alert.setContentText(contentText);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "        alert.showAndWait();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "     * Shows an error alert dialog with {@code title} and error message, {@code e},"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "     * and exits the application after the user has closed the alert dialog."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        Platform.exit();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        System.exit(1);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public void viewDay(CalendarDate calendarDate) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        mainWindow.viewDay(calendarDate);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public void viewWeek(CalendarDate calendarDate) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        mainWindow.viewWeek(calendarDate);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public void viewMonth(CalendarDate calendarDate) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        mainWindow.viewMonth(calendarDate);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public void viewList() {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        mainWindow.viewList();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public void viewLog() {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        mainWindow.viewLog();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Changes the view of the UI to the CalendarPanel to the given date."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param calendarDate The given date."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public void viewCalendar(CalendarDate calendarDate) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        if (calendarDate \u003d\u003d null) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            mainWindow.viewCalendar();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            mainWindow.changeCalendarScreenDate(calendarDate);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Returns a copy of the event list sorted by start date."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param events The given event list."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @return A copy of the event list sorted by date."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private List\u003cEventSource\u003e sortDateEventList(List\u003cEventSource\u003e events) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        List\u003cEventSource\u003e sortedDateEventList \u003d new ArrayList\u003c\u003e(events);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        sortedDateEventList.sort(new EventDateComparator());"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return sortedDateEventList;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Returns a HashMap based on the indexing of the original event list."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param events The unsorted event list."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @return Returns a HashMap based on the indexing of the original event list"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private HashMap\u003cEventSource, Integer\u003e addEventIndex(List\u003cEventSource\u003e events) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        int backIndex \u003d 0;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        HashMap\u003cEventSource, Integer\u003e eventHash \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        for (EventSource event : events) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            eventHash.put(event, backIndex);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            backIndex++;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return eventHash;"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Returns a copy of the task list sorted by due date."
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param tasks The given task list."
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @return A copy of the task list sorted by due date."
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private List\u003cTaskSource\u003e sortDateTaskList(List\u003cTaskSource\u003e tasks) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        List\u003cTaskSource\u003e sortedDateTaskList \u003d new ArrayList\u003c\u003e(tasks);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        sortedDateTaskList.sort(new TaskDateComparator());"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return sortedDateTaskList;"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Returns a HashMap based on the indexing of the original event list."
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param tasks The unsorted task list."
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @return Returns a HashMap based on the indexing of the original task list"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private HashMap\u003cTaskSource, Integer\u003e addTaskIndex(List\u003cTaskSource\u003e tasks) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        int backIndex \u003d 0;"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        HashMap\u003cTaskSource, Integer\u003e taskHash \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        for (TaskSource task : tasks) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            taskHash.put(task, backIndex);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            backIndex++;"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return taskHash;"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public void onModelDataChange(ModelData modelData) {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        List\u003cEventSource\u003e sortedDateEventList \u003d sortDateEventList(modelData.getEvents());"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        List\u003cTaskSource\u003e sortedDateTaskList \u003d sortDateTaskList(modelData.getTasks());"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        HashMap\u003cEventSource, Integer\u003e eventHash \u003d addEventIndex(modelData.getEvents());"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        HashMap\u003cTaskSource, Integer\u003e taskHash \u003d addTaskIndex(modelData.getTasks());"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.mainWindow.onModelListChange("
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                sortedDateEventList,"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                sortedDateTaskList,"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                eventHash,"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                taskHash);"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public void onUserOutput(UserOutput output, ColorTheme result) {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.mainWindow.onUserOutput(output, result);"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 105,
      "bruceskellator": 1,
      "WeomuCat": 34,
      "-": 76
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/UndoRedoManager.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_NOTHING_TO_REDO;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_NOTHING_TO_UNDO;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.ModelData;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.listeners.ModelDataListener;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "//@@author bruceskellator"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": " * UndoRedoManager keeps track of the different versions of ModelData, which are duplicated"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": " * and stored to its undoStateList every time event or task data is manipulated by a command."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": " * It contains the ModelManager, as well as an undoIndex which marks the current version of the"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": " * ModelData in undoStateList in use."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": " * Whenever an undo or redo command is executed, undoIndex is decremented or incremented respectively."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": " * The current version of ModelData in undoStateList will then be deep-copied to replace ModelManager\u0027s"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": " * ModelData."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": " */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "public class UndoRedoManager implements ModelDataListener {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     * Deep-copies of ModelData are stored to this list"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     * every time a state-changing command is executed."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     * This allows ModelManager\u0027s ModelData to retrieve its data"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     * from any of these past or future states when an"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     * undo or redo command is called."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    private final List\u003cModelData\u003e undoStateList;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    private final ModelManager model;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    private boolean listening;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    private int undoIndex;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public UndoRedoManager(ModelManager model) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        this.undoStateList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        this.model \u003d model;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     * This method should be called first."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     * Initializes the UndoRedoManager with the Model\u0027s initial data."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     * Allows UndoRedoManager to start listening to ModelData changes."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public void start() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        undoStateList.add(this.model.getModelData());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        listening \u003d true;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        undoIndex \u003d 0;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     * Restores the previous ModelData from UndoRedoManager."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public void undo() throws CommandException {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        if (!canUndo()) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            throw new CommandException(MESSAGE_NOTHING_TO_UNDO);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        undoIndex--;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        notifyModelResetListeners();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     * Restores the previously undone ModelData from UndoRedoManager."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public void redo() throws CommandException {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        if (!canRedo()) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            throw new CommandException(MESSAGE_NOTHING_TO_REDO);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        undoIndex++;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        notifyModelResetListeners();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     * Clears all future model data states in undoStateList beyond the index given by undoIndex."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    private void clearFutureHistory() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        List\u003cModelData\u003e subList \u003d new ArrayList\u003c\u003e(undoStateList.subList(0, undoIndex + 1));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        undoStateList.clear();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        undoStateList.addAll(subList);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     * Returns true if there are previous model data states to restore, and false otherwise."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     *"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     * @return boolean"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    private boolean canUndo() {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        return undoIndex \u003e 0;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     * Returns true if there are future model data states to reset to, and false otherwise."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     *"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     * @return boolean"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    private boolean canRedo() {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        return undoIndex \u003c undoStateList.size() - 1;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     * Reset ModelManager\u0027s ModelData to the current version of ModelData."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     */"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    private void notifyModelResetListeners() {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        if (listening) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            // Disable listening to prevent feedback loop from model manager"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            listening \u003d false;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            model.setModelData(undoStateList.get(undoIndex));"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            listening \u003d true;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     * Appends the current ModelLists, containing the current events and tasks, to undoStateList."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     */"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public void onModelDataChange(ModelData modelData) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        if (listening) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            clearFutureHistory();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            assert undoIndex \u003e\u003d undoStateList.size() - 1"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                : \"Pointer always points to end of list during commit; All future states must have been discarded.\";"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            undoStateList.add(modelData);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            undoIndex++;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        return undoStateList.size() + \" states in history\";"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        if (other \u003d\u003d this) { // short circuit if same object"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            if (!(other instanceof UndoRedoManager)) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            UndoRedoManager otherHistory \u003d ((UndoRedoManager) other);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            if (undoIndex !\u003d otherHistory.undoIndex"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                    || undoStateList.size() !\u003d otherHistory.undoStateList.size()) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            for (int i \u003d 0; i \u003c undoStateList.size(); i++) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                if (!undoStateList.get(i).equals(otherHistory.undoStateList.get(i))) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                    return false;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public List\u003cModelData\u003e getUndoStateList() {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        return undoStateList;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public int getUndoIndex() {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        return undoIndex;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bruceskellator": 161,
      "WeomuCat": 5
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/AddEventCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_ADD_EVENT_DUPLICATE;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_ADD_EVENT_SUCCESS;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.DateTimeArgument;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.StringArgument;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.StringVariableArguments;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.list.ArgumentList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.list.OptionalArgumentList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.list.RequiredArgumentList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.model.DateTime;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.ModelData;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.events.EventSource;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.exceptions.DuplicateElementException;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.ui.UserOutput;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents a Command which adds an EventSource to the Model."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class AddEventCommand extends Command {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final ModelManager model;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final EventSource event;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private AddEventCommand(Builder builder) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String description \u003d Objects.requireNonNull(builder.description);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        DateTime start \u003d Objects.requireNonNull(builder.start);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.model \u003d builder.model;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.event \u003d EventSource.newBuilder(description, start)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .setEnd(builder.end)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .setRemind(builder.remind)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .setTags(builder.tags)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .build();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static CommandBuilder newBuilder(ModelManager model) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return new Builder(model).init();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public UserOutput execute() throws CommandException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        List\u003cEventSource\u003e events \u003d new ArrayList\u003c\u003e(this.model.getEvents());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        events.add(this.event);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        // Replace model"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            this.model.setModelData(new ModelData(events, this.model.getTasks()));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        } catch (DuplicateElementException e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            throw new CommandException(MESSAGE_ADD_EVENT_DUPLICATE);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return new UserOutput(String.format(MESSAGE_ADD_EVENT_SUCCESS, this.event.getDescription()));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Represents a CommandBuilder responsible for creating {@link AddEventCommand}."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    static class Builder extends CommandBuilder {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        public static final String OPTION_END_DATE_TIME \u003d \"--end\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        public static final String OPTION_REMIND_DATE_TIME \u003d \"--remind\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        public static final String OPTION_TAGS \u003d \"--tag\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        private static final String ARGUMENT_DESCRIPTION \u003d \"DESCRIPTION\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        private static final String ARGUMENT_START_DATE_TIME \u003d \"START_DATE_TIME\";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        private static final String ARGUMENT_END_DATE_TIME \u003d \"END_DATE_TIME\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        private static final String ARGUMENT_REMIND_DATE_TIME \u003d \"REMIND_DATE_TIME\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        private static final String ARGUMENT_TAGS \u003d \"TAGS\";"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        private final ModelManager model;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        private String description;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        private DateTime start;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        private DateTime end;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        private DateTime remind;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        private List\u003cString\u003e tags;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        private Builder(ModelManager model) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            this.model \u003d model;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        protected RequiredArgumentList defineCommandArguments() {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            return ArgumentList.required()"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .addArgument(StringArgument.newBuilder(ARGUMENT_DESCRIPTION, v -\u003e this.description \u003d v))"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .addArgument(DateTimeArgument.newBuilder(ARGUMENT_START_DATE_TIME, v -\u003e this.start \u003d v));"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        protected Map\u003cString, OptionalArgumentList\u003e defineCommandOptions() {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            return Map.of("
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                OPTION_END_DATE_TIME, ArgumentList.optional()"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    .addArgument(DateTimeArgument.newBuilder(ARGUMENT_END_DATE_TIME, v -\u003e this.end \u003d v)),"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                OPTION_REMIND_DATE_TIME, ArgumentList.optional()"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    .addArgument(DateTimeArgument.newBuilder(ARGUMENT_REMIND_DATE_TIME, v -\u003e this.remind \u003d v)),"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                OPTION_TAGS, ArgumentList.optional()"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    .setVariableArguments(StringVariableArguments.newBuilder(ARGUMENT_TAGS, v -\u003e this.tags \u003d v))"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            );"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        protected Command commandBuild() {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            return new AddEventCommand(this);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 2,
      "WeomuCat": 113
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/AddTaskCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_ADD_TASK_DUPLICATE;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_ADD_TASK_SUCCESS;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.DateTimeArgument;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.StringArgument;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.StringVariableArguments;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.list.ArgumentList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.list.OptionalArgumentList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.list.RequiredArgumentList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.DateTime;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.ModelData;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.exceptions.DuplicateElementException;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import seedu.address.model.tasks.TaskSource;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import seedu.address.ui.UserOutput;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "//@@author bruceskellator"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "/**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": " * Represents a Command which adds a TaskSource to the Model."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": " */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "public class AddTaskCommand extends Command {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    private final ModelManager model;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    private final TaskSource task;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    private AddTaskCommand(Builder builder) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        String description \u003d Objects.requireNonNull(builder.description);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        this.model \u003d builder.model;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        this.task \u003d TaskSource.newBuilder(description)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            .setDueDate(builder.due)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            .setTags(builder.tags)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            .build();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public static CommandBuilder newBuilder(ModelManager model) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        return new Builder(model).init();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public UserOutput execute() throws CommandException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        List\u003cTaskSource\u003e tasks \u003d new ArrayList\u003c\u003e(this.model.getTasks());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        tasks.add(this.task);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        // Replace model"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            this.model.setModelData(new ModelData(this.model.getEvents(), tasks));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        } catch (DuplicateElementException e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            throw new CommandException(MESSAGE_ADD_TASK_DUPLICATE);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        return new UserOutput(String.format(MESSAGE_ADD_TASK_SUCCESS, this.task.getDescription()));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     * Represents a CommandBuilder responsible for creating {@link AddTaskCommand}."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    static class Builder extends CommandBuilder {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        public static final String OPTION_TAGS \u003d \"--tag\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        public static final String OPTION_DUE_DATE_TIME \u003d \"--due\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        private static final String ARGUMENT_DESCRIPTION \u003d \"DESCRIPTION\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        private static final String ARGUMENT_DUE_DATE_TIME \u003d \"DUE_DATE_TIME\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        private static final String ARGUMENT_TAGS \u003d \"TAGS\";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        private final ModelManager model;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        private String description;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        private DateTime due;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        private List\u003cString\u003e tags;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        private Builder(ModelManager model) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            this.model \u003d model;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        protected RequiredArgumentList defineCommandArguments() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            return ArgumentList.required()"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                .addArgument(StringArgument.newBuilder(ARGUMENT_DESCRIPTION, v -\u003e this.description \u003d v));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        protected Map\u003cString, OptionalArgumentList\u003e defineCommandOptions() {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            return Map.of("
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                OPTION_TAGS, ArgumentList.optional()"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                    .setVariableArguments(StringVariableArguments.newBuilder(ARGUMENT_TAGS, v -\u003e this.tags \u003d v)),"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                OPTION_DUE_DATE_TIME, ArgumentList.optional()"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                    .addArgument(DateTimeArgument.newBuilder(ARGUMENT_DUE_DATE_TIME, v -\u003e this.due \u003d v))"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            );"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        protected Command commandBuild() {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            return new AddTaskCommand(this);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bruceskellator": 93,
      "WeomuCat": 14
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/CalendarViewCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_CALENDAR_VIEW_SUCCESS;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.logic.UiManager;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.CalendarDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.UserOutput;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "//@@author Kyzure"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * Represents a Command which adds an EventSource to the Model."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "public class CalendarViewCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private final UiManager uiManager;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private final CalendarDate calendarDate;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    CalendarViewCommand(CalendarViewCommandBuilder builder) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.uiManager \u003d Objects.requireNonNull(builder.getUiManager());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.calendarDate \u003d builder.getCalendarDate();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public static CommandBuilder newBuilder(UiManager uiManager) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return new CalendarViewCommandBuilder(uiManager).init();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public UserOutput execute() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        uiManager.viewCalendar(this.calendarDate);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return new UserOutput(String.format(MESSAGE_CALENDAR_VIEW_SUCCESS));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 34
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/CalendarViewCommandBuilder.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.logic.UiManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.CalendarMonthArgument;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.logic.commands.arguments.list.ArgumentList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.logic.commands.arguments.list.OptionalArgumentList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.logic.commands.arguments.list.RequiredArgumentList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.CalendarDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "//@@author Kyzure"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * Represents a CommandBuilder responsible for creating {@link  CalendarViewCommand}."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "class CalendarViewCommandBuilder extends CommandBuilder {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public static final String OPTION_CALENDAR_SCREEN_DATE \u003d \"--date\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private static final String ARGUMENT_CALENDAR_SCREEN_DATE \u003d \"CALENDAR_MONTH_YEAR\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private UiManager uiManager;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private CalendarDate calendarDate;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    CalendarViewCommandBuilder(UiManager uiManager) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.uiManager \u003d uiManager;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    protected RequiredArgumentList defineCommandArguments() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    protected Map\u003cString, OptionalArgumentList\u003e defineCommandOptions() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return Map.of("
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                OPTION_CALENDAR_SCREEN_DATE, ArgumentList.optional()"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        .addArgument(CalendarMonthArgument.newBuilder("
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                ARGUMENT_CALENDAR_SCREEN_DATE, v -\u003e this.calendarDate \u003d v))"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        );"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    UiManager getUiManager() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return uiManager;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    CalendarDate getCalendarDate() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return this.calendarDate;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    protected Command commandBuild() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return new CalendarViewCommand(this);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 54,
      "WeomuCat": 1
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/Command.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.ui.UserOutput;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents a command with hidden internal logic and the ability to be executed."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "     * Executes the command and returns the result message."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return feedback message of the operation result for display"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws CommandException If an error occurs during command execution."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public abstract UserOutput execute() throws CommandException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 2,
      "-": 16
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/CommandBuilder.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.list.ArgumentList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.list.OptionalArgumentList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.list.RequiredArgumentList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.exceptions.ArgumentException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents an object which can build commands."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Responsible for giving the correct user input to the correct {@link ArgumentList}."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public abstract class CommandBuilder {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    // Context is the current ArgumentList to add arguments to."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private ArgumentList context;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    // Represents the command arguments in a Command."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private ArgumentList commandArguments;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    // Represents the command options in a Command."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    // Key: option keyword, Value: option arguments"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private Map\u003cString, ArgumentList\u003e commandOptions;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * This method must be called first."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    protected CommandBuilder init() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        RequiredArgumentList arguments \u003d this.defineCommandArguments();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        Map\u003cString, OptionalArgumentList\u003e options \u003d this.defineCommandOptions();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        // Set null values to blank values."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        if (arguments \u003d\u003d null) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            arguments \u003d ArgumentList.required();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        if (options \u003d\u003d null) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            options \u003d Map.of();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        // Build OptionBuilders"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.commandArguments \u003d arguments.build();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.commandOptions \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        for (Map.Entry\u003cString, OptionalArgumentList\u003e entry : options.entrySet()) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            String keyword \u003d entry.getKey();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            OptionalArgumentList option \u003d entry.getValue();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            this.commandOptions.put(keyword, option.build());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        // Set the initial context."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.context \u003d this.commandArguments;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Accepts a command phrase from user input."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * A phrase can either be an option or an argument."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @param phrase a command phrase from user input"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public CommandBuilder acceptPhrase(String phrase) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        if (this.commandOptions.containsKey(phrase)) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            // Sets the context."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            this.context \u003d this.commandOptions.get(phrase);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            this.context.setRequired();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            // Adds an argument to the context."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            this.context.acceptArgument(phrase);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Builds all arguments and returns a Command."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     *"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @return the built Command"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @throws ArgumentException if any argument is required but null"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @throws ParseException    if any argument is required but null"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public Command build() throws ArgumentException, ParseException {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.commandArguments.build();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        for (ArgumentList option : this.commandOptions.values()) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            option.build();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this.commandBuild();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    protected abstract RequiredArgumentList defineCommandArguments();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    protected abstract Map\u003cString, OptionalArgumentList\u003e defineCommandOptions();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    protected abstract Command commandBuild();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 96
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/DayViewCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_DAY_VIEW_SUCCESS;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.logic.UiManager;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.CalendarDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.UserOutput;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "//@@author Kyzure"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * Represents a Command which adds an EventSource to the Model."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "public class DayViewCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private final CalendarDate calendarDate;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private final UiManager uiManager;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    DayViewCommand(DayViewCommandBuilder builder) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        calendarDate \u003d Objects.requireNonNull(builder.getStart());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        uiManager \u003d Objects.requireNonNull(builder.getUiManager());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public static CommandBuilder newBuilder(UiManager uiManager) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return new DayViewCommandBuilder(uiManager).init();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public UserOutput execute() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        uiManager.viewDay(calendarDate);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return new UserOutput(String.format(MESSAGE_DAY_VIEW_SUCCESS, calendarDate.toString()));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 34
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/DayViewCommandBuilder.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.logic.UiManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.CalendarDayArgument;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.list.ArgumentList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.list.OptionalArgumentList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.list.RequiredArgumentList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.CalendarDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "//@@author Kyzure"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * Represents a CommandBuilder responsible for creating {@link AddEventCommand}."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "class DayViewCommandBuilder extends CommandBuilder {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private static final String ARGUMENT_START_DATE_TIME \u003d \"DATE\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private CalendarDate start;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private UiManager uiManager;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    DayViewCommandBuilder(UiManager uiManager) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.uiManager \u003d uiManager;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    protected RequiredArgumentList defineCommandArguments() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return ArgumentList.required()"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            .addArgument(CalendarDayArgument.newBuilder(ARGUMENT_START_DATE_TIME, o -\u003e this.start \u003d o));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    protected Map\u003cString, OptionalArgumentList\u003e defineCommandOptions() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    UiManager getUiManager() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return uiManager;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    CalendarDate getStart() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return this.start;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    protected Command commandBuild() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return new DayViewCommand(this);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 46,
      "WeomuCat": 4
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/DeleteEventCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_DELETE_EVENT_FAILURE;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_DELETE_EVENT_NO_PARAMETERS;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_DELETE_EVENT_SUCCESS;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_EVENT_INDEX;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.IndexVariableArguments;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.StringVariableArguments;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.list.ArgumentList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.list.OptionalArgumentList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.list.RequiredArgumentList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.ModelData;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.events.EventSource;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.ui.UserOutput;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents a Command that deletes EventSources from the Model."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class DeleteEventCommand extends Command {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final ModelManager model;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final List\u003cInteger\u003e indexes;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final List\u003cString\u003e tags;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private DeleteEventCommand(Builder builder) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.model \u003d builder.model;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.indexes \u003d builder.indexes;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.tags \u003d builder.tags;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static CommandBuilder newBuilder(ModelManager model) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return new Builder(model).init();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public UserOutput execute() throws CommandException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        // No indexes or tags specified."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        if (this.indexes.isEmpty() \u0026\u0026 this.tags.isEmpty()) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            throw new CommandException(MESSAGE_DELETE_EVENT_NO_PARAMETERS);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        List\u003cEventSource\u003e events \u003d new ArrayList\u003c\u003e(this.model.getEvents());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        // toDelete all events with matching indexes."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        // If no indexes specified, toDelete all events."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        List\u003cEventSource\u003e toDelete;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        if (this.indexes.isEmpty()) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            toDelete \u003d new ArrayList\u003c\u003e(this.model.getEvents());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            toDelete \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            for (Integer index : this.indexes) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    toDelete.add(events.get(index));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    throw new CommandException(String.format(MESSAGE_INVALID_EVENT_INDEX, index));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        // Remove events from toDelete that do not have matching tags."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        toDelete.removeIf(event -\u003e !event.getTags().containsAll(this.tags));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        // No events to delete found."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        if (toDelete.isEmpty()) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            throw new CommandException(MESSAGE_DELETE_EVENT_FAILURE);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        // Remove all events that are in toDelete."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        events.removeAll(toDelete);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        // Replace model"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.model.setModelData(new ModelData(events, this.model.getTasks()));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return new UserOutput(String.format(MESSAGE_DELETE_EVENT_SUCCESS, toDelete.stream()"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .map(EventSource::getDescription)"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .collect(Collectors.joining(\", \"))));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Represents a CommandBuilder responsible for creating {@link DeleteEventCommand}."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    static class Builder extends CommandBuilder {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        public static final String OPTION_TAGS \u003d \"--tag\";"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        private static final String ARGUMENT_INDEXES \u003d \"INDEXES\";"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        private static final String ARGUMENT_TAGS \u003d \"TAGS\";"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        private final ModelManager model;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        private List\u003cInteger\u003e indexes;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        private List\u003cString\u003e tags;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        private Builder(ModelManager model) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            this.model \u003d model;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        protected RequiredArgumentList defineCommandArguments() {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            return ArgumentList.required()"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .setVariableArguments(IndexVariableArguments.newBuilder(ARGUMENT_INDEXES, o -\u003e this.indexes \u003d o));"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        protected Map\u003cString, OptionalArgumentList\u003e defineCommandOptions() {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            return Map.of("
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                OPTION_TAGS, ArgumentList.optional()"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    .setVariableArguments(StringVariableArguments.newBuilder(ARGUMENT_TAGS, o -\u003e this.tags \u003d o))"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            );"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        protected Command commandBuild() {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            return new DeleteEventCommand(this);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 125
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/DeleteTaskCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_DELETE_TASK_FAILURE;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_DELETE_TASK_NO_PARAMETERS;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_DELETE_TASK_SUCCESS;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_TASK_INDEX;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.IndexVariableArguments;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.StringVariableArguments;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.list.ArgumentList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.list.OptionalArgumentList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.list.RequiredArgumentList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.ModelData;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import seedu.address.model.tasks.TaskSource;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import seedu.address.ui.UserOutput;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "//@@author bruceskellator"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "/**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": " * Represents a Command that deletes TaskSources from the Model."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": " */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "public class DeleteTaskCommand extends Command {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    private final ModelManager model;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    private final List\u003cInteger\u003e indexes;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    private final List\u003cString\u003e tags;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    private DeleteTaskCommand(Builder builder) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        this.model \u003d builder.model;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        this.indexes \u003d builder.indexes;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        this.tags \u003d builder.tags;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public static CommandBuilder newBuilder(ModelManager model) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        return new Builder(model).init();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public UserOutput execute() throws CommandException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        // No indexes or tags specified."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        if (this.indexes.isEmpty() \u0026\u0026 this.tags.isEmpty()) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            throw new CommandException(MESSAGE_DELETE_TASK_NO_PARAMETERS);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        List\u003cTaskSource\u003e tasks \u003d new ArrayList\u003c\u003e(this.model.getTasks());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        // toDelete all tasks with matching indexes."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        // If no indexes specified, toDelete all tasks."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        List\u003cTaskSource\u003e toDelete;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        if (this.indexes.isEmpty()) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            toDelete \u003d new ArrayList\u003c\u003e(this.model.getTasks());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            toDelete \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            for (Integer index : this.indexes) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                    toDelete.add(tasks.get(index));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                    throw new CommandException(String.format(MESSAGE_INVALID_TASK_INDEX, index));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        // Remove tasks from toDelete that do not have matching tags."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        toDelete.removeIf(task -\u003e !task.getTags().containsAll(this.tags));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        // No tasks to delete found."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        if (toDelete.isEmpty()) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            throw new CommandException(MESSAGE_DELETE_TASK_FAILURE);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        // Remove all tasks that are in toDelete."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        tasks.removeAll(toDelete);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        // Replace model"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        this.model.setModelData(new ModelData(this.model.getEvents(), tasks));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        return new UserOutput(String.format(MESSAGE_DELETE_TASK_SUCCESS, toDelete.stream()"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            .map(TaskSource::getDescription)"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            .collect(Collectors.joining(\", \"))));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     * Represents a CommandBuilder responsible for creating {@link DeleteTaskCommand}."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    static class Builder extends CommandBuilder {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        public static final String OPTION_TAGS \u003d \"--tag\";"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        private static final String ARGUMENT_INDEXES \u003d \"INDEXES\";"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        private static final String ARGUMENT_TAGS \u003d \"TAGS\";"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        private final ModelManager model;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        private List\u003cInteger\u003e indexes;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        private List\u003cString\u003e tags;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        private Builder(ModelManager model) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            this.model \u003d model;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        protected RequiredArgumentList defineCommandArguments() {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            return ArgumentList.required()"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                .setVariableArguments(IndexVariableArguments.newBuilder(ARGUMENT_INDEXES, o -\u003e this.indexes \u003d o));"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        protected Map\u003cString, OptionalArgumentList\u003e defineCommandOptions() {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            return Map.of("
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                OPTION_TAGS, ArgumentList.optional()"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                    .setVariableArguments(StringVariableArguments.newBuilder(ARGUMENT_TAGS, o -\u003e this.tags \u003d o))"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            );"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        protected Command commandBuild() {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            return new DeleteTaskCommand(this);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bruceskellator": 118,
      "WeomuCat": 9
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/EditEventCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_EDIT_EVENT_DUPLICATE;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_EDIT_EVENT_NO_INDEXES;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_EDIT_EVENT_NO_PARAMETERS;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_EDIT_EVENT_SUCCESS;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_EVENT_INDEX;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.Collection;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.LinkedHashSet;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.ListIterator;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.DateTimeArgument;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.IndexVariableArguments;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.StringArgument;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.StringVariableArguments;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.list.ArgumentList;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.list.OptionalArgumentList;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.list.RequiredArgumentList;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.model.DateTime;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.ModelData;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.events.EventSource;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.exceptions.DuplicateElementException;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.ui.UserOutput;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents a Command that edits EventSources in the Model."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class EditEventCommand extends Command {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final ModelManager model;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final List\u003cInteger\u003e indexes;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final DateTime start;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final DateTime end;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final DateTime remind;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final List\u003cString\u003e tags;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private EditEventCommand(Builder builder) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.model \u003d builder.model;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.indexes \u003d builder.indexes;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.description \u003d builder.description;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.start \u003d builder.start;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.end \u003d builder.end;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.remind \u003d builder.remind;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.tags \u003d builder.tags;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static CommandBuilder newBuilder(ModelManager model) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return new Builder(model).init();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public UserOutput execute() throws CommandException {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        // No indexes given"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        if (this.indexes.isEmpty()) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            throw new CommandException(MESSAGE_EDIT_EVENT_NO_INDEXES);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        // No parameters given"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        if (this.description \u003d\u003d null"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            \u0026\u0026 this.start \u003d\u003d null"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            \u0026\u0026 this.end \u003d\u003d null"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            \u0026\u0026 this.remind \u003d\u003d null"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            \u0026\u0026 this.tags.isEmpty()) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            throw new CommandException(MESSAGE_EDIT_EVENT_NO_PARAMETERS);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        List\u003cEventSource\u003e events \u003d new ArrayList\u003c\u003e(this.model.getEvents());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        LinkedHashSet\u003cEventSource\u003e toEdit \u003d new LinkedHashSet\u003c\u003e();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        for (Integer index : indexes) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                toEdit.add(events.get(index));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                throw new CommandException(String.format(MESSAGE_INVALID_EVENT_INDEX, index));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        ListIterator\u003cEventSource\u003e iterator \u003d events.listIterator();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        while (iterator.hasNext()) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            EventSource event \u003d iterator.next();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            if (toEdit.contains(event)) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                String description;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                // Replace field if it is not null."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                if (this.description \u003d\u003d null) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    description \u003d event.getDescription();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    description \u003d this.description;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                DateTime start;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                if (this.start \u003d\u003d null) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    start \u003d event.getStartDateTime();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    start \u003d this.start;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                DateTime end;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                if (this.end \u003d\u003d null) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    end \u003d event.getEndDateTime();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    end \u003d this.end;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                DateTime remind;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                if (this.remind \u003d\u003d null) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    remind \u003d event.getRemindDateTime();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                    remind \u003d this.remind;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                Collection\u003cString\u003e tags;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                if (this.tags.isEmpty()) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    tags \u003d event.getTags();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    tags \u003d this.tags;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                EventSource replacement \u003d EventSource.newBuilder(description, start)"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    .setEnd(end)"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                    .setRemind(remind)"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    .setTags(tags)"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    .build();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                iterator.set(replacement);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        // Replace model"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            this.model.setModelData(new ModelData(events, this.model.getTasks()));"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        } catch (DuplicateElementException e) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            throw new CommandException(MESSAGE_EDIT_EVENT_DUPLICATE);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return new UserOutput(String.format(MESSAGE_EDIT_EVENT_SUCCESS, toEdit.stream()"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .map(EventSource::getDescription)"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .collect(Collectors.joining(\", \"))));"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Represents a CommandBuilder responsible for creating {@link EditEventCommand}."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    static class Builder extends CommandBuilder {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        public static final String OPTION_DESCRIPTION \u003d \"--description\";"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        public static final String OPTION_START_DATE_TIME \u003d \"--start\";"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        public static final String OPTION_END_DATE_TIME \u003d \"--end\";"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        public static final String OPTION_REMIND_DATE_TIME \u003d \"--remind\";"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        public static final String OPTION_TAGS \u003d \"--tag\";"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        private static final String ARGUMENT_INDEXES \u003d \"INDEXES\";"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        private static final String ARGUMENT_DESCRIPTION \u003d \"DESCRIPTION\";"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        private static final String ARGUMENT_START_DATE_TIME \u003d \"START_DATE_TIME\";"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        private static final String ARGUMENT_END_DATE_TIME \u003d \"END_DATE_TIME\";"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        private static final String ARGUMENT_REMIND_DATE_TIME \u003d \"REMIND_DATE_TIME\";"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        private static final String ARGUMENT_TAGS \u003d \"TAGS\";"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        private final ModelManager model;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        private List\u003cInteger\u003e indexes;"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        private String description;"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        private DateTime start;"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        private DateTime end;"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        private DateTime remind;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        private List\u003cString\u003e tags;"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        private Builder(ModelManager model) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            this.model \u003d model;"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        protected RequiredArgumentList defineCommandArguments() {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            return ArgumentList.required()"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .setVariableArguments(IndexVariableArguments.newBuilder(ARGUMENT_INDEXES, o -\u003e this.indexes \u003d o));"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        protected Map\u003cString, OptionalArgumentList\u003e defineCommandOptions() {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            return Map.of("
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                OPTION_DESCRIPTION, ArgumentList.optional()"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    .addArgument(StringArgument.newBuilder(ARGUMENT_DESCRIPTION, o -\u003e this.description \u003d o)),"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                OPTION_START_DATE_TIME, ArgumentList.optional()"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    .addArgument(DateTimeArgument.newBuilder(ARGUMENT_START_DATE_TIME, o -\u003e this.start \u003d o)),"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                OPTION_END_DATE_TIME, ArgumentList.optional()"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    .addArgument(DateTimeArgument.newBuilder(ARGUMENT_END_DATE_TIME, o -\u003e this.end \u003d o)),"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                OPTION_REMIND_DATE_TIME, ArgumentList.optional()"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    .addArgument(DateTimeArgument.newBuilder(ARGUMENT_REMIND_DATE_TIME, o -\u003e this.remind \u003d o)),"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                OPTION_TAGS, ArgumentList.optional()"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    .setVariableArguments(StringVariableArguments.newBuilder(ARGUMENT_TAGS, o -\u003e this.tags \u003d o))"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            );"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        protected Command commandBuild() {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            return new EditEventCommand(this);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 9,
      "WeomuCat": 198
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/EditTaskCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_EDIT_TASK_DUPLICATE;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_EDIT_TASK_NO_INDEXES;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_EDIT_TASK_NO_PARAMETERS;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_EDIT_TASK_SUCCESS;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_TASK_INDEX;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.Collection;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.LinkedHashSet;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.ListIterator;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.DateTimeArgument;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.IndexVariableArguments;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.StringArgument;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.StringVariableArguments;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.list.ArgumentList;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.list.OptionalArgumentList;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.list.RequiredArgumentList;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import seedu.address.model.DateTime;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.ModelData;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.exceptions.DuplicateElementException;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import seedu.address.model.tasks.TaskSource;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import seedu.address.ui.UserOutput;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "//@@author bruceskellator"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "/**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": " * Represents a Command that edits TaskSources in the Model."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": " */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "public class EditTaskCommand extends Command {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    private final ModelManager model;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    private final List\u003cInteger\u003e indexes;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    private final DateTime due;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    private final List\u003cString\u003e tags;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    private EditTaskCommand(Builder builder) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        this.model \u003d builder.model;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        this.indexes \u003d Objects.requireNonNull(builder.indexes);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        this.description \u003d builder.description;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        this.due \u003d builder.due;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        this.tags \u003d builder.tags;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public static CommandBuilder newBuilder(ModelManager model) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        return new Builder(model).init();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public UserOutput execute() throws CommandException {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        // No indexes given"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        if (this.indexes.isEmpty()) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            throw new CommandException(MESSAGE_EDIT_TASK_NO_INDEXES);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        // No parameters given"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        if (this.description \u003d\u003d null"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            \u0026\u0026 this.due \u003d\u003d null"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            \u0026\u0026 this.tags.isEmpty()) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            throw new CommandException(MESSAGE_EDIT_TASK_NO_PARAMETERS);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        List\u003cTaskSource\u003e tasks \u003d new ArrayList\u003c\u003e(this.model.getTasks());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        LinkedHashSet\u003cTaskSource\u003e toEdit \u003d new LinkedHashSet\u003c\u003e();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        for (Integer index : indexes) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                toEdit.add(tasks.get(index));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                throw new CommandException(String.format(MESSAGE_INVALID_TASK_INDEX, index));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        ListIterator\u003cTaskSource\u003e iterator \u003d tasks.listIterator();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        while (iterator.hasNext()) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            TaskSource task \u003d iterator.next();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            if (toEdit.contains(task)) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                String description;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                // Replace field if it is not null."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                if (this.description \u003d\u003d null) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                    description \u003d task.getDescription();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                    description \u003d this.description;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                DateTime due;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                if (this.due \u003d\u003d null) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                    due \u003d task.getDueDate();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                    due \u003d this.due;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                Collection\u003cString\u003e tags;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                if (this.tags.isEmpty()) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                    tags \u003d task.getTags();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                    tags \u003d this.tags;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                TaskSource replacement \u003d TaskSource.newBuilder(description)"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                    .setDueDate(due)"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                    .setTags(tags)"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                    .build();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                iterator.set(replacement);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        // Replace model"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            this.model.setModelData(new ModelData(this.model.getEvents(), tasks));"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        } catch (DuplicateElementException e) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            throw new CommandException(MESSAGE_EDIT_TASK_DUPLICATE);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        return new UserOutput(String.format(MESSAGE_EDIT_TASK_SUCCESS, toEdit.stream()"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            .map(TaskSource::getDescription)"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            .collect(Collectors.joining(\", \"))));"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     * Represents a CommandBuilder responsible for creating {@link EditTaskCommand}."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     */"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    static class Builder extends CommandBuilder {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        public static final String OPTION_DESCRIPTION \u003d \"--description\";"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        public static final String OPTION_DUE_DATE_DATE_TIME \u003d \"--due\";"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        public static final String OPTION_TAGS \u003d \"--tag\";"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        private static final String ARGUMENT_INDEXES \u003d \"INDEXES\";"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        private static final String ARGUMENT_DESCRIPTION \u003d \"DESCRIPTION\";"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        private static final String ARGUMENT_DUE_DATE_DATE_TIME \u003d \"DUE_DATE_DATE_TIME\";"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        private static final String ARGUMENT_TAGS \u003d \"TAGS\";"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        private final ModelManager model;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        private List\u003cInteger\u003e indexes;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        private String description;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        private DateTime due;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        private List\u003cString\u003e tags;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        private Builder(ModelManager model) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            this.model \u003d model;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        protected RequiredArgumentList defineCommandArguments() {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            return ArgumentList.required()"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                .setVariableArguments(IndexVariableArguments.newBuilder(ARGUMENT_INDEXES, o -\u003e this.indexes \u003d o));"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        protected Map\u003cString, OptionalArgumentList\u003e defineCommandOptions() {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            return Map.of("
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                OPTION_DESCRIPTION, ArgumentList.optional()"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                    .addArgument(StringArgument.newBuilder(ARGUMENT_DESCRIPTION, o -\u003e this.description \u003d o)),"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                OPTION_DUE_DATE_DATE_TIME, ArgumentList.optional()"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                    .addArgument(DateTimeArgument.newBuilder(ARGUMENT_DUE_DATE_DATE_TIME, o -\u003e this.due \u003d o)),"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                OPTION_TAGS, ArgumentList.optional()"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                    .setVariableArguments(StringVariableArguments.newBuilder(ARGUMENT_TAGS, o -\u003e this.tags \u003d o))"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            );"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        protected Command commandBuild() {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            return new EditTaskCommand(this);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bruceskellator": 163,
      "WeomuCat": 16
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/ExitCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_EXIT_SUCCESS;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.list.OptionalArgumentList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.list.RequiredArgumentList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.ui.UserOutput;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents a Command which exits Horo."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final long EXIT_DURATION \u003d 1000;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private ExitCommand() {}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static CommandBuilder newBuilder() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return new Builder().init();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public UserOutput execute() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        new Thread(() -\u003e {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                Thread.sleep(EXIT_DURATION);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                Platform.exit();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            } catch (InterruptedException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }).start();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return new UserOutput(MESSAGE_EXIT_SUCCESS);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Represents a CommandBuilder responsible for creating {@link ExitCommand}."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    static class Builder extends CommandBuilder {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        protected RequiredArgumentList defineCommandArguments() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        protected Map\u003cString, OptionalArgumentList\u003e defineCommandOptions() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        protected Command commandBuild() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 45,
      "-": 13
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/ExportIcsCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_EXPORT_ICS_SUCCESS;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import seedu.address.ics.IcsException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import seedu.address.ics.IcsExporter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import seedu.address.ui.UserOutput;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "//@@author marcusteh1238"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": " * Represents a Command which exports Events stored in Horo into an Ics file."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "public class ExportIcsCommand extends Command {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    private static final Path DEFAULT_DIRECTORY \u003d Paths.get(\"\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    private final String filepath;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    private final ModelManager model;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    //@@author marcusteh1238"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    ExportIcsCommand(ExportIcsCommandBuilder builder) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        this.model \u003d builder.getModel();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        this.filepath \u003d getFilePath(builder);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    //@@author marcusteh1238"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    private String getFilePath(ExportIcsCommandBuilder builder) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        String directory \u003d builder.getOptionDirectory();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        String filename \u003d IcsExporter.getExportFileName();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        if (directory !\u003d null) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            return Paths.get(directory).resolve(filename).toString();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            return DEFAULT_DIRECTORY.resolve(filename).toAbsolutePath().toString();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    //@@author marcusteh1238"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    public static CommandBuilder newBuilder(ModelManager model) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        return new ExportIcsCommandBuilder(model).init();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    //@@author marcusteh1238"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    public UserOutput execute() throws CommandException {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            IcsExporter icsExporter \u003d new IcsExporter(model);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            icsExporter.export(filepath);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            return new UserOutput(String.format(MESSAGE_EXPORT_ICS_SUCCESS, filepath));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        } catch (IcsException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            throw new CommandException(e.getMessage());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcusteh1238": 57
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/ExportIcsCommandBuilder.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import seedu.address.logic.commands.arguments.StringArgument;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.list.ArgumentList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.list.OptionalArgumentList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.list.RequiredArgumentList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "//@@author marcusteh1238"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": " * Represents a CommandBuilder responsible for creating {@link ExportIcsCommand}."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "public class ExportIcsCommandBuilder extends CommandBuilder {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    private static final String OPTION_DIRECTORY \u003d \"--directory\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    private static final String ARGUMENT_DIRECTORY \u003d \"DIRECTORY\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    private final ModelManager model;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    private String optionDirectory;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    //@@author marcusteh1238"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    ExportIcsCommandBuilder(ModelManager model) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        this.model \u003d model;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    //@@author marcusteh1238"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    ModelManager getModel() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        return model;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    //@@author marcusteh1238"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    String getOptionDirectory() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        return this.optionDirectory;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    //@@author marcusteh1238"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    protected RequiredArgumentList defineCommandArguments() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    //@@author marcusteh1238"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    protected Map\u003cString, OptionalArgumentList\u003e defineCommandOptions() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        return Map.of(OPTION_DIRECTORY, ArgumentList.optional()"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            .addArgument(StringArgument.newBuilder(ARGUMENT_DIRECTORY, o -\u003e this.optionDirectory \u003d o)));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    //@@author marcusteh1238"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    protected Command commandBuild() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        return new ExportIcsCommand(this);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcusteh1238": 54,
      "WeomuCat": 3
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/ImportIcsCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_IMPORT_ICS_DUPLICATE;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_IMPORT_ICS_SUCCESS;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import seedu.address.ics.IcsException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import seedu.address.ics.IcsParser;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.ModelData;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import seedu.address.model.events.EventSource;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.exceptions.DuplicateElementException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import seedu.address.model.tasks.TaskSource;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import seedu.address.ui.UserOutput;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "//@@author marcusteh1238"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "/**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": " * Represents a Command which imports Events stored in an Ics file into Horo."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "public class ImportIcsCommand extends Command {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    private final ModelManager model;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    private final String filepath;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    //@@author marcusteh1238"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    public ImportIcsCommand(ImportIcsCommandBuilder builder) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        this.model \u003d builder.getModel();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        this.filepath \u003d builder.getFilepath();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    //@@author marcusteh1238"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    public static CommandBuilder newBuilder(ModelManager model) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        return new ImportIcsCommandBuilder(model).init();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    //@@author marcusteh1238"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    public UserOutput execute() throws CommandException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        EventSource[] newEvents;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        TaskSource[] newTasks;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            IcsParser icsParser \u003d IcsParser.getParser(filepath);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            newEvents \u003d icsParser.parseEvents();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            newTasks \u003d icsParser.parseTasks();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        } catch (IcsException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            throw new CommandException(e.getMessage());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        // Get model events and tasks and append new items."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        List\u003cEventSource\u003e events \u003d new ArrayList\u003c\u003e(model.getEvents());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        List\u003cTaskSource\u003e tasks \u003d new ArrayList\u003c\u003e(model.getTasks());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        events.addAll(Arrays.asList(newEvents));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        tasks.addAll(Arrays.asList(newTasks));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        // Replace model"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            model.setModelData(new ModelData(events, tasks));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        } catch (DuplicateElementException e) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            throw new CommandException(MESSAGE_IMPORT_ICS_DUPLICATE);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        return new UserOutput(String.format(MESSAGE_IMPORT_ICS_SUCCESS, filepath));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcusteh1238": 62,
      "WeomuCat": 8
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/ImportIcsCommandBuilder.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import seedu.address.logic.commands.arguments.StringArgument;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.list.ArgumentList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.list.OptionalArgumentList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.list.RequiredArgumentList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "//@@author marcusteh1238"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": " * Represents a CommandBuilder responsible for creating {@link ImportIcsCommand}."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "public class ImportIcsCommandBuilder extends CommandBuilder {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    private static final String ARGUMENT_FILEPATH \u003d \"FILEPATH\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    private final ModelManager model;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    private String filepath;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    //@@author marcusteh1238"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    ImportIcsCommandBuilder(ModelManager model) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        this.model \u003d model;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    //@@author marcusteh1238"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    ModelManager getModel() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        return model;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    //@@author marcusteh1238"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    String getFilepath() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        return this.filepath;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    //@@author marcusteh1238"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    protected RequiredArgumentList defineCommandArguments() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        return ArgumentList.required()"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            .addArgument(StringArgument.newBuilder(ARGUMENT_FILEPATH, o -\u003e this.filepath \u003d o));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    //@@author marcusteh1238"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    protected Map\u003cString, OptionalArgumentList\u003e defineCommandOptions() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    //@@author marcusteh1238"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    protected Command commandBuild() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        return new ImportIcsCommand(this);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcusteh1238": 52,
      "WeomuCat": 3
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/ListViewCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_LIST_VIEW_SUCCESS;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.logic.UiManager;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.UserOutput;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "//@@author Kyzure"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * Represents a Command which adds an EventSource to the Model."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "public class ListViewCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private final UiManager uiManager;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    ListViewCommand(ListViewCommandBuilder builder) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        uiManager \u003d Objects.requireNonNull(builder.getUiManager());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public static CommandBuilder newBuilder(UiManager uiManager) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return new ListViewCommandBuilder(uiManager).init();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public UserOutput execute() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        uiManager.viewList();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return new UserOutput(String.format(MESSAGE_LIST_VIEW_SUCCESS));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 31
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/ListViewCommandBuilder.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.logic.UiManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.logic.commands.arguments.list.OptionalArgumentList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.logic.commands.arguments.list.RequiredArgumentList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "//@@author Kyzure"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * Represents a CommandBuilder responsible for creating {@link ListViewCommand}."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "class ListViewCommandBuilder extends CommandBuilder {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private UiManager uiManager;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    ListViewCommandBuilder(UiManager uiManager) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.uiManager \u003d uiManager;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    protected RequiredArgumentList defineCommandArguments() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    protected Map\u003cString, OptionalArgumentList\u003e defineCommandOptions() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    UiManager getUiManager() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return uiManager;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    protected Command commandBuild() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return new ListViewCommand(this);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 39
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/LogViewCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_LOG_VIEW_SUCCESS;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.logic.UiManager;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.UserOutput;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "//@@author Kyzure"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * Represents a Command which adds an EventSource to the Model."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "public class LogViewCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private final UiManager uiManager;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    LogViewCommand(LogViewCommandBuilder builder) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        uiManager \u003d Objects.requireNonNull(builder.getUiManager());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public static CommandBuilder newBuilder(UiManager uiManager) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return new LogViewCommandBuilder(uiManager).init();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public UserOutput execute() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        uiManager.viewLog();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return new UserOutput(String.format(MESSAGE_LOG_VIEW_SUCCESS));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 31
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/LogViewCommandBuilder.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.logic.UiManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.logic.commands.arguments.list.OptionalArgumentList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.logic.commands.arguments.list.RequiredArgumentList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "//@@author Kyzure"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * Represents a CommandBuilder responsible for creating {@link LogViewCommand}."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "class LogViewCommandBuilder extends CommandBuilder {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private UiManager uiManager;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    LogViewCommandBuilder(UiManager uiManager) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.uiManager \u003d uiManager;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    protected RequiredArgumentList defineCommandArguments() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    protected Map\u003cString, OptionalArgumentList\u003e defineCommandOptions() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    UiManager getUiManager() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return uiManager;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    protected Command commandBuild() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return new LogViewCommand(this);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 39
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/MonthViewCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_MONTH_VIEW_SUCCESS;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.logic.UiManager;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.CalendarMonthArgument;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.list.ArgumentList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.list.OptionalArgumentList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.list.RequiredArgumentList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.CalendarDate;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.UserOutput;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "//@@author Kyzure"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * Represents a Command which adds an EventSource to the Model."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "public class MonthViewCommand extends Command {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private final CalendarDate calendarDate;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private final UiManager uiManager;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private MonthViewCommand(Builder builder) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        calendarDate \u003d Objects.requireNonNull(builder.calendarDate);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        uiManager \u003d Objects.requireNonNull(builder.uiManager);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public static CommandBuilder newBuilder(UiManager uiManager) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return new Builder(uiManager).init();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public UserOutput execute() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        uiManager.viewMonth(calendarDate);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return new UserOutput(String.format(MESSAGE_MONTH_VIEW_SUCCESS, calendarDate));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Represents a CommandBuilder responsible for creating {@link AddEventCommand}."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private static class Builder extends CommandBuilder {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        private static final String ARGUMENT_MONTH \u003d \"MONTH_YEAR\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        private CalendarDate calendarDate;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        private UiManager uiManager;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        private Builder(UiManager uiManager) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            this.uiManager \u003d uiManager;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        protected RequiredArgumentList defineCommandArguments() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            return ArgumentList.required()"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                .addArgument(CalendarMonthArgument.newBuilder(ARGUMENT_MONTH, o -\u003e this.calendarDate \u003d o));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        protected Map\u003cString, OptionalArgumentList\u003e defineCommandOptions() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        protected Command commandBuild() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            return new MonthViewCommand(this);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 65,
      "WeomuCat": 5
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/NotificationOffCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_NOTIFICATION_OFF;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.logic.NotificationManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.ui.UserOutput;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": " * Represents a Command that switches notifications off."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "public class NotificationOffCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    private final NotificationManager manager;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    NotificationOffCommand (NotificationOffCommandBuilder builder) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        this.manager \u003d builder.getManager();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public static CommandBuilder newBuilder(NotificationManager manager) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        return new NotificationOffCommandBuilder(manager).init();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public UserOutput execute() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        manager.switchOffNotifications();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        return new UserOutput(MESSAGE_NOTIFICATION_OFF);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 28
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/NotificationOffCommandBuilder.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.logic.NotificationManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.list.OptionalArgumentList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.list.RequiredArgumentList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": " * Represents a CommandBuilder responsible for creating {@link NotificationOffCommand}."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "public class NotificationOffCommandBuilder extends CommandBuilder {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    private final NotificationManager manager;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    NotificationOffCommandBuilder(NotificationManager manager) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        this.manager \u003d manager;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    NotificationManager getManager() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        return manager;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    protected RequiredArgumentList defineCommandArguments() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    protected Map\u003cString, OptionalArgumentList\u003e defineCommandOptions() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    protected Command commandBuild() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        return new NotificationOffCommand(this);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 30,
      "WeomuCat": 7
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/NotificationOnCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_NOTIFICATION_ON;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.logic.NotificationManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.ui.UserOutput;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": " * Represents a command that switches notifications on."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "public class NotificationOnCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    private final NotificationManager manager;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    NotificationOnCommand (NotificationOnCommandBuilder builder) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        this.manager \u003d builder.getManager();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public static CommandBuilder newBuilder(NotificationManager manager) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        return new NotificationOnCommandBuilder(manager).init();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public UserOutput execute() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        manager.switchOnNotifications();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        return new UserOutput(MESSAGE_NOTIFICATION_ON);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 28
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/NotificationOnCommandBuilder.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.logic.NotificationManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.list.OptionalArgumentList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.list.RequiredArgumentList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": " * Represents a CommandBuilder responsible for creating {@link NotificationOnCommand}."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "public class NotificationOnCommandBuilder extends CommandBuilder {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    private final NotificationManager manager;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    NotificationOnCommandBuilder(NotificationManager manager) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        this.manager \u003d manager;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    NotificationManager getManager() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        return manager;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    protected RequiredArgumentList defineCommandArguments() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    protected Map\u003cString, OptionalArgumentList\u003e defineCommandOptions() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    protected Command commandBuild() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        return new NotificationOnCommand(this);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 30,
      "WeomuCat": 7
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/RedoCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_REDO_SUCCESS;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.UndoRedoManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import seedu.address.ui.UserOutput;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "//@@author bruceskellator"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": " * Represents a Command which redoes the previously undone command."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "public class RedoCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    private final UndoRedoManager manager;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    RedoCommand(RedoCommandBuilder builder) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        this.manager \u003d builder.getManager();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public static CommandBuilder newBuilder(UndoRedoManager manager) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        return new RedoCommandBuilder(manager).init();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public UserOutput execute() throws CommandException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        manager.redo();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        return new UserOutput(MESSAGE_REDO_SUCCESS);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bruceskellator": 29,
      "WeomuCat": 2
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/RedoCommandBuilder.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.UndoRedoManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.list.OptionalArgumentList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.list.RequiredArgumentList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "//@@author bruceskellator"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": " * Represents a CommandBuilder responsible for creating {@link RedoCommand}."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "class RedoCommandBuilder extends CommandBuilder {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    private final UndoRedoManager manager;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    RedoCommandBuilder(UndoRedoManager manager) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        this.manager \u003d manager;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    protected RequiredArgumentList defineCommandArguments() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    protected Map\u003cString, OptionalArgumentList\u003e defineCommandOptions() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    UndoRedoManager getManager() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        return manager;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    protected Command commandBuild() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        return new RedoCommand(this);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bruceskellator": 37,
      "WeomuCat": 3
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/UndoCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_UNDO_SUCCESS;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.UndoRedoManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import seedu.address.ui.UserOutput;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "//@@author bruceskellator"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": " * Represents a Command which undoes the previous command."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "public class UndoCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    private final UndoRedoManager manager;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    UndoCommand(UndoCommandBuilder builder) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        this.manager \u003d builder.getManager();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public static CommandBuilder newBuilder(UndoRedoManager manager) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        return new UndoCommandBuilder(manager).init();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public UserOutput execute() throws CommandException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        manager.undo();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        return new UserOutput(MESSAGE_UNDO_SUCCESS);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bruceskellator": 29,
      "WeomuCat": 2
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/UndoCommandBuilder.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.UndoRedoManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.list.OptionalArgumentList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.list.RequiredArgumentList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "//@@author bruceskellator"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": " * Represents a CommandBuilder responsible for creating {@link UndoCommand}."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "class UndoCommandBuilder extends CommandBuilder {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    private final UndoRedoManager manager;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    UndoCommandBuilder(UndoRedoManager manager) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        this.manager \u003d manager;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    protected RequiredArgumentList defineCommandArguments() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    protected Map\u003cString, OptionalArgumentList\u003e defineCommandOptions() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    UndoRedoManager getManager() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        return manager;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    protected Command commandBuild() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        return new UndoCommand(this);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bruceskellator": 37,
      "WeomuCat": 3
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/WeekViewCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_WEEK_VIEW_SUCCESS;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.logic.UiManager;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.CalendarDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.UserOutput;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "//@@author Kyzure"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * Represents a Command which adds an EventSource to the Model."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "public class WeekViewCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private final CalendarDate calendarDate;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private final UiManager uiManager;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    WeekViewCommand(WeekViewCommandBuilder builder) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        calendarDate \u003d Objects.requireNonNull(builder.getStart());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        uiManager \u003d Objects.requireNonNull(builder.getUiManager());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public static CommandBuilder newBuilder(UiManager uiManager) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return new WeekViewCommandBuilder(uiManager).init();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public UserOutput execute() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        uiManager.viewWeek(calendarDate);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return new UserOutput(String.format(MESSAGE_WEEK_VIEW_SUCCESS, calendarDate.toString()));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 34
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/WeekViewCommandBuilder.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.logic.UiManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.CalendarDayArgument;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.logic.commands.arguments.list.ArgumentList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.logic.commands.arguments.list.OptionalArgumentList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.logic.commands.arguments.list.RequiredArgumentList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.CalendarDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "//@@author Kyzure"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * Represents a CommandBuilder responsible for creating {@link AddEventCommand}."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "class WeekViewCommandBuilder extends CommandBuilder {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private static final String ARGUMENT_START_DATE_TIME \u003d \"DATE\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private CalendarDate start;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private UiManager uiManager;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    WeekViewCommandBuilder(UiManager uiManager) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.uiManager \u003d uiManager;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    protected RequiredArgumentList defineCommandArguments() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return ArgumentList.required()"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                .addArgument(CalendarDayArgument.newBuilder(ARGUMENT_START_DATE_TIME, o -\u003e this.start \u003d o));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    protected Map\u003cString, OptionalArgumentList\u003e defineCommandOptions() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    UiManager getUiManager() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return uiManager;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    CalendarDate getStart() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return this.start;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    protected Command commandBuild() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return new WeekViewCommand(this);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 49,
      "WeomuCat": 1
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/arguments/Argument.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.commands.arguments;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_REQUIRED_COMMAND_ARGUMENT;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.function.Consumer;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.exceptions.ArgumentException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents an argument in an Option."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * It always has a defined type, and user input entered into this argument will be parsed to the defined type."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * @param \u003cT\u003e the type of this argument"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public abstract class Argument\u003cT\u003e {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private T value;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private String userInput;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final Consumer\u003cT\u003e promise;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    Argument(ArgumentBuilder\u003cT\u003e builder) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.description \u003d Objects.requireNonNull(builder.getDescription());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.promise \u003d builder.getPromise();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Accepts user input, cannot be null."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @param userInput the user input"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @return this instance"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public Argument\u003cT\u003e accept(String userInput) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.userInput \u003d Objects.requireNonNull(userInput);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Builds the argument value, checks if user input is valid and parses it into the defined type."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Passes the built value to a user defined promise."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @param required if the argument is required to have a value"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @return the built value"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @throws ArgumentException if the argument is required but user input is null"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @throws ParseException if the user input is invalid"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public T build(boolean required) throws ArgumentException, ParseException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        if (this.userInput \u003d\u003d null) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            if (required) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                throw new ArgumentException(String.format(MESSAGE_REQUIRED_COMMAND_ARGUMENT, this.description));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            this.value \u003d this.parse(userInput);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        promise.accept(this.value);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this.value;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    abstract T parse(String userInput) throws ParseException;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 60
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/arguments/ArgumentBuilder.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.commands.arguments;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.function.Consumer;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents an object that builds arguments."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * @param \u003cT\u003e the type of the argument to build"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public abstract class ArgumentBuilder\u003cT\u003e {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final Consumer\u003cT\u003e promise;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    ArgumentBuilder(String description, Consumer\u003cT\u003e promise) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.promise \u003d promise;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Builds the argument."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @return the built argument"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public Argument\u003cT\u003e build() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return argumentBuild();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    abstract Argument\u003cT\u003e argumentBuild();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    String getDescription() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    Consumer\u003cT\u003e getPromise() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return promise;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 36
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/arguments/CalendarDayArgument.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.commands.arguments;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.function.Consumer;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.CalendarDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents a command argument of type CalendarDay."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class CalendarDayArgument extends Argument\u003cCalendarDate\u003e {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private CalendarDayArgument(ArgumentBuilder\u003cCalendarDate\u003e builder) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        super(builder);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static Builder newBuilder(String description, Consumer\u003cCalendarDate\u003e promise) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return new Builder(description, promise);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    CalendarDate parse(String userInput) throws ParseException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return CalendarDate.fromDayMonthYearString(userInput);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Represents an ArgumentBuilder responsible for building {@link CalendarDayArgument}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static class Builder extends ArgumentBuilder\u003cCalendarDate\u003e {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        private Builder(String description, Consumer\u003cCalendarDate\u003e promise) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            super(description, promise);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        Argument\u003cCalendarDate\u003e argumentBuild() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            return new CalendarDayArgument(this);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 40
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/arguments/CalendarMonthArgument.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.commands.arguments;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.function.Consumer;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.CalendarDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents a command argument of type CalendarMonth."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class CalendarMonthArgument extends Argument\u003cCalendarDate\u003e {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private CalendarMonthArgument(ArgumentBuilder\u003cCalendarDate\u003e builder) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        super(builder);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static Builder newBuilder(String description, Consumer\u003cCalendarDate\u003e promise) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return new Builder(description, promise);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    CalendarDate parse(String userInput) throws ParseException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return CalendarDate.fromMonthYearString(userInput);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Represents an ArgumentBuilder responsible for building {@link CalendarMonthArgument}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static class Builder extends ArgumentBuilder\u003cCalendarDate\u003e {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        private Builder(String description, Consumer\u003cCalendarDate\u003e promise) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            super(description, promise);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        Argument\u003cCalendarDate\u003e argumentBuild() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            return new CalendarMonthArgument(this);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 40
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/arguments/DateTimeArgument.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.commands.arguments;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.function.Consumer;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.model.DateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents a command argument of type DateTime."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class DateTimeArgument extends Argument\u003cDateTime\u003e {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    DateTimeArgument(ArgumentBuilder\u003cDateTime\u003e builder) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        super(builder);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static DateTimeArgumentBuilder newBuilder(String description, Consumer\u003cDateTime\u003e promise) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return new DateTimeArgumentBuilder(description, promise);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    DateTime parse(String userInput) throws ParseException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return DateTime.fromUserString(userInput);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 1,
      "WeomuCat": 24
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/arguments/DateTimeArgumentBuilder.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.commands.arguments;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.function.Consumer;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.model.DateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents an ArgumentBuilder responsible for building {@link DateTimeArgument}"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class DateTimeArgumentBuilder extends ArgumentBuilder\u003cDateTime\u003e {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    DateTimeArgumentBuilder(String description, Consumer\u003cDateTime\u003e promise) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        super(description, promise);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    Argument\u003cDateTime\u003e argumentBuild() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return new DateTimeArgument(this);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 1,
      "WeomuCat": 19
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/arguments/IndexVariableArguments.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.commands.arguments;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.function.Consumer;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.parser.IndexParser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents a variable argument of Indexes."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class IndexVariableArguments extends VariableArguments\u003cInteger\u003e {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    IndexVariableArguments(VariableArgumentsBuilder\u003cInteger\u003e builder) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        super(builder);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static IndexVariableArgumentsBuilder newBuilder(String description, Consumer\u003cList\u003cInteger\u003e\u003e promise) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return new IndexVariableArgumentsBuilder(description, promise);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    Integer parse(String userInput) throws ParseException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return new IndexParser().parse(userInput);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 26
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/arguments/IndexVariableArgumentsBuilder.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.commands.arguments;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.function.Consumer;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents a VariableArgumentsBuilder responsible for building {@link IndexVariableArguments}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class IndexVariableArgumentsBuilder extends VariableArgumentsBuilder\u003cInteger\u003e {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    IndexVariableArgumentsBuilder(String description, Consumer\u003cList\u003cInteger\u003e\u003e promise) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        super(description, promise);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    VariableArguments\u003cInteger\u003e argumentBuild() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return new IndexVariableArguments(this);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 19
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/arguments/StringArgument.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.commands.arguments;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.function.Consumer;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents a command argument of type String."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class StringArgument extends Argument\u003cString\u003e {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    StringArgument(ArgumentBuilder\u003cString\u003e builder) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        super(builder);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static StringArgumentBuilder newBuilder(String description, Consumer\u003cString\u003e promise) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return new StringArgumentBuilder(description, promise);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    String parse(String userInput) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return userInput;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 22
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/arguments/StringArgumentBuilder.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.commands.arguments;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.function.Consumer;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents an ArgumentBuilder responsible for building {@link StringArgument}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class StringArgumentBuilder extends ArgumentBuilder\u003cString\u003e {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    StringArgumentBuilder(String description, Consumer\u003cString\u003e promise) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        super(description, promise);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    Argument\u003cString\u003e argumentBuild() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return new StringArgument(this);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 18
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/arguments/StringVariableArguments.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.commands.arguments;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.function.Consumer;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents a variable argument of Strings."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class StringVariableArguments extends VariableArguments\u003cString\u003e {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    StringVariableArguments(VariableArgumentsBuilder\u003cString\u003e builder) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        super(builder);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static StringVariableArgumentsBuilder newBuilder(String description, Consumer\u003cList\u003cString\u003e\u003e promise) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return new StringVariableArgumentsBuilder(description, promise);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    String parse(String userInput) throws ParseException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return userInput;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 25
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/arguments/StringVariableArgumentsBuilder.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.commands.arguments;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.function.Consumer;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents a ArgumentBuilder responsible for building {@link StringVariableArguments}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class StringVariableArgumentsBuilder extends VariableArgumentsBuilder\u003cString\u003e {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    StringVariableArgumentsBuilder(String description, Consumer\u003cList\u003cString\u003e\u003e promise) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        super(description, promise);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    VariableArguments\u003cString\u003e argumentBuild() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return new StringVariableArguments(this);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 19
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/arguments/VariableArguments.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.commands.arguments;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.function.Consumer;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents a variable argument of a Command."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * A variable argument can take in 0..* arguments, and it always has a defined argument type."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * User input entered into this argument will be parsed to the defined argument type."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * @param \u003cT\u003e the type of this variable argument"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public abstract class VariableArguments\u003cT\u003e {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final List\u003cT\u003e values;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final List\u003cString\u003e userInput;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final Consumer\u003cList\u003cT\u003e\u003e promise;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    VariableArguments(VariableArgumentsBuilder\u003cT\u003e builder) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.values \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.userInput \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.description \u003d builder.getDescription();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.promise \u003d builder.getPromise();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Accepts user input."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @param userInput the user input"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @return this instance"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public VariableArguments\u003cT\u003e accept(String userInput) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        Objects.requireNonNull(userInput);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.userInput.add(userInput);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Builds the variable arguments by parsing user input from accept()."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Passes the built values to a user defined promise."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @return the built variable arguments values"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @throws ParseException if the user input is invalid"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public List\u003cT\u003e build() throws ParseException {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        for (String input : this.userInput) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            this.values.add(this.parse(input));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.promise.accept(this.values);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this.values;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    abstract T parse(String userInput) throws ParseException;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 57
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/arguments/VariableArgumentsBuilder.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.commands.arguments;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.function.Consumer;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents an object that builds variable arguments."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * @param \u003cT\u003e the type of variable arguments to build"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public abstract class VariableArgumentsBuilder\u003cT\u003e {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final Consumer\u003cList\u003cT\u003e\u003e promise;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    VariableArgumentsBuilder(String description, Consumer\u003cList\u003cT\u003e\u003e promise) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.promise \u003d promise;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Builds the variable arguments."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @return the built variable arguments"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public VariableArguments\u003cT\u003e build() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return argumentBuild();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    abstract VariableArguments\u003cT\u003e argumentBuild();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    String getDescription() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    Consumer\u003cList\u003cT\u003e\u003e getPromise() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return promise;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 37
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/arguments/list/ArgumentList.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.commands.arguments.list;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.Argument;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.VariableArguments;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.exceptions.ArgumentException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents a list of arguments in a Command."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * It can contain 0..* arguments, and can contain 0..1 variable arguments."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class ArgumentList {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    // Determines whether or not the arguments in this list is required."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private boolean required;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private int argumentIndex;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final List\u003cArgument\u003e arguments;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final VariableArguments variableArguments;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    ArgumentList(ArgumentListBuilder builder) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.required \u003d builder.isRequired();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.arguments \u003d builder.getArguments();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.variableArguments \u003d builder.getVariableArguments();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static OptionalArgumentList optional() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return new OptionalArgumentList();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static RequiredArgumentList required() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return new RequiredArgumentList();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Accepts user input and passes it to the next argument for parsing."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @param argument the user input"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public void acceptArgument(String argument) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        if (this.argumentIndex \u003c this.arguments.size()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            this.arguments.get(this.argumentIndex).accept(argument);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            this.argumentIndex++;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        } else if (this.variableArguments !\u003d null) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            this.variableArguments.accept(argument);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Builds all arguments."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @throws ArgumentException if any argument is required but null"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @throws ParseException if any user input is invalid"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public void build() throws ArgumentException, ParseException {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        for (Argument argument : this.arguments) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            argument.build(this.required);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        if (this.variableArguments !\u003d null) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            this.variableArguments.build();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public void setRequired() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.required \u003d true;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 68
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/arguments/list/ArgumentListBuilder.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.commands.arguments.list;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.Argument;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.ArgumentBuilder;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.VariableArguments;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.VariableArgumentsBuilder;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents an object that builds {@link ArgumentList}."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public abstract class ArgumentListBuilder {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    // Determines whether or not the arguments in this list is required."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final boolean required;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final List\u003cArgument\u003e arguments;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private VariableArguments variableArguments;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    ArgumentListBuilder(boolean required) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.required \u003d required;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.arguments \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Adds an argument to this option."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @param argument the argument"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @return this instance"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public ArgumentListBuilder addArgument(ArgumentBuilder argument) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.arguments.add(argument.build());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public ArgumentListBuilder setVariableArguments(VariableArgumentsBuilder variableArguments) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.variableArguments \u003d variableArguments.build();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    boolean isRequired() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return required;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    List\u003cArgument\u003e getArguments() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return arguments;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    VariableArguments getVariableArguments() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return variableArguments;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public ArgumentList build() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return new ArgumentList(this);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 56
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/arguments/list/OptionalArgumentList.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.commands.arguments.list;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.ArgumentBuilder;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.VariableArgumentsBuilder;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * An OptionalArgumentList is a builder that creates an {@link ArgumentList}."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * It\u0027s arguments are always optional."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class OptionalArgumentList extends ArgumentListBuilder {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    OptionalArgumentList() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        super(false);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public OptionalArgumentList addArgument(ArgumentBuilder argument) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        super.addArgument(argument);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public OptionalArgumentList setVariableArguments(VariableArgumentsBuilder variableArguments) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        super.setVariableArguments(variableArguments);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 27
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/arguments/list/RequiredArgumentList.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.commands.arguments.list;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.ArgumentBuilder;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.VariableArgumentsBuilder;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * A RequiredArgumentList is a builder that creates an {@link ArgumentList}."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * It\u0027s arguments are always required."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class RequiredArgumentList extends ArgumentListBuilder {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    RequiredArgumentList() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        super(true);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public RequiredArgumentList addArgument(ArgumentBuilder argument) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        super.addArgument(argument);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public RequiredArgumentList setVariableArguments(VariableArgumentsBuilder variableArguments) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        super.setVariableArguments(variableArguments);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 26
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/exceptions/ArgumentException.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.commands.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents an exception thrown when creating a command argument."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class ArgumentException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public ArgumentException(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 10
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/exceptions/CommandException.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.commands.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents an error which occurs during execution of a Command."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class CommandException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    public CommandException(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 1,
      "-": 9
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/listeners/CommandInputListener.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.commands.listeners;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents a listener that will be notified with new command input."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Command input flows from user interface -\u003e business logic."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public interface CommandInputListener {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void onCommandInput(String input);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 10
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/composers/InstantComposer.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.composers;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static seedu.address.MainApp.TIME_ZONE;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static seedu.address.model.DateTime.ICS_DATE_TIME_PATTERN;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static seedu.address.model.DateTime.USER_DATE_TIME_PATTERN;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.time.Instant;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.time.ZoneOffset;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents a Composer that can compose an {@link Instant} into a String."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class InstantComposer {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final DateTimeFormatter USER_COMPOSER \u003d DateTimeFormatter.ofPattern(USER_DATE_TIME_PATTERN)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        .withZone(TIME_ZONE);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final DateTimeFormatter ICS_COMPOSER \u003d DateTimeFormatter.ofPattern(ICS_DATE_TIME_PATTERN)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        .withZone(ZoneOffset.UTC);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public String toUserString(Instant dateTime) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return USER_COMPOSER.format(dateTime);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public String toIcsString(Instant dateTime) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return ICS_COMPOSER.format(dateTime);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 29
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/notification/NotificationChecker.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "package seedu.address.logic.notification;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.model.DateTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.model.events.EventSource;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.tasks.TaskSource;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.ui.systemtray.PopupNotification;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": " * A class checks through lists of Events and Tasks to generate notifications to be posted"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "public class NotificationChecker {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    private static final Logger logger \u003d LogsCenter.getLogger(NotificationCheckingThread.class);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private ModelManager model;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public NotificationChecker(ModelManager model) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        requireAllNonNull(model);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.model \u003d model;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public ArrayList\u003cPopupNotification\u003e getListOfPopupNotifications() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        ArrayList\u003cPopupNotification\u003e returnValue \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        logger.info(\"Checking for Event notifications.\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        for (EventSource eventSource : model.getEvents()) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            // Checks if a particular instance EventSource should have its notification posted now."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            boolean notify;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            if (eventSource.getRemindDateTime() \u003d\u003d null) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                notify \u003d eventSource.getStartDateTime().equals(DateTime.now());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                notify \u003d eventSource.getRemindDateTime().equals(DateTime.now());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            if (notify) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                String name \u003d eventSource.getDescription();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                DateTime eventDateTime \u003d eventSource.getStartDateTime();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                returnValue.add(new PopupNotification(name, eventDateTime.toString()));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        logger.info(\"Checking for Task notifications.\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        for (TaskSource taskSource : model.getTasks()) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            DateTime taskDueDate \u003d taskSource.getDueDate();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            if (taskDueDate !\u003d null \u0026\u0026 taskDueDate.equals(DateTime.now())) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                String name \u003d taskSource.getDescription();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                returnValue.add(new PopupNotification(name, taskDueDate.toString()));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        return returnValue;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 36,
      "WeomuCat": 24
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/notification/NotificationCheckingThread.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "package seedu.address.logic.notification;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import java.time.Instant;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import java.time.temporal.ChronoUnit;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.ui.systemtray.PopupListener;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.ui.systemtray.PopupNotification;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": " * A thread that handles checking for notifications and notifying the appropriate listeners"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "public class NotificationCheckingThread extends Thread {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    private static final Logger logger \u003d LogsCenter.getLogger(NotificationCheckingThread.class);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    private static final long millisecondsInAMinute \u003d 60000;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    private boolean notificationsOn \u003d true;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    private ArrayList\u003cPopupListener\u003e popupListeners \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private NotificationChecker notificationChecker;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public NotificationCheckingThread(NotificationChecker notificationChecker) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.notificationChecker \u003d notificationChecker;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public void addPopupListener(PopupListener popupListener) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        popupListeners.add(popupListener);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public void switchOffNotifications() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        notificationsOn \u003d false;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public void switchOnNotifications() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        notificationsOn \u003d true;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public boolean getNotificationsOnStatus() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        return notificationsOn;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            notificationCheckingLoop();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        } catch (InterruptedException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            logger.info(\"NotificationManagingThread successfully interrupted.\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     * The main loop of the program."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     * @throws InterruptedException If this thread is interrupted."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    private void notificationCheckingLoop() throws InterruptedException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            if (notificationsOn) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                checkAndPostNotifications();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                Thread.sleep(findMillisecondsToNextMinute());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     * Finds the notifications that require need to be posted, and notifies the relevant listeners."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    private void checkAndPostNotifications() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        ArrayList\u003cPopupNotification\u003e notifications \u003d notificationChecker.getListOfPopupNotifications();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        for (PopupNotification pn : notifications) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            for (PopupListener popupListener : popupListeners) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                popupListener.notify(pn);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     * Finds the number of milliseconds until the next minute. This is to account for the user not opening the program"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     * exactly on the minute."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     * @return the number of milliseconds until the next minute."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    private static long findMillisecondsToNextMinute() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        Instant currentInstant \u003d Instant.now();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        Instant nextMinute \u003d Instant.now().plusMillis(millisecondsInAMinute).truncatedTo(ChronoUnit.MINUTES);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        return currentInstant.until(nextMinute, ChronoUnit.MILLIS);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 88,
      "WeomuCat": 3
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/CalendarDayParser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_CALENDAR_DAY;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static seedu.address.model.CalendarDate.CALENDAR_DAY_PATTERN;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.time.format.ResolverStyle;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.CalendarDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "//@@author Kyzure"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * Represents a {@link Parser} that can parse user input into a {@link CalendarDate} object."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "public class CalendarDayParser implements Parser\u003cCalendarDate\u003e {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private static final DateTimeFormatter PARSER \u003d DateTimeFormatter.ofPattern(CALENDAR_DAY_PATTERN)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        .withResolverStyle(ResolverStyle.STRICT);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public CalendarDate parse(String userInput) throws ParseException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            return new CalendarDate(LocalDate.parse(userInput, PARSER));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            throw new ParseException(MESSAGE_INVALID_CALENDAR_DAY);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 18,
      "WeomuCat": 13
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/CalendarMonthParser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_CALENDAR_MONTH;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static seedu.address.model.CalendarDate.USER_CALENDAR_MONTH_PATTERN;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.time.YearMonth;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.time.format.ResolverStyle;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.CalendarDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "//@@author Kyzure"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * Represents a {@link Parser} that can parse user input into a {@link CalendarDate} object."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "public class CalendarMonthParser implements Parser\u003cCalendarDate\u003e {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private static final DateTimeFormatter PARSER \u003d DateTimeFormatter.ofPattern(USER_CALENDAR_MONTH_PATTERN)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        .withResolverStyle(ResolverStyle.STRICT);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public CalendarDate parse(String userInput) throws ParseException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            return new CalendarDate(YearMonth.parse(userInput, PARSER).atDay(1));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            throw new ParseException(MESSAGE_INVALID_CALENDAR_MONTH);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 18,
      "WeomuCat": 13
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/CommandKeywordParser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.function.Supplier;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.CommandBuilder;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents a parser that can derive command keywords, and return the appropriate {@link CommandBuilder}."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class CommandKeywordParser implements Parser\u003cCommandBuilder\u003e {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final HashMap\u003cString, Supplier\u003cCommandBuilder\u003e\u003e commandKeywordMap;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public CommandKeywordParser() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.commandKeywordMap \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Adds a command keyword to this parser. The command provided cannot be null."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @param keyword the keyword"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @param command the command the keyword creates"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public void addCommand(String keyword, Supplier\u003cCommandBuilder\u003e command) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        Objects.requireNonNull(command);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        Objects.requireNonNull(command.get());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.commandKeywordMap.put(keyword, command);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public CommandBuilder parse(String userInput) throws ParseException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        Objects.requireNonNull(userInput);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        if (!commandKeywordMap.containsKey(userInput)) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return commandKeywordMap.get(userInput).get();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 42
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/CommandParser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_PARSER;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.LinkedHashMap;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.CommandBuilder;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.exceptions.ArgumentException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents a parser that can parse user input into a command."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Example user input: command_keyword [argument] [arguments...] [--option] [option_argument]"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class CommandParser implements Parser\u003cCommand\u003e {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final CommandKeywordParser keywordParser;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private CommandBuilder commandBuilder;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public CommandParser(CommandKeywordParser keywordParser) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.keywordParser \u003d keywordParser;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public Command parse(String userInput) throws ParseException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        State state1 \u003d new State();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        State state2 \u003d new State();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        State state3 \u003d new State();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        State state4 \u003d new State();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        state1.addPattern(\"\\\\s*\", matches -\u003e state2);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        state2.addPattern(\"[^\\\\s]+\", matches -\u003e {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            this.commandBuilder \u003d this.keywordParser.parse(matches.get(0));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            return state3;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        });"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        state3.addPattern(\"\\\\s+\", matches -\u003e state4);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        // ASCII quotation marks"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        state4.addPattern(\"\\\"(.*?)\\\"(?\u003d\\\\s|$)\", matches -\u003e {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            this.commandBuilder.acceptPhrase(matches.get(1));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            return state3;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        });"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        state4.addPattern(\"\u0027(.*?)\u0027(?\u003d\\\\s|$)\", matches -\u003e {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            this.commandBuilder.acceptPhrase(matches.get(1));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            return state3;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        });"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        // Unicode: English quotation marks"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        state4.addPattern(\"“(.*?)”(?\u003d\\\\s|$)\", matches -\u003e {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            this.commandBuilder.acceptPhrase(matches.get(1));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            return state3;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        });"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        state4.addPattern(\"‘(.*?)’(?\u003d\\\\s|$)\", matches -\u003e {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            this.commandBuilder.acceptPhrase(matches.get(1));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            return state3;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        });"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        state4.addPattern(\"[^\\\\s]+\", matches -\u003e {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            this.commandBuilder.acceptPhrase(matches.get(0));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            return state3;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        });"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        HashSet\u003cState\u003e exitStates \u003d new HashSet\u003c\u003e();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        exitStates.add(state3);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        exitStates.add(state4);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        State state \u003d state1;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        while (state !\u003d null) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            // No more user input."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            if (userInput.equals(\"\")) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                // Exit if current state is an exitState."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                if (exitStates.contains(state)) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    throw new ParseException(MESSAGE_INVALID_COMMAND_FORMAT);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            StateResult result \u003d state.apply(userInput);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            state \u003d result.next;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            userInput \u003d userInput.substring(result.matchLength);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            return this.commandBuilder.build();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        } catch (ArgumentException e) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            throw new ParseException(e.getMessage());"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Represents a function that State uses."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Returns the next state to transition to."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private interface StateFunction {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        State apply(List\u003cString\u003e matches) throws ParseException;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Represents one state of a finite state machine for this parser."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private class State {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        private Map\u003cPattern, StateFunction\u003e patterns;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        private State() {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            this.patterns \u003d new LinkedHashMap\u003c\u003e();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        private void addPattern(String pattern, StateFunction function) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            patterns.put(Pattern.compile(\"^(\" + pattern + \")\"), function);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "         * Gives input to this state and get the next state to transition to."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "         * @param userInput the user input"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "         * @return a StateResult"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "         * @throws ParseException if an exception is thrown in StateFunction for this pattern"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "         */"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        private StateResult apply(String userInput) throws ParseException {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            for (Map.Entry\u003cPattern, StateFunction\u003e entry : this.patterns.entrySet()) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                Pattern pattern \u003d entry.getKey();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                StateFunction function \u003d entry.getValue();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                Matcher matcher \u003d pattern.matcher(userInput);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                if (matcher.find()) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    List\u003cString\u003e matches \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    // Add group matches"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    for (int i \u003d 1; i \u003c\u003d matcher.groupCount(); i++) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                        matches.add(matcher.group(i));"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    State next \u003d function.apply(matches);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    int matchLength \u003d matches.get(0).length();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    return new StateResult(next, matchLength);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            // Should not reach this. If reached, the state machine is configured wrongly."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            throw new ParseException(MESSAGE_INVALID_COMMAND_PARSER);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Represents the result of State.apply()."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private class StateResult {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        private State next;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        private int matchLength;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        private StateResult(State next, int matchLength) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            this.next \u003d next;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            this.matchLength \u003d matchLength;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 162
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/IcsDateTimeParser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_ICS_DATE_TIME;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static seedu.address.model.DateTime.ICS_DATE_TIME_PATTERN;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.time.Instant;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.time.ZoneOffset;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.time.format.ResolverStyle;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.model.DateTime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents a {@link Parser} that can parse ics dates into a {@link DateTime} object."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class IcsDateTimeParser implements Parser\u003cDateTime\u003e {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final DateTimeFormatter PARSER \u003d DateTimeFormatter.ofPattern(ICS_DATE_TIME_PATTERN)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        .withZone(ZoneOffset.UTC)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        .withResolverStyle(ResolverStyle.STRICT);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public DateTime parse(String userInput) throws ParseException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            Instant instant \u003d Instant.from(PARSER.parse(userInput));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            return DateTime.newBuilder(instant).build();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            throw new ParseException(MESSAGE_INVALID_ICS_DATE_TIME);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 1,
      "WeomuCat": 32
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/IndexParser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_INDEX;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents a parser that can parse user input into an Index (Integer)."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Between [0, 2^31)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class IndexParser implements Parser\u003cInteger\u003e {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public Integer parse(String userInput) throws ParseException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        int i;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            i \u003d Integer.parseInt(userInput);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            throw new ParseException(MESSAGE_INVALID_INDEX);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        if (i \u003c 0) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            throw new ParseException(MESSAGE_INVALID_INDEX);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return i;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 28
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/Parser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents a Parser that is able to parse user input into an object of type {@code T}."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public interface Parser\u003cT\u003e {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Parses {@code userInput} into an object of type {@code T} and returns it."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws ParseException if {@code userInput} does not conform the expected format"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    T parse(String userInput) throws ParseException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 3,
      "-": 12
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/UserDateTimeParser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static seedu.address.MainApp.TIME_ZONE;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_DATE_TIME;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import static seedu.address.model.DateTime.USER_DATE_TIME_PATTERN;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.time.Instant;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.time.format.ResolverStyle;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.model.DateTime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents a {@link Parser} that can parse user input dates into a {@link DateTime} object."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class UserDateTimeParser implements Parser\u003cDateTime\u003e {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final DateTimeFormatter PARSER \u003d DateTimeFormatter.ofPattern(USER_DATE_TIME_PATTERN)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        .withZone(TIME_ZONE)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        .withResolverStyle(ResolverStyle.STRICT);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public DateTime parse(String userInput) throws ParseException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            Instant instant \u003d Instant.from(PARSER.parse(userInput));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            return DateTime.newBuilder(instant).build();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            throw new ParseException(MESSAGE_INVALID_DATE_TIME);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 2,
      "WeomuCat": 31
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/exceptions/ParseException.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.parser.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents a parse error encountered by a parser."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class ParseException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    public ParseException(String message) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 1,
      "-": 10
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/storage/exceptions/StorageIoException.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.storage.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Signals that an IOException occurred in Storage."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class StorageIoException extends RuntimeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 7
    }
  },
  {
    "path": "src/main/java/seedu/address/model/CalendarDate.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package seedu.address.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.text.DateFormatSymbols;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.time.YearMonth;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.parser.CalendarDayParser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.parser.CalendarMonthParser;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "//@@author Kyzure"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * Represents the date without a time, mainly for the UI system."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "public class CalendarDate {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public static final String CALENDAR_DAY_PATTERN \u003d \"dd/MM/uuuu\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public static final String USER_CALENDAR_MONTH_PATTERN \u003d \"MM/uuuu\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private static final CalendarDayParser CALENDAR_DAY_PARSER \u003d new CalendarDayParser();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private static final CalendarMonthParser CALENDAR_MONTH_PARSER \u003d new CalendarMonthParser();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private final LocalDate localDate;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public CalendarDate(LocalDate localDate) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.localDate \u003d localDate;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public static CalendarDate fromDayMonthYearString(String string) throws ParseException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return CALENDAR_DAY_PARSER.parse(string);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public static CalendarDate fromMonthYearString(String string) throws ParseException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return CALENDAR_MONTH_PARSER.parse(string);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public static CalendarDate now() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return new CalendarDate(LocalDate.now());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public Integer getDay() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return localDate.getDayOfMonth();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public Integer getMonth() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return localDate.getMonthValue();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public Integer getYear() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return localDate.getYear();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Returns the English name of the Month."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @return English name of the Month."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public String getEnglishMonth() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        String monthStr \u003d new DateFormatSymbols().getMonths()[getMonth() - 1].toLowerCase();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return monthStr.substring(0, 1).toUpperCase() + monthStr.substring(1);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Returns the day of the week."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @return The day of the week."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public Integer getWeekIndex() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return localDate.getDayOfWeek().getValue();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Returns a new CalendarDate of the previous day."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @return A new CalendarDate of the previous day."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public CalendarDate previousDay() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        LocalDate previousLocalDate \u003d localDate.minusDays(1);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return new CalendarDate(previousLocalDate);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Returns a new CalendarDate of the next day."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @return A new CalendarDate of the next day."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public CalendarDate nextDay() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        LocalDate previousLocalDate \u003d localDate.plusDays(1);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return new CalendarDate(previousLocalDate);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Returns a new CalendarDate of the current day minus the given days."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param days The number of days to minus off."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @return A new CalendarDate of the previous days."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public CalendarDate previousDays(Integer days) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        LocalDate previousLocalDate \u003d localDate.minusDays(days);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return new CalendarDate(previousLocalDate);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public CalendarDate firstDayOfTheMonth() {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return new CalendarDate(localDate.withDayOfMonth(1));"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public Integer lengthOfMonth() {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return YearMonth.of(getYear(), getMonth()).lengthOfMonth();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public boolean sameDate(Integer day, Integer month, Integer year) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return getDay().equals(day) \u0026\u0026 getMonth().equals(month) \u0026\u0026 getYear().equals(year);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public boolean sameMonthYear(Integer month, Integer year) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return getMonth().equals(month) \u0026\u0026 getYear().equals(year);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        if (obj instanceof CalendarDate) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            CalendarDate calendarDate \u003d (CalendarDate) obj;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            return sameDate(calendarDate.getDay(), calendarDate.getMonth(), calendarDate.getYear());"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return getDay() + \"/\" + getMonth() + \"/\" + getYear();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 132,
      "WeomuCat": 2
    }
  },
  {
    "path": "src/main/java/seedu/address/model/DateTime.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "package seedu.address.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static seedu.address.MainApp.LOCALE;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static seedu.address.MainApp.TIME_ZONE;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.time.DayOfWeek;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import java.time.Duration;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.time.Instant;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.time.ZoneId;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.time.format.TextStyle;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.time.temporal.ChronoField;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import java.time.temporal.ChronoUnit;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.util.Locale;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonIgnore;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonProperty;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import com.fasterxml.jackson.databind.annotation.JsonDeserialize;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.composers.InstantComposer;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.parser.IcsDateTimeParser;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.parser.UserDateTimeParser;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents a date and time, without seconds."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Internally stored as an {@link Instant}, with some helper functions."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "@JsonDeserialize(builder \u003d DateTimeBuilder.class)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class DateTime implements Comparable\u003cDateTime\u003e {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static final String USER_DATE_TIME_PATTERN \u003d \"dd/MM/uuuu HH:mm\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static final String ICS_DATE_TIME_PATTERN \u003d \"uuuuMMdd\u0027T\u0027HHmmss\u0027Z\u0027\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final UserDateTimeParser USER_PARSER \u003d new UserDateTimeParser();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final IcsDateTimeParser ICS_PARSER \u003d new IcsDateTimeParser();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final InstantComposer COMPOSER \u003d new InstantComposer();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    // Store as seconds from epoch, no timezone information."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final Instant instant;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    DateTime(Instant instant) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.instant \u003d instant;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static DateTimeBuilder newBuilder(Instant instant) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return new DateTimeBuilder(instant);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static DateTimeBuilder newBuilder(int day, int month, int year, int hour, int minute, ZoneId timezone) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return new DateTimeBuilder(day, month, year, hour, minute, timezone);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Creates a new instance of DateTime according to the clock."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @return A new instance of DateTime according to the clock."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static DateTime now() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return new DateTime(Instant.now());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static DateTime fromIcsString(String string) throws ParseException {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return ICS_PARSER.parse(string);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static DateTime fromUserString(String string) throws ParseException {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return USER_PARSER.parse(string);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    // TODO: These should be moved to another class because DateTime"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    //  has no relation to time zone information. However, doing so will"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    //  require a major refactoring of Ui."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @JsonIgnore"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public Integer getYear() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this.instant.atZone(TIME_ZONE).get(ChronoField.YEAR_OF_ERA);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @JsonIgnore"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public Integer getMonth() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this.instant.atZone(TIME_ZONE).getMonthValue();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @JsonIgnore"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public Integer getWeek() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this.instant.atZone(TIME_ZONE).getDayOfWeek().getValue();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @JsonIgnore"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public Integer getDay() {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this.instant.atZone(TIME_ZONE).getDayOfMonth();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @JsonIgnore"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public Integer getHour() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this.instant.atZone(TIME_ZONE).getHour();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @JsonIgnore"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public Integer getMinute() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this.instant.atZone(TIME_ZONE).getMinute();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @JsonIgnore"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public String getEnglishWeekDay() {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        DayOfWeek dayOfWeek \u003d this.instant.atZone(TIME_ZONE).getDayOfWeek();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return dayOfWeek.getDisplayName(TextStyle.SHORT, Locale.US);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @JsonProperty(\"epoch\")"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public long toEpochSecond() {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this.instant.getEpochSecond();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public String toUserString() {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return COMPOSER.toUserString(this.instant);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public String toIcsString() {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return COMPOSER.toIcsString(this.instant);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Adds a Duration to the current DateTime object to create a new DateTime object"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * @param duration The Duration object to be added to the DateTime object."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * @return A DateTime object where the duration has passed."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     */"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public DateTime plus(Duration duration) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return new DateTime(this.instant.plus(duration));"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return String.format(\"%02d %s %04d %02d:%02d\","
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            this.getDay(),"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            this.instant.atZone(TIME_ZONE).getMonth().getDisplayName(TextStyle.FULL, LOCALE),"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            this.getYear(),"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            this.getHour(),"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            this.getMinute());"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public int compareTo(DateTime o) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this.instant.compareTo(o.instant);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public boolean equals(Object object) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        if (object instanceof DateTime) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            DateTime d \u003d (DateTime) object;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            return this.instant.truncatedTo(ChronoUnit.MINUTES)"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .equals(d.instant.truncatedTo(ChronoUnit.MINUTES));"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return Objects.hash(this.instant);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 3,
      "Kyzure": 28,
      "marcusteh1238": 5,
      "WeomuCat": 125
    }
  },
  {
    "path": "src/main/java/seedu/address/model/DateTimeBuilder.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.time.Instant;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.time.ZoneId;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.time.ZonedDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonCreator;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonProperty;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents a Builder responsible for creating {@link DateTime}."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "@JsonPOJOBuilder"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class DateTimeBuilder {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final Instant instant;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    DateTimeBuilder(Instant instant) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.instant \u003d instant;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    DateTimeBuilder(int day, int month, int year, int hour, int minute, ZoneId timezone) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.instant \u003d ZonedDateTime.of(year, month, day, hour, minute, 0 , 0, timezone)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .toInstant();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @JsonCreator"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    DateTimeBuilder(@JsonProperty(\"epoch\") long epoch) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.instant \u003d Instant.ofEpochSecond(epoch);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public DateTime build() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return new DateTime(this.instant);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 36
    }
  },
  {
    "path": "src/main/java/seedu/address/model/ModelData.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.events.EventSource;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.tasks.TaskSource;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "// @@author bruceskellator"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": " * Represents a snapshot of Horo\u0027s events and tasks."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": " * It is immutable. All events and tasks are unique."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "public class ModelData {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    private final UniqueOrderedSet\u003cEventSource\u003e events;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    private final UniqueOrderedSet\u003cTaskSource\u003e tasks;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public ModelData() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        this.events \u003d new UniqueOrderedSet\u003c\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        this.tasks \u003d new UniqueOrderedSet\u003c\u003e();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public ModelData(List\u003cEventSource\u003e events, List\u003cTaskSource\u003e tasks) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        this.events \u003d deepCopyEvents(events);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        this.tasks \u003d deepCopyTasks(tasks);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     * Create a deep copy of ModelData"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     * @param data the ModelData to clone"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public ModelData(ModelData data) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        this.events \u003d deepCopyEvents(data.events);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        this.tasks \u003d deepCopyTasks(data.tasks);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    // Return an unmodifiable list."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public List\u003cEventSource\u003e getEvents() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        return deepCopyEvents(this.events).toUnmodifiableList();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public List\u003cTaskSource\u003e getTasks() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        return deepCopyTasks(this.tasks).toUnmodifiableList();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     * Get a deep copy of events."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     * Ensures that events are unique."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     * @return an immutable, deep copy list of events"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    private UniqueOrderedSet\u003cEventSource\u003e deepCopyEvents(Iterable\u003cEventSource\u003e events) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        UniqueOrderedSet\u003cEventSource\u003e result \u003d new UniqueOrderedSet\u003c\u003e();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        for (EventSource event : events) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            // Create a deep-copy of each EventSource."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            result.add(new EventSource(event));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     * Get a deep copy of tasks"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     * Ensures that tasks are unique."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     * @return an immutable, deep copy list of tasks"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    private UniqueOrderedSet\u003cTaskSource\u003e deepCopyTasks(Iterable\u003cTaskSource\u003e tasks) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        UniqueOrderedSet\u003cTaskSource\u003e result \u003d new UniqueOrderedSet\u003c\u003e();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        for (TaskSource task : tasks) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            // Create a deep-copy of each EventSource."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            result.add(new TaskSource(task));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        if (o instanceof ModelData) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            ModelData m \u003d (ModelData) o;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            return Objects.equals(this.events, m.events)"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                \u0026\u0026 Objects.equals(this.tasks, m.tasks);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bruceskellator": 76,
      "WeomuCat": 8
    }
  },
  {
    "path": "src/main/java/seedu/address/model/ModelManager.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.events.EventSource;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.listeners.ModelDataListener;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import seedu.address.model.tasks.TaskSource;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents a class that manages the {@link ModelData} of Horo."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": " * Horo\u0027s Storage, Ui and UndoRedoManager components implement the ModelDataListener interface"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": " * which listens for any changes to this ModelData so that they can be updated accordingly."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class ModelManager {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private ModelData model;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final List\u003cModelDataListener\u003e modelDataListeners;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Creates a ModelManager."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    public ModelManager() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.model \u003d new ModelData();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.modelDataListeners \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     * Adds ModelDataListeners."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public void addModelDataListener(ModelDataListener listener) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.modelDataListeners.add(listener);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Replaces the current ModelData with a deep copy of a ModelData provided."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @param modelData a ModelData to replace this Model"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public void setModelData(ModelData modelData) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        // Deep copy and reassign model."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.model \u003d new ModelData(modelData);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        // Notify all listeners whenever either the EventList or TaskList is changed."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.modelDataListeners"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .forEach(listener -\u003e listener.onModelDataChange(this.getModelData()));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Returns an immutable, deep copy of Horo\u0027s events and tasks."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @return a ModelLists"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public ModelData getModelData() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return new ModelData(this.model);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Returns an immutable, deep copy of this Horo\u0027s events."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @return a copy of the Horo\u0027s events"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public List\u003cEventSource\u003e getEvents() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this.model.getEvents();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /* Tasks */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Returns an immutable, deep copy of Horo\u0027s tasks."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     *"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @return a copy of Horo\u0027s tasks"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public List\u003cTaskSource\u003e getTasks() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this.model.getTasks();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bruceskellator": 9,
      "WeomuCat": 39,
      "-": 31
    }
  },
  {
    "path": "src/main/java/seedu/address/model/UniqueOrderedSet.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.Iterator;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.LinkedHashSet;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.exceptions.DuplicateElementException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents a set of non-duplicate, non-null values."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Set is ordered by insertion order."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Only supports adding elements."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * A null pointer exception will be thrown if a null value is added to this set."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * A duplicate element exception will be throw if a duplicate element is added to this set."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class UniqueOrderedSet\u003cE\u003e implements Iterable\u003cE\u003e {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final LinkedHashSet\u003cE\u003e set;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public UniqueOrderedSet() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.set \u003d new LinkedHashSet\u003c\u003e();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Adds an element to this data structure."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @param e the element to add"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public void add(E e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        Objects.requireNonNull(e);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        if (set.contains(e)) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            throw new DuplicateElementException();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        set.add(e);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public List\u003cE\u003e toUnmodifiableList() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return List.copyOf(set);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public Iterator\u003cE\u003e iterator() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this.set.iterator();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        if (o instanceof UniqueOrderedSet) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            UniqueOrderedSet u \u003d (UniqueOrderedSet) o;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            return Objects.equals(this.set, u.set);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 54
    }
  },
  {
    "path": "src/main/java/seedu/address/model/events/EventDateComparator.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package seedu.address.model.events;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.util.Comparator;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "//@@author Kyzure"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * Represents a Comparator to compare the events by their date, followed by their name in lexicographic order."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "public class EventDateComparator implements Comparator\u003cEventSource\u003e {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public int compare(EventSource event, EventSource otherEvent) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        if (event.getStartDateTime().compareTo(otherEvent.getStartDateTime()) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            return event.getDescription().compareTo(otherEvent.getDescription());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            return event.getStartDateTime().compareTo(otherEvent.getStartDateTime());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 19
    }
  },
  {
    "path": "src/main/java/seedu/address/model/events/EventSource.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.model.events;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_EVENT_END_DATE;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_EVENT_REMIND_DATE;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonProperty;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.model.DateTime;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.exceptions.InvalidEventSourceException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents an EventSource in Horo."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * It is immutable."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class EventSource {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    // Required"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final DateTime start;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    // Optional"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final DateTime end;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final Set\u003cString\u003e tags;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    private final DateTime remind;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Creates an EventSource from an EventSourceBuilder."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * All fields must be non null."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    EventSource(EventSourceBuilder builder) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.description \u003d builder.getDescription();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.start \u003d builder.getStart();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.end \u003d builder.getEnd();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        if (builder.getTags() \u003d\u003d null) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            this.tags \u003d new HashSet\u003c\u003e();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            this.tags \u003d builder.getTags();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        this.remind \u003d builder.getRemind();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        // Ensure EventSource date time are valid"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        if (this.end !\u003d null \u0026\u0026 this.start.compareTo(this.end) \u003e\u003d 0) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            throw new InvalidEventSourceException(MESSAGE_INVALID_EVENT_END_DATE);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        if (this.remind !\u003d null \u0026\u0026 this.start.compareTo(this.remind) \u003c 0) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            throw new InvalidEventSourceException(MESSAGE_INVALID_EVENT_REMIND_DATE);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Copy constructor."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Creates a deep-copy of an EventSource."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @param eventSource the eventSource to deep-copy."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public EventSource(EventSource eventSource) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.description \u003d eventSource.description;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.start \u003d eventSource.start;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.end \u003d eventSource.end;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.tags \u003d eventSource.tags;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        this.remind \u003d eventSource.remind;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static EventSourceBuilder newBuilder(String description, DateTime start) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return new EventSourceBuilder(description, start);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @JsonProperty(\"description\")"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @JsonProperty(\"start\")"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public DateTime getStartDateTime() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this.start;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @JsonProperty(\"end\")"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public DateTime getEndDateTime() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this.end;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @JsonProperty(\"remind\")"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public DateTime getRemindDateTime() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this.remind;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @JsonProperty(\"tags\")"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public Set\u003cString\u003e getTags() {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this.tags;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public boolean equals(Object object) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        if (object instanceof EventSource) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            EventSource e \u003d (EventSource) object;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            return Objects.equals(this.description, e.description)"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                \u0026\u0026 Objects.equals(this.start, e.start)"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                \u0026\u0026 Objects.equals(this.end, e.end)"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                \u0026\u0026 Objects.equals(this.remind, e.remind)"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                \u0026\u0026 Objects.equals(this.tags, e.tags);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return Objects.hash(this.description,"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            this.start,"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            this.end,"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            this.remind,"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            this.tags);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 5,
      "WeomuCat": 113
    }
  },
  {
    "path": "src/main/java/seedu/address/model/events/EventSourceBuilder.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.model.events;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.Collection;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonCreator;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonProperty;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.model.DateTime;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents a Builder responsible for creating {@link EventSource}."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class EventSourceBuilder {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    // Required"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final DateTime start;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    // Optional"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private DateTime end;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private Set\u003cString\u003e tags;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    private DateTime remind;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    EventSourceBuilder(String description, DateTime start) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.description \u003d Objects.requireNonNull(description);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.start \u003d Objects.requireNonNull(start);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @JsonCreator"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private EventSourceBuilder(@JsonProperty(\"description\") String description,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                               @JsonProperty(\"start\") DateTime start,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                               @JsonProperty(\"end\") DateTime end,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                               @JsonProperty(\"remind\") DateTime remind,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                               @JsonProperty(\"tags\") Set\u003cString\u003e tags) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.start \u003d start;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.end \u003d end;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.remind \u003d remind;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.tags \u003d tags;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public EventSourceBuilder setEnd(DateTime end) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.end \u003d end;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public EventSourceBuilder setTags(Collection\u003cString\u003e tags) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.tags \u003d new HashSet\u003c\u003e(tags);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public EventSourceBuilder setRemind(DateTime remind) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        this.remind \u003d remind;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public EventSource build() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return new EventSource(this);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    String getDescription() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    DateTime getStart() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return start;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    DateTime getEnd() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return end;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    Set\u003cString\u003e getTags() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return tags;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    DateTime getRemind() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        return remind;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 12,
      "WeomuCat": 71
    }
  },
  {
    "path": "src/main/java/seedu/address/model/exceptions/DuplicateElementException.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.model.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Signals that a duplicate element was inserted into a UniqueOrderedSet."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class DuplicateElementException extends RuntimeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 7
    }
  },
  {
    "path": "src/main/java/seedu/address/model/exceptions/InvalidEventSourceException.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.model.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Signals that an invalid EventSource was constructed."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class InvalidEventSourceException extends RuntimeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public InvalidEventSourceException(String message) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 11
    }
  },
  {
    "path": "src/main/java/seedu/address/model/listeners/ModelDataListener.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.model.listeners;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.ModelData;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents a listener that will be notified whenever the ModelData in ModelManager changes."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public interface ModelDataListener {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void onModelDataChange(ModelData modelData);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bruceskellator": 1,
      "WeomuCat": 11
    }
  },
  {
    "path": "src/main/java/seedu/address/model/tasks/TaskDateComparator.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package seedu.address.model.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.util.Comparator;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "//@@author Kyzure"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * Represents a Comparator to compare the events by their date, followed by their name in lexicographic order."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "public class TaskDateComparator implements Comparator\u003cTaskSource\u003e {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public int compare(TaskSource task, TaskSource otherTask) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        // If both have are done."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        if (task.isDone() \u003d\u003d otherTask.isDone()) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            if (task.getDueDate() \u003d\u003d null \u0026\u0026 otherTask.getDueDate() \u003d\u003d null) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                // If both don\u0027t have due date."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                return task.getDescription().compareTo(otherTask.getDescription());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            } else if (task.getDueDate() \u003d\u003d null \u0026\u0026 otherTask.getDueDate() !\u003d null) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                return 1;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            } else if (task.getDueDate() !\u003d null \u0026\u0026 otherTask.getDueDate() \u003d\u003d null) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                return -1;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                if (task.getDueDate().equals(otherTask.getDueDate())) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    return task.getDescription().compareTo(otherTask.getDescription());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    return task.getDueDate().compareTo(otherTask.getDueDate());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            return Boolean.compare(task.isDone(), otherTask.isDone());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 34
    }
  },
  {
    "path": "src/main/java/seedu/address/model/tasks/TaskSource.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "package seedu.address.model.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonProperty;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.model.DateTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "// @@author bruceskellator"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": " * Represents a TaskSource in Horo."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": " * It is immutable."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "public class TaskSource {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    // Required"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    // Optional"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    private final DateTime due;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    private final Set\u003cString\u003e tags;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    private final boolean isDone;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    TaskSource(TaskSourceBuilder taskSourceBuilder) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        this.description \u003d taskSourceBuilder.getDescription();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        this.isDone \u003d taskSourceBuilder.isDone();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        this.due \u003d taskSourceBuilder.getDueDate();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        if (taskSourceBuilder.getTags() \u003d\u003d null) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            this.tags \u003d new HashSet\u003c\u003e();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            this.tags \u003d taskSourceBuilder.getTags();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     * Copy constructor."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     * Creates a deep-copy of an TaskSource."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     * @param taskSource the taskSource to deep-copy."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public TaskSource(TaskSource taskSource) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        this.description \u003d taskSource.description;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        this.due \u003d taskSource.due;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        this.isDone \u003d taskSource.isDone;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        this.tags \u003d taskSource.tags;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public static TaskSourceBuilder newBuilder(String description) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        return new TaskSourceBuilder(description);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    @JsonProperty(\"description\")"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    @JsonProperty(\"due\")"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public DateTime getDueDate() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        return this.due;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    @JsonProperty(\"done\")"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    @JsonProperty(\"tags\")"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public Set\u003cString\u003e getTags() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        return tags;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public boolean equals(Object object) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        if (object instanceof TaskSource) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            TaskSource t \u003d (TaskSource) object;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            return Objects.equals(this.description, t.description)"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                \u0026\u0026 Objects.equals(this.due, t.due)"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                \u0026\u0026 Objects.equals(!this.isDone, !t.isDone)"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                \u0026\u0026 Objects.equals(this.tags, t.tags);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        return Objects.hash(this.description,"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            this.due,"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            this.tags);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 8,
      "bruceskellator": 82,
      "WeomuCat": 2
    }
  },
  {
    "path": "src/main/java/seedu/address/model/tasks/TaskSourceBuilder.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "package seedu.address.model.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import java.util.Collection;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonCreator;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonProperty;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.model.DateTime;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "// @@author bruceskellator"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": " * Represents a Builder responsible for creating {@link TaskSource}."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "public class TaskSourceBuilder {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    // Required"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    // Optional"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    private DateTime due;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    // private Duration expectedDuration;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    private Set\u003cString\u003e tags;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    TaskSourceBuilder(String description) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        this.description \u003d Objects.requireNonNull(description);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    @JsonCreator"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    private TaskSourceBuilder(@JsonProperty(\"description\") String description,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                               @JsonProperty(\"due\") DateTime due,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                               @JsonProperty(\"tags\") Set\u003cString\u003e tags,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                               @JsonProperty(\"done\") boolean isDone) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        this.due \u003d due;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        this.tags \u003d tags;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public TaskSourceBuilder setDueDate(DateTime due) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        this.due \u003d due;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public TaskSourceBuilder setDone(boolean done) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        isDone \u003d done;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public TaskSourceBuilder setTags(Collection\u003cString\u003e tags) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        this.tags \u003d new HashSet\u003c\u003e(tags);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public TaskSource build() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        return new TaskSource(this);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    String getDescription() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    DateTime getDueDate() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        return due;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    boolean isDone() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    Set\u003cString\u003e getTags() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        return tags;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 9,
      "bruceskellator": 66,
      "WeomuCat": 3
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/ColorTheme.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "//@@author Kyzure"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * Represents the color themes that happen during success of the commands or failure of a command."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "public enum ColorTheme {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    SUCCESS, FAILURE, WELCOME;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 9
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/CommandBox.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.function.Consumer;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": " * The UI component that is responsible for receiving user command inputs."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public class CommandBox extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String ERROR_STYLE_CLASS \u003d \"error\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String FXML \u003d \"CommandBox.fxml\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final Consumer\u003cString\u003e onCommandInput;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    private TextField commandTextField;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public CommandBox(Consumer\u003cString\u003e onCommandInput) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.onCommandInput \u003d onCommandInput;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        // calls #setStyleToDefault() whenever there is a change to the text of the command box."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "     * Handles the Enter button pressed event."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    private void handleCommandEntered() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        onCommandInput.accept(commandTextField.getText());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        commandTextField.setText(\"\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets the command box style to use the default style."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    private void setStyleToDefault() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets the command box style to indicate a failed command."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    private void setStyleToIndicateCommandFailure() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        if (styleClass.contains(ERROR_STYLE_CLASS)) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        styleClass.add(ERROR_STYLE_CLASS);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 6,
      "-": 52
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/MainWindow.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static seedu.address.logic.UiManager.WINDOW_HEIGHT;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static seedu.address.logic.UiManager.WINDOW_WIDTH;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.function.Consumer;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.animation.KeyFrame;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.animation.Timeline;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.animation.TranslateTransition;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.beans.value.ChangeListener;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.beans.value.ObservableValue;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.concurrent.Task;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.concurrent.WorkerStateEvent;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.event.EventHandler;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.geometry.Rectangle2D;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.layout.GridPane;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.StackPane;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.stage.Screen;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.util.Duration;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.CalendarDate;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.events.EventSource;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import seedu.address.model.tasks.TaskSource;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.panel.calendar.CalendarPanel;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.panel.list.ListPanel;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.panel.log.LogPanel;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": " * The Main Window. Provides the basic application layout containing"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": " * a menu bar and space where other JavaFX elements can be placed."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "public class MainWindow extends UiPart\u003cStage\u003e {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public static final Integer TIMING \u003d 20;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String FXML \u003d \"MainWindow.fxml\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private static final String WELCOME_MESSAGE \u003d \"Welcome to Horo\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Logger logger \u003d LogsCenter.getLogger(getClass());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    private Stage primaryStage;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private Consumer\u003cString\u003e onCommandInput;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    // Independent Ui parts residing in this Ui container"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private ListPanel listPanel;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private CalendarPanel calendarPanel;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private LogPanel logPanel;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private CommandBox commandBox;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private StackPane popUpPanel;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    private StackPane commandBoxPlaceholder;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private StackPane viewPlaceholder;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    private StackPane statusbarPlaceholder;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private GridPane gridManager;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private Label viewTitle;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public MainWindow(Stage primaryStage, Consumer\u003cString\u003e onCommandInput) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        super(FXML, primaryStage);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        // Set dependencies"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        this.primaryStage \u003d primaryStage;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.onCommandInput \u003d onCommandInput;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        primaryStage.setWidth(WINDOW_WIDTH);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        primaryStage.setHeight(WINDOW_HEIGHT);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    public Stage getPrimaryStage() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        return primaryStage;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public void show() {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        primaryStage.show();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    //@@author Kyzure"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Fills up all the placeholders of this window."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public void fillInnerParts() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        calendarPanel \u003d new CalendarPanel();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        listPanel \u003d new ListPanel();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        logPanel \u003d new LogPanel();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        commandBox \u003d new CommandBox(this.onCommandInput);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        viewPlaceholder.getChildren().add(calendarPanel.getRoot());"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        viewPlaceholder.getChildren().add(listPanel.getRoot());"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        viewPlaceholder.getChildren().add(logPanel.getRoot());"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        calendarPanel.getRoot().setVisible(true);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        listPanel.getRoot().setVisible(false);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        logPanel.getRoot().setVisible(false);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        viewTitle.setText(\"Calendar\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        editInnerParts();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    //@@author Kyzure"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Edits the size of the nodes based on the user\u0027s screen size."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private void editInnerParts() {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        Rectangle2D primaryScreenBounds \u003d Screen.getPrimary().getVisualBounds();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        double screenHeight \u003d primaryScreenBounds.getHeight();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        double screenWidth \u003d primaryScreenBounds.getWidth();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        viewPlaceholder.setPrefWidth(screenWidth);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        viewPlaceholder.setPrefHeight(screenHeight);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        // Set the stage width and height"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        primaryStage.setMaxWidth(screenWidth);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        primaryStage.setMaxHeight(screenHeight);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        addResizingListeners();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        welcomeMessage();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        delayResize();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    //@@author Kyzure"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Changes the View Panel to show the Calendar Panel."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public void viewCalendar() {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        calendarPanel.getRoot().setVisible(true);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        listPanel.getRoot().setVisible(false);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        logPanel.getRoot().setVisible(false);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        viewTitle.setText(\"Calendar\");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    //@@author Kyzure"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Changes the View Panel to show the Calendar Panel of a certain date in the timeline."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param calendarDate The given date."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public void viewDay(CalendarDate calendarDate) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        calendarPanel.changeToDayView(calendarDate);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        viewCalendar();"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    //@@author Kyzure"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Changes the View Panel to show the Calendar Panel of a certain week in the timeline."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param calendarDate The given date of the week."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public void viewWeek(CalendarDate calendarDate) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        calendarPanel.changeToWeekView(calendarDate);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        viewCalendar();"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    //@@author Kyzure"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Changes the View Panel to show the Calendar Panel of a certain month."
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param calendarDate The Calendar\u0027s date."
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public void viewMonth(CalendarDate calendarDate) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        calendarPanel.changeToMonthView(calendarDate);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        viewCalendar();"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    //@@author Kyzure"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Changes the View Panel to show the List Panel."
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public void viewList() {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        calendarPanel.getRoot().setVisible(false);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        listPanel.getRoot().setVisible(true);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        logPanel.getRoot().setVisible(false);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        viewTitle.setText(\"List\");"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    //@@author Kyzure"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Changes the View Panel to show the Log Panel."
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public void viewLog() {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        calendarPanel.getRoot().setVisible(false);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        listPanel.getRoot().setVisible(false);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        logPanel.getRoot().setVisible(true);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        viewTitle.setText(\"Log\");"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    //@@author Kyzure"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Creates a pop-up of the output using the same LogBox in the LogPanel and animates it."
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private void createPopUpBox(String feedbackToUser, String color) {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        requireNonNull(feedbackToUser);"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        popUpPanel.getChildren().clear();"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        PopUpBox popUpBox \u003d new PopUpBox(feedbackToUser, color);"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        Region popUpBoxRoot \u003d popUpBox.getRoot();"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        Timeline popUpAnimation \u003d new Timeline("
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                new KeyFrame(Duration.seconds(0), event -\u003e {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    popUpPanel.getChildren().add(popUpBoxRoot);"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    popUpBoxRoot.setTranslateY(popUpBoxRoot.getTranslateY() - 40);"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    TranslateTransition translateTransition \u003d"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                            new TranslateTransition(Duration.seconds(1), popUpBoxRoot);"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    double initialPos \u003d popUpBoxRoot.getTranslateY();"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    translateTransition.setFromY(initialPos);"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    translateTransition.setToY(initialPos + 40);"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    translateTransition.setCycleCount(1);"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    translateTransition.setAutoReverse(true);"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    translateTransition.setDuration(new Duration(250));"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    translateTransition.play();"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                }),"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                new KeyFrame(Duration.seconds(3), event -\u003e {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    TranslateTransition translateTransition \u003d"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                            new TranslateTransition(Duration.seconds(1), popUpBoxRoot);"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    double initialPos \u003d popUpBoxRoot.getTranslateY();"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    translateTransition.setFromY(initialPos);"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    translateTransition.setToY(initialPos - 40);"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    translateTransition.setCycleCount(1);"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    translateTransition.setAutoReverse(true);"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    translateTransition.setDuration(new Duration(250));"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    translateTransition.play();"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                }),"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                new KeyFrame(Duration.seconds(4), event -\u003e {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    popUpPanel.getChildren().remove(popUpBoxRoot);"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                })"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        );"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        popUpAnimation.setCycleCount(1);"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        popUpAnimation.play();"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    //@@author Kyzure"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Creates a color scheme from the a list of the constant color values in the CSS file."
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param color The color of the object."
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @return The color in a String value that is used in the CSS file."
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private String getColor(ColorTheme color) {"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        switch(color) {"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        case SUCCESS:"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            return \"-logBoxColor\";"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        case FAILURE:"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            return \"-errorColor\";"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        case WELCOME:"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            return \"-welcomeColor\";"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            // Not suppose to happen;"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            return \"-logBoxColor\";"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    //@@author Kyzure"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Changes of the calendar screen of the calendar"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public void changeCalendarScreenDate(CalendarDate calendarDate) {"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        calendarPanel.changeCalendarScreenDate(calendarDate);"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        viewCalendar();"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    //@@author Kyzure"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Adds Listeners that re-sizes the calendar panel when the width has been changed."
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private void addResizingListeners() {"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        primaryStage.widthProperty().addListener(new ChangeListener\u003cNumber\u003e() {"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            @Override"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            public void changed(ObservableValue\u003c? extends Number\u003e observableValue,"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                                Number oldSceneWidth,"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                                Number newSceneWidth) {"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                delayResize();"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            }"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        });"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    //@@author Kyzure"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Re-sizes the CalendarPanel after a certain delay."
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @see CalendarPanel"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private void delayResize() {"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        Task\u003cVoid\u003e sleeper \u003d new Task\u003cVoid\u003e() {"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            @Override"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            protected Void call() throws Exception {"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    Thread.sleep(TIMING);"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                } catch (InterruptedException e) {"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    throw new Exception(e.getMessage());"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                }"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                return null;"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            }"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        };"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        sleeper.setOnSucceeded(new EventHandler\u003cWorkerStateEvent\u003e() {"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            @Override"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            public void handle(WorkerStateEvent event) {"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                calendarPanel.resizeCalendarPanel();"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            }"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        });"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        new Thread(sleeper).start();"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Prints the welcome message."
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private void welcomeMessage() {"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        onUserOutput(new UserOutput(WELCOME_MESSAGE), ColorTheme.WELCOME);"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Changes the UI based on the new events and tasks list."
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param events The given event list."
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param tasks The given task list."
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public void onModelListChange(List\u003cEventSource\u003e events,"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                                  List\u003cTaskSource\u003e tasks,"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                                  HashMap\u003cEventSource, Integer\u003e eventHash,"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                                  HashMap\u003cTaskSource, Integer\u003e taskHash) {"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.calendarPanel.onModelListChange(events, tasks, eventHash, taskHash);"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.listPanel.onEventListChange(events, eventHash);"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.listPanel.onTaskListChange(tasks, taskHash);"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Creates a log box as well as popup box to display to the user the output."
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param output The given output to be displayed to the user."
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param results The color theme which decides whether the command is a success or failure."
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public void onUserOutput(UserOutput output, ColorTheme results) {"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        String color \u003d getColor(results);"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.logPanel.createLogBox(output.toString(), color);"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        createPopUpBox(output.toString(), color);"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 292,
      "bruceskellator": 1,
      "WeomuCat": 10,
      "-": 50
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/PopUpBox.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "//@@author Kyzure"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * An UI component that displays the feedback to the user."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "public class PopUpBox extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private static final String FXML \u003d \"PopUpBox.fxml\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private Label popUp;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Constructor for PopUpBox. Has almost the same features as LogBox"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public PopUpBox(String feedbackToUser, String color) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        popUp.setText(feedbackToUser);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        popUp.setStyle(\"-fx-background-color: \" + color);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 26
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/UserOutput.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents the output from business logic, to be displayed to the user."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class UserOutput {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final String output;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public UserOutput(String output) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.output \u003d requireNonNull(output);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this.output;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 20
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/card/Card.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package seedu.address.ui.card;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.UiPart;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "//@@author Kyzure"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * Represents a Card to show an event or task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "public abstract class Card extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Constructor for the Card."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param fxml The FXML of the EventCard or TaskCard."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public Card(String fxml) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        super(fxml);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 18
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/card/CardHolder.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package seedu.address.ui.card;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.UiPart;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "//@@author Kyzure"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * An UI component that displays information of a {@code Event}."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "public class CardHolder extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private static final String FXML \u003d \"CardHolder.fxml\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private VBox timeBox;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Constructor for the EventCardHolder."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public CardHolder() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public void addCard(Card card) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.timeBox.getChildren().add(card.getRoot());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public void removeCards() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.timeBox.getChildren().clear();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public Double getHeight() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return timeBox.getHeight();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 38
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/card/CardTag.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package seedu.address.ui.card;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.UiPart;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "//@@author Kyzure"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * Represents a tag of a card"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "public class CardTag extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private static final String FXML \u003d \"CardTag.fxml\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private static final double LETTER_LENGTH \u003d 1.0;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private double tagWidth \u003d 0;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private String tag;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private Label cardTag;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public CardTag(String tag) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.tag \u003d tag;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        cardTag.setText(tag);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Change the color - used for tasks - both undone and done."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param color The given color."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public void changeColor(String color) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        cardTag.setStyle(\"-fx-background-color: \" + color);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public double getWidth() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return tag.length() * LETTER_LENGTH;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 41
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/card/CardTagline.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package seedu.address.ui.card;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.UiPart;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "//@@author Kyzure"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * Represents a tag of a card"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "public class CardTagline extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public static final double MAX_WIDTH \u003d 32.0;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private static final String FXML \u003d \"CardTagline.fxml\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private double taglineWidth;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private HBox tagline;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public CardTagline() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        taglineWidth \u003d 0;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Returns true if CardTag successfully added, and false otherwise."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param cardTag The given CardTag."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @return Returns true if CardTag successfully added, and false otherwise."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public boolean isTagAdded(CardTag cardTag) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        if (taglineWidth + cardTag.getWidth() \u003c MAX_WIDTH) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            tagline.getChildren().add(cardTag.getRoot());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            taglineWidth +\u003d cardTag.getWidth();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public void addSingleTag(CardTag cardTag) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        tagline.getChildren().add(cardTag.getRoot());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 46
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/card/EventCard.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package seedu.address.ui.card;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.layout.StackPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.events.EventSource;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "//@@author Kyzure"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * An UI component that displays information of a {@code Event}."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "public class EventCard extends Card {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private static final String FXML \u003d \"EventCard.fxml\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private VBox eventDetails;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private Label eventName;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private Label eventStartDate;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private Label eventEndDate;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private StackPane eventEndDateBase;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private Label eventRemindDate;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private StackPane eventRemindDateBase;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private StackPane eventTagsBase;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private VBox eventTagList;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private Label eventIndex;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private StackPane eventIndexBase;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Constructor for the EventCard, which displays the information of a particular event."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * This is used for ListPanel."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param event The given event."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public EventCard(EventSource event, Integer index) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        eventName.setText(event.getDescription());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        eventStartDate.setText(\"Start Date: \" + event.getStartDateTime());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        eventIndex.setText(\"[\" + index + \"]\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        addOptions(event);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Removes the optional part of the event card if it does not exists."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param event The given event."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private void addOptions(EventSource event) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        // End Date Option"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        if (event.getEndDateTime() !\u003d null) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            eventEndDate.setText(\"End Date: \" + event.getEndDateTime());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            eventDetails.getChildren().remove(eventEndDateBase);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        // Remind Date Option"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        if (event.getRemindDateTime() !\u003d null) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            eventRemindDate.setText(\"Remind Date: \" + event.getRemindDateTime());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            eventDetails.getChildren().remove(eventRemindDateBase);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        // Tags Option"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        if (event.getTags() !\u003d null) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            addTags(event);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            eventDetails.getChildren().remove(eventTagsBase);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        // Others"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        eventName.setMinHeight(Region.USE_PREF_SIZE);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Adds CardTagline to the EventCard with the given tags."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param event The given event."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @see CardTagline"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private void addTags(EventSource event) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        Set\u003cString\u003e tags \u003d event.getTags();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        CardTagline cardTagline \u003d new CardTagline();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        for (String tag : tags) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            CardTag cardTag \u003d new CardTag(tag);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            if (cardTag.getWidth() \u003e\u003d CardTagline.MAX_WIDTH) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                CardTagline cardTagline1 \u003d new CardTagline();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                cardTagline1.addSingleTag(cardTag);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                eventTagList.getChildren().add(cardTagline1.getRoot());"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            boolean isAdded \u003d cardTagline.isTagAdded(cardTag);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            if (!isAdded) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                eventTagList.getChildren().add(cardTagline.getRoot());"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                cardTagline \u003d new CardTagline();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                cardTagline.isTagAdded(cardTag);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        eventTagList.getChildren().add(cardTagline.getRoot());"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 120,
      "-": 5
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/card/TaskCard.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package seedu.address.ui.card;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.layout.StackPane;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.tasks.TaskSource;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "//@@author Kyzure"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * An UI component that displays information of a {@code Event}."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "public class TaskCard extends Card {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private static final String FXML \u003d \"TaskCard.fxml\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private StackPane taskCardBase;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private VBox taskDetails;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private Label taskName;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private StackPane taskDueDateBase;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private Label taskDueDate;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private StackPane taskTagsBase;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private HBox taskTags;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private VBox taskTagList;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private Label taskIndex;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private StackPane taskIndexBase;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Constructor for the TaskCard, which displays the information of a particular task."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * This is used for ListPanel."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param task The given task."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public TaskCard(TaskSource task, Integer index) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        taskName.setText(task.getDescription());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        taskIndex.setText(\"[\" + index + \"]\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        addOptions(task);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Removes the non-existant options from the task card of the given task."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param task The given task."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private void addOptions(TaskSource task) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        // Due Date"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        if (task.getDueDate() !\u003d null) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            taskDueDate.setText(task.getDueDate().toString());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            taskDetails.getChildren().remove(taskDueDateBase);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        // Tags"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        if (task.getTags() !\u003d null) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            addTags(task);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            taskDetails.getChildren().remove(taskTagsBase);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        // Color"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        if (task.isDone()) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            taskCardBase.setStyle(\"-fx-background-color: -taskDoneCardColor;\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        taskName.setMinHeight(Region.USE_PREF_SIZE);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Adds CardTagline to the TaskCard with the given tags."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param task The given task."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @see CardTagline"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private void addTags(TaskSource task) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        Set\u003cString\u003e tags \u003d task.getTags();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        CardTagline cardTagline \u003d new CardTagline();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        for (String tag : tags) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            CardTag cardTag \u003d new CardTag(tag);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            if (task.isDone()) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                cardTag.changeColor(\"-taskDoneTagColor\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                cardTag.changeColor(\"-taskTagColor\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            if (cardTag.getWidth() \u003e\u003d CardTagline.MAX_WIDTH) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                CardTagline cardTagline1 \u003d new CardTagline();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                cardTagline1.addSingleTag(cardTag);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                taskTagList.getChildren().add(cardTagline1.getRoot());"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            boolean isAdded \u003d cardTagline.isTagAdded(cardTag);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            if (!isAdded) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                taskTagList.getChildren().add(cardTagline.getRoot());"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                cardTagline \u003d new CardTagline();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                cardTagline.isTagAdded(cardTag);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        taskTagList.getChildren().add(cardTagline.getRoot());"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 125
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/card/UpcomingEventCard.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package seedu.address.ui.card;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.events.EventSource;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.UiPart;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "//@@author Kyzure"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * An UI component that displays information of a {@code Event}."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "public class UpcomingEventCard extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public static final Integer UPCOMING_CARD_HEIGHT \u003d 39;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private static final String FXML \u003d \"UpcomingEventCard.fxml\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private Label upcomingEventName;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private Label upcomingWeekDay;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private Label upcomingDay;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Constructor for the EventCard, which displays the information of a particular event."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param event The given event."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public UpcomingEventCard(EventSource event) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        upcomingEventName.setText(event.getDescription());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        upcomingWeekDay.setText(event.getStartDateTime().getEnglishWeekDay());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        upcomingDay.setText(String.valueOf(event.getStartDateTime().getDay()));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        upcomingEventName.setMinHeight(Region.USE_PREF_SIZE);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 40
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/card/UpcomingTaskCard.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package seedu.address.ui.card;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.tasks.TaskSource;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.UiPart;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "//@@author Kyzure"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * An UI component that displays information of a {@code Event}."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "public class UpcomingTaskCard extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private static final String FXML \u003d \"UpcomingTaskCard.fxml\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private Label upcomingTaskName;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private Label upcomingWeekDay;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private Label upcomingDay;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Constructor for the UpcomingTaskCard, which displays the information of a particular task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param task The given event."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public UpcomingTaskCard(TaskSource task) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        upcomingTaskName.setText(task.getDescription());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        upcomingWeekDay.setText(task.getDueDate().getEnglishWeekDay());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        upcomingDay.setText(String.valueOf(task.getDueDate().getDay()));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        upcomingTaskName.setMinHeight(Region.USE_PREF_SIZE);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 39
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/listeners/UserOutputListener.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.ui.listeners;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.ui.ColorTheme;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.ui.UserOutput;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents a listener that will be notified with new user output."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * User output flows from business logic -\u003e user interface."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public interface UserOutputListener {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void onUserOutput(UserOutput output, ColorTheme results);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 13
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/panel/calendar/CalendarGridDay.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package seedu.address.ui.panel.calendar;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.effect.ColorAdjust;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.layout.StackPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.shape.Circle;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.CalendarDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.UiPart;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "//@@author Kyzure"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * An UI component that displays the day on the calendar."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "public class CalendarGridDay extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private static final float BASE_SATURATION \u003d 0.10f;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private static final float MAX_SATURATION \u003d 0.90f;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private static final int MAX_EVENT \u003d 10;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private static final String FXML \u003d \"CalendarGridDay.fxml\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private CalendarDate calendarDate;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private Integer totalEvents;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private StackPane calendarGridDayBase;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private Circle calendarDayCircle;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private Label calendarDay;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public CalendarGridDay(CalendarDate calendarDate, Integer totalEvents) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.calendarDate \u003d calendarDate;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.totalEvents \u003d totalEvents;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        calendarDay.setText(calendarDate.getDay().toString());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        colorChange();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Increases the total number of Events or Tasks and changes the color accordingly."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public void increaseIntensity() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.totalEvents++;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        if (!CalendarDate.now().equals(calendarDate)) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            colorChange();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Resets the color of the day."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public void resetColor() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.totalEvents \u003d 0;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        colorChange();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public void setCurrentDate() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        Circle circle \u003d new Circle();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        circle.setRadius(14);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        circle.setStyle(\"-fx-fill: \" + \"-currentDateColor\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        calendarGridDayBase.getChildren().add(0, circle);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Reduces the opacity as the given Calendar Screen is of a different month."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public void reduceOpacity() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        calendarDay.setStyle(\"-fx-opacity: \" + 0.25);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Adjusts the color of the circle to indicate how many events are there on that day."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private void colorChange() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        ColorAdjust colorAdjust \u003d new ColorAdjust();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        if (this.totalEvents \u003d\u003d 0) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            calendarDayCircle.setStyle(\"-fx-opacity: \" + 0);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            colorAdjust.setSaturation(getSaturationValue(this.totalEvents));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            calendarDayCircle.setEffect(colorAdjust);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            calendarDayCircle.setStyle(\"-fx-opacity: \" + 0.5);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            colorAdjust.setSaturation(getSaturationValue(this.totalEvents));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            calendarDayCircle.setEffect(colorAdjust);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Returns a float value of a saturation by the number of given events against a threshold value."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param events The total number of events of the current day."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @return Returns a float value of a saturation by the number of given events against a threshold value."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private float getSaturationValue(float events) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return (events / MAX_EVENT) * (MAX_SATURATION - BASE_SATURATION) + BASE_SATURATION;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 102
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/panel/calendar/CalendarPanel.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package seedu.address.ui.panel.calendar;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.util.LinkedList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.util.Queue;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.layout.StackPane;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.CalendarDate;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.events.EventSource;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.tasks.TaskSource;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.UiPart;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "//@@author Kyzure"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * An Ui that represents a Panel that contains all the components to make a calendar view. This includes"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * a Timeline, Calendar, and the Details of an event."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "public class CalendarPanel extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private static final String FXML \u003d \"CalendarPanel.fxml\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private CalendarScreen calendarScreen;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private TimelineView timelineView;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private UpcomingView upcomingView;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private CalendarDate calendarDate;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private List\u003cObject\u003e eventTaskList;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private HashMap\u003cEventSource, Integer\u003e eventHash;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private HashMap\u003cTaskSource, Integer\u003e taskHash;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private StackPane timelinePlaceholder;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private VBox calendarScreenPlaceholder;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private StackPane upcomingViewPlaceholder;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Constructor for CalendarPanel. Contains the 3 main viewing points for the calendar panel."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * The points are calendar screen view, timeline view and details view."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @see TimelineView"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @see CalendarScreen"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @see UpcomingView"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public CalendarPanel() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.calendarDate \u003d CalendarDate.now();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.eventTaskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.calendarScreen \u003d new CalendarScreen(this.calendarDate);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.timelineView \u003d new TimelineDayView(this.calendarDate, eventTaskList, eventHash, taskHash);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.upcomingView \u003d new UpcomingView(eventTaskList);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        timelinePlaceholder.getChildren().add(this.timelineView.getRoot()); // Left"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        calendarScreenPlaceholder.getChildren().add(this.calendarScreen.getRoot()); // Top Right"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        upcomingViewPlaceholder.getChildren().add(this.upcomingView.getRoot()); // Bottom Right"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Changes the CalendarScreen date only with a given CalendarDate."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param calendarDate The given date."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public void changeCalendarScreenDate(CalendarDate calendarDate) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        calendarScreenPlaceholder.getChildren().clear();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        calendarScreen \u003d new CalendarScreen(calendarDate);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        calendarScreenPlaceholder.getChildren().add(calendarScreen.getRoot());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        calendarScreen.onChange(eventTaskList);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Re-sizes the TimelineView."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public void resizeCalendarPanel() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        timelineView.resizeTimelineView();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Changes to TimelineDayView with a given CalendarDate."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param calendarDate The given date."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public void changeToDayView(CalendarDate calendarDate) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        changeCalendarScreenDate(calendarDate);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        timelinePlaceholder.getChildren().clear();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        timelineView \u003d new TimelineDayView(calendarDate, eventTaskList, eventHash, taskHash);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        timelinePlaceholder.getChildren().add(timelineView.getRoot());"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Changes to TimelineWeekView with a given CalendarDate."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param calendarDate The given date."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public void changeToWeekView(CalendarDate calendarDate) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        changeCalendarScreenDate(calendarDate);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        timelinePlaceholder.getChildren().clear();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.timelineView \u003d new TimelineWeekView(calendarDate, eventTaskList, eventHash, taskHash);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        timelinePlaceholder.getChildren().add(timelineView.getRoot());"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Changes to TimelineDayView with a given CalendarDate."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param calendarDate The given date."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public void changeToMonthView(CalendarDate calendarDate) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        changeCalendarScreenDate(calendarDate);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        timelinePlaceholder.getChildren().clear();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.timelineView \u003d new TimelineMonthView(calendarDate, eventTaskList, eventHash, taskHash);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        timelinePlaceholder.getChildren().add(timelineView.getRoot());"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Changes the UI according to the given Lists."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param events The given event lists."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param tasks The given task list."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public void onModelListChange(List\u003cEventSource\u003e events,"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                                  List\u003cTaskSource\u003e tasks,"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                                  HashMap\u003cEventSource, Integer\u003e eventHash,"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                                  HashMap\u003cTaskSource, Integer\u003e taskHash) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        eventTaskList \u003d combineList(events, tasks);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.eventHash \u003d eventHash;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.taskHash \u003d taskHash;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.timelineView.onChange(eventTaskList, eventHash, taskHash);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.calendarScreen.onChange(eventTaskList);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.upcomingView.onChange(eventTaskList);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Returns a combined copy of list for event list and task list into an Object list to be used."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param events Represents the event list."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param tasks Represents the task list."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @return A combined copy of list for event list and task list into an Object list to be used."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private List\u003cObject\u003e combineList(List\u003cEventSource\u003e events, List\u003cTaskSource\u003e tasks) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        List\u003cObject\u003e eventTaskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        Queue\u003cEventSource\u003e tempEvents \u003d new LinkedList\u003c\u003e();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        tempEvents.addAll(events);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        Queue\u003cTaskSource\u003e tempTasks \u003d new LinkedList\u003c\u003e();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        tempTasks.addAll(tasks);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        // Events and Tasks are already sorted, so we need to zip them."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        while (!tempEvents.isEmpty() || !tempTasks.isEmpty()) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            if (tempEvents.isEmpty()) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                eventTaskList.addAll(tempTasks);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            if (tempTasks.isEmpty()) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                eventTaskList.addAll(tempEvents);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            EventSource event \u003d tempEvents.peek();"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            TaskSource task \u003d tempTasks.peek();"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            if (task.isDone() || task.getDueDate() \u003d\u003d null) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                tempTasks.poll();"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            int dateCompare \u003d event.getStartDateTime().compareTo(task.getDueDate());"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            if (dateCompare \u003d\u003d 0) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                if (event.getDescription().compareTo(task.getDescription()) \u003c\u003d 0) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    eventTaskList.add(tempEvents.poll());"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    eventTaskList.add(tempTasks.poll());"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            } else if (dateCompare \u003c 0) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                eventTaskList.add(tempEvents.poll());"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                eventTaskList.add(tempTasks.poll());"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return eventTaskList;"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 191
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/panel/calendar/CalendarScreen.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package seedu.address.ui.panel.calendar;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.layout.GridPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.layout.StackPane;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.CalendarDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.DateTime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.events.EventSource;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.tasks.TaskSource;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.UiPart;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "//@@author Kyzure"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * An Ui that represents an actual calendar of a month."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "public class CalendarScreen extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private static final String FXML \u003d \"CalendarScreen.fxml\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private CalendarDate calendarDate;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private ArrayList\u003cCalendarGridDay\u003e dayIndexList;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private GridPane calendarGrid;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private Label monthYearTitle;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private StackPane details;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Constructor for CalendarScreen that adds a month and year to form the calendar."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param calendarDate Represents a date of the calendar."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public CalendarScreen(CalendarDate calendarDate) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.calendarDate \u003d calendarDate.firstDayOfTheMonth();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.dayIndexList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.monthYearTitle.setText(calendarDate.getEnglishMonth() + \" \" + calendarDate.getYear());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        resetCalendar();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        setCurrentDate();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Fills the index of the calendar and resets when needed to."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private void resetCalendar() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        Integer weekIndex \u003d calendarDate.getWeekIndex();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        CalendarDate currentDate \u003d calendarDate.previousDays(weekIndex - 1);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        // Week represents the row."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        for (int week \u003d 0; week \u003c 6; week++) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            // Day represents the column."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            for (int day \u003d 0; day \u003c 7; day++) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                CalendarGridDay calendarGridDay \u003d new CalendarGridDay(currentDate, 0);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                if (!calendarDate.sameMonthYear(currentDate.getMonth(), currentDate.getYear())) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    calendarGridDay.reduceOpacity();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    dayIndexList.add(calendarGridDay);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                calendarGrid.add(calendarGridDay.getRoot(), day, week);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                currentDate \u003d currentDate.nextDay();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Changes the color scheme for each day of the calendar screen."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param eventTaskList The list of events and list."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public void onChange(List\u003cObject\u003e eventTaskList) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        changeColor(eventTaskList);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Changes the color of the current month to indicate the color of the event by adding"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * events to the given CalendarGridDay."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param eventTaskList The given list of events and tasks."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @see CalendarGridDay"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private void changeColor(List\u003cObject\u003e eventTaskList) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        // We do not want to change the color of next and previous month."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        resetColor();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        for (Object source : eventTaskList) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            if (source instanceof EventSource) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                EventSource event \u003d (EventSource) source;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                DateTime eventDateTime \u003d event.getStartDateTime();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                if (calendarDate.sameMonthYear(eventDateTime.getMonth(), eventDateTime.getYear())) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    Integer day \u003d eventDateTime.getDay();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    dayIndexList.get(day - 1).increaseIntensity();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            } else if (source instanceof TaskSource) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                TaskSource task \u003d (TaskSource) source;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                DateTime taskDateTime \u003d task.getDueDate();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                if (taskDateTime \u003d\u003d null) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                if (calendarDate.sameMonthYear(taskDateTime.getMonth(), taskDateTime.getYear())) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    Integer day \u003d taskDateTime.getDay();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    dayIndexList.get(day - 1).increaseIntensity();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private void setCurrentDate() {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        CalendarDate currentDate \u003d CalendarDate.now();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        if (currentDate.sameMonthYear(calendarDate.getMonth(), calendarDate.getYear())) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            dayIndexList.get(currentDate.getDay() - 1).setCurrentDate();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private void resetColor() {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        for (CalendarGridDay day : dayIndexList) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            day.resetColor();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 129
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/panel/calendar/TimelineDayView.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package seedu.address.ui.panel.calendar;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.layout.RowConstraints;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.CalendarDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.DateTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.events.EventSource;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.tasks.TaskSource;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.card.CardHolder;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.card.EventCard;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.card.TaskCard;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "//@@author Kyzure"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * An UI component that displays the feedback to the user."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "public class TimelineDayView extends TimelineView {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private static final String FXML \u003d \"TimelineDayView.fxml\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private CalendarDate calendarDate;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Constructor for TimelineDayView for a particular day."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param calendarDate Represents the given or current date."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param eventTaskList Represents the current list of events and task."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public TimelineDayView(CalendarDate calendarDate,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                           List\u003cObject\u003e eventTaskList,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                           HashMap\u003cEventSource, Integer\u003e eventHash,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                           HashMap\u003cTaskSource, Integer\u003e taskHash) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.calendarDate \u003d calendarDate;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        setTotalRows(24);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        setTimelineTitle(\"Timeline: \""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                + calendarDate.getDay() + \" \""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                + calendarDate.getEnglishMonth() + \" \""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                + calendarDate.getYear());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        addGrids();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        addLabels(getLabels());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        addEventCardHolders();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        onChange(eventTaskList, eventHash, taskHash);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Returns an array of String containing the times of a Day."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @return Returns an array of String containing the times of a Day."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private String[] getLabels() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        String[] labels \u003d new String[24];"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        for (int time \u003d 0; time \u003c 10; time++) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            labels[time] \u003d \"0\" + time + \":00\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        for (int time \u003d 10; time \u003c 24; time++) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            labels[time] \u003d time + \":00\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return labels;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    void addEventCard(EventSource event, Integer eventIndex) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        Integer eventHour \u003d event.getStartDateTime().getHour();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        EventCard eventCard \u003d new EventCard(event, eventIndex);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        CardHolder eventCardHolder \u003d getCardHolder().get(eventHour);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        eventCardHolder.addCard(eventCard);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        // Set Constraints for the grid pane"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        RowConstraints rowConstraints \u003d getTimelineGrid().getRowConstraints().get(eventHour);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        updateSizeDelay(rowConstraints, eventCardHolder);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    void addTaskCard(TaskSource task, Integer taskIndex) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        Integer taskHour \u003d task.getDueDate().getHour();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        TaskCard taskCard \u003d new TaskCard(task, taskIndex);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        CardHolder cardHolder \u003d getCardHolder().get(taskHour);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        cardHolder.addCard(taskCard);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        // Set Constraints for the grid pane"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        RowConstraints rowConstraints \u003d getTimelineGrid().getRowConstraints().get(taskHour);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        updateSizeDelay(rowConstraints, cardHolder);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    boolean isWithinTimeline(EventSource event) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        DateTime eventDateTime \u003d event.getStartDateTime();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return calendarDate.sameDate(eventDateTime.getDay(), eventDateTime.getMonth(), eventDateTime.getYear());"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    boolean isWithinTimeline(TaskSource task) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        DateTime taskDueDate \u003d task.getDueDate();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return calendarDate.sameDate(taskDueDate.getDay(), taskDueDate.getMonth(), taskDueDate.getYear());"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 104
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/panel/calendar/TimelineLabel.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package seedu.address.ui.panel.calendar;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.UiPart;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "//@@author Kyzure"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * An UI that represents the details for an event."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "public class TimelineLabel extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private static final String FXML \u003d \"TimelineLabel.fxml\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private Label timelineLabel;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public TimelineLabel(String label) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.timelineLabel.setText(label);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 24
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/panel/calendar/TimelineMonthView.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package seedu.address.ui.panel.calendar;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.layout.RowConstraints;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.CalendarDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.DateTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.events.EventSource;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.tasks.TaskSource;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.card.CardHolder;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.card.EventCard;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.card.TaskCard;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "//@@author Kyzure"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * An UI component that displays the feedback to the user."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "public class TimelineMonthView extends TimelineView {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private static final String FXML \u003d \"TimelineMonthView.fxml\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private CalendarDate calendarDate;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Constructor for TimelineMonthView for a particular month."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param calendarDate Represents the given date."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param eventTaskList Represents the current list of events and tasks."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public TimelineMonthView(CalendarDate calendarDate,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                             List\u003cObject\u003e eventTaskList,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                             HashMap\u003cEventSource, Integer\u003e eventHash,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                             HashMap\u003cTaskSource, Integer\u003e taskHash) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.calendarDate \u003d calendarDate;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        setTotalRows(calendarDate.lengthOfMonth());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        setTimelineTitle(\"Timeline: \" + calendarDate.getEnglishMonth() + \" \" + calendarDate.getYear());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        addGrids();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        addLabels(getLabels());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        addEventCardHolders();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        onChange(eventTaskList, eventHash, taskHash);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Returns an array of String containing values of the Month."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @return Returns an array of String containing values of the Month."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private String[] getLabels() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        String[] labels \u003d new String[getTotalRows()];"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        for (Integer day \u003d 0; day \u003c getTotalRows(); day++) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            labels[day] \u003d String.valueOf(day + 1);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return labels;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    void addEventCard(EventSource event, Integer eventIndex) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        // Gets the event Hour"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        Integer eventDay \u003d event.getStartDateTime().getDay();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        EventCard eventCard \u003d new EventCard(event, eventIndex);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        CardHolder eventCardHolder \u003d getCardHolder().get(eventDay - 1);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        eventCardHolder.addCard(eventCard);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        // Set Constraints for the grid pane"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        RowConstraints rowConstraints \u003d getTimelineGrid().getRowConstraints().get(eventDay - 1);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        updateSizeDelay(rowConstraints, eventCardHolder);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    void addTaskCard(TaskSource task, Integer taskIndex) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        // Gets the event Hour"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        Integer taskDay \u003d task.getDueDate().getDay();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        TaskCard taskCard \u003d new TaskCard(task, taskIndex);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        CardHolder eventCardHolder \u003d getCardHolder().get(taskDay - 1);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        eventCardHolder.addCard(taskCard);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        // Set Constraints for the grid pane"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        RowConstraints rowConstraints \u003d getTimelineGrid().getRowConstraints().get(taskDay - 1);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        updateSizeDelay(rowConstraints, eventCardHolder);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    boolean isWithinTimeline(EventSource event) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        DateTime eventDateTime \u003d event.getStartDateTime();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return calendarDate.sameMonthYear(eventDateTime.getMonth(), eventDateTime.getYear());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    boolean isWithinTimeline(TaskSource task) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        DateTime taskDueDate \u003d task.getDueDate();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return calendarDate.sameMonthYear(taskDueDate.getMonth(), taskDueDate.getYear());"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 99
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/panel/calendar/TimelineView.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package seedu.address.ui.panel.calendar;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.concurrent.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.concurrent.WorkerStateEvent;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.event.EventHandler;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.geometry.VPos;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.layout.GridPane;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.layout.RowConstraints;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.events.EventSource;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.tasks.TaskSource;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.MainWindow;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.UiPart;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.card.CardHolder;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.card.EventCard;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "//@@author Kyzure"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * Represents an abstract class for the different timelines placed in the CalendarPanel."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * Currently there are 3 types of timeline - day, week and month."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * @see TimelineDayView"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * @see TimelineWeekView"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * @see TimelineMonthView"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "public abstract class TimelineView extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private static final Integer SPACING \u003d 62;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private ArrayList\u003cCardHolder\u003e cardHolders;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private Integer totalRows;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private Label timelineTitle;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private GridPane timelineGrid;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    TimelineView(String fxml) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        super(fxml);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Initializes the timeline by adding cardholders to hold the EventCards."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @see CardHolder ;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    void addEventCardHolders() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.cardHolders \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        for (int row \u003d 0; row \u003c totalRows; row++) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            CardHolder eventCardHolder \u003d new CardHolder();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            cardHolders.add(eventCardHolder);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            timelineGrid.add(eventCardHolder.getRoot(), 1, row);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Re-sizes the timeline view panel by setting all the RowConstraints sizes to be the same"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * height as the it\u0027s EventCardHolders, with an additional spacing."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @see RowConstraints"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    void resizeTimelineView() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        for (int row \u003d 0; row \u003c totalRows; row++) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            CardHolder eventCardHolder \u003d cardHolders.get(row);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            RowConstraints rowConstraints \u003d timelineGrid.getRowConstraints().get(row);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            rowConstraints.setPrefHeight(eventCardHolder.getHeight() + SPACING);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Updates the current row\u0027s constraints height after a certain delay so to obtain the"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * updated height of the EventCardHolder."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param rowConstraints The current row constraints."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param eventCardHolder The current EventCardHolder to obtain the height."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    void updateSizeDelay(RowConstraints rowConstraints, CardHolder eventCardHolder) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        Task\u003cVoid\u003e sleeper \u003d new Task\u003cVoid\u003e() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            @Override"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            protected Void call() throws Exception {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    Thread.sleep(MainWindow.TIMING);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                } catch (InterruptedException e) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    throw new Exception(e.getMessage());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                return null;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        };"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        sleeper.setOnSucceeded(new EventHandler\u003cWorkerStateEvent\u003e() {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            @Override"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            public void handle(WorkerStateEvent event) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                rowConstraints.setPrefHeight(eventCardHolder.getHeight() + SPACING);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        });"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        new Thread(sleeper).start();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Adds an array of labels into the Grid Pane."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param labels The labels to be added into the Grid Pane."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    void addLabels(String ...labels) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        int row \u003d 0;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        for (String label : labels) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            TimelineLabel timelineLabel \u003d new TimelineLabel(label);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            timelineGrid.add(timelineLabel.getRoot(), 0, row);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            row++;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Adds a set of RowConstraints into the Grid Pane."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @see RowConstraints"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    void addGrids() {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        for (int row \u003d 0; row \u003c totalRows; row++) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            RowConstraints rowConstraints \u003d new RowConstraints();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            rowConstraints.setValignment(VPos.TOP);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            rowConstraints.setPrefHeight(100);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            rowConstraints.setMinHeight(100);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            timelineGrid.getRowConstraints().add(rowConstraints);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Changes the timeline by resetting it with the new list of events."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param eventTaskList The given event list containing all the events and tasks."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    void onChange(List\u003cObject\u003e eventTaskList,"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  HashMap\u003cEventSource, Integer\u003e eventHash,"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  HashMap\u003cTaskSource, Integer\u003e taskHash) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        resetTimeline();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        for (Object source : eventTaskList) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            if (source instanceof EventSource) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                EventSource event \u003d (EventSource) source;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                if (isWithinTimeline(event)) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    addEventCard(event, eventHash.get(event));"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            } else if (source instanceof TaskSource) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                TaskSource task \u003d (TaskSource) source;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                if (task.getDueDate() \u003d\u003d null) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                if (isWithinTimeline(task)) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    addTaskCard(task, taskHash.get(task));"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Resets the timeline by removing all of the EventCardHolders\u0027 EventCard."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private void resetTimeline() {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        for (int row \u003d 0; row \u003c totalRows; row++) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            // Reset RowConstraints"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            RowConstraints rowConstraints \u003d timelineGrid.getRowConstraints().get(row);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            rowConstraints.setPrefHeight(0);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            // Reset EventCards for each hour"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            cardHolders.get(row).removeCards();"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Creates an EventCard and adds it to the current timeline."
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param event The given event."
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @see EventCard"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    abstract void addEventCard(EventSource event, Integer eventIndex);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    abstract void addTaskCard(TaskSource task, Integer taskIndex);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Returns a boolean that checks if the given date of the event is within the particular timeline."
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param event The given event."
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @return a boolean that checks if the given date of the event is within the particular timeline."
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    abstract boolean isWithinTimeline(EventSource event);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    abstract boolean isWithinTimeline(TaskSource task);"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    // Getters"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    ArrayList\u003cCardHolder\u003e getCardHolder() {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return this.cardHolders;"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    GridPane getTimelineGrid() {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return this.timelineGrid;"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    Integer getTotalRows() {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return this.totalRows;"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    // Setters"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    void setTotalRows(int totalRows) {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.totalRows \u003d totalRows;"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    void setTimelineTitle(String timelineTitle) {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.timelineTitle.setText(timelineTitle);"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 218
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/panel/calendar/TimelineWeekView.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package seedu.address.ui.panel.calendar;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.text.DateFormatSymbols;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.layout.RowConstraints;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.CalendarDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.DateTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.events.EventSource;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.tasks.TaskSource;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.card.CardHolder;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.card.EventCard;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.card.TaskCard;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "//@@author Kyzure"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * An UI component that displays the feedback to the user."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "public class TimelineWeekView extends TimelineView {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private static final String FXML \u003d \"TimelineWeekView.fxml\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private CalendarDate[] daysInWeek;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private CalendarDate calendarDate;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Constructor for TimelineWeekView for a particular week."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param calendarDate Represents the calendarDate given by the user."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param eventTaskList Represents the current list of events and tasks."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public TimelineWeekView(CalendarDate calendarDate,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                            List\u003cObject\u003e eventTaskList,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                            HashMap\u003cEventSource, Integer\u003e eventHash,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                            HashMap\u003cTaskSource, Integer\u003e taskHash) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.calendarDate \u003d calendarDate;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        setTotalRows(7);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        setTimelineTitle(\"Timeline: \""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                + getEnglishWeekDate(getWeek(calendarDate), calendarDate.getMonth(), calendarDate.getYear()));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.daysInWeek \u003d addWeek();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        addGrids();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        addLabels(getLabels());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        addEventCardHolders();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        onChange(eventTaskList, eventHash, taskHash);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Returns an array of String containing values of the week."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @return Returns an array of String containing values of the week."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private String[] getLabels() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return new String[] {\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"};"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Returns an array of CalendarDate representing the list of days in the same week as the given day."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @return An array of CalendarDate representing the list of days in the same week as the given day."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private CalendarDate[] addWeek() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        CalendarDate[] calendarDates \u003d new CalendarDate[7];"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        int weekIndex \u003d calendarDate.getWeekIndex();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        while (weekIndex \u003e 1) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            calendarDate \u003d calendarDate.previousDay();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            weekIndex--;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        for (int i \u003d 0; i \u003c calendarDates.length; i++) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            calendarDates[i] \u003d calendarDate;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            calendarDate \u003d calendarDate.nextDay();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return calendarDates;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private Integer getWeek(CalendarDate calendarDate) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        CalendarDate currentDate \u003d calendarDate.firstDayOfTheMonth();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        Integer weekIndex \u003d currentDate.getWeekIndex();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        currentDate \u003d currentDate.previousDays(weekIndex - 1);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        for (int week \u003d 0; week \u003c 6; week++) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            for (int day \u003d 0; day \u003c 7; day++) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                if (calendarDate.equals(currentDate)) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    return week + 1;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                currentDate \u003d currentDate.nextDay();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        // Not suppose to reach here."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private String getEnglishWeekDate(Integer week, Integer month, Integer year) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        String monthStr \u003d new DateFormatSymbols().getMonths()[month - 1].toLowerCase();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        monthStr \u003d monthStr.substring(0, 1).toUpperCase() + monthStr.substring(1);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return \"Week \" + week + \" of \" + monthStr + \" \" + year;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    void addEventCard(EventSource event, Integer eventIndex) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        // Creates and add the event card"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        int eventWeekIndex \u003d event.getStartDateTime().getWeek();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        EventCard eventCard \u003d new EventCard(event, eventIndex);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        CardHolder eventCardHolder \u003d getCardHolder().get(eventWeekIndex - 1);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        eventCardHolder.addCard(eventCard);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        // Set Constraints for the grid pane"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        RowConstraints rowConstraints \u003d getTimelineGrid().getRowConstraints().get(eventWeekIndex - 1);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        updateSizeDelay(rowConstraints, eventCardHolder);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    void addTaskCard(TaskSource task, Integer taskIndex) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        // Creates and add the event card"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        int taskWeekIndex \u003d task.getDueDate().getWeek();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        TaskCard taskCard \u003d new TaskCard(task, taskIndex);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        CardHolder eventCardHolder \u003d getCardHolder().get(taskWeekIndex - 1);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        eventCardHolder.addCard(taskCard);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        // Set Constraints for the grid pane"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        RowConstraints rowConstraints \u003d getTimelineGrid().getRowConstraints().get(taskWeekIndex - 1);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        updateSizeDelay(rowConstraints, eventCardHolder);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    boolean isWithinTimeline(EventSource event) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        DateTime eventDate \u003d event.getStartDateTime();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        for (CalendarDate calendarDate : daysInWeek) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            // Same day"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            if (calendarDate.sameDate("
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    eventDate.getDay(),"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    eventDate.getMonth(),"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    eventDate.getYear())) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    boolean isWithinTimeline(TaskSource task) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        DateTime taskDueDate \u003d task.getDueDate();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        for (CalendarDate calendarDate : daysInWeek) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            // Same day"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            if (calendarDate.sameDate("
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    taskDueDate.getDay(),"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    taskDueDate.getMonth(),"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    taskDueDate.getYear())) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 160
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/panel/calendar/UpcomingView.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package seedu.address.ui.panel.calendar;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.layout.GridPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.CalendarDate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.DateTime;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.events.EventSource;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.tasks.TaskSource;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.UiPart;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.card.UpcomingEventCard;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.card.UpcomingTaskCard;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "//@@author Kyzure"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * An UI that represents the upcoming event or task displayed to the user."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "public class UpcomingView extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private static final String FXML \u003d \"UpcomingView.fxml\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private CalendarDate currentDate;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private GridPane upcomingViewBase;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private Label upcomingViewTitle;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private VBox upcomingList;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public UpcomingView(List\u003cObject\u003e eventTaskList) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        currentDate \u003d CalendarDate.now();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        upcomingViewTitle.setText(\"Upcoming in \" + currentDate.getEnglishMonth());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        onChange(eventTaskList);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Updates the upcoming list to hold up to a certain amount of events or task."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param eventTaskList The given list of tasks and events."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public void onChange(List\u003cObject\u003e eventTaskList) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        int index \u003d 0;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        upcomingList.getChildren().clear();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        for (Object source : eventTaskList) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            if (source instanceof EventSource) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                EventSource event \u003d (EventSource) source;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                DateTime eventDate \u003d event.getStartDateTime();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                if (currentDate.sameMonthYear(eventDate.getMonth(), eventDate.getYear())"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        \u0026\u0026 currentDate.getDay() \u003c\u003d eventDate.getDay()) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    UpcomingEventCard eventCard \u003d new UpcomingEventCard(event);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    upcomingList.getChildren().add(eventCard.getRoot());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    index++;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            } else if (source instanceof TaskSource) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                TaskSource task \u003d (TaskSource) source;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                DateTime taskDate \u003d task.getDueDate();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                if (taskDate !\u003d null"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        \u0026\u0026 currentDate.sameMonthYear(taskDate.getMonth(), taskDate.getYear())"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        \u0026\u0026 currentDate.getDay() \u003c\u003d taskDate.getDay()) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    UpcomingTaskCard taskCard \u003d new UpcomingTaskCard(task);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    upcomingList.getChildren().add(taskCard.getRoot());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    index++;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 77
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/panel/list/EventListPanel.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package seedu.address.ui.panel.list;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.events.EventSource;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.UiPart;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.card.EventCard;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "//@@author Kyzure"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * Represents the Event List to display the events."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "public class EventListPanel extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private static final String FXML \u003d \"EventListPanel.fxml\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private VBox eventList;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public EventListPanel() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Changes the Event List Panel according to the given List of Events."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param events The given List of Events."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public void onEventListChange(List\u003cEventSource\u003e events, HashMap\u003cEventSource, Integer\u003e eventHash) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.eventList.getChildren().clear();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        for (EventSource event : events) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            EventCard eventCard \u003d new EventCard(event, eventHash.get(event));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            eventList.getChildren().add(eventCard.getRoot());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 40
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/panel/list/ListPanel.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.ui.panel.list;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.layout.GridPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.layout.StackPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.events.EventSource;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.tasks.TaskSource;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.ui.UiPart;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "//@@author Kyzure"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * An Ui that stores the logged feedback from the program to the user."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "public class ListPanel extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private static final String FXML \u003d \"ListPanel.fxml\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private EventListPanel eventListPanel;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private TaskListPanel taskListPanel;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private GridPane listPanelGrid;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private StackPane eventListPlaceholder;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private StackPane taskListPlaceholder;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Constructor for ListPanel"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public ListPanel() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        eventListPanel \u003d new EventListPanel();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        taskListPanel \u003d new TaskListPanel();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        eventListPlaceholder.getChildren().add(eventListPanel.getRoot());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        taskListPlaceholder.getChildren().add(taskListPanel.getRoot());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public void onEventListChange(List\u003cEventSource\u003e events, HashMap\u003cEventSource, Integer\u003e eventHash) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        eventListPanel.onEventListChange(events, eventHash);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public void onTaskListChange(List\u003cTaskSource\u003e tasks, HashMap\u003cTaskSource, Integer\u003e taskHash) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        taskListPanel.onTaskListChange(tasks, taskHash);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 45,
      "WeomuCat": 9
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/panel/list/TaskListPanel.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package seedu.address.ui.panel.list;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.tasks.TaskSource;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.UiPart;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.card.TaskCard;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "//@@author Kyzure"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * Represents the a Task List to be displayed to the user."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "public class TaskListPanel extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private static final String FXML \u003d \"TaskListPanel.fxml\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private VBox taskList;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public TaskListPanel() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Changes the Event List Panel according to the given List of Tasks."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param tasks The given List of Tasks."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public void onTaskListChange(List\u003cTaskSource\u003e tasks, HashMap\u003cTaskSource, Integer\u003e taskHash) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.taskList.getChildren().clear();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        for (TaskSource task : tasks) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            TaskCard taskCard \u003d new TaskCard(task, taskHash.get(task));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            taskList.getChildren().add(taskCard.getRoot());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 41
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/panel/log/LogBox.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package seedu.address.ui.panel.log;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.UiPart;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "//@@author Kyzure"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * An UI component that displays the feedback to the user."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "public class LogBox extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private static final String FXML \u003d \"LogBox.fxml\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private Label box;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Constructor for LogBox. It is a dialog box that contains the feedback from the program to the user."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param feedbackToUser The feedback from the program to the user."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public LogBox(String feedbackToUser, String color) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        box.setText(feedbackToUser);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        box.setStyle(\"-fx-background-color: \" + color);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 28
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/panel/log/LogPanel.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package seedu.address.ui.panel.log;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.UiPart;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "//@@author Kyzure"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * An Ui that stores the logged feedback from the program to the user."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "public class LogPanel extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private static final String FXML \u003d \"LogPanel.fxml\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private VBox boxLog;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private ScrollPane scrollLog;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Constructor for the LogPanel. Sets the size of the LogPanel to the user\u0027s screen size."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public LogPanel() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Creates an instance of LogBox."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param feedbackToUser To provide the Log Box the feedback to the user."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public void createLogBox(String feedbackToUser, String color) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        requireNonNull(feedbackToUser);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        LogBox logBox \u003d new LogBox(feedbackToUser, color);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        boxLog.getChildren().add(logBox.getRoot());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 43
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/stub/CalendarPanelStub.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package seedu.address.ui.stub;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.util.LinkedList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.util.Queue;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.events.EventSource;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.tasks.TaskSource;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.panel.calendar.CalendarPanel;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "//@@author Kyzure"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * Represents a stub for CalendarPanel that is mainly used for testing purpose only."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * @see CalendarPanel"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "class CalendarPanelStub {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Returns a combined copy of list for event list and task list into an Object list to be used."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * This is a version modified mainly for testing. The logic behind it is the exact same."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param events Represents the event list."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param tasks Represents the task list."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @return A combined copy of list for event list and task list into an Object list to be used."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public List\u003cObject\u003e combineList(List\u003cEventSource\u003e events, List\u003cTaskSource\u003e tasks) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        List\u003cObject\u003e eventTaskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        Queue\u003cEventSource\u003e tempEvents \u003d new LinkedList\u003c\u003e();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        tempEvents.addAll(events);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        Queue\u003cTaskSource\u003e tempTasks \u003d new LinkedList\u003c\u003e();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        tempTasks.addAll(tasks);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        // Events and Tasks are already sorted, so we need to zip them."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        while (!tempEvents.isEmpty() || !tempTasks.isEmpty()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            if (tempEvents.isEmpty()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                eventTaskList.addAll(tempTasks);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            if (tempTasks.isEmpty()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                eventTaskList.addAll(tempEvents);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            EventSource event \u003d tempEvents.peek();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            TaskSource task \u003d tempTasks.peek();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            if (task.isDone() || task.getDueDate() \u003d\u003d null) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                tempTasks.poll();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            int dateCompare \u003d event.getStartDateTime().compareTo(task.getDueDate());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            if (dateCompare \u003d\u003d 0) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                if (event.getDescription().compareTo(task.getDescription()) \u003c\u003d 0) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    eventTaskList.add(tempEvents.poll());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    eventTaskList.add(tempTasks.poll());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            } else if (dateCompare \u003c 0) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                eventTaskList.add(tempEvents.poll());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                eventTaskList.add(tempTasks.poll());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return eventTaskList;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 70
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/stub/TimelineWeekViewStub.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package seedu.address.ui.stub;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.text.DateFormatSymbols;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.CalendarDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.panel.calendar.TimelineWeekView;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "//@@author Kyzure"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * Represents a stub for testing purpose for TimelineWeekView."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * @see TimelineWeekView"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "class TimelineWeekViewStub {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private CalendarDate calendarDate;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public TimelineWeekViewStub() {}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public TimelineWeekViewStub(CalendarDate calendarDate) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.calendarDate \u003d calendarDate;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Returns the list of dates of the given week. Main purpose is for testing."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @return A list of dates."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public CalendarDate[] addWeek() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        CalendarDate[] calendarDates \u003d new CalendarDate[7];"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        int weekIndex \u003d calendarDate.getWeekIndex();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        while (weekIndex \u003e 1) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            calendarDate \u003d calendarDate.previousDay();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            weekIndex--;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        for (int i \u003d 0; i \u003c calendarDates.length; i++) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            calendarDates[i] \u003d calendarDate;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            calendarDate \u003d calendarDate.nextDay();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return calendarDates;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public Integer getWeek(CalendarDate calendarDate) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        CalendarDate currentDate \u003d calendarDate.firstDayOfTheMonth();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        Integer weekIndex \u003d currentDate.getWeekIndex();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        currentDate \u003d currentDate.previousDays(weekIndex - 1);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        for (int week \u003d 0; week \u003c 6; week++) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            for (int day \u003d 0; day \u003c 7; day++) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                if (calendarDate.equals(currentDate)) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    return week + 1;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                currentDate \u003d currentDate.nextDay();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        // Not suppose to reach here."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public String getEnglishWeekDate(Integer week, Integer month, Integer year) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        String monthStr \u003d new DateFormatSymbols().getMonths()[month - 1].toLowerCase();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        monthStr \u003d monthStr.substring(0, 1).toUpperCase() + monthStr.substring(1);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return \"Week \" + week + \" of \" + monthStr + \" \" + year;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 64
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/stub/UiManagerStub.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package seedu.address.ui.stub;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.logic.UiManager;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.CalendarDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.ModelData;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.events.EventDateComparator;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.events.EventSource;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.tasks.TaskDateComparator;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.tasks.TaskSource;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "//@@author Kyzure"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * Represents a logic class that holds all of the methods that uses logic only that"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * is mainly used for testing."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "public class UiManagerStub extends UiManager {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public void viewDay(CalendarDate calendarDate) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public void viewWeek(CalendarDate calendarDate) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public void viewMonth(CalendarDate calendarDate) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public void viewList() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public void viewLog() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public void viewCalendar(CalendarDate calendarDate) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Returns a ModelLists mainly for testing."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param lists The given model lists."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @return The sorted model lists."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public ModelData overrideOnModelListChange(ModelData lists) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        List\u003cEventSource\u003e sortedDateEventList \u003d sortDateEventList(lists.getEvents());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        List\u003cTaskSource\u003e sortedDateTaskList \u003d sortDateTaskList(lists.getTasks());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        HashMap\u003cEventSource, Integer\u003e eventHash \u003d addEventIndex(lists.getEvents());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        HashMap\u003cTaskSource, Integer\u003e taskHash \u003d addTaskIndex(lists.getTasks());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return new ModelData(sortedDateEventList, sortedDateTaskList);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Returns a copy of the event list sorted by start date."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param events The given event list."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @return A copy of the event list sorted by date."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private List\u003cEventSource\u003e sortDateEventList(List\u003cEventSource\u003e events) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        List\u003cEventSource\u003e sortedDateEventList \u003d new ArrayList\u003c\u003e(events);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        sortedDateEventList.sort(new EventDateComparator());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return sortedDateEventList;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Returns a HashMap based on the indexing of the original event list."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param events The unsorted event list."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @return Returns a HashMap based on the indexing of the original event list"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private HashMap\u003cEventSource, Integer\u003e addEventIndex(List\u003cEventSource\u003e events) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        int backIndex \u003d 0;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        HashMap\u003cEventSource, Integer\u003e eventHash \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        for (EventSource event : events) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            eventHash.put(event, backIndex);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            backIndex++;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return eventHash;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Returns a copy of the task list sorted by due date."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param tasks The given task list."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @return A copy of the task list sorted by due date."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private List\u003cTaskSource\u003e sortDateTaskList(List\u003cTaskSource\u003e tasks) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        List\u003cTaskSource\u003e sortedDateTaskList \u003d new ArrayList\u003c\u003e(tasks);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        sortedDateTaskList.sort(new TaskDateComparator());"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return sortedDateTaskList;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Returns a HashMap based on the indexing of the original event list."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param tasks The unsorted task list."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @return Returns a HashMap based on the indexing of the original task list"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private HashMap\u003cTaskSource, Integer\u003e addTaskIndex(List\u003cTaskSource\u003e tasks) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        int backIndex \u003d 0;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        HashMap\u003cTaskSource, Integer\u003e taskHash \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        for (TaskSource task : tasks) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            taskHash.put(task, backIndex);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            backIndex++;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return taskHash;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 115,
      "WeomuCat": 1
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/systemtray/NotificationClickActionListener.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.ui.systemtray;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import java.awt.event.ActionEvent;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import java.awt.event.ActionListener;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": " * The Listener responding to a Notification being clicked."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "public class NotificationClickActionListener implements ActionListener {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final Logger logger \u003d LogsCenter.getLogger(SystemTrayCommunicator.class);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     * This Listener\u0027s reaction to an ActionEvent it is listening to being called."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     *     Specifically for this class, this is called whenever a notification is clicked on."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     * @param e The ActionEvent that this Listener is listening to."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public void actionPerformed(ActionEvent e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        // This is currently undefined behaviour for the current milestone."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        // This comment should be removed if ever this class\u0027 behaviour is defined."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 24,
      "WeomuCat": 2
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/systemtray/PopupListener.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.ui.systemtray;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * A listener for new popups to be posted"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class PopupListener {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static SystemTrayCommunicator systemTrayCommunicator;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public PopupListener(SystemTrayCommunicator systemTrayCommunicator) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.systemTrayCommunicator \u003d systemTrayCommunicator;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public void notify(PopupNotification popupNotification) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        systemTrayCommunicator.postNewNotification(popupNotification.name, popupNotification.description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 16
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/systemtray/PopupNotification.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.ui.systemtray;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": " * Represents a notification to be posted to the system tray."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "public class PopupNotification {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public final String name;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public final String description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Creates a new PopupNotification with the appropriate name and description."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     * @param name The name to show up when the notification is posted"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     * @param description The description to accompany the name when the notification is posted"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public PopupNotification (String name, String description) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        requireAllNonNull(name, description);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        if (obj instanceof PopupNotification) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            PopupNotification other \u003d (PopupNotification) obj;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            return Objects.equals(this.name, other.name)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                    \u0026\u0026 Objects.equals(this.description, other.description);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 31,
      "WeomuCat": 4
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/systemtray/SystemTrayCommunicator.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.ui.systemtray;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import java.awt.AWTException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import java.awt.Image;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import java.awt.MenuItem;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import java.awt.PopupMenu;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import java.awt.SystemTray;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import java.awt.Toolkit;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import java.awt.TrayIcon;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import java.awt.TrayIcon.MessageType;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.MainApp;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": " * Controls interactions between the main program and the System Tray."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "public class SystemTrayCommunicator {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final Logger logger \u003d LogsCenter.getLogger(SystemTrayCommunicator.class);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    private static final String TRAY_ICON_NAME \u003d \"Horo\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    private static final String TRAY_ICON_IMAGE_PATH \u003d \"/images/system_tray_icon.png\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    private static final String NOTIFICATIONS_ON_TOOLTIP \u003d \"Notifications switched on\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    private static final String NOTIFICATIONS_OFF_TOOLTIP \u003d \"Notifications switched off\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    private static TrayIcon trayIcon;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    private static boolean systemTrayIsSupported;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    private boolean notificationsSwitchedOn \u003d true;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public SystemTrayCommunicator() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.initialise();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     * Sets up the System Tray app, if applicable."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private void initialise() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        systemTrayIsSupported \u003d SystemTray.isSupported();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        if (systemTrayIsSupported) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            logger.info(\"System tray is supported.\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            SystemTray tray \u003d SystemTray.getSystemTray();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            trayIcon \u003d getTrayIcon();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            resetToolTipMessage();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                tray.add(trayIcon);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            } catch (AWTException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                logger.warning(e.toString());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            logger.warning(\"System tray is not supported. Popup notifications will not be posted.\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     * Posts a new notification to the System Tray."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     * @param name The name of the notification."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     * @param description The description of the notification."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public void postNewNotification(String name, String description) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        if (systemTrayIsSupported) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            trayIcon.displayMessage(name, description, MessageType.INFO);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     * Tells the System Tray Communicator that notifications are switched off."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public void switchOnNotifications() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        // This is purely a cosmetic change"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        notificationsSwitchedOn \u003d true;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        resetToolTipMessage();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     * Tells the SystemTrayCommunicator that notifications are switched off."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public void switchOffNotifications() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        // This is purely a cosmetic change"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        notificationsSwitchedOn \u003d false;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        resetToolTipMessage();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     * Changes the tooltip message based on whether notifications are switched on or off."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    private void resetToolTipMessage() {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        if (notificationsSwitchedOn) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            trayIcon.setToolTip(NOTIFICATIONS_ON_TOOLTIP);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            trayIcon.setToolTip(NOTIFICATIONS_OFF_TOOLTIP);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     * Creates a new icon on the System Tray, and returns its reference."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     * @return The reference to a new System Tray icon."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    private static TrayIcon getTrayIcon() {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        TrayIcon trayIcon \u003d new TrayIcon(getImage(), TRAY_ICON_NAME, getPopupMenu());"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        trayIcon.addActionListener(getNotificationClickActionListener());"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        return trayIcon;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     * Locates and returns the image to be used as the Tray Icon."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     * @return the image to be used as the Tray Icon."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    private static Image getImage() {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        return Toolkit.getDefaultToolkit().getImage(MainApp.class.getResource(TRAY_ICON_IMAGE_PATH));"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     * Creates and returns the PopupMenu designed for this app."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     * @return The PopupMenu designed for the System Tray app."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    private static PopupMenu getPopupMenu() {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        PopupMenu popup \u003d new PopupMenu();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        // Create pop-up menu items"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        MenuItem aboutItem \u003d new MenuItem(\"Hi this is Horo.\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        // Add created items to the pop-up menu"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        popup.add(aboutItem);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        return popup;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     * Creates and returns an instance of the ClickActionListener used for this app."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     *     The listener will be called whenever the user clicks on a notification."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     * @return An instance of the ClickActionListener used for this app."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    private static NotificationClickActionListener getNotificationClickActionListener() {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        return new NotificationClickActionListener();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 140,
      "WeomuCat": 7
    }
  },
  {
    "path": "src/main/resources/view/Calendar.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.ColumnConstraints?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.GridPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.RowConstraints?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.StackPane?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c!-- @@author Kyzure --\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003cVBox fx:id\u003d\"calendarBase\" style\u003d\"-fx-background-radius: 8;\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003cStackPane minHeight\u003d\"50.0\"\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003cchildren\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cLabel fx:id\u003d\"monthYearTitle\" text\u003d\"\\$month\" textFill\u003d\"WHITE\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003cfont\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cFont size\u003d\"14.0\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/font\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003c/Label\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003c/children\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003cStackPane\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003cchildren\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cGridPane minHeight\u003d\"25.0\"\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003ccolumnConstraints\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cColumnConstraints halignment\u003d\"CENTER\" hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"50.0\" minWidth\u003d\"50.0\" prefWidth\u003d\"50.0\" /\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cColumnConstraints halignment\u003d\"CENTER\" hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"50.0\" minWidth\u003d\"50.0\" prefWidth\u003d\"50.0\" /\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cColumnConstraints halignment\u003d\"CENTER\" hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"50.0\" minWidth\u003d\"50.0\" prefWidth\u003d\"50.0\" /\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cColumnConstraints halignment\u003d\"CENTER\" hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"50.0\" minWidth\u003d\"50.0\" prefWidth\u003d\"50.0\" /\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cColumnConstraints halignment\u003d\"CENTER\" hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"50.0\" minWidth\u003d\"50.0\" prefWidth\u003d\"50.0\" /\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cColumnConstraints halignment\u003d\"CENTER\" hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"50.0\" minWidth\u003d\"50.0\" prefWidth\u003d\"50.0\" /\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cColumnConstraints halignment\u003d\"CENTER\" hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"50.0\" minWidth\u003d\"50.0\" prefWidth\u003d\"50.0\" /\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/columnConstraints\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003crowConstraints\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cRowConstraints maxHeight\u003d\"50.0\" minHeight\u003d\"50.0\" prefHeight\u003d\"50.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/rowConstraints\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003cchildren\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cLabel fx:id\u003d\"monday\" contentDisplay\u003d\"CENTER\" text\u003d\"M\" textAlignment\u003d\"CENTER\" textFill\u003d\"WHITE\" /\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cLabel fx:id\u003d\"tuesday\" contentDisplay\u003d\"CENTER\" text\u003d\"T\" textAlignment\u003d\"CENTER\" textFill\u003d\"WHITE\" GridPane.columnIndex\u003d\"1\" /\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cLabel fx:id\u003d\"wednesday\" contentDisplay\u003d\"CENTER\" text\u003d\"W\" textAlignment\u003d\"CENTER\" textFill\u003d\"WHITE\" GridPane.columnIndex\u003d\"2\" /\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cLabel fx:id\u003d\"thursday\" contentDisplay\u003d\"CENTER\" text\u003d\"T\" textAlignment\u003d\"CENTER\" textFill\u003d\"WHITE\" GridPane.columnIndex\u003d\"3\" /\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cLabel fx:id\u003d\"friday\" contentDisplay\u003d\"CENTER\" text\u003d\"F\" textAlignment\u003d\"CENTER\" textFill\u003d\"WHITE\" GridPane.columnIndex\u003d\"4\" /\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cLabel fx:id\u003d\"saturday\" contentDisplay\u003d\"CENTER\" text\u003d\"S\" textAlignment\u003d\"CENTER\" textFill\u003d\"WHITE\" GridPane.columnIndex\u003d\"5\" /\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cLabel fx:id\u003d\"sunday\" contentDisplay\u003d\"CENTER\" text\u003d\"S\" textAlignment\u003d\"CENTER\" textFill\u003d\"WHITE\" GridPane.columnIndex\u003d\"6\" /\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/children\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003c/GridPane\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003c/children\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003cStackPane\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003cchildren\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cGridPane fx:id\u003d\"calendarGrid\" alignment\u003d\"CENTER\"\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003ccolumnConstraints\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cColumnConstraints halignment\u003d\"CENTER\" hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"50.0\" minWidth\u003d\"50.0\" prefWidth\u003d\"50.0\" /\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cColumnConstraints halignment\u003d\"CENTER\" hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"50.0\" minWidth\u003d\"50.0\" prefWidth\u003d\"50.0\" /\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cColumnConstraints halignment\u003d\"CENTER\" hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"50.0\" minWidth\u003d\"50.0\" prefWidth\u003d\"50.0\" /\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cColumnConstraints halignment\u003d\"CENTER\" hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"50.0\" minWidth\u003d\"50.0\" prefWidth\u003d\"50.0\" /\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cColumnConstraints halignment\u003d\"CENTER\" hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"50.0\" minWidth\u003d\"50.0\" prefWidth\u003d\"50.0\" /\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cColumnConstraints halignment\u003d\"CENTER\" hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"50.0\" minWidth\u003d\"50.0\" prefWidth\u003d\"50.0\" /\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cColumnConstraints halignment\u003d\"CENTER\" hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"50.0\" minWidth\u003d\"50.0\" prefWidth\u003d\"50.0\" /\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/columnConstraints\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003crowConstraints\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cRowConstraints maxHeight\u003d\"50.0\" minHeight\u003d\"50.0\" prefHeight\u003d\"50.0\" valignment\u003d\"CENTER\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cRowConstraints maxHeight\u003d\"50.0\" minHeight\u003d\"50.0\" prefHeight\u003d\"50.0\" valignment\u003d\"CENTER\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cRowConstraints maxHeight\u003d\"50.0\" minHeight\u003d\"50.0\" prefHeight\u003d\"50.0\" valignment\u003d\"CENTER\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cRowConstraints maxHeight\u003d\"50.0\" minHeight\u003d\"50.0\" prefHeight\u003d\"50.0\" valignment\u003d\"CENTER\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cRowConstraints maxHeight\u003d\"50.0\" minHeight\u003d\"50.0\" prefHeight\u003d\"50.0\" valignment\u003d\"CENTER\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cRowConstraints maxHeight\u003d\"50.0\" minHeight\u003d\"50.0\" prefHeight\u003d\"50.0\" valignment\u003d\"CENTER\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/rowConstraints\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003cStackPane.margin\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cInsets top\u003d\"20.0\" /\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/StackPane.margin\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003c/GridPane\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003c/children\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c/VBox\u003e"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 78
    }
  },
  {
    "path": "src/main/resources/view/CalendarGridDay.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.StackPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.shape.Circle?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c!-- @@author Kyzure --\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003cStackPane fx:id\u003d\"calendarGridDayBase\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003cCircle fx:id\u003d\"calendarDayCircle\" fill\u003d\"#ff7777\" radius\u003d\"14.0\" stroke\u003d\"#ffffff00\" strokeType\u003d\"INSIDE\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003cLabel fx:id\u003d\"calendarDay\" alignment\u003d\"CENTER\" contentDisplay\u003d\"CENTER\" text\u003d\"\\$\" textAlignment\u003d\"CENTER\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c/StackPane\u003e"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 13
    }
  },
  {
    "path": "src/main/resources/view/CalendarPanel.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.ColumnConstraints?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.GridPane?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.RowConstraints?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.StackPane?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c!-- @@author Kyzure --\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003cVBox xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003cGridPane fx:id\u003d\"calendarPanelGrid\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        \u003ccolumnConstraints\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "          \u003cColumnConstraints /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "          \u003cColumnConstraints fillWidth\u003d\"false\" hgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        \u003c/columnConstraints\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        \u003crowConstraints\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "          \u003cRowConstraints /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "          \u003cRowConstraints vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        \u003c/rowConstraints\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003cchildren\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cStackPane fx:id\u003d\"timelinePlaceholder\" alignment\u003d\"TOP_LEFT\" prefWidth\u003d\"20.0\" GridPane.halignment\u003d\"LEFT\" GridPane.hgrow\u003d\"ALWAYS\" GridPane.rowSpan\u003d\"2\" GridPane.valignment\u003d\"TOP\" GridPane.vgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003cGridPane.margin\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cInsets right\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/GridPane.margin\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cStackPane alignment\u003d\"CENTER_RIGHT\" prefHeight\u003d\"150.0\" prefWidth\u003d\"200.0\" GridPane.columnIndex\u003d\"1\"\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003cchildren\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cVBox fx:id\u003d\"calendarScreenPlaceholder\" alignment\u003d\"CENTER_RIGHT\" fillWidth\u003d\"false\" /\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/children\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003cGridPane.margin\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cInsets /\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/GridPane.margin\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cStackPane fx:id\u003d\"upcomingViewPlaceholder\" alignment\u003d\"CENTER_RIGHT\" prefHeight\u003d\"150.0\" prefWidth\u003d\"200.0\" GridPane.columnIndex\u003d\"1\" GridPane.rowIndex\u003d\"1\"\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003cGridPane.margin\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cInsets top\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/GridPane.margin\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003c/children\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003c/GridPane\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c/VBox\u003e"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 44
    }
  },
  {
    "path": "src/main/resources/view/CalendarScreen.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.ColumnConstraints?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.GridPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.RowConstraints?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.StackPane?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c!-- @@author Kyzure --\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003cVBox fx:id\u003d\"calendarBase\" style\u003d\"-fx-background-radius: 8;\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003cStackPane minHeight\u003d\"35.0\"\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003cchildren\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cLabel fx:id\u003d\"monthYearTitle\" text\u003d\"\\$month\" textFill\u003d\"WHITE\" underline\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003cfont\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cFont size\u003d\"14.0\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/font\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003c/Label\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003c/children\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003cStackPane\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003cchildren\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cGridPane minHeight\u003d\"25.0\"\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003ccolumnConstraints\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cColumnConstraints halignment\u003d\"CENTER\" hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"50.0\" minWidth\u003d\"50.0\" prefWidth\u003d\"50.0\" /\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cColumnConstraints halignment\u003d\"CENTER\" hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"50.0\" minWidth\u003d\"50.0\" prefWidth\u003d\"50.0\" /\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cColumnConstraints halignment\u003d\"CENTER\" hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"50.0\" minWidth\u003d\"50.0\" prefWidth\u003d\"50.0\" /\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cColumnConstraints halignment\u003d\"CENTER\" hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"50.0\" minWidth\u003d\"50.0\" prefWidth\u003d\"50.0\" /\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cColumnConstraints halignment\u003d\"CENTER\" hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"50.0\" minWidth\u003d\"50.0\" prefWidth\u003d\"50.0\" /\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cColumnConstraints halignment\u003d\"CENTER\" hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"50.0\" minWidth\u003d\"50.0\" prefWidth\u003d\"50.0\" /\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cColumnConstraints halignment\u003d\"CENTER\" hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"50.0\" minWidth\u003d\"50.0\" prefWidth\u003d\"50.0\" /\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/columnConstraints\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003crowConstraints\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cRowConstraints maxHeight\u003d\"50.0\" minHeight\u003d\"50.0\" prefHeight\u003d\"50.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/rowConstraints\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003cchildren\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cLabel fx:id\u003d\"monday\" contentDisplay\u003d\"CENTER\" text\u003d\"M\" textAlignment\u003d\"CENTER\" textFill\u003d\"WHITE\" /\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cLabel fx:id\u003d\"tuesday\" contentDisplay\u003d\"CENTER\" text\u003d\"T\" textAlignment\u003d\"CENTER\" textFill\u003d\"WHITE\" GridPane.columnIndex\u003d\"1\" /\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cLabel fx:id\u003d\"wednesday\" contentDisplay\u003d\"CENTER\" text\u003d\"W\" textAlignment\u003d\"CENTER\" textFill\u003d\"WHITE\" GridPane.columnIndex\u003d\"2\" /\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cLabel fx:id\u003d\"thursday\" contentDisplay\u003d\"CENTER\" text\u003d\"T\" textAlignment\u003d\"CENTER\" textFill\u003d\"WHITE\" GridPane.columnIndex\u003d\"3\" /\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cLabel fx:id\u003d\"friday\" contentDisplay\u003d\"CENTER\" text\u003d\"F\" textAlignment\u003d\"CENTER\" textFill\u003d\"WHITE\" GridPane.columnIndex\u003d\"4\" /\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cLabel fx:id\u003d\"saturday\" contentDisplay\u003d\"CENTER\" text\u003d\"S\" textAlignment\u003d\"CENTER\" textFill\u003d\"WHITE\" GridPane.columnIndex\u003d\"5\" /\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cLabel fx:id\u003d\"sunday\" contentDisplay\u003d\"CENTER\" text\u003d\"S\" textAlignment\u003d\"CENTER\" textFill\u003d\"WHITE\" GridPane.columnIndex\u003d\"6\" /\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/children\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003c/GridPane\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003c/children\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003cStackPane\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003cchildren\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cGridPane fx:id\u003d\"calendarGrid\" alignment\u003d\"CENTER\"\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003ccolumnConstraints\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cColumnConstraints halignment\u003d\"CENTER\" hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"50.0\" minWidth\u003d\"50.0\" prefWidth\u003d\"50.0\" /\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cColumnConstraints halignment\u003d\"CENTER\" hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"50.0\" minWidth\u003d\"50.0\" prefWidth\u003d\"50.0\" /\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cColumnConstraints halignment\u003d\"CENTER\" hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"50.0\" minWidth\u003d\"50.0\" prefWidth\u003d\"50.0\" /\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cColumnConstraints halignment\u003d\"CENTER\" hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"50.0\" minWidth\u003d\"50.0\" prefWidth\u003d\"50.0\" /\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cColumnConstraints halignment\u003d\"CENTER\" hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"50.0\" minWidth\u003d\"50.0\" prefWidth\u003d\"50.0\" /\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cColumnConstraints halignment\u003d\"CENTER\" hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"50.0\" minWidth\u003d\"50.0\" prefWidth\u003d\"50.0\" /\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cColumnConstraints halignment\u003d\"CENTER\" hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"50.0\" minWidth\u003d\"50.0\" prefWidth\u003d\"50.0\" /\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/columnConstraints\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003crowConstraints\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cRowConstraints maxHeight\u003d\"50.0\" minHeight\u003d\"50.0\" prefHeight\u003d\"50.0\" valignment\u003d\"CENTER\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cRowConstraints maxHeight\u003d\"50.0\" minHeight\u003d\"50.0\" prefHeight\u003d\"50.0\" valignment\u003d\"CENTER\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cRowConstraints maxHeight\u003d\"50.0\" minHeight\u003d\"50.0\" prefHeight\u003d\"50.0\" valignment\u003d\"CENTER\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cRowConstraints maxHeight\u003d\"50.0\" minHeight\u003d\"50.0\" prefHeight\u003d\"50.0\" valignment\u003d\"CENTER\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cRowConstraints maxHeight\u003d\"50.0\" minHeight\u003d\"50.0\" prefHeight\u003d\"50.0\" valignment\u003d\"CENTER\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cRowConstraints maxHeight\u003d\"50.0\" minHeight\u003d\"50.0\" prefHeight\u003d\"50.0\" valignment\u003d\"CENTER\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/rowConstraints\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003cStackPane.margin\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cInsets top\u003d\"20.0\" /\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/StackPane.margin\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003c/GridPane\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003c/children\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c/VBox\u003e"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 78
    }
  },
  {
    "path": "src/main/resources/view/CardHolder.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.StackPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c!-- @@author Kyzure --\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003cStackPane fx:id\u003d\"eventCardHolderBase\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003cVBox\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cStackPane fx:id\u003d\"line0\" alignment\u003d\"CENTER_LEFT\" maxHeight\u003d\"1.5\" minHeight\u003d\"1.5\" prefHeight\u003d\"1.5\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cInsets left\u003d\"10.0\" right\u003d\"20.0\" top\u003d\"45.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/VBox.margin\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cStackPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003cchildren\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cVBox fx:id\u003d\"timeBox\" spacing\u003d\"2.0\"\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                     \u003cStackPane.margin\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        \u003cInsets /\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                     \u003c/StackPane.margin\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003c/VBox\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/children\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cInsets left\u003d\"10.0\" right\u003d\"20.0\" top\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/VBox.margin\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003c/children\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003c/VBox\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c/StackPane\u003e"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 32
    }
  },
  {
    "path": "src/main/resources/view/CardTag.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c!-- @@author Kyzure --\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003cLabel fx:id\u003d\"cardTag\" text\u003d\"Tag\" wrapText\u003d\"true\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "   \u003cpadding\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003cInsets bottom\u003d\"4.0\" left\u003d\"4.0\" right\u003d\"4.0\" top\u003d\"4.0\" /\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "   \u003c/padding\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c/Label\u003e"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 11
    }
  },
  {
    "path": "src/main/resources/view/CardTagline.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c!-- @@author Kyzure --\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003cHBox fx:id\u003d\"tagline\" spacing\u003d\"5.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" /\u003e"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 6
    }
  },
  {
    "path": "src/main/resources/view/CommandBox.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.StackPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003cStackPane fx:id\u003d\"commandBoxBase\" maxHeight\u003d\"50.0\" minHeight\u003d\"50.0\" prefHeight\u003d\"50.0\" styleClass\u003d\"stack-pane\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "  \u003cTextField fx:id\u003d\"commandTextField\" maxHeight\u003d\"50.0\" minHeight\u003d\"50.0\" onAction\u003d\"#handleCommandEntered\" prefHeight\u003d\"50.0\" promptText\u003d\"Enter command here...\" /\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/StackPane\u003e"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 2,
      "-": 6
    }
  },
  {
    "path": "src/main/resources/view/DarkTheme.css",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/** Constants **/"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "@font-face {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    font-family: Roboto Regular;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    src: url(\"Roboto-Regular.ttf\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "@font-face {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    font-family: Roboto Thin;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    src: url(\"Roboto-Thin.ttf\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "@font-face {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    font-family: Roboto Medium;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    src: url(\"Roboto-Medium.ttf\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "@font-face {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    font-family: Roboto Medium;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    src: url(\"Roboto-MediumItalic.ttf\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ".root {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /** Colors **/"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -backgroundColor: #121212;  /** Default Dark **/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -surfaceColor: #1E1E1E;     /** Lighter Dark **/"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -topColor: #383838;         /** Lightest Dark **/"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -primaryColor: #262833;     /** Dark tinted blue **/"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -logBoxColor: #4ACFAC;      /** Light Green **/"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -errorColor: #CF6679;       /** Red Error **/"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -lineColor: #FF7597;        /** Some Redish Pink **/"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -calendarDayColor: #607080; /** Light Purple Blue Box **/"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -welcomeColor: #7FC9FD;     /** Light Sky Blue **/"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -eventCardColor: #FFAF5F;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -taskCardColor: #b5e6d4;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -taskDoneCardColor: #e4fac3;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -currentDateColor: #0D6B54;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -eventTagColor: #7FC9FD;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -taskTagColor: #E6BEB5;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -taskDoneTagColor: #99FFC0;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -secondaryColor: #FFFFFF;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ".background {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-background-color: #121212;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    background-color: #121212;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ".label {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-family: \"Roboto Regular\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-text-fill: -secondaryColor;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-opacity: 0.9;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ".text-field {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-size: 12pt;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-family: \"Roboto Regular\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "/*"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": " * Metro style Push Button"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": " * Author: Pedro Duque Vieira"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": " * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ".button {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-padding: 5 22 5 22;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-color: #e2e2e2;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-width: 2;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-radius: 0;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: #1d1d1d;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-family: \"Roboto Regular\", Helvetica, Arial, sans-serif;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-size: 11pt;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-text-fill: #d8d8d8;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-insets: 0 0 0 0, 0, 1, 2;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ".button:hover {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: #3a3a3a;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ".button:pressed, .button:default:hover:pressed {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "  -fx-background-color: secondaryColor;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "  -fx-text-fill: #1d1d1d;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ".button:focused {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-border-color: -secondaryColor, -secondaryColor;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-width: 1, 1;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-style: solid, segments(1, 1);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-radius: 0, 0;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-insets: 1 1 1 1, 0;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ".button:disabled, .button:default:disabled {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-opacity: 0.4;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: #1d1d1d;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-text-fill: -secondaryColor;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ".button:default {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: -fx-focus-color;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-text-fill: #ffffff;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ".button:default:hover {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: derive(-fx-focus-color, 30%);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ".scroll-bar {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: derive(#1d1d1d, 20%);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ".scroll-bar .thumb {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: derive(#1d1d1d, 50%);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-insets: 3;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ".scroll-bar .increment-button, .scroll-bar .decrement-button {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: transparent;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-padding: 0 0 0 0;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-shape: \" \";"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-padding: 1 8 1 8;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": ".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-padding: 8 1 8 1;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ".scroll-pane {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-background: -surfaceColor;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-background-color: -surfaceColor;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "#cardPane {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: transparent;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-width: 0;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "#commandTypeLabel {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-size: 11px;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-text-fill: #F70D1A;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "#commandTextField {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-background-color: transparent #1F1F1F;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-insets: 0;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-background-radius: 12;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-insets: 0;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-width: 1;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-family: -regularFont;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-size: 13pt;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-text-fill: -secondaryColor;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/** For Main Window **/"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#viewTitlePane {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-background-color: -surfaceColor;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#viewTitle {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-family: \"Roboto Medium\";"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-size: 24px;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-style: italic;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#popUp {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-family: \"Roboto Light\";"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-size: 12pt;"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-text-fill: -primaryColor;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-background-color: -logBoxColor;"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-background-radius: 8;"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#gridManager {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-background-color: -backgroundColor;"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/** For LogPanel **/"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#logPanelBase, #scrollLog, #boxLog {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-background-color: -surfaceColor;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-base: -surfaceColor;"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#logPanelBase, #scrollLog {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-background-radius: 8;"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#scrollLog .corner {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: transparent;"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#box {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-family: \"Roboto Regular\";"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-size: 11pt;"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-text-fill: -primaryColor;"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-background-color: -logBoxColor;"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-background-radius: 8;"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-background-insets: 0-10;"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/** For CalendarPanel **/"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#calendarDay {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-family: \"Roboto Medium\";"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-size: 11pt;"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-text-fill: -secondaryColor;"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#calendarDayCircle {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-opacity: 0;"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-fill: -calendarDayColor;"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#calendarBase {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-background-color: -surfaceColor;"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#monday, #tuesday, #wednesday, #thursday, #friday, #saturday, #sunday {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-family: \"Roboto Medium\";"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-size: 11pt;"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#monthYearTitle, #timelineTitle, #upcomingViewTitle {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-family: \"Roboto Medium\";"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-size: 13pt;"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/** For Timeline **/"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#timelineBase, #timelineScrollPane, #timelineBox {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-background-color: -surfaceColor;"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#timelineBase, #timelineScrollPane {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-background-radius: 8;"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#detailsBase {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-background-color: -backgroundColor;"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#timelineGrid {"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-background-color: -surfaceColor;"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#line0, #line1, #line2, #line3, #line4, #line5,"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#line6, #line7, #line8, #line9, #line10, #line11,"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#line12, #line13, #line14, #line15, #line16, #line17,"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#line18, #line19, #line20, #line21, #line22, #line23 {"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-background-color: -lineColor;"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-opacity: 0.6;"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/** For Upcoming View **/"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#upcomingViewBase {"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-background-color: -surfaceColor;"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-background-radius: 8;"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#upcomingPanel, #upcomingList {"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-background-color: -surfaceColor;"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#upcomingScrollPane {"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-background-color: -surfaceColor;"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-background: -surfaceColor;"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/** For List Panel **/"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#listPanelBase, #listPanelGrid {"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-backgroundColor: -transparent;"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#eventListPlaceholder, #taskListPlaceholder {"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-background-color: -surfaceColor;"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-background-radius: 8;"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#eventList, #taskList {"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-background-color: -surfaceColor;"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#eventScrollPane, #taskScrollPane {"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-background: -surfaceColor;"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-background-color: -surfaceColor;"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#eventListTitle, #taskListTitle {"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-family: \"Roboto Medium\";"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-text-fill: -secondaryColor;"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-size: 14pt;"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/** For Event Card **/"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#eventCardBase {"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-background-color: -eventCardColor;"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-background-radius: 8;"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-effect: dropshadow(three-pass-box, -backgroundColor, 4, 0.5, 0, 0);"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#eventName {"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-family: \"Roboto Medium\";"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-text-fill: -primaryColor;"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-size: 14pt;"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#eventStartDate, #eventEndDate, #eventRemindDate {"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-family: \"Roboto Regular\";"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-text-fill: -primaryColor;"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-size: 10pt;"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#eventIndex {"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-family: \"Roboto Medium\";"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-text-fill: -primaryColor;"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-size: 10pt;"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/** For Task Card **/"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#taskCardBase {"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-background-color: -taskCardColor;"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-background-radius: 8;"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-effect: dropshadow(three-pass-box, -backgroundColor, 4, 0.5, 0, 0);"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#taskName {"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-family: \"Roboto Medium\";"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-text-fill: -primaryColor;"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-size: 14pt;"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#taskDueDate {"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-family: \"Roboto Regular\";"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-text-fill: -primaryColor;"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-size: 10pt;"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#taskIndex {"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-family: \"Roboto Medium\";"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-text-fill: -primaryColor;"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-size: 10pt;"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/** For CardTag **/"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#cardTag {"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-background-color: -eventTagColor;"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-background-radius: 8;"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-family: \"Roboto Regular\";"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-text-fill: -primaryColor;"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-size: 10pt;"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/** For Upcoming Event Card **/"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#upcomingEventBase {"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-background-color: -eventCardColor;"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-background-radius: 8;"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-effect: dropshadow(three-pass-box, -backgroundColor, 4, 0.5, 0, 0);"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#upcomingWeekDay {"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-family: \"Roboto Light\";"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-text-fill: -secondaryColor;"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-size: 10pt;"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#upcomingDay {"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-family: \"Roboto Medium\";"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-text-fill: -secondaryColor;"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-size: 14pt;"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#upcomingEventName {"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-family: \"Roboto Light\";"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-text-fill: -primaryColor;"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-size: 13pt;"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/** For Upcoming Task Card **/"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#upcomingTaskBase {"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-background-color: -taskCardColor;"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-background-radius: 8;"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-effect: dropshadow(three-pass-box, -backgroundColor, 4, 0.5, 0, 0);"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#upcomingWeekDay {"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-family: \"Roboto Light\";"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-text-fill: -secondaryColor;"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-size: 10pt;"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#upcomingDay {"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-family: \"Roboto Medium\";"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-text-fill: -secondaryColor;"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-size: 14pt;"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#upcomingTaskName {"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-family: \"Roboto Light\";"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-text-fill: -primaryColor;"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-size: 13pt;"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/** Command Box **/"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#commandBoxBase {"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-background-color: -surfaceColor;"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-background-radius: 8;"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ".context-menu {"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "  -fx-background-color: -surfaceColor;"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 221,
      "-": 193
    }
  },
  {
    "path": "src/main/resources/view/EventCard.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.StackPane?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c!-- @@author Kyzure --\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003cStackPane fx:id\u003d\"eventCardBase\" alignment\u003d\"TOP_LEFT\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003cVBox fx:id\u003d\"eventDetails\" style\u003d\"-fx-background-color: transparent;\" StackPane.alignment\u003d\"CENTER_LEFT\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003cchildren\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cStackPane fx:id\u003d\"eventIndexBase\" alignment\u003d\"TOP_LEFT\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003cchildren\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cLabel fx:id\u003d\"eventName\" text\u003d\"eventName\" wrapText\u003d\"true\" StackPane.alignment\u003d\"CENTER_LEFT\"\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                     \u003cStackPane.margin\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        \u003cInsets left\u003d\"15.0\" right\u003d\"25.0\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                     \u003c/StackPane.margin\u003e\u003c/Label\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cLabel fx:id\u003d\"eventIndex\" alignment\u003d\"TOP_RIGHT\" text\u003d\"eventIndex\" wrapText\u003d\"true\" StackPane.alignment\u003d\"TOP_RIGHT\"\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                     \u003cStackPane.margin\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        \u003cInsets right\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                     \u003c/StackPane.margin\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003c/Label\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/children\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cInsets /\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/VBox.margin\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cStackPane fx:id\u003d\"eventStartDateBase\" alignment\u003d\"TOP_LEFT\"\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003cchildren\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cLabel fx:id\u003d\"eventStartDate\" text\u003d\"startDate\" wrapText\u003d\"true\" StackPane.alignment\u003d\"CENTER_LEFT\"\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                     \u003cStackPane.margin\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        \u003cInsets left\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                     \u003c/StackPane.margin\u003e\u003c/Label\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/children\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cInsets /\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/VBox.margin\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cStackPane fx:id\u003d\"eventEndDateBase\" alignment\u003d\"TOP_LEFT\"\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003cchildren\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cLabel fx:id\u003d\"eventEndDate\" text\u003d\"endDate\" wrapText\u003d\"true\" StackPane.alignment\u003d\"CENTER_LEFT\"\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                     \u003cStackPane.margin\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        \u003cInsets left\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                     \u003c/StackPane.margin\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003c/Label\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/children\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cInsets /\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/VBox.margin\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cStackPane fx:id\u003d\"eventRemindDateBase\" alignment\u003d\"TOP_LEFT\"\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003cchildren\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cLabel fx:id\u003d\"eventRemindDate\" text\u003d\"remindDate\" wrapText\u003d\"true\" StackPane.alignment\u003d\"CENTER_LEFT\"\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                     \u003cStackPane.margin\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        \u003cInsets left\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                     \u003c/StackPane.margin\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003c/Label\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/children\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cInsets /\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/VBox.margin\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cStackPane fx:id\u003d\"eventTagsBase\" alignment\u003d\"TOP_LEFT\"\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cInsets /\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/VBox.margin\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003cchildren\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cVBox fx:id\u003d\"eventTagList\" spacing\u003d\"4.0\"\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                     \u003cStackPane.margin\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        \u003cInsets left\u003d\"15.0\" right\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                     \u003c/StackPane.margin\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003c/VBox\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/children\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003c/children\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003cStackPane.margin\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cInsets bottom\u003d\"5.0\" top\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003c/StackPane.margin\u003e"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003c/VBox\u003e"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "   \u003copaqueInsets\u003e"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003cInsets /\u003e"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "   \u003c/opaqueInsets\u003e"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c/StackPane\u003e"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 85
    }
  },
  {
    "path": "src/main/resources/view/EventListCard.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.ColumnConstraints?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.FlowPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.GridPane?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.RowConstraints?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c!-- @@author Kyzure --\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        \u003ccolumnConstraints\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        \u003c/columnConstraints\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        \u003cVBox alignment\u003d\"CENTER_LEFT\" GridPane.columnIndex\u003d\"0\"\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cpadding\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003c/padding\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003c/HBox\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cFlowPane fx:id\u003d\"tags\" /\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cLabel fx:id\u003d\"dateTime\" styleClass\u003d\"cell_small_label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        \u003c/VBox\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        \u003crowConstraints\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cRowConstraints /\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        \u003c/rowConstraints\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    \u003c/GridPane\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c/HBox\u003e"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 32
    }
  },
  {
    "path": "src/main/resources/view/EventListPanel.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.StackPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c!-- @@author Kyzure --\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003cVBox style\u003d\"-fx-background-color: transparent;\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003cStackPane style\u003d\"-fx-background-color: transparent;\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003cchildren\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cLabel fx:id\u003d\"eventListTitle\" text\u003d\"Event List\" textAlignment\u003d\"CENTER\" StackPane.alignment\u003d\"TOP_CENTER\"\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003cfont\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cFont size\u003d\"14.0\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/font\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003c/Label\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003c/children\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003cStackPane\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003cchildren\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cScrollPane fx:id\u003d\"eventScrollPane\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\"\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003ccontent\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cVBox fx:id\u003d\"eventList\" prefHeight\u003d\"1500.0\" spacing\u003d\"2.0\"\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                     \u003cpadding\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                     \u003c/padding\u003e\u003c/VBox\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/content\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003c/children\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c/VBox\u003e"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 31,
      "-": 4
    }
  },
  {
    "path": "src/main/resources/view/Extensions.css",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ".error {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-text-fill: #d06651 !important; /* The error class should always override the default text-fill style */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ".list-cell:empty {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    /* Empty cells will not have alternating colours */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-background: #2E2E2E;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ".tag-selector {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-width: 1;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-color: white;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-radius: 3;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-radius: 3;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ".tooltip-text {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-text-fill: white;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 1,
      "-": 19
    }
  },
  {
    "path": "src/main/resources/view/HelpWindow.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.Scene?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.image.Image?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.stage.Stage?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c!-- @@author Kyzure --\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003cfx:root resizable\u003d\"false\" title\u003d\"Help\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "  \u003cicons\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    \u003cImage url\u003d\"@/images/help_icon.png\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "  \u003c/icons\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "  \u003cscene\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    \u003cScene\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003cHBox alignment\u003d\"CENTER\"\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cchildren\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003cLabel fx:id\u003d\"helpMessage\" text\u003d\"Label\"\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                     \u003cInsets right\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/Label\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003cButton fx:id\u003d\"copyButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#copyUrl\" text\u003d\"Copy URL\"\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                     \u003cInsets left\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/Button\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003c/children\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003copaqueInsets\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003c/opaqueInsets\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cpadding\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003c/padding\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003c/HBox\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    \u003c/Scene\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "  \u003c/scene\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 30,
      "-": 10
    }
  },
  {
    "path": "src/main/resources/view/ListPanel.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.ColumnConstraints?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.GridPane?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.RowConstraints?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.StackPane?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c!-- @@author Kyzure --\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003cVBox fx:id\u003d\"listPanelBase\" style\u003d\"-fx-background-color: transparent;\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003cGridPane fx:id\u003d\"listPanelGrid\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        \u003ccolumnConstraints\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "          \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "          \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        \u003c/columnConstraints\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        \u003crowConstraints\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "          \u003cRowConstraints prefHeight\u003d\"2000.0\" vgrow\u003d\"ALWAYS\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        \u003c/rowConstraints\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003cchildren\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cStackPane fx:id\u003d\"eventListPlaceholder\" prefHeight\u003d\"150.0\" prefWidth\u003d\"200.0\"\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003copaqueInsets\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cInsets /\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/opaqueInsets\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003cGridPane.margin\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cInsets right\u003d\"8.0\" /\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/GridPane.margin\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cStackPane fx:id\u003d\"taskListPlaceholder\" prefHeight\u003d\"150.0\" prefWidth\u003d\"200.0\" GridPane.columnIndex\u003d\"1\"\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003copaqueInsets\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cInsets /\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/opaqueInsets\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003cGridPane.margin\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cInsets left\u003d\"8.0\" /\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/GridPane.margin\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003c/children\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003c/GridPane\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c/VBox\u003e"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 41
    }
  },
  {
    "path": "src/main/resources/view/LogBox.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c!-- @@author Kyzure --\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003cjavafx.scene.layout.HBox fx:id\u003d\"logBoxBase\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003cLabel fx:id\u003d\"box\" alignment\u003d\"TOP_LEFT\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" text\u003d\"Label\" textFill\u003d\"WHITE\" wrapText\u003d\"true\" HBox.hgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cInsets left\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003cpadding\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003c/padding\u003e\u003c/Label\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "   \u003cpadding\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003cInsets bottom\u003d\"10.0\" top\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "   \u003c/padding\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c/javafx.scene.layout.HBox\u003e"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 21
    }
  },
  {
    "path": "src/main/resources/view/LogPanel.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c!-- @@author Kyzure --\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003cVBox fx:id\u003d\"logPanelBase\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003cScrollPane fx:id\u003d\"scrollLog\" fitToWidth\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003ccontent\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cVBox fx:id\u003d\"boxLog\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cInsets left\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/padding\u003e\u003c/VBox\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c/VBox\u003e"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 19
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import java.net.URL?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.Scene?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.image.Image?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.ColumnConstraints?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.GridPane?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.RowConstraints?\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.StackPane?\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.stage.Stage?\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003cfx:root minHeight\u003d\"700.0\" minWidth\u003d\"1000.0\" title\u003d\"Horo\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cicons\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        \u003cImage url\u003d\"@/images/horo_icon_32.png\" /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/icons\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cscene\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cScene\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cstylesheets\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003cURL value\u003d\"@DarkTheme.css\" /\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003cURL value\u003d\"@Extensions.css\" /\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/stylesheets\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cVBox fx:id\u003d\"vBoxPane\"\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                \u003cGridPane fx:id\u003d\"gridManager\"\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    \u003ccolumnConstraints\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    \u003c/columnConstraints\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    \u003crowConstraints\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        \u003cRowConstraints vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        \u003cRowConstraints vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        \u003cRowConstraints vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        \u003cRowConstraints vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        \u003cRowConstraints vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    \u003c/rowConstraints\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    \u003cchildren\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        \u003cStackPane fx:id\u003d\"viewTitlePane\" layoutX\u003d\"10.0\" layoutY\u003d\"43.0\" GridPane.rowIndex\u003d\"1\"\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                            \u003cchildren\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                                \u003cLabel fx:id\u003d\"viewTitle\" text\u003d\"View\" textAlignment\u003d\"CENTER\" textFill\u003d\"WHITE\" StackPane.alignment\u003d\"CENTER\"\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                                    \u003cfont\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                                        \u003cFont name\u003d\"Segoe UI Light\" size\u003d\"24.0\" /\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                                    \u003c/font\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                                    \u003cStackPane.margin\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                                        \u003cInsets /\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                                    \u003c/StackPane.margin\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                           \u003cpadding\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                              \u003cInsets bottom\u003d\"5.0\" top\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                           \u003c/padding\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                                \u003c/Label\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                            \u003c/children\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                     \u003cGridPane.margin\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        \u003cInsets bottom\u003d\"8.0\" /\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                     \u003c/GridPane.margin\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        \u003cStackPane fx:id\u003d\"viewPlaceholder\" alignment\u003d\"BOTTOM_LEFT\" GridPane.halignment\u003d\"LEFT\" GridPane.rowIndex\u003d\"2\" GridPane.valignment\u003d\"CENTER\"\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                            \u003cpadding\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                                \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                            \u003c/padding\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" alignment\u003d\"CENTER_LEFT\" GridPane.rowIndex\u003d\"3\"\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                            \u003cpadding\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                                \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                            \u003c/padding\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cStackPane fx:id\u003d\"popUpPanel\" minHeight\u003d\"-Infinity\" prefHeight\u003d\"25.0\" GridPane.vgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                     \u003copaqueInsets\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        \u003cInsets /\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                     \u003c/opaqueInsets\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                     \u003cGridPane.margin\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        \u003cInsets top\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                     \u003c/GridPane.margin\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    \u003c/children\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                \u003c/GridPane\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/VBox\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/Scene\u003e"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/scene\u003e"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 59,
      "-": 21
    }
  },
  {
    "path": "src/main/resources/view/PopUpBox.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c!-- @@author Kyzure --\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003cLabel fx:id\u003d\"popUp\" text\u003d\"Label\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "   \u003cpadding\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "   \u003c/padding\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c/Label\u003e"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 11
    }
  },
  {
    "path": "src/main/resources/view/TaskCard.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.StackPane?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c!-- @@author Kyzure --\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003cStackPane fx:id\u003d\"taskCardBase\" alignment\u003d\"TOP_LEFT\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        \u003cVBox fx:id\u003d\"taskDetails\" style\u003d\"-fx-background-color: transparent;\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cchildren\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                \u003cStackPane fx:id\u003d\"taskIndexBase\" alignment\u003d\"TOP_LEFT\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    \u003cchildren\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        \u003cLabel fx:id\u003d\"taskName\" text\u003d\"taskName\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                            \u003cStackPane.margin\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                                \u003cInsets left\u003d\"15.0\" right\u003d\"25.0\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                            \u003c/StackPane.margin\u003e\u003c/Label\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cLabel fx:id\u003d\"taskIndex\" alignment\u003d\"TOP_RIGHT\" text\u003d\"taskIndex\" wrapText\u003d\"true\" StackPane.alignment\u003d\"TOP_RIGHT\"\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                     \u003cStackPane.margin\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        \u003cInsets right\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                     \u003c/StackPane.margin\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003c/Label\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    \u003c/children\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        \u003cInsets /\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    \u003c/VBox.margin\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                \u003cStackPane fx:id\u003d\"taskDueDateBase\" alignment\u003d\"TOP_LEFT\"\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    \u003cchildren\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        \u003cLabel fx:id\u003d\"taskDueDate\" text\u003d\"taskDate\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                            \u003cStackPane.margin\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                                \u003cInsets left\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                            \u003c/StackPane.margin\u003e\u003c/Label\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    \u003c/children\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        \u003cInsets /\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    \u003c/VBox.margin\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cStackPane fx:id\u003d\"taskTagsBase\" alignment\u003d\"TOP_LEFT\"\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003cchildren\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cVBox fx:id\u003d\"taskTagList\" spacing\u003d\"4.0\"\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                     \u003cStackPane.margin\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        \u003cInsets left\u003d\"15.0\" right\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                     \u003c/StackPane.margin\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003c/VBox\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/children\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003c/children\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003cStackPane.margin\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cInsets bottom\u003d\"5.0\" top\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003c/StackPane.margin\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        \u003c/VBox\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    \u003copaqueInsets\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        \u003cInsets /\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    \u003c/opaqueInsets\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c/StackPane\u003e"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 58
    }
  },
  {
    "path": "src/main/resources/view/TaskListPanel.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.StackPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c!-- @@author Kyzure --\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003cVBox style\u003d\"-fx-background-color: transparent;\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003cStackPane style\u003d\"-fx-background-color: transparent;\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003cchildren\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cLabel fx:id\u003d\"taskListTitle\" text\u003d\"Task List\" textAlignment\u003d\"CENTER\" StackPane.alignment\u003d\"TOP_CENTER\"\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003cfont\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cFont size\u003d\"14.0\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/font\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003c/Label\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003c/children\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003cStackPane\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003cchildren\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cScrollPane fx:id\u003d\"taskScrollPane\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\"\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003ccontent\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cVBox fx:id\u003d\"taskList\" prefHeight\u003d\"1500.0\" spacing\u003d\"2.0\"\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                     \u003cpadding\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                     \u003c/padding\u003e\u003c/VBox\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/content\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003c/children\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c/VBox\u003e"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 35
    }
  },
  {
    "path": "src/main/resources/view/TimelineDayView.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.ColumnConstraints?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.GridPane?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.StackPane?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c!-- @@author Kyzure --\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003cVBox fx:id\u003d\"timelineBase\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003cStackPane\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003cchildren\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cLabel fx:id\u003d\"timelineTitle\" alignment\u003d\"CENTER\" contentDisplay\u003d\"CENTER\" text\u003d\"Timeline\" underline\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003cStackPane.margin\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cInsets top\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/StackPane.margin\u003e\u003c/Label\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003c/children\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cInsets /\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003c/VBox.margin\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003cScrollPane fx:id\u003d\"timelineScrollPane\" fitToWidth\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003ccontent\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cGridPane fx:id\u003d\"timelineGrid\"\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "              \u003ccolumnConstraints\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"75.0\" /\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                \u003cColumnConstraints hgrow\u003d\"ALWAYS\" /\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "              \u003c/columnConstraints\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003c/GridPane\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003c/content\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cInsets /\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003c/VBox.margin\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c/VBox\u003e"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 39
    }
  },
  {
    "path": "src/main/resources/view/TimelineLabel.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.StackPane?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c!-- @@author Kyzure --\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003cStackPane alignment\u003d\"TOP_LEFT\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003cLabel fx:id\u003d\"timelineLabel\" alignment\u003d\"TOP_LEFT\" text\u003d\"00:00\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003cpadding\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cInsets bottom\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003c/padding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003c/Label\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "   \u003cpadding\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"20.0\" top\u003d\"35.0\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "   \u003c/padding\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c/StackPane\u003e"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 19
    }
  },
  {
    "path": "src/main/resources/view/TimelineMonthView.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.ColumnConstraints?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.GridPane?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.StackPane?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c!-- @@author Kyzure --\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003cVBox fx:id\u003d\"timelineBase\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        \u003cStackPane\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cchildren\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                \u003cLabel fx:id\u003d\"timelineTitle\" alignment\u003d\"CENTER\" contentDisplay\u003d\"CENTER\" text\u003d\"Timeline\" underline\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003cStackPane.margin\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cInsets top\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/StackPane.margin\u003e\u003c/Label\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003c/children\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                \u003cInsets /\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003c/VBox.margin\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"timelineScrollPane\" fitToWidth\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                \u003cGridPane fx:id\u003d\"timelineGrid\" alignment\u003d\"CENTER_LEFT\"\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    \u003ccolumnConstraints\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"70.0\" /\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        \u003cColumnConstraints hgrow\u003d\"ALWAYS\" /\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    \u003c/columnConstraints\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                \u003c/GridPane\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                \u003cInsets /\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003c/VBox.margin\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c/VBox\u003e"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 39
    }
  },
  {
    "path": "src/main/resources/view/TimelineWeekView.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.ColumnConstraints?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.GridPane?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.StackPane?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c!-- @@author Kyzure --\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003cVBox fx:id\u003d\"timelineBase\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        \u003cStackPane\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cchildren\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                \u003cLabel fx:id\u003d\"timelineTitle\" alignment\u003d\"CENTER\" contentDisplay\u003d\"CENTER\" text\u003d\"Timeline\" underline\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003cStackPane.margin\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cInsets top\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/StackPane.margin\u003e\u003c/Label\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003c/children\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                \u003cInsets /\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003c/VBox.margin\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"timelineScrollPane\" fitToWidth\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                \u003cGridPane fx:id\u003d\"timelineGrid\" alignment\u003d\"CENTER_LEFT\"\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    \u003ccolumnConstraints\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"115.0\" /\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        \u003cColumnConstraints hgrow\u003d\"ALWAYS\" /\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    \u003c/columnConstraints\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                \u003c/GridPane\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                \u003cInsets /\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003c/VBox.margin\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c/VBox\u003e"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 39
    }
  },
  {
    "path": "src/main/resources/view/UpcomingEventCard.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.ColumnConstraints?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.GridPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.RowConstraints?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.StackPane?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c!-- @@author Kyzure --\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003cStackPane fx:id\u003d\"upcomingEventCardBase\" alignment\u003d\"TOP_LEFT\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003cGridPane\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        \u003ccolumnConstraints\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "          \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"50.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "          \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        \u003c/columnConstraints\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        \u003crowConstraints\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "          \u003cRowConstraints vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "          \u003cRowConstraints vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        \u003c/rowConstraints\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003cchildren\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                \u003cStackPane alignment\u003d\"TOP_CENTER\"\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    \u003cchildren\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        \u003cLabel fx:id\u003d\"upcomingWeekDay\" alignment\u003d\"CENTER\" text\u003d\"weekDay\" /\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    \u003c/children\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003cGridPane.margin\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cInsets /\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/GridPane.margin\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cStackPane alignment\u003d\"TOP_CENTER\" GridPane.rowIndex\u003d\"1\"\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003cchildren\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cLabel fx:id\u003d\"upcomingDay\" alignment\u003d\"CENTER\" text\u003d\"day\" textAlignment\u003d\"CENTER\" /\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/children\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003cGridPane.margin\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cInsets /\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/GridPane.margin\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                \u003cStackPane fx:id\u003d\"upcomingEventBase\" alignment\u003d\"CENTER_LEFT\" GridPane.columnIndex\u003d\"1\" GridPane.rowSpan\u003d\"2\"\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    \u003cchildren\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        \u003cLabel fx:id\u003d\"upcomingEventName\" maxWidth\u003d\"225.0\" text\u003d\"eventName\"\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                            \u003cStackPane.margin\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                                \u003cInsets left\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                            \u003c/StackPane.margin\u003e\u003c/Label\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    \u003c/children\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003cGridPane.margin\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cInsets right\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/GridPane.margin\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003c/children\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003c/GridPane\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    \u003copaqueInsets\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        \u003cInsets /\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    \u003c/opaqueInsets\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c/StackPane\u003e"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 56
    }
  },
  {
    "path": "src/main/resources/view/UpcomingTaskCard.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.ColumnConstraints?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.GridPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.RowConstraints?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.StackPane?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c!-- @@author Kyzure --\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003cStackPane fx:id\u003d\"upcomingTaskCardBase\" alignment\u003d\"TOP_LEFT\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        \u003cGridPane\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003ccolumnConstraints\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"50.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003c/columnConstraints\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003crowConstraints\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                \u003cRowConstraints vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                \u003cRowConstraints vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003c/rowConstraints\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cchildren\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                \u003cStackPane alignment\u003d\"TOP_CENTER\"\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    \u003cchildren\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        \u003cLabel fx:id\u003d\"upcomingWeekDay\" alignment\u003d\"CENTER\" text\u003d\"weekDay\" /\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    \u003c/children\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    \u003cGridPane.margin\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        \u003cInsets /\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    \u003c/GridPane.margin\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003copaqueInsets\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cInsets /\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/opaqueInsets\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                \u003cStackPane alignment\u003d\"TOP_CENTER\" GridPane.rowIndex\u003d\"1\"\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    \u003cchildren\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        \u003cLabel fx:id\u003d\"upcomingDay\" alignment\u003d\"CENTER\" text\u003d\"day\" textAlignment\u003d\"CENTER\" /\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    \u003c/children\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003cGridPane.margin\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cInsets /\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/GridPane.margin\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                \u003cStackPane fx:id\u003d\"upcomingTaskBase\" alignment\u003d\"CENTER_LEFT\" GridPane.columnIndex\u003d\"1\" GridPane.rowSpan\u003d\"2\"\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    \u003cchildren\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        \u003cLabel fx:id\u003d\"upcomingTaskName\" maxWidth\u003d\"225.0\" text\u003d\"taskName\"\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                            \u003cStackPane.margin\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                                \u003cInsets left\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                            \u003c/StackPane.margin\u003e\u003c/Label\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    \u003c/children\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    \u003cGridPane.margin\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        \u003cInsets right\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    \u003c/GridPane.margin\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003c/children\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        \u003c/GridPane\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    \u003copaqueInsets\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        \u003cInsets /\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    \u003c/opaqueInsets\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c/StackPane\u003e"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 59
    }
  },
  {
    "path": "src/main/resources/view/UpcomingView.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.ColumnConstraints?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.GridPane?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.RowConstraints?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.StackPane?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c!-- @@author Kyzure --\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003cGridPane fx:id\u003d\"upcomingViewBase\" alignment\u003d\"TOP_CENTER\" maxWidth\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefWidth\u003d\"350.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "  \u003ccolumnConstraints\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "  \u003c/columnConstraints\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "  \u003crowConstraints\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    \u003cRowConstraints valignment\u003d\"TOP\" vgrow\u003d\"NEVER\" /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" valignment\u003d\"TOP\" vgrow\u003d\"ALWAYS\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "  \u003c/rowConstraints\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003cStackPane prefWidth\u003d\"350.0\"\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003cchildren\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cLabel fx:id\u003d\"upcomingViewTitle\" alignment\u003d\"TOP_CENTER\" text\u003d\"Upcoming\" underline\u003d\"true\" StackPane.alignment\u003d\"TOP_CENTER\"\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003cStackPane.margin\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cInsets top\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/StackPane.margin\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003c/Label\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003c/children\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003cStackPane fx:id\u003d\"upcomingPanel\" alignment\u003d\"TOP_CENTER\" GridPane.rowIndex\u003d\"1\"\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003cchildren\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cScrollPane fx:id\u003d\"upcomingScrollPane\" fitToWidth\u003d\"true\" prefWidth\u003d\"350.0\"\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003ccontent\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cVBox fx:id\u003d\"upcomingList\" prefWidth\u003d\"350.0\" spacing\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/content\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003c/children\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003cGridPane.margin\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cInsets top\u003d\"8.0\" /\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003c/GridPane.margin\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c/GridPane\u003e"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 44
    }
  },
  {
    "path": "src/test/java/seedu/address/ics/IcsConverterTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "package seedu.address.ics;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import java.time.Instant;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import seedu.address.model.DateTime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import seedu.address.model.events.EventSource;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import seedu.address.model.events.EventSourceBuilder;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import seedu.address.model.tasks.TaskSource;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import seedu.address.model.tasks.TaskSourceBuilder;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "public class IcsConverterTest {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    //@@author marcusteh1238"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    public void toString_normalEventNoEndTime_icsConversion() throws ParseException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        String description \u003d \"Test Description\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        String start \u003d \"11/11/1111 11:00\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        assertDoesNotThrow(() -\u003e DateTime.fromUserString(start));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        DateTime startDateTime \u003d DateTime.fromUserString(start);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        EventSource eventSource \u003d EventSource.newBuilder(description, startDateTime).build();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        String icsString \u003d IcsConverter.convertEvent(eventSource);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        String[] icsStringArr \u003d icsString.split(\"\\\\r?\\\\n\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        // validate start of ICS VEVENT object field."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        assertEquals(\"BEGIN:VEVENT\", icsStringArr[0]);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        // validate UID."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        String uidString \u003d icsStringArr[1];"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        assertTrue(uidString.startsWith(\"UID:\") \u0026\u0026 uidString.endsWith(\"@Horo\"));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        uidString \u003d uidString.replaceFirst(\"UID:\", \"\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        String instant \u003d uidString.replaceFirst(\"@Horo\", \"\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        assertDoesNotThrow(() -\u003e Instant.parse(instant));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        // validate DTSTAMP field."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        String dtStampString \u003d icsStringArr[2];"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        assertTrue(dtStampString.startsWith(\"DTSTAMP:\"));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        String dtStamp \u003d dtStampString.replaceFirst(\"DTSTAMP:\", \"\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        assertDoesNotThrow(() -\u003e DateTime.fromIcsString(dtStamp));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        // validate DTSTART field."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        String dtStartString \u003d icsStringArr[3];"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        assertTrue(dtStartString.startsWith(\"DTSTART:\"));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        dtStartString \u003d dtStartString.replace(\"DTSTART:\", \"\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        assertEquals(DateTime.fromIcsString(dtStartString), startDateTime);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        // validate SUMMARY field."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        assertEquals(\"SUMMARY:Test Description\", icsStringArr[4]);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        // validate end of ICS VEVENT object line"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        assertEquals(\"END:VEVENT\", icsStringArr[5]);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    //@@author marcusteh1238"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    public void toString_eventWithEndTime_icsConversion() throws ParseException {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        String description \u003d \"Test Description\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        String start \u003d \"11/11/1111 11:00\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        assertDoesNotThrow(() -\u003e DateTime.fromUserString(start));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        DateTime startDateTime \u003d DateTime.fromUserString(start);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        String end \u003d \"11/11/1111 12:00\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        assertDoesNotThrow(() -\u003e DateTime.fromUserString(end));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        DateTime endDateTime \u003d DateTime.fromUserString(end);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        EventSourceBuilder eventSourceBuilder \u003d EventSource.newBuilder(description, startDateTime);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        eventSourceBuilder.setEnd(endDateTime);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        EventSource eventSource \u003d eventSourceBuilder.build();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        String icsString \u003d IcsConverter.convertEvent(eventSource);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        String[] icsStringArr \u003d icsString.split(\"\\\\r?\\\\n\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        // validate start of ICS VEVENT object field."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        assertEquals(\"BEGIN:VEVENT\", icsStringArr[0]);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        // validate UID."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        String uidString \u003d icsStringArr[1];"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        assertTrue(uidString.startsWith(\"UID:\") \u0026\u0026 uidString.endsWith(\"@Horo\"));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        uidString \u003d uidString.replaceFirst(\"UID:\", \"\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        String instant \u003d uidString.replaceFirst(\"@Horo\", \"\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        assertDoesNotThrow(() -\u003e Instant.parse(instant));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        // validate DTSTAMP field."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        String dtStampString \u003d icsStringArr[2];"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        assertTrue(dtStampString.startsWith(\"DTSTAMP:\"));"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        String dtStamp \u003d dtStampString.replaceFirst(\"DTSTAMP:\", \"\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        assertDoesNotThrow(() -\u003e DateTime.fromIcsString(dtStamp));"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        // validate DTSTART field."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        String dtStartString \u003d icsStringArr[3];"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        assertTrue(dtStartString.startsWith(\"DTSTART:\"));"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        dtStartString \u003d dtStartString.replace(\"DTSTART:\", \"\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        assertEquals(startDateTime, DateTime.fromIcsString(dtStartString));"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        // validate SUMMARY field."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        assertEquals(\"SUMMARY:Test Description\", icsStringArr[4]);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        // validate DTEND field."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        String dtEndString \u003d icsStringArr[5];"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        assertTrue(dtEndString.startsWith(\"DTEND:\"));"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        dtEndString \u003d dtEndString.replace(\"DTEND:\", \"\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        assertEquals(endDateTime, DateTime.fromIcsString(dtEndString));"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        // validate end of ICS VEVENT object field."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        assertEquals(\"END:VEVENT\", icsStringArr[6]);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    //@@author marcusteh1238"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    public void toString_eventWithEndTimeAndTags_icsConversion() throws ParseException {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        String description \u003d \"Test Description\";"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        String start \u003d \"11/11/1111 11:00\";"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        assertDoesNotThrow(() -\u003e DateTime.fromUserString(start));"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        DateTime startDateTime \u003d DateTime.fromUserString(start);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        String end \u003d \"11/11/1111 12:00\";"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        assertDoesNotThrow(() -\u003e DateTime.fromUserString(end));"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        DateTime endDateTime \u003d DateTime.fromUserString(end);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        ArrayList\u003cString\u003e tags \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        tags.add(\"Test tag1\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        tags.add(\"test tag2\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        EventSourceBuilder eventSourceBuilder \u003d EventSource.newBuilder(description, startDateTime);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        eventSourceBuilder.setEnd(endDateTime);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        eventSourceBuilder.setTags(tags);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        EventSource eventSource \u003d eventSourceBuilder.build();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        String icsString \u003d IcsConverter.convertEvent(eventSource);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        String[] icsStringArr \u003d icsString.split(\"\\\\r?\\\\n\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        // validate start of ICS VEVENT object field."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        assertEquals(\"BEGIN:VEVENT\", icsStringArr[0]);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        // validate UID."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        String uidString \u003d icsStringArr[1];"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        assertTrue(uidString.startsWith(\"UID:\") \u0026\u0026 uidString.endsWith(\"@Horo\"));"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        uidString \u003d uidString.replaceFirst(\"UID:\", \"\");"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        String instant \u003d uidString.replaceFirst(\"@Horo\", \"\");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        assertDoesNotThrow(() -\u003e Instant.parse(instant));"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        // validate DTSTAMP field."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        String dtStampString \u003d icsStringArr[2];"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        assertTrue(dtStampString.startsWith(\"DTSTAMP:\"));"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        String dtStamp \u003d dtStampString.replaceFirst(\"DTSTAMP:\", \"\");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        assertDoesNotThrow(() -\u003e DateTime.fromIcsString(dtStamp));"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        // validate DTSTART field."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        String dtStartString \u003d icsStringArr[3];"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        assertTrue(dtStartString.startsWith(\"DTSTART:\"));"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        dtStartString \u003d dtStartString.replace(\"DTSTART:\", \"\");"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        assertEquals(startDateTime, DateTime.fromIcsString(dtStartString));"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        // validate SUMMARY field."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        assertEquals(\"SUMMARY:Test Description\", icsStringArr[4]);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        // validate DTEND field."
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        String dtEndString \u003d icsStringArr[5];"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        assertTrue(dtEndString.startsWith(\"DTEND:\"));"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        dtEndString \u003d dtEndString.replace(\"DTEND:\", \"\");"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        assertEquals(endDateTime, DateTime.fromIcsString(dtEndString));"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        //  validate DESCRIPTION field."
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        assertEquals(\"DESCRIPTION:[Test tag1][test tag2]\", icsStringArr[6]);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        // validate end of ICS VEVENT object field."
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        assertEquals(\"END:VEVENT\", icsStringArr[7]);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    //@@author marcusteh1238"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    public void toString_normalTask_icsConversion() {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        String description \u003d \"Test Description\";"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        TaskSource taskSource \u003d TaskSource.newBuilder(description).build();"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        String icsString \u003d IcsConverter.convertTask(taskSource);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        String[] icsStringArr \u003d icsString.split(\"\\\\r?\\\\n\");"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        // validate start of ICS VTODO object field."
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        assertEquals(\"BEGIN:VTODO\", icsStringArr[0]);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        // validate UID."
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        String uidString \u003d icsStringArr[1];"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        assertTrue(uidString.startsWith(\"UID:\") \u0026\u0026 uidString.endsWith(\"@Horo\"));"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        uidString \u003d uidString.replaceFirst(\"UID:\", \"\");"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        String instant \u003d uidString.replaceFirst(\"@Horo\", \"\");"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        assertDoesNotThrow(() -\u003e Instant.parse(instant));"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        // validate DTSTAMP field."
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        String dtStampString \u003d icsStringArr[2];"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        assertTrue(dtStampString.startsWith(\"DTSTAMP:\"));"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        String dtStamp \u003d dtStampString.replaceFirst(\"DTSTAMP:\", \"\");"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        assertDoesNotThrow(() -\u003e DateTime.fromIcsString(dtStamp));"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        // validate SUMMARY field."
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        assertEquals(\"SUMMARY:Test Description\", icsStringArr[3]);"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        // validate end of ICS VTODO object field."
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        assertEquals(\"END:VTODO\", icsStringArr[4]);"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    //@@author marcusteh1238"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    public void toString_taskWithDueDate_icsConversion() throws ParseException {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        String description \u003d \"Test Description\";"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        TaskSourceBuilder taskSourceBuilder \u003d TaskSource.newBuilder(description);"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        String due \u003d \"11/11/1111 12:00\";"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        assertDoesNotThrow(() -\u003e DateTime.fromUserString(due));"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        DateTime dueDateTime \u003d DateTime.fromUserString(due);"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        taskSourceBuilder.setDueDate(dueDateTime);"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        TaskSource taskSource \u003d taskSourceBuilder.build();"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        String icsString \u003d IcsConverter.convertTask(taskSource);"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        String[] icsStringArr \u003d icsString.split(\"\\\\r?\\\\n\");"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        // validate start of ICS VTODO object field."
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        assertEquals(\"BEGIN:VTODO\", icsStringArr[0]);"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        // validate UID."
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        String uidString \u003d icsStringArr[1];"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        assertTrue(uidString.startsWith(\"UID:\") \u0026\u0026 uidString.endsWith(\"@Horo\"));"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        uidString \u003d uidString.replaceFirst(\"UID:\", \"\");"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        String instant \u003d uidString.replaceFirst(\"@Horo\", \"\");"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        assertDoesNotThrow(() -\u003e Instant.parse(instant));"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        // validate DTSTAMP field."
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        String dtStampString \u003d icsStringArr[2];"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        assertTrue(dtStampString.startsWith(\"DTSTAMP:\"));"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        String dtStamp \u003d dtStampString.replaceFirst(\"DTSTAMP:\", \"\");"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        assertDoesNotThrow(() -\u003e DateTime.fromIcsString(dtStamp));"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        // validate SUMMARY field."
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        assertEquals(\"SUMMARY:Test Description\", icsStringArr[3]);"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        // validate DUE field."
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        assertTrue(icsStringArr[4].startsWith(\"DUE:\"));"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        String dueDateOutcome \u003d icsStringArr[4].replace(\"DUE:\", \"\");"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        assertEquals(dueDateTime, DateTime.fromIcsString(dueDateOutcome));"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        // validate end of ICS VTODO object field."
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        assertEquals(\"END:VTODO\", icsStringArr[5]);"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    public void toString_taskWithDueDateAndTags_icsConversion() throws ParseException {"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        String description \u003d \"Test Description\";"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        TaskSourceBuilder taskSourceBuilder \u003d TaskSource.newBuilder(description);"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        String due \u003d \"11/11/1111 12:00\";"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        assertDoesNotThrow(() -\u003e DateTime.fromUserString(due));"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        DateTime dueDateTime \u003d DateTime.fromUserString(due);"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        taskSourceBuilder.setDueDate(dueDateTime);"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        ArrayList\u003cString\u003e tags \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        tags.add(\"Test tag1\");"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        tags.add(\"test tag2\");"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        taskSourceBuilder.setTags(tags);"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        TaskSource taskSource \u003d taskSourceBuilder.build();"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        String icsString \u003d IcsConverter.convertTask(taskSource);"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        String[] icsStringArr \u003d icsString.split(\"\\\\r?\\\\n\");"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        // validate start of ICS VTODO object field."
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        assertEquals(\"BEGIN:VTODO\", icsStringArr[0]);"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        // validate UID."
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        String uidString \u003d icsStringArr[1];"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        assertTrue(uidString.startsWith(\"UID:\") \u0026\u0026 uidString.endsWith(\"@Horo\"));"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        uidString \u003d uidString.replaceFirst(\"UID:\", \"\");"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        String instant \u003d uidString.replaceFirst(\"@Horo\", \"\");"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        assertDoesNotThrow(() -\u003e Instant.parse(instant));"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        // validate DTSTAMP field."
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        String dtStampString \u003d icsStringArr[2];"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        assertTrue(dtStampString.startsWith(\"DTSTAMP:\"));"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        String dtStamp \u003d dtStampString.replaceFirst(\"DTSTAMP:\", \"\");"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        assertDoesNotThrow(() -\u003e DateTime.fromIcsString(dtStamp));"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        // validate SUMMARY field."
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        assertEquals(\"SUMMARY:Test Description\", icsStringArr[3]);"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        // validate DUE field."
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        assertTrue(icsStringArr[4].startsWith(\"DUE:\"));"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        String dueDateOutcome \u003d icsStringArr[4].replace(\"DUE:\", \"\");"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        assertEquals(dueDateTime, DateTime.fromIcsString(dueDateOutcome));"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        //  validate DESCRIPTION field."
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        assertEquals(\"DESCRIPTION:[Test tag1][test tag2]\", icsStringArr[5]);"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        // validate end of ICS VTODO object field."
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        assertEquals(\"END:VTODO\", icsStringArr[6]);"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcusteh1238": 309
    }
  },
  {
    "path": "src/test/java/seedu/address/ics/IcsExporterTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "package seedu.address.ics;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertNotEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import seedu.address.model.DateTime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import seedu.address.model.events.EventSource;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import seedu.address.model.tasks.TaskSource;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "//@@author marcusteh1238"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "public class IcsExporterTest {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    public void boilerplateCorrectness_emptyEventAndTaskListGenerateIcsFileContent_valueAsExpected() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        ArrayList\u003cEventSource\u003e eventList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        ArrayList\u003cTaskSource\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        String expected \u003d \"BEGIN:VCALENDAR\\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                + \"VERSION:2.0\\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                + \"PRODID:-//Horo//Exported Calendar// v1.0//EN\\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                + \"END:VCALENDAR\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        Pattern pattern \u003d Pattern.compile(\"BEGIN:VEVENT(.*?)END:VEVENT\", Pattern.DOTALL);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        Matcher matcher \u003d pattern.matcher(expected);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        String outcome \u003d new IcsExporter(new ModelManager()).generateIcsFileContent(eventList, taskList);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        assertEquals(expected, outcome);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    public void checkEventsHaveBeenParsed_nonEmptyEventAndEmptyTaskListGenerateIcsFileContent_valueAsExpected() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        ArrayList\u003cEventSource\u003e eventList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        EventSource eventSource \u003d EventSource"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                .newBuilder(\"Test Description\", DateTime.now())"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        eventList.add(eventSource);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        ArrayList\u003cTaskSource\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        String outcome \u003d new IcsExporter(new ModelManager()).generateIcsFileContent(eventList, taskList);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        assertTrue(outcome.startsWith(\"BEGIN:VCALENDAR\\nVERSION:2.0\\nPRODID:-//Horo//Exported Calendar// v1.0//EN\\n\"));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        assertTrue(outcome.endsWith(\"END:VCALENDAR\"));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        Pattern eventPattern \u003d Pattern.compile(\"BEGIN:VEVENT(.*?)END:VEVENT\", Pattern.DOTALL);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        Matcher eventMatcher \u003d eventPattern.matcher(outcome);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        int noOfEvents \u003d 0;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        while (eventMatcher.find()) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            noOfEvents++;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        assertEquals(1, noOfEvents);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        Pattern taskPattern \u003d Pattern.compile(\"BEGIN:VTODO(.*?)END:VTODO\", Pattern.DOTALL);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        Matcher taskMatcher \u003d taskPattern.matcher(outcome);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        int noOfTasks \u003d 0;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        while (taskMatcher.find()) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            noOfTasks++;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        assertEquals(0, noOfTasks);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    public void checkTaskHaveBeenParsed_emptyEventAndNonEmptyTaskListGenerateIcsFileContent_valueAsExpected() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        ArrayList\u003cEventSource\u003e eventList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        ArrayList\u003cTaskSource\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        TaskSource taskSource \u003d TaskSource.newBuilder(\"Test Description\").build();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        taskList.add(taskSource);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        String outcome \u003d new IcsExporter(new ModelManager()).generateIcsFileContent(eventList, taskList);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        assertTrue(outcome.startsWith(\"BEGIN:VCALENDAR\\nVERSION:2.0\\nPRODID:-//Horo//Exported Calendar// v1.0//EN\\n\"));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        assertTrue(outcome.endsWith(\"END:VCALENDAR\"));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        Pattern eventPattern \u003d Pattern.compile(\"BEGIN:VEVENT(.*?)END:VEVENT\", Pattern.DOTALL);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        Matcher eventMatcher \u003d eventPattern.matcher(outcome);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        int noOfEvents \u003d 0;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        while (eventMatcher.find()) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            noOfEvents++;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        assertEquals(0, noOfEvents);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        Pattern taskPattern \u003d Pattern.compile(\"BEGIN:VTODO(.*?)END:VTODO\", Pattern.DOTALL);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        Matcher taskMatcher \u003d taskPattern.matcher(outcome);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        int noOfTasks \u003d 0;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        while (taskMatcher.find()) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            noOfTasks++;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        assertEquals(1, noOfTasks);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    public void checkEventAndTaskHaveBeenParsed_nonEmptyEventAndTaskListGenerateIcsFileContent_valueAsExpected() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        ArrayList\u003cEventSource\u003e eventList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        EventSource eventSource \u003d EventSource"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                .newBuilder(\"Test Description\", DateTime.now())"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        eventList.add(eventSource);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        ArrayList\u003cTaskSource\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        TaskSource taskSource \u003d TaskSource.newBuilder(\"Test Description\").build();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        taskList.add(taskSource);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        String outcome \u003d new IcsExporter(new ModelManager()).generateIcsFileContent(eventList, taskList);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        assertTrue(outcome.startsWith(\"BEGIN:VCALENDAR\\nVERSION:2.0\\nPRODID:-//Horo//Exported Calendar// v1.0//EN\\n\"));"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        assertTrue(outcome.endsWith(\"END:VCALENDAR\"));"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        Pattern eventPattern \u003d Pattern.compile(\"BEGIN:VEVENT(.*?)END:VEVENT\", Pattern.DOTALL);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        Matcher eventMatcher \u003d eventPattern.matcher(outcome);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        int noOfEvents \u003d 0;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        while (eventMatcher.find()) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            noOfEvents++;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        assertEquals(1, noOfEvents);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        Pattern taskPattern \u003d Pattern.compile(\"BEGIN:VTODO(.*?)END:VTODO\", Pattern.DOTALL);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        Matcher taskMatcher \u003d taskPattern.matcher(outcome);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        int noOfTasks \u003d 0;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        while (taskMatcher.find()) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            noOfTasks++;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        assertEquals(1, noOfTasks);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    public void getExportFileName_noArgumentsRequired_valueAsExpected() {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        String filename \u003d IcsExporter.getExportFileName();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        assertNotEquals(\"\", filename);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        assertTrue(filename.endsWith(\".ics\"));"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        assertTrue(filename.startsWith(\"Horo_export_\"));"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcusteh1238": 134
    }
  },
  {
    "path": "src/test/java/seedu/address/ics/IcsParserTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "package seedu.address.ics;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertNotNull;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import seedu.address.model.DateTime;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import seedu.address.model.events.EventSource;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import seedu.address.model.tasks.TaskSource;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import seedu.address.model.tasks.TaskSourceBuilder;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "//@@author marcusteh1238"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "public class IcsParserTest {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    //@@author marcusteh1238"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * Helper function to check if the tags in the parsed ICS file is valid."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * @param expectedTags The tags that are expected to be in the new object."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * @param outcomeTags The tags that are actually in the new object."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * @return A boolean that indicates if the output tags are the same as the expected tags."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    public boolean checkTags(ArrayList\u003cString\u003e expectedTags, Set\u003cString\u003e outcomeTags) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        boolean containsAllTags \u003d true;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        for (String tag : expectedTags) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            if (outcomeTags.contains(tag)) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                outcomeTags.remove(tag);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        return outcomeTags.isEmpty();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    //@@author marcusteh1238"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    public void eventSourceCreationCorrectness_parseSingleEventNormalWithoutEndDateTime_valueAsExpected()"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            throws ParseException, IcsException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        String icsEventObjectString \u003d \"BEGIN:VEVENT\\n\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                + \"UID:2019-11-09T07:32:17.516817800Z@Horo\\n\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                + \"DTSTAMP:20191109T073217Z\\n\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                + \"DTSTART:20191109T043400Z\\n\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                + \"SUMMARY:Test Description\\n\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                + \"END:VEVENT\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        assertDoesNotThrow(() -\u003e DateTime.fromIcsString(\"20191109T043400Z\"));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        DateTime startDateTime \u003d DateTime.fromIcsString(\"20191109T043400Z\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        String description \u003d \"Test Description\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        EventSource expected \u003d EventSource"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                .newBuilder(description, startDateTime)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        EventSource outcome \u003d IcsParser.parseSingleEvent(icsEventObjectString);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        assertEquals(expected.getDescription(), outcome.getDescription());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        assertEquals(expected.getStartDateTime(), outcome.getStartDateTime());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    //@@author marcusteh1238"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    public void eventSourceCreationCorrectness_parseSingleEventNormalWithEndDateTime_valueAsExpected()"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            throws ParseException, IcsException {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        String icsEventObjectString \u003d \"BEGIN:VEVENT\\n\""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                + \"UID:2019-11-09T07:32:17.516817800Z@Horo\\n\""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                + \"DTSTAMP:20191109T073217Z\\n\""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                + \"DTSTART:20191109T043400Z\\n\""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                + \"SUMMARY:Test Description\\n\""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                + \"DTEND:20191109T054500Z\\n\""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                + \"END:VEVENT\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        assertDoesNotThrow(() -\u003e DateTime.fromIcsString(\"20191109T043400Z\"));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        DateTime startDateTime \u003d DateTime.fromIcsString(\"20191109T043400Z\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        assertDoesNotThrow(() -\u003e DateTime.fromIcsString(\"20191109T054500Z\"));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        DateTime endDateTime \u003d DateTime.fromIcsString(\"20191109T054500Z\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        String description \u003d \"Test Description\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        EventSource expected \u003d EventSource"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                .newBuilder(description, startDateTime)"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                .setEnd(endDateTime)"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        EventSource outcome \u003d IcsParser.parseSingleEvent(icsEventObjectString);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        assertEquals(expected.getDescription(), outcome.getDescription());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        assertEquals(expected.getStartDateTime(), outcome.getStartDateTime());"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        assertEquals(expected.getEndDateTime(), outcome.getEndDateTime());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    //@@author marcusteh1238"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    public void eventSourceCreationCorrectness_parseSingleEventNormalWithEndDateTimeWithTags_valueAsExpected()"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            throws ParseException, IcsException {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        String icsEventObjectString \u003d \"BEGIN:VEVENT\\n\""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                + \"UID:2019-11-09T07:32:17.516817800Z@Horo\\n\""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                + \"DTSTAMP:20191109T073217Z\\n\""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                + \"DTSTART:20191109T043400Z\\n\""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                + \"SUMMARY:Test Description\\n\""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                + \"DTEND:20191109T054500Z\\n\""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                + \"DESCRIPTION:[tag1][tag2]\\n\""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                + \"END:VEVENT\";"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        assertDoesNotThrow(() -\u003e DateTime.fromIcsString(\"20191109T043400Z\"));"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        DateTime startDateTime \u003d DateTime.fromIcsString(\"20191109T043400Z\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        assertDoesNotThrow(() -\u003e DateTime.fromIcsString(\"20191109T054500Z\"));"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        DateTime endDateTime \u003d DateTime.fromIcsString(\"20191109T054500Z\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        String description \u003d \"Test Description\";"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        ArrayList\u003cString\u003e tags \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        tags.add(\"tag1\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        tags.add(\"tag2\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        EventSource expected \u003d EventSource"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                .newBuilder(description, startDateTime)"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                .setEnd(endDateTime)"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                .setTags(tags)"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        EventSource outcome \u003d IcsParser.parseSingleEvent(icsEventObjectString);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        assertEquals(expected.getDescription(), outcome.getDescription());"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        assertEquals(expected.getStartDateTime(), outcome.getStartDateTime());"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        assertEquals(expected.getEndDateTime(), outcome.getEndDateTime());"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        Set\u003cString\u003e outcomeTags \u003d outcome.getTags();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        assertNotNull(outcomeTags);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        assertTrue(checkTags(tags, outcomeTags));"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    //@@author marcusteh1238"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    public void taskSourceCreationCorrectness_parseSingleTaskNormalWithoutDueDateTime_valueAsExpected()"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            throws IcsException {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        String icsTaskObjectString \u003d \"BEGIN:VTODO\\n\""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                + \"UID:2019-11-09T07:32:17.517840600Z@Horo\\n\""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                + \"DTSTAMP:20191109T073217Z\\n\""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                + \"SUMMARY:hello\\n\""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                + \"END:VTODO\";"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        String description \u003d \"hello\";"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        TaskSource expected \u003d TaskSource.newBuilder(description).build();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        TaskSource outcome \u003d IcsParser.parseSingleTask(icsTaskObjectString);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        assertEquals(expected.getDescription(), outcome.getDescription());"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    //@@author marcusteh1238"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    public void taskSourceCreationCorrectness_parseSingleTaskNormalWithDueDateTime_valueAsExpected()"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            throws ParseException, IcsException {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        String icsTaskObjectString \u003d \"BEGIN:VTODO\\n\""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                + \"UID:2019-11-09T07:32:17.517840600Z@Horo\\n\""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                + \"DTSTAMP:20191109T073217Z\\n\""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                + \"SUMMARY:hello\\n\""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                + \"DUE:20191109T043400Z\\n\""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                + \"END:VTODO\";"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        String description \u003d \"hello\";"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        assertDoesNotThrow(() -\u003e DateTime.fromIcsString(\"20191109T043400Z\"));"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        DateTime dueDate \u003d DateTime.fromIcsString(\"20191109T043400Z\");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        TaskSourceBuilder builder \u003d TaskSource.newBuilder(description);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        builder.setDueDate(dueDate);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        TaskSource expected \u003d builder.build();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        TaskSource outcome \u003d IcsParser.parseSingleTask(icsTaskObjectString);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        assertEquals(expected.getDescription(), outcome.getDescription());"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        assertEquals(expected.getDueDate(), outcome.getDueDate());"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    //@@author marcusteh1238"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    public void taskSourceCreationCorrectness_parseSingleTaskNormalWithDueDateTimeWithTags_valueAsExpected()"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            throws ParseException, IcsException {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        String icsTaskObjectString \u003d \"BEGIN:VTODO\\n\""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                + \"UID:2019-11-09T07:32:17.517840600Z@Horo\\n\""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                + \"DTSTAMP:20191109T073217Z\\n\""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                + \"SUMMARY:hello\\n\""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                + \"DUE:20191109T043400Z\\n\""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                + \"DESCRIPTION:[tag1][tag2]\\n\""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                + \"END:VTODO\";"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        String description \u003d \"hello\";"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        assertDoesNotThrow(() -\u003e DateTime.fromIcsString(\"20191109T043400Z\"));"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        DateTime dueDate \u003d DateTime.fromIcsString(\"20191109T043400Z\");"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        ArrayList\u003cString\u003e tags \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        tags.add(\"tag1\");"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        tags.add(\"tag2\");"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        TaskSourceBuilder builder \u003d TaskSource.newBuilder(description);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        builder.setDueDate(dueDate);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        TaskSource expected \u003d builder.build();"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        TaskSource outcome \u003d IcsParser.parseSingleTask(icsTaskObjectString);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        assertEquals(expected.getDescription(), outcome.getDescription());"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        assertEquals(expected.getDueDate(), outcome.getDueDate());"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        assertTrue(checkTags(tags, outcome.getTags()));"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcusteh1238": 192
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/CommandManagerTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_ADD_EVENT_DUPLICATE;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_ADD_EVENT_SUCCESS;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.AddEventCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "class CommandManagerTest {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void onCommandInput_addCommand_success() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        CommandManager manager \u003d new CommandManager();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        UserOutputListenerStub listener \u003d new UserOutputListenerStub();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        manager.addUserOutputListener(listener);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        // Unknown command"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        manager.onCommandInput(\"add_event test \u002711/11/1111 11:11\u0027\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertEquals(MESSAGE_UNKNOWN_COMMAND, listener.getUserOutput().toString());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        // Register command"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        manager.addCommand(\"add_event\", () -\u003e AddEventCommand.newBuilder(new ModelManager()));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        manager.onCommandInput(\"add_event test \u002711/11/1111 11:11\u0027\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertEquals(String.format(MESSAGE_ADD_EVENT_SUCCESS, \"test\"), listener.getUserOutput().toString());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void onCommandInput_updateUserOutputListeners_success() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        ModelManager model \u003d new ModelManager();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        CommandManager manager \u003d new CommandManager();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        UserOutputListenerStub listener1 \u003d new UserOutputListenerStub();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        UserOutputListenerStub listener2 \u003d new UserOutputListenerStub();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        UserOutputListenerStub listener3 \u003d new UserOutputListenerStub();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        manager.addUserOutputListener(listener1);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        manager.addUserOutputListener(listener2);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        manager.addUserOutputListener(listener3);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        // Update on parse exception"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        manager.onCommandInput(\"\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertEquals(MESSAGE_INVALID_COMMAND_FORMAT, listener1.getUserOutput().toString());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertEquals(MESSAGE_INVALID_COMMAND_FORMAT, listener2.getUserOutput().toString());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertEquals(MESSAGE_INVALID_COMMAND_FORMAT, listener3.getUserOutput().toString());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        manager.addCommand(\"add_event\", () -\u003e AddEventCommand.newBuilder(model));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        // Update on success"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        manager.onCommandInput(\"add_event test \u002711/11/1111 11:11\u0027\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertEquals(String.format(MESSAGE_ADD_EVENT_SUCCESS, \"test\"), listener1.getUserOutput().toString());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        // Update on command execute exception"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        manager.onCommandInput(\"add_event test \u002711/11/1111 11:11\u0027\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertEquals(MESSAGE_ADD_EVENT_DUPLICATE, listener1.getUserOutput().toString());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 64
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/StorageManagerTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.time.ZoneOffset;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import org.json.JSONException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import org.junit.jupiter.api.AfterAll;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import org.skyscreamer.jsonassert.JSONAssert;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.DateTime;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.ModelData;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.events.EventSource;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.tasks.TaskSource;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "class StorageManagerTest {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final Path TEST_DATA_PATH \u003d Paths.get(\"data/test\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final Path EVENTS_PATH \u003d TEST_DATA_PATH.resolve(\"events.json\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final Path TASKS_PATH \u003d TEST_DATA_PATH.resolve(\"tasks.json\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final Path CORRECT_EVENTS_PATH \u003d Paths.get(\"src/test/data\", \"events.json\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final Path CORRECT_TASKS_PATH \u003d Paths.get(\"src/test/data\", \"tasks.json\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final ModelData CORRECT_MODEL_DATA;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    static {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        DateTime start \u003d DateTime.newBuilder(11, 11, 1111, 11, 11, ZoneOffset.UTC).build();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        CORRECT_MODEL_DATA \u003d new ModelData("
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            List.of("
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                EventSource.newBuilder(\"a\", start).build(),"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                EventSource.newBuilder(\"b\", start).build(),"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                EventSource.newBuilder(\"c\", start).build()"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            ),"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            List.of("
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                TaskSource.newBuilder(\"a\").build(),"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                TaskSource.newBuilder(\"b\").build(),"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                TaskSource.newBuilder(\"c\").build()"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            )"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        );"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void beforeEach() throws IOException {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        Files.deleteIfExists(EVENTS_PATH);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        Files.deleteIfExists(TASKS_PATH);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        Files.deleteIfExists(TEST_DATA_PATH);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @AfterAll"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    static void afterAll() throws IOException {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        Files.deleteIfExists(EVENTS_PATH);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        Files.deleteIfExists(TASKS_PATH);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        Files.deleteIfExists(TEST_DATA_PATH);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void load_noPaths_success() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        ModelManager model \u003d new ModelManager();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        StorageManager manager \u003d new StorageManager(model);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        manager.load();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        // Loaded nothing."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertEquals(new ModelData(), model.getModelData());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void load_notExists_success() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        ModelManager model \u003d new ModelManager();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        StorageManager manager \u003d new StorageManager(model);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        manager.setEventsFile(EVENTS_PATH);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        manager.setTasksFile(TASKS_PATH);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        manager.load();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        // Loaded nothing."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertEquals(new ModelData(), model.getModelData());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void save_notExists_success() throws IOException, JSONException {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        ModelManager model \u003d new ModelManager();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        StorageManager manager \u003d new StorageManager(model);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        model.addModelDataListener(manager);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        manager.setEventsFile(EVENTS_PATH);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        manager.setTasksFile(TASKS_PATH);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        model.setModelData(CORRECT_MODEL_DATA);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertTrue(Files.exists(EVENTS_PATH));"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertTrue(Files.exists(TASKS_PATH));"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        // Check that json data is the same."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String events1 \u003d Files.readString(CORRECT_EVENTS_PATH);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String events2 \u003d Files.readString(EVENTS_PATH);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        JSONAssert.assertEquals(events1, events2, false);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String tasks1 \u003d Files.readString(CORRECT_TASKS_PATH);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String tasks2 \u003d Files.readString(TASKS_PATH);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        JSONAssert.assertEquals(tasks1, tasks2, false);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void load_exists_success() {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        ModelManager model \u003d new ModelManager();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        StorageManager manager \u003d new StorageManager(model);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        model.addModelDataListener(manager);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        manager.setEventsFile(CORRECT_EVENTS_PATH);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        manager.setTasksFile(CORRECT_TASKS_PATH);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        manager.load();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertEquals(CORRECT_MODEL_DATA, model.getModelData());"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 125
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/UndoRedoManagerTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "package seedu.address.logic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import seedu.address.model.DateTime;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import seedu.address.model.ModelData;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import seedu.address.model.events.EventSource;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "//@@author bruceskellator"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "class UndoRedoManagerTest {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    void undo_nothingToUndo_exceptionThrown() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        ModelManager modelManager \u003d new ModelManager();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        UndoRedoManager undoRedoManager \u003d new UndoRedoManager(modelManager);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        undoRedoManager.start();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        modelManager.addModelDataListener(undoRedoManager);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        assertThrows(CommandException.class, undoRedoManager::undo);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    void undo_nothingToRedo_exceptionThrown() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        ModelManager modelManager \u003d new ModelManager();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        UndoRedoManager undoRedoManager \u003d new UndoRedoManager(modelManager);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        undoRedoManager.start();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        modelManager.addModelDataListener(undoRedoManager);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        assertThrows(CommandException.class, undoRedoManager::redo);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        String description \u003d \"description\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        DateTime start \u003d DateTime.now();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        List\u003cEventSource\u003e events \u003d new ArrayList\u003c\u003e(modelManager.getEvents());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        events.add(EventSource.newBuilder(description, start).build());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        modelManager.setModelData(new ModelData(events, modelManager.getTasks()));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        assertThrows(CommandException.class, undoRedoManager::redo);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    void onModelListChange_modelListChanged_writtenCorrectly() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        ModelManager modelManager \u003d new ModelManager();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        UndoRedoManager undoRedoManager \u003d new UndoRedoManager(modelManager);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        undoRedoManager.start();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        modelManager.addModelDataListener(undoRedoManager);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        assertEquals(1, undoRedoManager.getUndoStateList().size());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        assertEquals(0, undoRedoManager.getUndoIndex());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        // Test whether a deep-copied version of ModelData in ModelManager has been stored to UndoRedoManager,"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        // and not the original object itself"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        assertTrue(undoRedoManager.getUndoStateList().get(0) !\u003d modelManager.getModelData());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        assertEquals(undoRedoManager.getUndoStateList().get(0), modelManager.getModelData());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        String description \u003d \"description\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        DateTime start \u003d DateTime.now();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        List\u003cEventSource\u003e events \u003d new ArrayList\u003c\u003e(modelManager.getEvents());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        events.add(EventSource.newBuilder(description, start).build());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        modelManager.setModelData(new ModelData(events, modelManager.getTasks()));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        assertEquals(2, undoRedoManager.getUndoStateList().size());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        assertEquals(1, undoRedoManager.getUndoIndex());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        // ModelData in ModelManager should no longer match the previous version in UndoRedoManager"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        assertFalse(undoRedoManager.getUndoStateList().get(0).equals(modelManager.getModelData()));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        // Test whether a deep-copied version of ModelData in ModelManager has been stored to UndoRedoManager,"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        // and not the original object itself"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        assertTrue(undoRedoManager.getUndoStateList().get(1) !\u003d modelManager.getModelData());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        assertEquals(undoRedoManager.getUndoStateList().get(1), modelManager.getModelData());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    void undo_validUndo_writtenCorrectly() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        ModelManager modelManager \u003d new ModelManager();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        UndoRedoManager undoRedoManager \u003d new UndoRedoManager(modelManager);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        undoRedoManager.start();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        modelManager.addModelDataListener(undoRedoManager);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        String description \u003d \"description\";"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        DateTime start \u003d DateTime.now();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        List\u003cEventSource\u003e events \u003d new ArrayList\u003c\u003e(modelManager.getEvents());"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        events.add(EventSource.newBuilder(description, start).build());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        modelManager.setModelData(new ModelData(events, modelManager.getTasks()));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        assertDoesNotThrow(undoRedoManager::undo);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        assertEquals(0, undoRedoManager.getUndoIndex());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        // ModelData in ModelManager should no longer match the latest version in UndoRedoManager"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        assertFalse(undoRedoManager.getUndoStateList().get(1).equals(modelManager.getModelData()));"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        // Test whether ModelData in ModelManager has been updated to match the previous version in UndoRedoManager"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        // (Value-equality but not reference equality)"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        assertTrue(undoRedoManager.getUndoStateList().get(0) !\u003d modelManager.getModelData());"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        assertEquals(undoRedoManager.getUndoStateList().get(0), modelManager.getModelData());"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    void undo_validRedo_writtenCorrectly() {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        ModelManager modelManager \u003d new ModelManager();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        UndoRedoManager undoRedoManager \u003d new UndoRedoManager(modelManager);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        undoRedoManager.start();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        modelManager.addModelDataListener(undoRedoManager);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        String description \u003d \"description\";"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        DateTime start \u003d DateTime.now();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        List\u003cEventSource\u003e events \u003d new ArrayList\u003c\u003e(modelManager.getEvents());"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        events.add(EventSource.newBuilder(description, start).build());"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        modelManager.setModelData(new ModelData(events, modelManager.getTasks()));"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        assertDoesNotThrow(undoRedoManager::undo);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        assertDoesNotThrow(undoRedoManager::redo);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        assertEquals(1, undoRedoManager.getUndoIndex());"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        // ModelData in ModelManager should no longer match the previous version in UndoRedoManager"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        assertFalse(undoRedoManager.getUndoStateList().get(0).equals(modelManager.getModelData()));"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        // Test whether ModelData in ModelManager has been updated to match the previous version in UndoRedoManager"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        // (Value-equality but not reference equality)"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        assertTrue(undoRedoManager.getUndoStateList().get(1) !\u003d modelManager.getModelData());"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        assertEquals(undoRedoManager.getUndoStateList().get(1), modelManager.getModelData());"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bruceskellator": 126
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/UserOutputListenerStub.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.ui.ColorTheme;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.ui.UserOutput;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.ui.listeners.UserOutputListener;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * A UserOutputListener that copies whatever it is notified."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class UserOutputListenerStub implements UserOutputListener {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private UserOutput userOutput;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public UserOutput getUserOutput() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return userOutput;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public void onUserOutput(UserOutput output, ColorTheme results) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.userOutput \u003d output;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 22
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/AddEventCommandTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static seedu.address.logic.commands.AddEventCommand.Builder.OPTION_END_DATE_TIME;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static seedu.address.logic.commands.AddEventCommand.Builder.OPTION_REMIND_DATE_TIME;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static seedu.address.logic.commands.AddEventCommand.Builder.OPTION_TAGS;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.DateTime;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.events.EventSource;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "class AddEventCommandTest {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void build_allParameters_success() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String description \u003d \"description\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String start \u003d \"11/11/1111 11:00\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String end \u003d \"11/11/1111 12:00\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String remind \u003d \"11/11/1111 08:00\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String[] tags \u003d new String[] {\"a\", \"b\", \"c\"};"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertDoesNotThrow(() -\u003e AddEventCommand.newBuilder(null)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(description)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(start)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(OPTION_END_DATE_TIME)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(end)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(OPTION_REMIND_DATE_TIME)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(remind)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(OPTION_TAGS)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(tags[0])"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(tags[1])"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(tags[2])"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .build());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void execute_addOne_success() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String description \u003d \"description\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        DateTime start \u003d DateTime.now();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        ModelManager model \u003d new ModelManager();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertEquals(0, model.getEvents().size());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertDoesNotThrow(() -\u003e AddEventCommand.newBuilder(model)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(description)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(start.toUserString())"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .build()"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .execute());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        List\u003cEventSource\u003e modelEvents \u003d model.getEvents();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertEquals(1, modelEvents.size());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertEquals(EventSource.newBuilder(description, start).build(), modelEvents.get(0));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void execute_addDuplicate_failure() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String description \u003d \"description\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        DateTime start \u003d DateTime.now();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        ModelManager model \u003d new ModelManager();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertEquals(0, model.getEvents().size());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertDoesNotThrow(() -\u003e AddEventCommand.newBuilder(model)"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(description)"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(start.toUserString())"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .build()"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .execute());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        // Check size"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertEquals(1, model.getEvents().size());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertThrows(CommandException.class, () -\u003e AddEventCommand.newBuilder(model)"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(description)"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(start.toUserString())"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .build()"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .execute());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        // Check size"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertEquals(1, model.getEvents().size());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 85
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/AddTaskCommandTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import static seedu.address.logic.commands.AddTaskCommand.Builder.OPTION_DUE_DATE_TIME;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import static seedu.address.logic.commands.AddTaskCommand.Builder.OPTION_TAGS;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.model.tasks.TaskSource;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "public class AddTaskCommandTest {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    void build_allParameters_success() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        String description \u003d \"description\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        String due \u003d \"11/11/1111 11:00\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        String[] tags \u003d new String[] {\"a\", \"b\", \"c\"};"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertDoesNotThrow(() -\u003e AddTaskCommand.newBuilder(null)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(description)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(OPTION_DUE_DATE_TIME)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(due)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(OPTION_TAGS)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(tags[0])"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(tags[1])"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(tags[2])"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            .build());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    void execute_addOne_success() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        String description \u003d \"description\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        ModelManager model \u003d new ModelManager();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertEquals(0, model.getTasks().size());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertDoesNotThrow(() -\u003e AddTaskCommand.newBuilder(model)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(description)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            .build()"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            .execute());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        List\u003cTaskSource\u003e modelTasks \u003d model.getTasks();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertEquals(1, modelTasks.size());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertEquals(TaskSource.newBuilder(description).build(), modelTasks.get(0));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    void execute_addDuplicate_failure() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        String description \u003d \"description\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        ModelManager model \u003d new ModelManager();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertEquals(0, model.getTasks().size());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertDoesNotThrow(() -\u003e AddTaskCommand.newBuilder(model)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(description)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            .build()"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            .execute());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        // Check size"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertEquals(1, model.getTasks().size());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertThrows(CommandException.class, () -\u003e AddTaskCommand.newBuilder(model)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(description)"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            .build()"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            .execute());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        // Check size"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertEquals(1, model.getTasks().size());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 63,
      "WeomuCat": 10
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/CalendarViewCommandTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import static seedu.address.logic.commands.CalendarViewCommandBuilder.OPTION_CALENDAR_SCREEN_DATE;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.stub.UiManagerStub;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "class CalendarViewCommandTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    void build_fullCommand_success() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        String calendarDate \u003d \"11/1111\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        assertDoesNotThrow(() -\u003e {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            UiManagerStub uiManager \u003d new UiManagerStub();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            Command command \u003d CalendarViewCommand.newBuilder(uiManager)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    .acceptPhrase(OPTION_CALENDAR_SCREEN_DATE)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    .acceptPhrase(calendarDate)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    .build();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            command.execute();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        });"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    void build_emptyCommand_success() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        assertDoesNotThrow(() -\u003e {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            UiManagerStub uiManager \u003d new UiManagerStub();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            Command command \u003d CalendarViewCommand.newBuilder(uiManager)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    .build();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            command.execute();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        });"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 35,
      "WeomuCat": 2
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/DayViewCommandTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.logic.UiManager;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.logic.commands.exceptions.ArgumentException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.stub.UiManagerStub;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "class DayViewCommandTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    void build_fullCommand_success() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        String calendarDate \u003d \"11/11/1111\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        assertDoesNotThrow(() -\u003e {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            UiManagerStub uiManager \u003d new UiManagerStub();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            Command command \u003d DayViewCommand.newBuilder(uiManager)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    .acceptPhrase(calendarDate)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    .build();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            command.execute();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        });"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    void execute_emptyCommand_failure() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        assertThrows(ArgumentException.class, () -\u003e {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            UiManager uiManager \u003d new UiManager();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            Command command \u003d DayViewCommand.newBuilder(uiManager)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    .build();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            command.execute();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        });"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 38,
      "WeomuCat": 1
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/DeleteEventCommandTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static seedu.address.logic.commands.DeleteEventCommand.Builder.OPTION_TAGS;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.model.DateTime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.ModelData;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.events.EventSource;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "class DeleteEventCommandTest {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void build_allParameters_success() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String[] indexes \u003d new String[]{\"0\", \"1\", \"2\"};"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String[] tags \u003d new String[]{\"a\", \"b\", \"c\"};"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertDoesNotThrow(() -\u003e DeleteEventCommand.newBuilder(null)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(indexes[0])"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(indexes[1])"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(indexes[2])"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(OPTION_TAGS)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(tags[0])"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(tags[1])"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(tags[2])"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .build());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void execute_noParameters_failure() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        ModelManager model \u003d new ModelManager();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        DateTime start \u003d DateTime.now();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        model.setModelData(new ModelData("
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            List.of("
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                EventSource.newBuilder(\"a\", start).build(),"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                EventSource.newBuilder(\"b\", start).build(),"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                EventSource.newBuilder(\"c\", start).build()"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            ), List.of()));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertEquals(3, model.getEvents().size());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertThrows(CommandException.class, () -\u003e DeleteEventCommand.newBuilder(model)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .build()"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .execute());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertEquals(3, model.getEvents().size());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /* Delete by Index */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void execute_deleteIndexes_success() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String[] indexes \u003d new String[]{\"1\", \"2\", \"3\"};"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        DateTime start \u003d DateTime.now();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        List\u003cEventSource\u003e events \u003d List.of("
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            EventSource.newBuilder(\"a\", start).build(),"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            EventSource.newBuilder(\"b\", start).build(),"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            EventSource.newBuilder(\"c\", start).build(),"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            EventSource.newBuilder(\"d\", start).build(),"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            EventSource.newBuilder(\"e\", start).build());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        ModelManager model \u003d new ModelManager();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        model.setModelData(new ModelData(events, List.of()));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertEquals(5, model.getEvents().size());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertDoesNotThrow(() -\u003e DeleteEventCommand.newBuilder(model)"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(indexes[0])"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(indexes[1])"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(indexes[2])"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .build()"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .execute());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        // Delete \u0027b\u0027, \u0027c\u0027, \u0027d\u0027"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        List\u003cEventSource\u003e modelEvents \u003d model.getEvents();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertEquals(2, modelEvents.size());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertEquals(events.get(0), modelEvents.get(0));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertEquals(events.get(4), modelEvents.get(1));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void execute_deleteInvalidIndexes_failed() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String[] indexes \u003d new String[]{\"0\", \"1\", \"2\"};"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        DateTime start \u003d DateTime.now();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        List\u003cEventSource\u003e events \u003d List.of("
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            EventSource.newBuilder(\"a\", start).build(),"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            EventSource.newBuilder(\"b\", start).build());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        ModelManager model \u003d new ModelManager();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        model.setModelData(new ModelData(events, List.of()));"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertEquals(2, model.getEvents().size());"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertThrows(CommandException.class, () -\u003e DeleteEventCommand.newBuilder(model)"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(indexes[0])"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(indexes[1])"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(indexes[2])"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .build().execute());"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertEquals(2, model.getEvents().size());"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /* Delete by Tags */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void execute_deleteTags_success() {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String[] tags \u003d new String[]{\"3\", \"4\"};"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        DateTime start \u003d DateTime.now();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        List\u003cEventSource\u003e events \u003d List.of("
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            EventSource.newBuilder(\"a\", start).setTags(List.of(\"1\", \"2\", \"3\")).build(),"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            EventSource.newBuilder(\"b\", start).setTags(List.of(\"2\", \"3\", \"4\")).build(),"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            EventSource.newBuilder(\"c\", start).setTags(List.of(\"3\", \"4\", \"5\")).build(),"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            EventSource.newBuilder(\"d\", start).setTags(List.of(\"4\", \"5\", \"6\")).build(),"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            EventSource.newBuilder(\"e\", start).setTags(List.of(\"5\", \"6\", \"7\")).build());"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        ModelManager model \u003d new ModelManager();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        model.setModelData(new ModelData(events, List.of()));"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertEquals(5, model.getEvents().size());"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertDoesNotThrow(() -\u003e DeleteEventCommand.newBuilder(model)"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(OPTION_TAGS)"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(tags[0])"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(tags[1])"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .build()"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .execute());"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        // Delete \u0027b\u0027 and \u0027c\u0027"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        List\u003cEventSource\u003e modelEvents \u003d model.getEvents();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertEquals(3, modelEvents.size());"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertEquals(events.get(0), modelEvents.get(0));"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertEquals(events.get(3), modelEvents.get(1));"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertEquals(events.get(4), modelEvents.get(2));"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /* Delete by Index and Tags */"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void execute_deleteIndexesAndTags_success() {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String[] indexes \u003d new String[]{\"0\", \"1\"};"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String[] tags \u003d new String[]{\"3\", \"4\"};"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        DateTime start \u003d DateTime.now();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        List\u003cEventSource\u003e events \u003d List.of("
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            EventSource.newBuilder(\"a\", start).setTags(List.of(\"1\", \"2\", \"3\")).build(),"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            EventSource.newBuilder(\"b\", start).setTags(List.of(\"2\", \"3\", \"4\")).build(),"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            EventSource.newBuilder(\"c\", start).setTags(List.of(\"3\", \"4\", \"5\")).build(),"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            EventSource.newBuilder(\"d\", start).setTags(List.of(\"4\", \"5\", \"6\")).build(),"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            EventSource.newBuilder(\"e\", start).setTags(List.of(\"5\", \"6\", \"7\")).build());"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        ModelManager model \u003d new ModelManager();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        model.setModelData(new ModelData(events, List.of()));"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertEquals(5, model.getEvents().size());"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertDoesNotThrow(() -\u003e DeleteEventCommand.newBuilder(model)"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(indexes[0])"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(indexes[1])"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(OPTION_TAGS)"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(tags[0])"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(tags[1])"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .build()"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .execute());"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        // Delete \u0027b\u0027"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        List\u003cEventSource\u003e modelEvents \u003d model.getEvents();"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertEquals(4, modelEvents.size());"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertEquals(events.get(0), modelEvents.get(0));"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertEquals(events.get(2), modelEvents.get(1));"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertEquals(events.get(3), modelEvents.get(2));"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertEquals(events.get(4), modelEvents.get(3));"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void execute_deleteNoMatches_failure() {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String[] indexes \u003d new String[]{\"0\", \"1\"};"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String[] tags \u003d new String[]{\"5\", \"6\"};"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        DateTime start \u003d DateTime.now();"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        List\u003cEventSource\u003e events \u003d List.of("
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            EventSource.newBuilder(\"a\", start).setTags(List.of(\"1\", \"2\", \"3\")).build(),"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            EventSource.newBuilder(\"b\", start).setTags(List.of(\"2\", \"3\", \"4\")).build(),"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            EventSource.newBuilder(\"c\", start).setTags(List.of(\"3\", \"4\", \"5\")).build(),"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            EventSource.newBuilder(\"d\", start).setTags(List.of(\"4\", \"5\", \"6\")).build(),"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            EventSource.newBuilder(\"e\", start).setTags(List.of(\"5\", \"6\", \"7\")).build());"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        ModelManager model \u003d new ModelManager();"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        model.setModelData(new ModelData(events, List.of()));"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertEquals(5, model.getEvents().size());"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertThrows(CommandException.class, () -\u003e DeleteEventCommand.newBuilder(model)"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(indexes[0])"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(indexes[1])"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(OPTION_TAGS)"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(tags[0])"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(tags[1])"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .build()"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .execute());"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        // Check size"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertEquals(5, model.getEvents().size());"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 2,
      "WeomuCat": 200
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/DeleteTaskCommandTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import static seedu.address.logic.commands.DeleteTaskCommand.Builder.OPTION_TAGS;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.model.ModelData;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.model.tasks.TaskSource;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "public class DeleteTaskCommandTest {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    void build_allParameters_success() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        String[] indexes \u003d new String[]{\"0\", \"1\", \"2\"};"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        String[] tags \u003d new String[]{\"a\", \"b\", \"c\"};"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertDoesNotThrow(() -\u003e DeleteTaskCommand.newBuilder(null)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(indexes[0])"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(indexes[1])"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(indexes[2])"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(OPTION_TAGS)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(tags[0])"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(tags[1])"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(tags[2])"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            .build());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    void execute_noParameters_failure() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        ModelManager model \u003d new ModelManager();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        model.setModelData(new ModelData("
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            List.of(),"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            List.of("
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                TaskSource.newBuilder(\"a\").build(),"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                TaskSource.newBuilder(\"b\").build(),"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                TaskSource.newBuilder(\"c\").build()"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            )));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertEquals(3, model.getTasks().size());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertThrows(CommandException.class, () -\u003e DeleteTaskCommand.newBuilder(model)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            .build()"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            .execute());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertEquals(3, model.getTasks().size());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    /* Delete by Index */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    void execute_deleteIndexes_success() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        String[] indexes \u003d new String[]{\"1\", \"2\", \"3\"};"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        List\u003cTaskSource\u003e tasks \u003d List.of("
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            TaskSource.newBuilder(\"a\").build(),"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            TaskSource.newBuilder(\"b\").build(),"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            TaskSource.newBuilder(\"c\").build(),"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            TaskSource.newBuilder(\"d\").build(),"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            TaskSource.newBuilder(\"e\").build());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        ModelManager model \u003d new ModelManager();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        model.setModelData(new ModelData(List.of(), tasks));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertEquals(5, model.getTasks().size());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertDoesNotThrow(() -\u003e DeleteTaskCommand.newBuilder(model)"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(indexes[0])"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(indexes[1])"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(indexes[2])"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            .build()"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            .execute());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        // Delete \u0027b\u0027, \u0027c\u0027, \u0027d\u0027"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        List \u003cTaskSource\u003e modelTasks \u003d model.getTasks();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertEquals(2, modelTasks.size());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertEquals(tasks.get(0), modelTasks.get(0));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertEquals(tasks.get(4), modelTasks.get(1));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    void execute_deleteInvalidIndexes_failed() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        String[] indexes \u003d new String[]{\"0\", \"1\", \"2\"};"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        List\u003cTaskSource\u003e tasks \u003d List.of ("
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                TaskSource.newBuilder(\"a\").build(),"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                TaskSource.newBuilder(\"b\").build());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        ModelManager model \u003d new ModelManager();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        model.setModelData(new ModelData(List.of(), tasks));"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertEquals(2, model.getTasks().size());"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertThrows(CommandException.class, () -\u003e DeleteTaskCommand.newBuilder(model)"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(indexes[0])"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(indexes[1])"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(indexes[2])"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            .build()"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            .execute());"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertEquals(2, model.getTasks().size());"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    /* Delete by Tags */"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    void execute_deleteTags_success() {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        String[] tags \u003d new String[]{ \"3\", \"4\" };"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        List\u003cTaskSource\u003e tasks \u003d List.of("
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            TaskSource.newBuilder(\"a\").setTags(List.of(\"1\", \"2\", \"3\")).build(),"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            TaskSource.newBuilder(\"b\").setTags(List.of(\"2\", \"3\", \"4\")).build(),"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            TaskSource.newBuilder(\"c\").setTags(List.of(\"3\", \"4\", \"5\")).build(),"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            TaskSource.newBuilder(\"d\").setTags(List.of(\"4\", \"5\", \"6\")).build(),"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            TaskSource.newBuilder(\"e\").setTags(List.of(\"5\", \"6\", \"7\")).build()"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        );"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        ModelManager model \u003d new ModelManager();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        model.setModelData(new ModelData(List.of(), tasks));"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertEquals(5, model.getTasks().size());"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertDoesNotThrow(() -\u003e DeleteTaskCommand.newBuilder(model)"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(OPTION_TAGS)"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(tags[0])"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(tags[1])"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            .build()"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            .execute());"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        // Delete \u0027b\u0027 and \u0027c\u0027"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        List\u003cTaskSource\u003e modelTasks \u003d model.getTasks();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertEquals(3, modelTasks.size());"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertEquals(tasks.get(0), modelTasks.get(0));"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertEquals(tasks.get(3), modelTasks.get(1));"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertEquals(tasks.get(4), modelTasks.get(2));"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    /* Delete by Index and Tags */"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    void execute_deleteIndexesAndTags_success() {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        String[] indexes \u003d new String[]{ \"0\", \"1\" };"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        String[] tags \u003d new String[]{ \"3\", \"4\" };"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        List\u003cTaskSource\u003e tasks \u003d List.of("
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            TaskSource.newBuilder(\"a\").setTags(List.of(\"1\", \"2\", \"3\")).build(),"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            TaskSource.newBuilder(\"b\").setTags(List.of(\"2\", \"3\", \"4\")).build(),"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            TaskSource.newBuilder(\"c\").setTags(List.of(\"3\", \"4\", \"5\")).build(),"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            TaskSource.newBuilder(\"d\").setTags(List.of(\"4\", \"5\", \"6\")).build(),"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            TaskSource.newBuilder(\"e\").setTags(List.of(\"5\", \"6\", \"7\")).build()"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        );"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        ModelManager model \u003d new ModelManager();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        model.setModelData(new ModelData(List.of(), tasks));"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertEquals(5, model.getTasks().size());"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertDoesNotThrow(() -\u003e DeleteTaskCommand.newBuilder(model)"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(indexes[0])"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(indexes[1])"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(OPTION_TAGS)"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(tags[0])"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(tags[1])"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            .build()"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            .execute());"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        // Delete \u0027b\u0027"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        List\u003cTaskSource\u003e modelTasks \u003d model.getTasks();"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertEquals(4, modelTasks.size());"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertEquals(tasks.get(0), modelTasks.get(0));"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertEquals(tasks.get(2), modelTasks.get(1));"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertEquals(tasks.get(3), modelTasks.get(2));"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertEquals(tasks.get(4), modelTasks.get(3));"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    void execute_deleteNoMatches_failure() {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        String[] indexes \u003d new String[]{ \"0\", \"1\" };"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        String[] tags \u003d new String[]{ \"5\", \"6\" };"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        List\u003cTaskSource\u003e tasks \u003d List.of("
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                TaskSource.newBuilder(\"a\").setTags(List.of(\"1\", \"2\", \"3\")).build(),"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                TaskSource.newBuilder(\"b\").setTags(List.of(\"2\", \"3\", \"4\")).build(),"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                TaskSource.newBuilder(\"c\").setTags(List.of(\"3\", \"4\", \"5\")).build(),"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                TaskSource.newBuilder(\"d\").setTags(List.of(\"4\", \"5\", \"6\")).build(),"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                TaskSource.newBuilder(\"e\").setTags(List.of(\"5\", \"6\", \"7\")).build()"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        );"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        ModelManager model \u003d new ModelManager();"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        model.setModelData(new ModelData(List.of(), tasks));"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertEquals(5, model.getTasks().size());"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertThrows(CommandException.class, () -\u003e DeleteTaskCommand.newBuilder(model)"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(indexes[0])"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(indexes[1])"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(OPTION_TAGS)"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(tags[0])"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(tags[1])"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            .build()"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            .execute());"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        // Check size"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertEquals(5, model.getTasks().size());"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 177,
      "WeomuCat": 27
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/EditEventCommandTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static seedu.address.logic.commands.EditEventCommand.Builder.OPTION_DESCRIPTION;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static seedu.address.logic.commands.EditEventCommand.Builder.OPTION_END_DATE_TIME;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static seedu.address.logic.commands.EditEventCommand.Builder.OPTION_REMIND_DATE_TIME;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static seedu.address.logic.commands.EditEventCommand.Builder.OPTION_START_DATE_TIME;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static seedu.address.logic.commands.EditEventCommand.Builder.OPTION_TAGS;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.time.Duration;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.model.DateTime;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.ModelData;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.events.EventSource;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "class EditEventCommandTest {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void build_allParameters_success() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String[] indexes \u003d new String[]{\"1\", \"2\", \"3\"};"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String description \u003d \"description\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String start \u003d \"11/11/1111 11:00\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String end \u003d \"11/11/1111 12:00\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String remind \u003d \"11/11/1111 08:00\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String[] tags \u003d new String[]{\"a\", \"b\", \"c\"};"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertDoesNotThrow(() -\u003e EditEventCommand.newBuilder(null)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(indexes[0])"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(indexes[1])"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(indexes[2])"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(OPTION_DESCRIPTION)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(description)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(OPTION_START_DATE_TIME)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(start)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(OPTION_END_DATE_TIME)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(end)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(OPTION_REMIND_DATE_TIME)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(remind)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(OPTION_TAGS)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(tags[0])"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(tags[1])"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(tags[2])"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .build());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void execute_noIndexes_failure() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String description \u003d \"description\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        ModelManager model \u003d new ModelManager();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        DateTime start \u003d DateTime.now();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        List\u003cEventSource\u003e events \u003d List.of("
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            EventSource.newBuilder(\"a\", start).build(),"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            EventSource.newBuilder(\"b\", start).build(),"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            EventSource.newBuilder(\"c\", start).build());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        model.setModelData(new ModelData(events, List.of()));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertEquals(3, model.getEvents().size());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertThrows(CommandException.class, () -\u003e EditEventCommand.newBuilder(model)"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(OPTION_DESCRIPTION)"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(description)"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .build()"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .execute());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        List\u003cEventSource\u003e modelEvents \u003d model.getEvents();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertEquals(3, modelEvents.size());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertEquals(events.get(0), modelEvents.get(0));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertEquals(events.get(1), modelEvents.get(1));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertEquals(events.get(2), modelEvents.get(2));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void execute_noParameters_failure() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String[] indexes \u003d new String[]{\"0\", \"1\", \"2\"};"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        ModelManager model \u003d new ModelManager();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        DateTime start \u003d DateTime.now();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        List\u003cEventSource\u003e events \u003d List.of("
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            EventSource.newBuilder(\"a\", start).build(),"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            EventSource.newBuilder(\"b\", start).build(),"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            EventSource.newBuilder(\"c\", start).build());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        model.setModelData(new ModelData(events, List.of()));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertEquals(3, model.getEvents().size());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertThrows(CommandException.class, () -\u003e EditEventCommand.newBuilder(model)"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(indexes[0])"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(indexes[1])"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(indexes[2])"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .build()"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .execute());"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        List\u003cEventSource\u003e modelEvents \u003d model.getEvents();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertEquals(3, modelEvents.size());"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertEquals(events.get(0), modelEvents.get(0));"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertEquals(events.get(1), modelEvents.get(1));"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertEquals(events.get(2), modelEvents.get(2));"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /* Description */"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void execute_editDescriptions_success() {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String[] indexes \u003d new String[]{\"0\", \"1\"};"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String description \u003d \"description\";"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        DateTime start \u003d DateTime.now();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        List\u003cEventSource\u003e oldEvents \u003d List.of("
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            EventSource.newBuilder(\"a\", start).setTags(List.of(\"1\")).build(),"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            EventSource.newBuilder(\"b\", start).setTags(List.of(\"2\")).build(),"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            EventSource.newBuilder(\"c\", start).build()"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        );"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        List\u003cEventSource\u003e newEvents \u003d List.of("
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            EventSource.newBuilder(description, start).setTags(List.of(\"1\")).build(),"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            EventSource.newBuilder(description, start).setTags(List.of(\"2\")).build()"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        );"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        ModelManager model \u003d new ModelManager();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        model.setModelData(new ModelData(oldEvents, List.of()));"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertEquals(3, model.getEvents().size());"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertDoesNotThrow(() -\u003e EditEventCommand.newBuilder(model)"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(indexes[0])"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(indexes[1])"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(OPTION_DESCRIPTION)"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(description)"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .build()"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .execute());"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        List\u003cEventSource\u003e modelEvents \u003d model.getEvents();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertEquals(3, modelEvents.size());"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertEquals(newEvents.get(0), modelEvents.get(0));"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertEquals(newEvents.get(1), modelEvents.get(1));"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertEquals(oldEvents.get(2), modelEvents.get(2));"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /* Start */"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void execute_editStart_success() {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String[] indexes \u003d new String[]{\"0\", \"1\"};"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        DateTime oldStart \u003d DateTime.now();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        DateTime newStart \u003d oldStart.plus(Duration.ofHours(1));"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        List\u003cEventSource\u003e oldEvents \u003d List.of("
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            EventSource.newBuilder(\"a\", oldStart).build(),"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            EventSource.newBuilder(\"b\", oldStart).build(),"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            EventSource.newBuilder(\"c\", oldStart).build()"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        );"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        List\u003cEventSource\u003e newEvents \u003d List.of("
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            EventSource.newBuilder(\"a\", newStart).build(),"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            EventSource.newBuilder(\"b\", newStart).build()"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        );"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        ModelManager model \u003d new ModelManager();"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        model.setModelData(new ModelData(oldEvents, List.of()));"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertEquals(3, model.getEvents().size());"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertDoesNotThrow(() -\u003e EditEventCommand.newBuilder(model)"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(indexes[0])"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(indexes[1])"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(OPTION_START_DATE_TIME)"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(newStart.toUserString())"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .build()"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .execute());"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        List\u003cEventSource\u003e modelEvents \u003d model.getEvents();"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertEquals(3, modelEvents.size());"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertEquals(newEvents.get(0), modelEvents.get(0));"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertEquals(newEvents.get(1), modelEvents.get(1));"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertEquals(oldEvents.get(2), modelEvents.get(2));"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /* End */"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void execute_editEnd_success() {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String[] indexes \u003d new String[]{\"0\", \"1\"};"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        DateTime start \u003d DateTime.now();"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        DateTime end \u003d start.plus(Duration.ofHours(1));"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        List\u003cEventSource\u003e oldEvents \u003d List.of("
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            EventSource.newBuilder(\"a\", start).build(),"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            EventSource.newBuilder(\"b\", start).build(),"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            EventSource.newBuilder(\"c\", start).build()"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        );"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        List\u003cEventSource\u003e newEvents \u003d List.of("
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            EventSource.newBuilder(\"a\", start).setEnd(end).build(),"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            EventSource.newBuilder(\"b\", start).setEnd(end).build()"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        );"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        ModelManager model \u003d new ModelManager();"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        model.setModelData(new ModelData(oldEvents, List.of()));"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertEquals(3, model.getEvents().size());"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertDoesNotThrow(() -\u003e EditEventCommand.newBuilder(model)"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(indexes[0])"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(indexes[1])"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(OPTION_END_DATE_TIME)"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(end.toUserString())"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .build()"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .execute());"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        List\u003cEventSource\u003e modelEvents \u003d model.getEvents();"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertEquals(3, modelEvents.size());"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertEquals(newEvents.get(0), modelEvents.get(0));"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertEquals(newEvents.get(1), modelEvents.get(1));"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertEquals(oldEvents.get(2), modelEvents.get(2));"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /* Remind */"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void execute_editRemind_success() {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String[] indexes \u003d new String[]{\"0\", \"1\"};"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        DateTime start \u003d DateTime.now();"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        DateTime remind \u003d start.plus(Duration.ofHours(-1));"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        List\u003cEventSource\u003e oldEvents \u003d List.of("
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            EventSource.newBuilder(\"a\", start).build(),"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            EventSource.newBuilder(\"b\", start).build(),"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            EventSource.newBuilder(\"c\", start).build()"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        );"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        List\u003cEventSource\u003e newEvents \u003d List.of("
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            EventSource.newBuilder(\"a\", start).setRemind(remind).build(),"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            EventSource.newBuilder(\"b\", start).setRemind(remind).build()"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        );"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        ModelManager model \u003d new ModelManager();"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        model.setModelData(new ModelData(oldEvents, List.of()));"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertEquals(3, model.getEvents().size());"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertDoesNotThrow(() -\u003e EditEventCommand.newBuilder(model)"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(indexes[0])"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(indexes[1])"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(OPTION_REMIND_DATE_TIME)"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(remind.toUserString())"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .build()"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .execute());"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        List\u003cEventSource\u003e modelEvents \u003d model.getEvents();"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertEquals(3, modelEvents.size());"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertEquals(newEvents.get(0), modelEvents.get(0));"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertEquals(newEvents.get(1), modelEvents.get(1));"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertEquals(oldEvents.get(2), modelEvents.get(2));"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /* Tags */"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void execute_editTags_success() {"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String[] indexes \u003d new String[]{\"0\", \"1\"};"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        DateTime start \u003d DateTime.now();"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        List\u003cString\u003e tags \u003d List.of(\"0\", \"1\", \"2\");"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        List\u003cEventSource\u003e oldEvents \u003d List.of("
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            EventSource.newBuilder(\"a\", start).build(),"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            EventSource.newBuilder(\"b\", start).build(),"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            EventSource.newBuilder(\"c\", start).build()"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        );"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        List\u003cEventSource\u003e newEvents \u003d List.of("
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            EventSource.newBuilder(\"a\", start).setTags(tags).build(),"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            EventSource.newBuilder(\"b\", start).setTags(tags).build()"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        );"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        ModelManager model \u003d new ModelManager();"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        model.setModelData(new ModelData(oldEvents, List.of()));"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertEquals(3, model.getEvents().size());"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertDoesNotThrow(() -\u003e EditEventCommand.newBuilder(model)"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(indexes[0])"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(indexes[1])"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(OPTION_TAGS)"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(tags.get(0))"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(tags.get(1))"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(tags.get(2))"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .build()"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .execute());"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        List\u003cEventSource\u003e modelEvents \u003d model.getEvents();"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertEquals(3, modelEvents.size());"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertEquals(newEvents.get(0), modelEvents.get(0));"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertEquals(newEvents.get(1), modelEvents.get(1));"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertEquals(oldEvents.get(2), modelEvents.get(2));"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void execute_editMultipleInvalidIndexes_failed() {"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String[] indexes \u003d new String[]{\"0\", \"1\", \"2\"};"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String description \u003d \"description\";"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        ModelManager model \u003d new ModelManager();"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        model.setModelData(new ModelData("
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            List.of("
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                EventSource.newBuilder(\"a\", DateTime.now()).build(),"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                EventSource.newBuilder(\"b\", DateTime.now()).build()"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            ), List.of()));"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertEquals(2, model.getEvents().size());"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertThrows(CommandException.class, () -\u003e EditEventCommand.newBuilder(model)"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(indexes[0])"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(indexes[1])"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(indexes[2])"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(OPTION_DESCRIPTION)"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(description)"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .build()"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .execute());"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertEquals(2, model.getEvents().size());"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /* Duplicates */"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void execute_editDuplicate_failure() {"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String[] indexes \u003d new String[]{\"0\", \"1\", \"2\"};"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String description \u003d \"description\";"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        DateTime start \u003d DateTime.now();"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        List\u003cEventSource\u003e events \u003d List.of("
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            EventSource.newBuilder(\"a\", start).build(),"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            EventSource.newBuilder(\"b\", start).build(),"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            EventSource.newBuilder(\"c\", start).build()"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        );"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        ModelManager model \u003d new ModelManager();"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        model.setModelData(new ModelData(events, List.of()));"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertEquals(3, model.getEvents().size());"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertThrows(CommandException.class, () -\u003e EditEventCommand.newBuilder(model)"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(indexes[0])"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(indexes[1])"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(OPTION_DESCRIPTION)"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(description)"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .build()"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .execute());"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        List\u003cEventSource\u003e modelEvents \u003d model.getEvents();"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertEquals(3, modelEvents.size());"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertEquals(events.get(0), modelEvents.get(0));"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertEquals(events.get(1), modelEvents.get(1));"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertEquals(events.get(2), modelEvents.get(2));"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 2,
      "WeomuCat": 343
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/EditTaskCommandTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import static seedu.address.logic.commands.EditTaskCommand.Builder.OPTION_DESCRIPTION;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import static seedu.address.logic.commands.EditTaskCommand.Builder.OPTION_DUE_DATE_DATE_TIME;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import static seedu.address.logic.commands.EditTaskCommand.Builder.OPTION_TAGS;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import java.time.Duration;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.model.DateTime;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.model.ModelData;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.model.tasks.TaskSource;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "public class EditTaskCommandTest {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    void build_allParameters_success() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        String[] indexes \u003d new String[]{\"1\", \"2\", \"3\"};"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        String description \u003d \"description\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        String due \u003d \"11/11/1111 11:00\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        String[] tags \u003d new String[]{\"a\", \"b\", \"c\"};"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertDoesNotThrow(() -\u003e EditTaskCommand.newBuilder(null)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(indexes[0])"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(indexes[1])"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(indexes[2])"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(OPTION_DESCRIPTION)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(description)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(OPTION_DUE_DATE_DATE_TIME)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(due)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(OPTION_TAGS)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(tags[0])"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(tags[1])"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(tags[2])"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            .build());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    void execute_notIndexes_failure() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        String description \u003d \"description\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        ModelManager model \u003d new ModelManager();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        List\u003cTaskSource\u003e tasks \u003d List.of("
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "             TaskSource.newBuilder(\"a\").build(),"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "             TaskSource.newBuilder(\"b\").build(),"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "             TaskSource.newBuilder(\"c\").build());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        model.setModelData(new ModelData(List.of(), tasks));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertEquals(3, model.getTasks().size());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertThrows(CommandException.class, () -\u003e EditTaskCommand.newBuilder(model)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(OPTION_DESCRIPTION)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(description)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            .build()"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            .execute());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        List\u003cTaskSource\u003e modelTasks \u003d model.getTasks();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertEquals(3, modelTasks.size());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertEquals(tasks.get(0), modelTasks.get(0));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertEquals(tasks.get(1), modelTasks.get(1));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertEquals(tasks.get(2), modelTasks.get(2));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    void execute_noParameters_failure() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        String[] indexes \u003d new String[]{\"0\", \"1\", \"2\"};"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        ModelManager model \u003d new ModelManager();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        List\u003cTaskSource\u003e tasks \u003d List.of("
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                TaskSource.newBuilder(\"a\").build(),"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                TaskSource.newBuilder(\"b\").build(),"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                TaskSource.newBuilder(\"c\").build());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        model.setModelData(new ModelData(List.of(), tasks));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertEquals(3, model.getTasks().size());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertThrows(CommandException.class, () -\u003e EditTaskCommand.newBuilder(model)"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(indexes[0])"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(indexes[1])"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(indexes[2])"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            .build()"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            .execute());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        List\u003cTaskSource\u003e modelTasks \u003d model.getTasks();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertEquals(3, modelTasks.size());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertEquals(tasks.get(0), modelTasks.get(0));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertEquals(tasks.get(1), modelTasks.get(1));"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertEquals(tasks.get(2), modelTasks.get(2));"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    void execute_editDescriptions_success() {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        String[] indexes \u003d new String[]{\"0\", \"1\"};"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        String description \u003d \"description\";"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        List\u003cTaskSource\u003e oldTasks \u003d List.of ("
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            TaskSource.newBuilder(\"a\").setTags(List.of(\"1\")).build(),"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            TaskSource.newBuilder(\"b\").setTags(List.of(\"2\")).build(),"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            TaskSource.newBuilder(\"c\").build()"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        );"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        List\u003cTaskSource\u003e newTasks \u003d List.of("
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                TaskSource.newBuilder(description).setTags(List.of(\"1\")).build(),"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                TaskSource.newBuilder(description).setTags(List.of(\"2\")).build()"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        );"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        ModelManager model \u003d new ModelManager();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        model.setModelData(new ModelData(List.of(), oldTasks));"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertEquals(3, model.getTasks().size());"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertDoesNotThrow(() -\u003e EditTaskCommand.newBuilder(model)"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(indexes[0])"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(indexes[1])"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(OPTION_DESCRIPTION)"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(description)"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            .build()"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            .execute());"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        List\u003cTaskSource\u003e modelTasks \u003d model.getTasks();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertEquals(3, modelTasks.size());"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertEquals(newTasks.get(0), modelTasks.get(0));"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertEquals(newTasks.get(1), modelTasks.get(1));"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertEquals(oldTasks.get(2), modelTasks.get(2));"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    /* Due */"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    void execute_editDue_success() {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        String[] indexes \u003d new String[]{\"0\", \"1\"};"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        DateTime start \u003d DateTime.now();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        DateTime due \u003d start.plus(Duration.ofHours(-1));"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        List\u003cTaskSource\u003e oldTasks \u003d List.of("
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            TaskSource.newBuilder(\"a\").build(),"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            TaskSource.newBuilder(\"b\").build(),"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            TaskSource.newBuilder(\"c\").build()"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        );"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        List\u003cTaskSource\u003e newTasks \u003d List.of("
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            TaskSource.newBuilder(\"a\").setDueDate(due).build(),"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            TaskSource.newBuilder(\"b\").setDueDate(due).build()"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        );"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        ModelManager model \u003d new ModelManager();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        model.setModelData(new ModelData(List.of(), oldTasks));"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertEquals(3, model.getTasks().size());"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertDoesNotThrow(() -\u003e EditTaskCommand.newBuilder(model)"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(indexes[0])"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(indexes[1])"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(OPTION_DUE_DATE_DATE_TIME)"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(due.toUserString())"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            .build()"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            .execute());"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        List\u003cTaskSource\u003e modelTasks \u003d model.getTasks();"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertEquals(3, modelTasks.size());"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertEquals(newTasks.get(0), modelTasks.get(0));"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertEquals(newTasks.get(1), modelTasks.get(1));"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertEquals(oldTasks.get(2), modelTasks.get(2));"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    /* Tags */"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    void execute_editTags_success() {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        String[] indexes \u003d new String[]{\"0\", \"1\"};"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        List\u003cString\u003e tags \u003d List.of(\"0\", \"1\", \"2\");"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        List\u003cTaskSource\u003e oldTasks \u003d List.of("
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                TaskSource.newBuilder(\"a\").build(),"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                TaskSource.newBuilder(\"b\").build(),"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                TaskSource.newBuilder(\"c\").build()"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        );"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        List\u003cTaskSource\u003e newTasks \u003d List.of("
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            TaskSource.newBuilder(\"a\").setTags(tags).build(),"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            TaskSource.newBuilder(\"b\").setTags(tags).build()"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        );"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        ModelManager model \u003d new ModelManager();"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        model.setModelData(new ModelData(List.of(), oldTasks));"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertEquals(3, model.getTasks().size());"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertDoesNotThrow(() -\u003e EditTaskCommand.newBuilder(model)"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .acceptPhrase(indexes[0])"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .acceptPhrase(indexes[1])"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .acceptPhrase(OPTION_TAGS)"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .acceptPhrase(tags.get(0))"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .acceptPhrase(tags.get(1))"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .acceptPhrase(tags.get(2))"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                .build()"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                .execute()"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        );"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        List\u003cTaskSource\u003e modelTasks \u003d model.getTasks();"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertEquals(newTasks.get(0), modelTasks.get(0));"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertEquals(newTasks.get(1), modelTasks.get(1));"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertEquals(oldTasks.get(2), modelTasks.get(2));"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    void execute_editMultipleInvalidIndexes_failed() {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        String[] indexes \u003d new String[]{\"0\", \"1\", \"2\"};"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        String description \u003d \"description\";"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        ModelManager model \u003d new ModelManager();"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        model.setModelData(new ModelData(List.of(),"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                List.of("
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                        TaskSource.newBuilder(\"a\").build(),"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                        TaskSource.newBuilder(\"b\").build()"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                )));"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertEquals(2, model.getTasks().size());"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertThrows(CommandException.class, () -\u003e EditTaskCommand.newBuilder(model)"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .acceptPhrase(indexes[0])"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .acceptPhrase(indexes[1])"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .acceptPhrase(indexes[2])"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .acceptPhrase(OPTION_DESCRIPTION)"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .acceptPhrase(description)"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                .build()"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                .execute());"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertEquals(2, model.getTasks().size());"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    /* Duplicates */"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    void execute_editDuplicate_failure() {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        String[] indexes \u003d new String[]{\"0\", \"1\", \"2\"};"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        String description \u003d \"description\";"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        List\u003cTaskSource\u003e tasks \u003d List.of("
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            TaskSource.newBuilder(\"a\").build(),"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            TaskSource.newBuilder(\"b\").build(),"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            TaskSource.newBuilder(\"c\").build()"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        );"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        ModelManager model \u003d new ModelManager();"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        model.setModelData(new ModelData(List.of(), tasks));"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertEquals(3, model.getTasks().size());"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertThrows(CommandException.class, () -\u003e EditTaskCommand.newBuilder(model)"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(indexes[0])"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(indexes[1])"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(OPTION_DESCRIPTION)"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .acceptPhrase(description)"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            .build()"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            .execute());"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        List\u003cTaskSource\u003e modelTasks \u003d model.getTasks();"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertEquals(3, modelTasks.size());"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertEquals(tasks.get(0), modelTasks.get(0));"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertEquals(tasks.get(1), modelTasks.get(1));"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertEquals(tasks.get(2), modelTasks.get(2));"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 222,
      "WeomuCat": 39
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/ListViewCommandTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.stub.UiManagerStub;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "class ListViewCommandTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    void build_fullCommand_success() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        assertDoesNotThrow(() -\u003e {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            UiManagerStub uiManager \u003d new UiManagerStub();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            Command command \u003d ListViewCommand.newBuilder(uiManager)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    .build();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            command.execute();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        });"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 22
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/LogViewCommandTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.stub.UiManagerStub;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "class LogViewCommandTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    void build_fullCommand_success() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        assertDoesNotThrow(() -\u003e {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            UiManagerStub uiManager \u003d new UiManagerStub();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            Command command \u003d LogViewCommand.newBuilder(uiManager)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    .build();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            command.execute();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        });"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 22
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/MonthViewCommandTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.logic.UiManager;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.logic.commands.exceptions.ArgumentException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.stub.UiManagerStub;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "class MonthViewCommandTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    void build_fullCommand_success() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        String calendarDate \u003d \"11/1111\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        assertDoesNotThrow(() -\u003e {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            UiManagerStub uiManager \u003d new UiManagerStub();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            Command command \u003d MonthViewCommand.newBuilder(uiManager)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    .acceptPhrase(calendarDate)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    .build();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            command.execute();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        });"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    void execute_emptyCommand_failure() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        assertThrows(ArgumentException.class, () -\u003e {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            UiManager uiManager \u003d new UiManager();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            Command command \u003d MonthViewCommand.newBuilder(uiManager)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    .build();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            command.execute();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        });"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 38,
      "WeomuCat": 1
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/WeekViewCommandTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.logic.UiManager;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.logic.commands.exceptions.ArgumentException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.stub.UiManagerStub;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "class WeekViewCommandTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    void build_fullCommand_success() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        String calendarDate \u003d \"11/11/1111\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        assertDoesNotThrow(() -\u003e {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            UiManagerStub uiManager \u003d new UiManagerStub();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            Command command \u003d WeekViewCommand.newBuilder(uiManager)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    .acceptPhrase(calendarDate)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    .build();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            command.execute();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        });"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    void execute_emptyCommand_failure() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        assertThrows(ArgumentException.class, () -\u003e {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            UiManager uiManager \u003d new UiManager();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            Command command \u003d WeekViewCommand.newBuilder(uiManager)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    .build();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            command.execute();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        });"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 38,
      "WeomuCat": 1
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/arguments/ArgumentTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.commands.arguments;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.exceptions.ArgumentException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "class ArgumentTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void build_acceptNull_failure() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e new ArgumentMock().accept(null));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void build_optionalArgument_success() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertDoesNotThrow(() -\u003e new ArgumentMock().build(false));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void build_acceptOptionalArgument_success() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String[] arguments \u003d { \"\", \" \", \"a\" };"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        for (String arg : arguments) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            assertDoesNotThrow(() -\u003e {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                new ArgumentMock()"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    .accept(arg)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    .build(false);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            });"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void build_requiredArgument_failure() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertThrows(ArgumentException.class, () -\u003e new ArgumentMock().build(true));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void build_acceptRequiredArgument_success() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String[] arguments \u003d { \"\", \" \", \"a\" };"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        for (String test : arguments) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            assertDoesNotThrow(() -\u003e {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                new ArgumentMock()"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    .accept(test)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    .build(true);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            });"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static class ArgumentMock extends Argument\u003cObject\u003e {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        ArgumentMock() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            super(new ArgumentBuilderStub());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        Object parse(String userInput) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            // should not be called when argument is optional."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            Objects.requireNonNull(userInput);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static class ArgumentBuilderStub extends ArgumentBuilder\u003cObject\u003e {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        ArgumentBuilderStub() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            super(\"\", o -\u003e {});"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        Argument\u003cObject\u003e argumentBuild() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            return new ArgumentMock();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 78
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/arguments/VariableArgumentsTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.commands.arguments;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "class VariableArgumentsTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void build_acceptNull_failure() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e new VariableArgumentsMock().accept(null));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void build_noArguments_success() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertDoesNotThrow(() -\u003e new VariableArgumentsMock().build());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void build_multipleArguments_success() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String[] arguments \u003d { \"\", \" \", \"a\" };"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertDoesNotThrow(() -\u003e {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            new VariableArgumentsMock()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .accept(arguments[0])"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .accept(arguments[1])"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .accept(arguments[2])"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        });"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static class VariableArgumentsMock extends VariableArguments\u003cObject\u003e {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        VariableArgumentsMock() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            super(new VariableArgumentsBuilderStub());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        Object parse(String userInput) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static class VariableArgumentsBuilderStub extends VariableArgumentsBuilder\u003cObject\u003e {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        VariableArgumentsBuilderStub() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            super(\"\", o -\u003e {});"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        VariableArguments\u003cObject\u003e argumentBuild() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            return new VariableArgumentsMock();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 55
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/stubs/CommandStub.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.commands.stubs;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.CommandBuilder;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.list.OptionalArgumentList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.list.RequiredArgumentList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.ui.UserOutput;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Command with no arguments or parameters."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class CommandStub extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static CommandBuilder newBuilder() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return new Builder().init();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public UserOutput execute() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /** CommandStub */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static class Builder extends CommandBuilder {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        protected CommandBuilder init() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            return super.init();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        protected RequiredArgumentList defineCommandArguments() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        protected Map\u003cString, OptionalArgumentList\u003e defineCommandOptions() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        protected Command commandBuild() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            return new CommandStub();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 48
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/stubs/OneArgumentCommandStub.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.commands.stubs;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.CommandBuilder;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.StringArgument;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.list.ArgumentList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.list.OptionalArgumentList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.list.RequiredArgumentList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.ui.UserOutput;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Command with one argument."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class OneArgumentCommandStub extends Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final String argument;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private OneArgumentCommandStub(Builder builder) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.argument \u003d builder.argument;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static CommandBuilder newBuilder() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return new Builder().init();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public UserOutput execute() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return new UserOutput(argument);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /** CommandStub */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static class Builder extends CommandBuilder {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        private String argument;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        protected CommandBuilder init() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            return super.init();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        protected RequiredArgumentList defineCommandArguments() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            return ArgumentList.required()"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .addArgument(StringArgument.newBuilder(\"\", s -\u003e this.argument \u003d s));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        protected Map\u003cString, OptionalArgumentList\u003e defineCommandOptions() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        protected Command commandBuild() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            return new OneArgumentCommandStub(this);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 59
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/stubs/OneVarArgumentCommandStub.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.commands.stubs;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.CommandBuilder;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.StringVariableArguments;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.list.ArgumentList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.list.OptionalArgumentList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.list.RequiredArgumentList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.ui.UserOutput;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Command with one variable argument."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class OneVarArgumentCommandStub extends Command {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final List\u003cString\u003e arguments;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private OneVarArgumentCommandStub(Builder builder) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.arguments \u003d builder.arguments;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static CommandBuilder newBuilder() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return new Builder().init();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public UserOutput execute() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return new UserOutput(String.join(\",\", arguments));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /** CommandStub */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static class Builder extends CommandBuilder {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        private List\u003cString\u003e arguments;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        protected CommandBuilder init() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            return super.init();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        protected RequiredArgumentList defineCommandArguments() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            return ArgumentList.required()"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .setVariableArguments(StringVariableArguments.newBuilder(\"\", l -\u003e this.arguments \u003d l));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        protected Map\u003cString, OptionalArgumentList\u003e defineCommandOptions() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        protected Command commandBuild() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            return new OneVarArgumentCommandStub(this);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 60
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/stubs/OptionalTwoArgumentsOneVarArgumentCommandStub.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.commands.stubs;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.CommandBuilder;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.StringArgument;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.StringVariableArguments;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.list.ArgumentList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.list.OptionalArgumentList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.list.RequiredArgumentList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.ui.UserOutput;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Command with an option containing two arguments and one variable argument."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class OptionalTwoArgumentsOneVarArgumentCommandStub extends Command {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private String argument1;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private String argument2;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final List\u003cString\u003e arguments;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private OptionalTwoArgumentsOneVarArgumentCommandStub(Builder builder) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.argument1 \u003d builder.argument1;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.argument2 \u003d builder.argument2;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.arguments \u003d builder.arguments;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static CommandBuilder newBuilder() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return new Builder().init();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public UserOutput execute() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return new UserOutput(String.format(\"[%s,%s][%s]\","
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            this.argument1,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            this.argument2,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            String.join(\",\", arguments)));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /** CommandStub */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static class Builder extends CommandBuilder {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        private String argument1;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        private String argument2;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        private List\u003cString\u003e arguments;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        protected CommandBuilder init() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            return super.init();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        protected RequiredArgumentList defineCommandArguments() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        protected Map\u003cString, OptionalArgumentList\u003e defineCommandOptions() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            return Map.of(\"-o\", ArgumentList.optional()"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .addArgument(StringArgument.newBuilder(\"\", s -\u003e this.argument1 \u003d s))"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .addArgument(StringArgument.newBuilder(\"\", s -\u003e this.argument2 \u003d s))"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .setVariableArguments(StringVariableArguments.newBuilder(\"\", l -\u003e this.arguments \u003d l)));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        protected Command commandBuild() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            return new OptionalTwoArgumentsOneVarArgumentCommandStub(this);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 72
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/stubs/TwoArgumentsCommandStub.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.commands.stubs;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.CommandBuilder;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.StringArgument;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.list.ArgumentList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.list.OptionalArgumentList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.list.RequiredArgumentList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.ui.UserOutput;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Command with two arguments."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class TwoArgumentsCommandStub extends Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final String argument1;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final String argument2;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private TwoArgumentsCommandStub(Builder builder) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.argument1 \u003d builder.argument1;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.argument2 \u003d builder.argument2;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static CommandBuilder newBuilder() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return new Builder().init();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public UserOutput execute() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return new UserOutput(String.format(\"%s,%s\","
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            this.argument1, this.argument2));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /** CommandStub */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static class Builder extends CommandBuilder {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        private String argument1;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        private String argument2;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        protected CommandBuilder init() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            return super.init();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        protected RequiredArgumentList defineCommandArguments() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            return ArgumentList.required()"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .addArgument(StringArgument.newBuilder(\"\", s -\u003e this.argument1 \u003d s))"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .addArgument(StringArgument.newBuilder(\"\", s -\u003e this.argument2 \u003d s));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        protected Map\u003cString, OptionalArgumentList\u003e defineCommandOptions() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        protected Command commandBuild() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            return new TwoArgumentsCommandStub(this);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 64
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/stubs/TwoArgumentsOneVarArgumentCommandStub.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.commands.stubs;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.CommandBuilder;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.StringArgument;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.StringVariableArguments;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.list.ArgumentList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.list.OptionalArgumentList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.list.RequiredArgumentList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.ui.UserOutput;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Command with two arguments and one variable argument."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class TwoArgumentsOneVarArgumentCommandStub extends Command {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private String argument1;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private String argument2;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final List\u003cString\u003e arguments;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private TwoArgumentsOneVarArgumentCommandStub(Builder builder) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.argument1 \u003d builder.argument1;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.argument2 \u003d builder.argument2;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.arguments \u003d builder.arguments;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static CommandBuilder newBuilder() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return new Builder().init();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public UserOutput execute() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return new UserOutput(String.format(\"[%s,%s][%s]\","
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            this.argument1,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            this.argument2,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            String.join(\",\", arguments)));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /** CommandStub */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static class Builder extends CommandBuilder {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        private String argument1;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        private String argument2;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        private List\u003cString\u003e arguments;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        protected CommandBuilder init() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            return super.init();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        protected RequiredArgumentList defineCommandArguments() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            return ArgumentList.required()"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .addArgument(StringArgument.newBuilder(\"\", s -\u003e this.argument1 \u003d s))"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .addArgument(StringArgument.newBuilder(\"\", s -\u003e this.argument2 \u003d s))"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .setVariableArguments(StringVariableArguments.newBuilder(\"\", l -\u003e this.arguments \u003d l));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        protected Map\u003cString, OptionalArgumentList\u003e defineCommandOptions() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        protected Command commandBuild() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            return new TwoArgumentsOneVarArgumentCommandStub(this);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 72
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/notification/NotificationCheckerTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "package seedu.address.logic.notification;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.model.DateTime;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.ModelData;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.model.events.EventSource;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.ui.systemtray.PopupNotification;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "public class NotificationCheckerTest {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    void constructor_inputNull_shouldThrowError() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertThrows(NullPointerException.class, ("
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            ) -\u003e new NotificationChecker(null));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    void getListOfNotifications_inputEmptyList_returnEmptyList() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        ModelManager model \u003d new ModelManager();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        NotificationChecker notificationChecker \u003d new NotificationChecker(model);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        ArrayList\u003cPopupNotification\u003e popupNotificationList \u003d notificationChecker.getListOfPopupNotifications();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertEquals(0, popupNotificationList.size());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    void getListOfNotifications_inputMatchingEventSource_returnSizeTwoList() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        ModelManager model \u003d new ModelManager();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        NotificationChecker notificationChecker \u003d new NotificationChecker(model);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        DateTime start \u003d DateTime.now();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        EventSource es1 \u003d EventSource.newBuilder(\"Test1\", start).build();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        EventSource es2 \u003d EventSource.newBuilder(\"Test2\", start).build();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        model.setModelData(new ModelData("
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            List.of(es1, es2),"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            List.of()));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        ArrayList\u003cPopupNotification\u003e popupNotificationList \u003d notificationChecker.getListOfPopupNotifications();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertEquals(2, popupNotificationList.size());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    void getListOfNotifications_inputMatchingEventSource_returnMatchingEventSource() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        ModelManager model \u003d new ModelManager();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        NotificationChecker notificationChecker \u003d new NotificationChecker(model);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        DateTime start \u003d DateTime.now();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        EventSource es1 \u003d EventSource.newBuilder(\"Test1\", start).build();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        EventSource es2 \u003d EventSource.newBuilder(\"Test2\", start).build();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        model.setModelData(new ModelData("
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            List.of(es1, es2),"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            List.of()));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        ArrayList\u003cPopupNotification\u003e popupNotificationList \u003d notificationChecker.getListOfPopupNotifications();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertEquals(new PopupNotification(es1.getDescription(),"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                es2.getStartDateTime().toString()), popupNotificationList.get(0));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertEquals(new PopupNotification(es2.getDescription(),"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                es2.getStartDateTime().toString()), popupNotificationList.get(1));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 56,
      "WeomuCat": 14
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/notification/NotificationCheckingThreadTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "package seedu.address.logic.notification;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "public class NotificationCheckingThreadTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    void whileRunningThread_requestInterrupt_shouldExitByThrowingInterruptedException() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertDoesNotThrow(("
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        ) -\u003e {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            NotificationCheckingThread nct \u003d"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                    new NotificationCheckingThread(new NotificationChecker(new ModelManager()));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            nct.setDaemon(true);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            nct.start();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            nct.interrupt();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        });"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    void setNotificationsOff_checkNotificationsSwitchedOffSuccessfully_valueAsExpected() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        NotificationCheckingThread nct \u003d"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                new NotificationCheckingThread(new NotificationChecker(new ModelManager()));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        nct.switchOffNotifications();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertFalse(nct.getNotificationsOnStatus());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    void setNotificationsOn_checkNotificationsSwitchedOnSuccessfully_valueAsExpected() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        NotificationCheckingThread nct \u003d"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                new NotificationCheckingThread(new NotificationChecker(new ModelManager()));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        nct.switchOffNotifications();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        nct.switchOnNotifications();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertTrue(nct.getNotificationsOnStatus());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 43
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/parser/CalendarDayParserTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "class CalendarDayParserTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final CalendarDayParser PARSER \u003d new CalendarDayParser();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void parse_invalidDay_failure() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String[] tests \u003d { \"\", \" \", \"01010001\", \"1/1/1\", \"29/02/2019\" };"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        for (String test : tests) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            assertThrows(ParseException.class, () -\u003e PARSER.parse(test));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void parse_validDay_success() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String[] tests \u003d { \"01/01/0001\", \"31/12/9999\" };"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        for (String test : tests) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            assertDoesNotThrow(() -\u003e PARSER.parse(test));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 29
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/parser/CalendarMonthParserTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "class CalendarMonthParserTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final CalendarMonthParser PARSER \u003d new CalendarMonthParser();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void parse_invalidMonth_failure() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String[] tests \u003d { \"\", \" \", \"010001\", \"1/1\", \"13/2019\" };"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        for (String test : tests) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            assertThrows(ParseException.class, () -\u003e PARSER.parse(test));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void parse_validMonth_success() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String[] tests \u003d { \"01/0001\", \"12/9999\" };"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        for (String test : tests) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            assertDoesNotThrow(() -\u003e PARSER.parse(test));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 29
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/parser/CommandKeywordParserTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.CommandBuilder;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.stubs.CommandStub;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.stubs.OneArgumentCommandStub;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "class CommandKeywordParserTest {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final String KEYWORD1 \u003d \"keyword1\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final String KEYWORD2 \u003d \"keyword2\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void add_nullCommand_failure() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        CommandKeywordParser keywordParser \u003d new CommandKeywordParser();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e keywordParser.addCommand(KEYWORD1, null));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e keywordParser.addCommand(KEYWORD2, () -\u003e null));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void parse_invalidKeyword_failure() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        CommandKeywordParser keywordParser \u003d new CommandKeywordParser();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        keywordParser.addCommand(KEYWORD1, CommandStub::newBuilder);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        keywordParser.addCommand(KEYWORD2, CommandStub::newBuilder);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e keywordParser.parse(null));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertThrows(ParseException.class, () -\u003e keywordParser.parse(\"\"));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void parse_validKeyword_success() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        CommandKeywordParser keywordParser \u003d new CommandKeywordParser();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        keywordParser.addCommand(KEYWORD1, CommandStub::newBuilder);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        keywordParser.addCommand(KEYWORD2, OneArgumentCommandStub::newBuilder);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertDoesNotThrow(() -\u003e {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            CommandBuilder builder \u003d keywordParser.parse(KEYWORD1);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            assertTrue(builder instanceof CommandStub.Builder);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        });"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertDoesNotThrow(() -\u003e {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            CommandBuilder builder \u003d keywordParser.parse(KEYWORD2);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            assertTrue(builder instanceof OneArgumentCommandStub.Builder);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        });"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 49
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/parser/CommandParserTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import org.junit.jupiter.api.BeforeAll;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.stubs.CommandStub;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.stubs.OneArgumentCommandStub;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.stubs.OneVarArgumentCommandStub;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.stubs.OptionalTwoArgumentsOneVarArgumentCommandStub;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.stubs.TwoArgumentsCommandStub;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.stubs.TwoArgumentsOneVarArgumentCommandStub;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Test if CommandParser can parse any kind of command."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "class CommandParserTest {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final String COMMAND_KEYWORD \u003d \"stub1\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final String ONE_ARGUMENT_COMMAND_KEYWORD \u003d \"stub2\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final String TWO_ARGUMENTS_COMMAND_KEYWORD \u003d \"stub3\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final String ONE_VAR_ARGUMENT_COMMAND_KEYWORD \u003d \"stub4\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final String TWO_ARGUMENTS_ONE_VAR_ARGUMENT_COMMAND_KEYWORD \u003d \"stub5\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final String OPTIONAL_TWO_ARGUMENTS_ONE_VAR_ARGUMENT_COMMAND_KEYWORD \u003d \"stub6\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static CommandParser commandParser;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @BeforeAll"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    static void beforeAll() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        CommandKeywordParser keywordParser \u003d new CommandKeywordParser();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        keywordParser.addCommand(COMMAND_KEYWORD, CommandStub::newBuilder);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        keywordParser.addCommand(ONE_ARGUMENT_COMMAND_KEYWORD, OneArgumentCommandStub::newBuilder);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        keywordParser.addCommand(TWO_ARGUMENTS_COMMAND_KEYWORD, TwoArgumentsCommandStub::newBuilder);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        keywordParser.addCommand(ONE_VAR_ARGUMENT_COMMAND_KEYWORD, OneVarArgumentCommandStub::newBuilder);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        keywordParser.addCommand(TWO_ARGUMENTS_ONE_VAR_ARGUMENT_COMMAND_KEYWORD,"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            TwoArgumentsOneVarArgumentCommandStub::newBuilder);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        keywordParser.addCommand(OPTIONAL_TWO_ARGUMENTS_ONE_VAR_ARGUMENT_COMMAND_KEYWORD,"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            OptionalTwoArgumentsOneVarArgumentCommandStub::newBuilder);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        commandParser \u003d new CommandParser(keywordParser);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void parse_noCommandKeyword_failure() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String[] tests \u003d { \"\", \" \" };"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        for (String test : tests) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            assertThrows(ParseException.class, () -\u003e commandParser.parse(test));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void parseOneArgument_noArgument_failure() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String[] tests \u003d { \"\", \" \" };"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        for (String test : tests) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            assertThrows(ParseException.class, () -\u003e commandParser.parse(String.format(\"%s %s\","
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                ONE_ARGUMENT_COMMAND_KEYWORD, test)));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void parseOneArgument_quotes_success() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        Map\u003cString, String\u003e tests \u003d Map.of("
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            \"\u0027\", \"\u0027\","
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            \"\u0027\u0027\", \"\","
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            \"\u0027\u0027\u0027\", \"\u0027\","
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            \"\\\"\u0027\\\"\u0027\", \"\\\"\u0027\\\"\u0027\","
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            \"\\\"\u0027\\\"\u0027\\\"\", \"\u0027\\\"\u0027\","
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            \"‘\", \"‘\","
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            \"‘’\", \"\","
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            \"‘‘’\", \"‘\","
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            \"“‘”’\", \"“‘”’\","
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            \"“‘“’”\", \"‘“’\""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        );"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        for (Map.Entry\u003cString, String\u003e entry : tests.entrySet()) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            assertDoesNotThrow(() -\u003e {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                String argument \u003d commandParser.parse(String.format(\"%s %s\","
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                        ONE_ARGUMENT_COMMAND_KEYWORD, entry.getKey()))"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    .execute()"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    .toString();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                assertEquals(entry.getValue(), argument);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            });"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void parseOneArgument_arguments_success() {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        Map\u003cString, String\u003e tests \u003d Map.of("
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            \"a b c\", \"a\","
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            \"\u0027a a\u0027 \u0027b b\u0027 \u0027c c\u0027\", \"a a\""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        );"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        for (Map.Entry\u003cString, String\u003e entry : tests.entrySet()) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            assertDoesNotThrow(() -\u003e {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                String argument \u003d commandParser.parse(String.format(\"%s %s\","
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                        ONE_ARGUMENT_COMMAND_KEYWORD, entry.getKey()))"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    .execute()"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    .toString();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                assertEquals(entry.getValue(), argument);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            });"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void parseTwoArguments_arguments_success() {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        Map\u003cString, String\u003e tests \u003d Map.of("
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            \"a b c\", \"a,b\","
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            \"\u0027a a\u0027 \u0027b b\u0027 \u0027c c\u0027\", \"a a,b b\""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        );"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        for (Map.Entry\u003cString, String\u003e entry : tests.entrySet()) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            assertDoesNotThrow(() -\u003e {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                String argument \u003d commandParser.parse(String.format(\"%s %s\","
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    TWO_ARGUMENTS_COMMAND_KEYWORD, entry.getKey()))"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    .execute()"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    .toString();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                assertEquals(entry.getValue(), argument);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            });"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void parseOneVarArgument_arguments_success() {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        Map\u003cString, String\u003e tests \u003d Map.of("
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            \"\", \"\","
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            \"a b c\", \"a,b,c\","
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            \"\u0027a a\u0027 \u0027b b\u0027 \u0027c c\u0027\", \"a a,b b,c c\""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        );"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        for (Map.Entry\u003cString, String\u003e entry : tests.entrySet()) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            assertDoesNotThrow(() -\u003e {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                String argument \u003d commandParser.parse(String.format(\"%s %s\","
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    ONE_VAR_ARGUMENT_COMMAND_KEYWORD, entry.getKey()))"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    .execute()"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    .toString();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                assertEquals(entry.getValue(), argument);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            });"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void parseTwoArgumentsOneVarArgument_arguments_success() {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        Map\u003cString, String\u003e tests \u003d Map.of("
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            \"a b\", \"[a,b][]\","
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            \"a b c d e\", \"[a,b][c,d,e]\","
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            \"\u0027a a\u0027 \u0027b b\u0027 \u0027c c\u0027 \u0027d d\u0027 \u0027e e\u0027\", \"[a a,b b][c c,d d,e e]\""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        );"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        for (Map.Entry\u003cString, String\u003e entry : tests.entrySet()) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            assertDoesNotThrow(() -\u003e {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                String argument \u003d commandParser.parse(String.format(\"%s %s\","
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    TWO_ARGUMENTS_ONE_VAR_ARGUMENT_COMMAND_KEYWORD, entry.getKey()))"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    .execute()"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    .toString();"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                assertEquals(entry.getValue(), argument);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            });"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void parseOptionalTwoArgumentsOneVarArgument_arguments_success() {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        Map\u003cString, String\u003e tests \u003d Map.of("
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            \"a b\", \"[null,null][]\","
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            \"-o a b\", \"[a,b][]\","
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            \"-o a b c d e\", \"[a,b][c,d,e]\","
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            \"\u0027-o\u0027 \u0027a a\u0027 \u0027b b\u0027 \u0027c c\u0027 \u0027d d\u0027 \u0027e e\u0027\", \"[a a,b b][c c,d d,e e]\""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        );"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        for (Map.Entry\u003cString, String\u003e entry : tests.entrySet()) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            assertDoesNotThrow(() -\u003e {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                String argument \u003d commandParser.parse(String.format(\"%s %s\","
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                        OPTIONAL_TWO_ARGUMENTS_ONE_VAR_ARGUMENT_COMMAND_KEYWORD, entry.getKey()))"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    .execute()"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    .toString();"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                assertEquals(entry.getValue(), argument);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            });"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 184
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/parser/IcsDateTimeParserTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "class IcsDateTimeParserTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final IcsDateTimeParser PARSER \u003d new IcsDateTimeParser();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void parse_invalidDateTime_failure() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String[] tests \u003d { \"\", \" \", \"29022019T000000Z\" };"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        for (String test : tests) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            assertThrows(ParseException.class, () -\u003e PARSER.parse(test));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void parse_validDateTime_success() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String[] tests \u003d { \"00010101T000000Z\", \"99991231T235900Z\" };"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        for (String test : tests) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            assertDoesNotThrow(() -\u003e PARSER.parse(test));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 29
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/parser/IndexParserTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "class IndexParserTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final IndexParser PARSER \u003d new IndexParser();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void parse_invalidIndex_failure() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String[] tests \u003d { \"\", \" \", \"1 1\", \"-1\", \"2147483648\" };"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        for (String test : tests) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            assertThrows(ParseException.class, () -\u003e PARSER.parse(test));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void parse_validIndex_success() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String[] tests \u003d { \"0\", \"2147483647\" };"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        for (String test : tests) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            assertDoesNotThrow(() -\u003e PARSER.parse(test));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 29
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/parser/UserDateTimeParserTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "class UserDateTimeParserTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final UserDateTimeParser PARSER \u003d new UserDateTimeParser();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void parse_invalidDateTime_failure() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String[] tests \u003d { \"\", \" \", \"29/02/2019 00:00\" };"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        for (String test : tests) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            assertThrows(ParseException.class, () -\u003e PARSER.parse(test));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void parse_validDateTime_success() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String[] tests \u003d { \"01/01/0001 00:00\", \"31/12/9999 23:59\" };"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        for (String test : tests) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            assertDoesNotThrow(() -\u003e PARSER.parse(test));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 29
    }
  },
  {
    "path": "src/test/java/seedu/address/model/CalendarDateTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package seedu.address.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "class CalendarDateTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    void getDateTest() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        assertDoesNotThrow(() -\u003e {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            CalendarDate dayMonthYear \u003d CalendarDate.fromDayMonthYearString(\"11/11/2019\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            assertEquals(dayMonthYear.getDay(), 11);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            assertEquals(dayMonthYear.getMonth(), 11);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            assertEquals(dayMonthYear.getYear(), 2019);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            assertEquals(dayMonthYear.getEnglishMonth(), \"November\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            assertEquals(dayMonthYear.getWeekIndex(), 1);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            assertEquals(dayMonthYear.lengthOfMonth(), 30);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            CalendarDate monthYear \u003d CalendarDate.fromMonthYearString(\"11/2019\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            assertEquals(monthYear.getMonth(), 11);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            assertEquals(monthYear.getYear(), 2019);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            assertEquals(monthYear.getEnglishMonth(), \"November\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            assertEquals(monthYear.lengthOfMonth(), 30);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        });"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    void sameDateTest() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        assertDoesNotThrow(() -\u003e {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            CalendarDate dayMonthYear \u003d CalendarDate.fromDayMonthYearString(\"11/11/2019\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            dayMonthYear.sameDate(11, 11, 2019);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            dayMonthYear.sameMonthYear(11, 2019);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            CalendarDate monthYear \u003d CalendarDate.fromMonthYearString(\"10/2019\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            monthYear.sameDate(30, 11, 2019);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            monthYear.sameMonthYear(11, 2019);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        });"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    void changeDateTest() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        assertDoesNotThrow(() -\u003e {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            CalendarDate dayMonthYear \u003d CalendarDate.fromDayMonthYearString(\"11/11/2019\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            dayMonthYear \u003d dayMonthYear.previousDay();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            assertTrue(dayMonthYear.sameDate(10, 11, 2019));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            dayMonthYear \u003d dayMonthYear.previousDays(15);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            assertTrue(dayMonthYear.sameDate(26, 10, 2019));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            dayMonthYear \u003d dayMonthYear.nextDay();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            assertTrue(dayMonthYear.sameDate(27, 10, 2019));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            dayMonthYear \u003d dayMonthYear.firstDayOfTheMonth();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            assertTrue(dayMonthYear.sameDate(1, 10, 2019));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            // TODO: Previous Month"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            /*"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            CalendarDate monthYear \u003d CalendarDate.fromMonthYearString(\"11/2019\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            monthYear \u003d monthYear.previousDay();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            assertTrue(monthYear.sameDate(31, 10, 2019));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            monthYear \u003d monthYear.previousDays(3);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            assertTrue(monthYear.sameDate(28, 10, 2019));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            monthYear \u003d monthYear.nextDay();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            assertTrue(monthYear.sameDate(28, 10, 2019));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            monthYear \u003d monthYear.firstDayOfTheMonth();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            assertTrue(monthYear.sameDate(1, 10, 2019));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "             */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        });"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    void equalityTest() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        assertDoesNotThrow(() -\u003e {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            CalendarDate dayMonthYear \u003d CalendarDate.fromDayMonthYearString(\"01/11/2019\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            CalendarDate monthYear \u003d CalendarDate.fromMonthYearString(\"11/2019\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            assertEquals(dayMonthYear, monthYear);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            assertEquals(dayMonthYear.nextDay(), monthYear.nextDay());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            assertEquals(dayMonthYear.previousDays(100), monthYear.previousDays(100));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        });"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    void toStringTest() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        assertDoesNotThrow(() -\u003e {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            CalendarDate dayMonthYear \u003d CalendarDate.fromDayMonthYearString(\"11/11/2019\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            CalendarDate monthYear \u003d CalendarDate.fromMonthYearString(\"10/2019\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            assertEquals(dayMonthYear.toString(), \"11/11/2019\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            assertEquals(monthYear.toString(), \"1/10/2019\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        });"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 89,
      "WeomuCat": 8
    }
  },
  {
    "path": "src/test/java/seedu/address/model/DateTimeTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertNotEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.time.Instant;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.time.ZoneOffset;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "class DateTimeTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /* Builder */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void builder_getEpoch_equal() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        int day \u003d 1;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        int month \u003d 11;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        int year \u003d 2019;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        int hour \u003d 11;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        int minute \u003d 11;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        // Without timezone"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        DateTime dateTime1 \u003d DateTime.newBuilder(day, month, year, hour, minute, ZoneOffset.UTC).build();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertEquals(1572606660, dateTime1.toEpochSecond());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        // With timezone"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        int timezone \u003d 2;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        DateTime dateTime2 \u003d DateTime.newBuilder(day, month, year, hour, minute, ZoneOffset.ofHours(timezone)).build();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertEquals(1572599460, dateTime2.toEpochSecond());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void builderFromInstant_getEpoch_equal() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        Instant instant \u003d Instant.now();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        DateTime dateTime \u003d DateTime.newBuilder(instant).build();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertEquals(instant.getEpochSecond(), dateTime.toEpochSecond());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /* DateTime */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void equals_instantNowEpoch_success() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        long epoch1 \u003d DateTime.now().toEpochSecond();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        long epoch2 \u003d Instant.now().getEpochSecond();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertEquals(epoch1, epoch2);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void equals_sameDateTime_success() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        DateTime dateTime1 \u003d DateTime.newBuilder(11, 11, 1111, 11, 11, ZoneOffset.UTC).build();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        DateTime dateTime2 \u003d DateTime.newBuilder(11, 11, 1111, 11, 11, ZoneOffset.UTC).build();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertEquals(dateTime1, dateTime2);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void equals_differentTimezoneSameEpoch_success() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        DateTime dateTime1 \u003d DateTime.newBuilder(11, 11, 1111, 11, 11, ZoneOffset.UTC).build();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        DateTime dateTime2 \u003d DateTime.newBuilder(11, 11, 1111, 13, 11, ZoneOffset.ofHours(2)).build();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertEquals(dateTime1, dateTime2);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void equals_differentObject_failure() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        Instant instant \u003d Instant.now();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        DateTime dateTime \u003d DateTime.newBuilder(instant).build();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertNotEquals(dateTime, instant);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 67
    }
  },
  {
    "path": "src/test/java/seedu/address/model/ModelDataListenerStub.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.listeners.ModelDataListener;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * A ModelDataListener that copies whatever it is notified."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class ModelDataListenerStub implements ModelDataListener {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private ModelData modelData;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public void onModelDataChange(ModelData modelData) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.modelData \u003d modelData;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public ModelData getModelData() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return modelData;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 20
    }
  },
  {
    "path": "src/test/java/seedu/address/model/ModelDataTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "package seedu.address.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertNotEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import java.time.ZoneId;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import seedu.address.model.events.EventSource;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import seedu.address.model.tasks.TaskSource;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "//@@author bruceskellator"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "public class ModelDataTest {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    void equals_equalModelDataObjects_success() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        // Test if \"empty\" modelDatas are equal"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        ModelData modelData \u003d new ModelData();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        assertEquals(modelData, modelData);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        assertEquals(modelData, new ModelData());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        // Test if modelDatas with value-equal (but not reference-equal) eventsources with"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        // description and start fields and tasksources with description are considered as equal"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        ArrayList\u003cEventSource\u003e events1 \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        ArrayList\u003cEventSource\u003e events2 \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        String description \u003d \"event \";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        DateTime start;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d 5; i++) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            start \u003d DateTime.now();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            events1.add(EventSource.newBuilder(description + i, start).build());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            events2.add(EventSource.newBuilder(description + i, start).build());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        ArrayList\u003cTaskSource\u003e tasks1 \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        ArrayList\u003cTaskSource\u003e tasks2 \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        description \u003d \"task \";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d 5; i++) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            tasks1.add(TaskSource.newBuilder(description + i).build());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            tasks2.add(TaskSource.newBuilder(description + i).build());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        modelData \u003d new ModelData(events1, tasks1);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        assertEquals(modelData, modelData);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        assertEquals(modelData, new ModelData(events2, tasks2));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        // Test if modelDatas with value-equal (but not reference-equal) eventsources"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        // with description, start, end, tags and remind fields and tasksources"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        // with description, due, tags and isDone fields are considered as equal"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        start \u003d DateTime.now();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        DateTime remind \u003d DateTime.newBuilder(1, 1, 2019, 0,"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                0, ZoneId.systemDefault()).build();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        events1.clear();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        events2.clear();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        tasks1.clear();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        tasks2.clear();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        DateTime end \u003d DateTime.newBuilder(1, 11, 2020, 0,"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                0, ZoneId.systemDefault()).build();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        events1.add(EventSource.newBuilder(\"event\", start)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                .setEnd(end)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                .setRemind(remind)"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                .setTags(Arrays.asList(\"Horo\", \"test\"))"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                .build());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        events2.add(EventSource.newBuilder(\"event\", start)"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                .setEnd(end)"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                .setRemind(remind)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                .setTags(Arrays.asList(\"test\", \"Horo\"))"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                .build());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        tasks1.add(TaskSource.newBuilder(\"task\")"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                .setDueDate(end)"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                .setDone(true)"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                .setTags((Arrays.asList(\"task\", \"test\")))"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                .build());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        tasks2.add(TaskSource.newBuilder(\"task\")"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                .setDueDate(end)"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                .setDone(true)"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                .setTags((Arrays.asList(\"task\", \"test\")))"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                .build());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        modelData \u003d new ModelData(events1, tasks1);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        assertEquals(modelData, modelData);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        assertEquals(modelData, new ModelData(events2, tasks2));"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    void equals_unequalModelDataObjects_failure() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        DateTime start \u003d DateTime.now();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        ArrayList\u003cEventSource\u003e events1 \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        ArrayList\u003cEventSource\u003e events2 \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        ArrayList\u003cTaskSource\u003e tasks1 \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        ArrayList\u003cTaskSource\u003e tasks2 \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        // Test if EventSources with different description result in unequal ModelData objects"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        events1.add(EventSource.newBuilder(\"event\", start).build());"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        events2.add(EventSource.newBuilder(\"Event\", start).build());"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        tasks1.add(TaskSource.newBuilder(\"tasks\").build());"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        tasks2.add(TaskSource.newBuilder(\"tasks\").build());"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        assertNotEquals(new ModelData(events1, tasks1), new ModelData(events2, tasks2));"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        // Test if TaskSources with different description result in unequal ModelData objects"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        events1.clear();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        events2.clear();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        tasks1.clear();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        tasks2.clear();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        events1.add(EventSource.newBuilder(\"event\", start).build());"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        events2.add(EventSource.newBuilder(\"event\", start).build());"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        tasks1.add(TaskSource.newBuilder(\"task 1\").build());"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        tasks2.add(TaskSource.newBuilder(\"task 2\").build());"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        assertNotEquals(new ModelData(events1, tasks1), new ModelData(events2, tasks2));"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        // Test if TaskSources with different due dates result in unequal ModelData objects"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        events1.clear();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        events2.clear();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        tasks1.clear();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        tasks2.clear();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        events1.add(EventSource.newBuilder(\"event\", start).build());"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        events2.add(EventSource.newBuilder(\"event\", start).build());"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        tasks1.add(TaskSource.newBuilder(\"task\")"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                .setDueDate(DateTime.newBuilder(1, 11, 2020, 0,"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                        0, ZoneId.systemDefault()).build())"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                .setTags(Arrays.asList(\"Horo\"))"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                .setDone(false)"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                .build());"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        tasks2.add(TaskSource.newBuilder(\"task\")"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                .setDueDate(DateTime.newBuilder(2, 1, 2020, 0,"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                        0, ZoneId.systemDefault()).build())"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                .setTags(Arrays.asList(\"Horo\"))"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                .setDone(false)"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                .build());"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        assertNotEquals(new ModelData(events1, tasks1), new ModelData(events2, tasks2));"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        // Test if TaskSources with different tags result in unequal ModelData objects"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        events1.clear();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        events2.clear();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        tasks1.clear();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        tasks2.clear();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        events1.add(EventSource.newBuilder(\"event\", start).build());"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        events2.add(EventSource.newBuilder(\"event\", start).build());"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        tasks1.add(TaskSource.newBuilder(\"task\")"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                .setDueDate(DateTime.newBuilder(1, 11, 2020, 0,"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                        0, ZoneId.systemDefault()).build())"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                .setTags(Arrays.asList(\"Horo\"))"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                .setDone(false)"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                .build());"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        tasks2.add(TaskSource.newBuilder(\"task\")"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                .setDueDate(DateTime.newBuilder(1, 11, 2020, 0,"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                        0, ZoneId.systemDefault()).build())"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                .setTags(Arrays.asList(\"Duke\"))"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                .setDone(false)"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                .build());"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        assertNotEquals(new ModelData(events1, tasks1), new ModelData(events2, tasks2));"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        // Test if TaskSources with different done states result in unequal ModelData objects"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        events1.clear();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        events2.clear();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        tasks1.clear();"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        tasks2.clear();"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        events1.add(EventSource.newBuilder(\"event\", start).build());"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        events2.add(EventSource.newBuilder(\"event\", start).build());"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        tasks1.add(TaskSource.newBuilder(\"task\")"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                .setDueDate(DateTime.newBuilder(1, 11, 2020, 0,"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                        0, ZoneId.systemDefault()).build())"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                .setTags(Arrays.asList(\"Horo\"))"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                .setDone(false)"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                .build());"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        tasks2.add(TaskSource.newBuilder(\"task\")"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                .setDueDate(DateTime.newBuilder(1, 11, 2020, 0,"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                        0, ZoneId.systemDefault()).build())"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                .setTags(Arrays.asList(\"Horo\"))"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                .setDone(true)"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                .build());"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        assertNotEquals(new ModelData(events1, tasks1), new ModelData(events2, tasks2));"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        // Test if EventSources with different start times result in unequal ModelData objects"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        events1.clear();"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        events2.clear();"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        tasks1.clear();"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        tasks2.clear();"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        events1.add(EventSource.newBuilder(\"event\", DateTime.newBuilder(1, 11, 2020, 0,"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                0, ZoneId.systemDefault()).build()).build());"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        events2.add(EventSource.newBuilder(\"event\", DateTime.newBuilder(2, 11, 2020, 0,"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                0, ZoneId.systemDefault()).build()).build());"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        tasks1.add(TaskSource.newBuilder(\"tasks\").build());"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        tasks2.add(TaskSource.newBuilder(\"tasks\").build());"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        assertNotEquals(new ModelData(events1, tasks1), new ModelData(events2, tasks2));"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        // Test if EventSources with different end times result in unequal ModelData objects"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        events1.clear();"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        events2.clear();"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        tasks1.clear();"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        tasks2.clear();"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        events1.add(EventSource.newBuilder(\"event\", DateTime.now())"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                .setEnd(DateTime.newBuilder(1, 12, 2020, 0,"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                        0, ZoneId.systemDefault()).build())"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                .setTags(Arrays.asList(\"test\", \"Horo\"))"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                .setRemind(DateTime.newBuilder(1, 12, 2018, 0,"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                        0, ZoneId.systemDefault()).build())"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                .build());"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        events2.add(EventSource.newBuilder(\"event\", DateTime.now())"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                .setEnd(DateTime.newBuilder(2, 12, 2020, 0,"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                        0, ZoneId.systemDefault()).build())"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                .setTags(Arrays.asList(\"test\", \"Horo\"))"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                .setRemind(DateTime.newBuilder(1, 12, 2018, 0,"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                        0, ZoneId.systemDefault()).build())"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                .build());"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        tasks1.add(TaskSource.newBuilder(\"tasks\").build());"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        tasks2.add(TaskSource.newBuilder(\"tasks\").build());"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        assertNotEquals(new ModelData(events1, tasks1), new ModelData(events2, tasks2));"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        // Test if EventSources with different remind time result in unequal ModelData objects"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        events1.clear();"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        events2.clear();"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        tasks1.clear();"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        tasks2.clear();"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        events1.add(EventSource.newBuilder(\"event\", DateTime.now())"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                .setEnd(DateTime.newBuilder(1, 12, 2020, 0,"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                        0, ZoneId.systemDefault()).build())"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                .setTags(Arrays.asList(\"test\", \"Horo\"))"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                .setRemind(DateTime.newBuilder(1, 12, 2018, 0,"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                        0, ZoneId.systemDefault()).build())"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                .build());"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        events2.add(EventSource.newBuilder(\"event\", DateTime.now())"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                .setEnd(DateTime.newBuilder(1, 12, 2020, 0,"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                        0, ZoneId.systemDefault()).build())"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                .setTags(Arrays.asList(\"test\", \"Horo\"))"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                .setRemind(DateTime.newBuilder(2, 12, 2017, 0,"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                        0, ZoneId.systemDefault()).build())"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                .build());"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        tasks1.add(TaskSource.newBuilder(\"tasks\").build());"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        tasks2.add(TaskSource.newBuilder(\"tasks\").build());"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        assertNotEquals(new ModelData(events1, tasks1), new ModelData(events2, tasks2));"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        // Test if EventSources with different tags result in unequal ModelData objects"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        events1.clear();"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        events2.clear();"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        tasks1.clear();"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        tasks2.clear();"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        events1.add(EventSource.newBuilder(\"event\", DateTime.now())"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                .setEnd(DateTime.newBuilder(1, 12, 2020, 0,"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                        0, ZoneId.systemDefault()).build())"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                .setTags(Arrays.asList(\"test\", \"Duke\"))"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                .setRemind(DateTime.newBuilder(1, 12, 2018, 0,"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                        0, ZoneId.systemDefault()).build())"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                .build());"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        events2.add(EventSource.newBuilder(\"event\", DateTime.now())"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                .setEnd(DateTime.newBuilder(1, 12, 2020, 0,"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                        0, ZoneId.systemDefault()).build())"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                .setTags(Arrays.asList(\"Horo\", \"test\"))"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                .setRemind(DateTime.newBuilder(1, 12, 2018, 0,"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                        0, ZoneId.systemDefault()).build())"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                .build());"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        tasks1.add(TaskSource.newBuilder(\"tasks\").build());"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        tasks2.add(TaskSource.newBuilder(\"tasks\").build());"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        assertNotEquals(new ModelData(events1, tasks1), new ModelData(events2, tasks2));"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bruceskellator": 260
    }
  },
  {
    "path": "src/test/java/seedu/address/model/ModelManagerTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.events.EventSource;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.tasks.TaskSource;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "class ModelManagerTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void setModel_getModel_equal() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        ModelManager model \u003d new ModelManager();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        List\u003cEventSource\u003e events \u003d List.of("
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            EventSource.newBuilder(\"a\", DateTime.now()).build(),"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            EventSource.newBuilder(\"b\", DateTime.now()).build(),"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            EventSource.newBuilder(\"c\", DateTime.now()).build()"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        );"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        List\u003cTaskSource\u003e tasks \u003d List.of("
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            TaskSource.newBuilder(\"a\").build(),"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            TaskSource.newBuilder(\"b\").build(),"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            TaskSource.newBuilder(\"c\").build()"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        );"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        ModelData modelData \u003d new ModelData(events, tasks);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        // Ensure empty"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertEquals(new ModelData(), model.getModelData());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertEquals(List.of(), model.getEvents());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertEquals(List.of(), model.getTasks());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        model.setModelData(modelData);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertEquals(modelData, model.getModelData());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertEquals(events, model.getEvents());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertEquals(tasks, model.getTasks());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void setModel_updateModelListeners_success() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        ModelManager model \u003d new ModelManager();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        ModelDataListenerStub listener1 \u003d new ModelDataListenerStub();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        ModelDataListenerStub listener2 \u003d new ModelDataListenerStub();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        ModelDataListenerStub listener3 \u003d new ModelDataListenerStub();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        model.addModelDataListener(listener1);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        model.addModelDataListener(listener2);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        model.addModelDataListener(listener3);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        DateTime start \u003d DateTime.now();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        ModelData modelData \u003d new ModelData("
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            List.of("
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                EventSource.newBuilder(\"a\", start).build(),"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                EventSource.newBuilder(\"b\", start).build(),"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                EventSource.newBuilder(\"c\", start).build()"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            ),"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            List.of("
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                TaskSource.newBuilder(\"a\").build(),"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                TaskSource.newBuilder(\"b\").build(),"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                TaskSource.newBuilder(\"c\").build()"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            )"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        );"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        model.setModelData(modelData);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertEquals(modelData, listener1.getModelData());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertEquals(modelData, listener2.getModelData());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertEquals(modelData, listener3.getModelData());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 56,
      "-": 15
    }
  },
  {
    "path": "src/test/java/seedu/address/model/UniqueOrderedSetTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertNotEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.Iterator;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.exceptions.DuplicateElementException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "class UniqueOrderedSetTest {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void add_duplicateElement_failure() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        UniqueOrderedSet\u003cInteger\u003e set \u003d new UniqueOrderedSet\u003c\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        set.add(1);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertThrows(DuplicateElementException.class, () -\u003e set.add(1));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void modify_unmodifiableList_failure() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        UniqueOrderedSet\u003cInteger\u003e set \u003d new UniqueOrderedSet\u003c\u003e();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        List\u003cInteger\u003e unmodifiableList \u003d set.toUnmodifiableList();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertThrows(UnsupportedOperationException.class, () -\u003e unmodifiableList.add(1));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void iterate_sameAsInsertionOrder_success() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        UniqueOrderedSet\u003cInteger\u003e set \u003d new UniqueOrderedSet\u003c\u003e();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        set.add(1);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        set.add(2);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        set.add(3);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        Iterator\u003cInteger\u003e iterator \u003d set.iterator();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertEquals(1, iterator.next());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertEquals(2, iterator.next());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertEquals(3, iterator.next());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    // Insertion order does not matter when comparing equality of sets."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void equals_differentInsertionOrder_success() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        UniqueOrderedSet\u003cInteger\u003e set1 \u003d new UniqueOrderedSet\u003c\u003e();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        set1.add(1);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        set1.add(2);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        set1.add(3);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        UniqueOrderedSet\u003cInteger\u003e set2 \u003d new UniqueOrderedSet\u003c\u003e();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        set2.add(3);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        set2.add(2);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        set2.add(1);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertEquals(set1, set2);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void equals_differentObject_failure() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        UniqueOrderedSet\u003cInteger\u003e set1 \u003d new UniqueOrderedSet\u003c\u003e();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        set1.add(1);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        set1.add(2);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        set1.add(3);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertNotEquals(set1, Set.of(1, 2, 3));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 69
    }
  },
  {
    "path": "src/test/java/seedu/address/model/events/EventSourceTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.model.events;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertNotEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.time.Duration;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.DateTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.exceptions.InvalidEventSourceException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "class EventSourceTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void construct_startAfterEqualsEnd_failure() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String description \u003d \"description\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        DateTime end \u003d DateTime.now();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        DateTime start \u003d end.plus(Duration.ofHours(1));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        // Start equals end"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertThrows(InvalidEventSourceException.class, () -\u003e EventSource.newBuilder(description, start)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .setEnd(start)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .build());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        // Start after end"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertThrows(InvalidEventSourceException.class, () -\u003e EventSource.newBuilder(description, start)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .setEnd(end)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .build());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void construct_remindAfterStart_failure() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String description \u003d \"description\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        DateTime start \u003d DateTime.now();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        DateTime remind \u003d start.plus(Duration.ofHours(1));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        // Start after end"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertThrows(InvalidEventSourceException.class, () -\u003e EventSource.newBuilder(description, start)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .setRemind(remind)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .build());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void equals_differentObject_failure() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String description \u003d \"description\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        DateTime start \u003d DateTime.now();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertNotEquals(EventSource.newBuilder(description, start).build(), \"\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 50
    }
  },
  {
    "path": "src/test/java/seedu/address/model/tasks/TaskSourceBuilderTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "package seedu.address.model.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertNull;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import org.junit.jupiter.api.Assertions;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "public class TaskSourceBuilderTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    void constructor_descriptionNullAsArgument_shouldThrowException() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        Assertions.assertThrows(NullPointerException.class, ("
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        ) -\u003e new TaskSourceBuilder(null));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    void constructor_descriptionStoredProperly_valueAsExpected() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        String description \u003d \"Test\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        TaskSourceBuilder tsb \u003d new TaskSourceBuilder(description);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertEquals(tsb.getDescription(), description);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    void constructor_dueDateStoredProperly_valueAsExpected() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        TaskSourceBuilder tsb \u003d new TaskSourceBuilder(\"test\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertNull(tsb.getDueDate());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void constructor_isDoneStoredProperly_valueAsExpected() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        TaskSourceBuilder tsb \u003d new TaskSourceBuilder(\"test\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertFalse(tsb.isDone());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 27,
      "WeomuCat": 9
    }
  },
  {
    "path": "src/test/java/seedu/address/model/tasks/TaskSourceTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "package seedu.address.model.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "public class TaskSourceTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    void equality_useSameTaskSourceBuilder_valueAsExpected() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        TaskSourceBuilder tsb \u003d new TaskSourceBuilder(\"test\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        TaskSource t1 \u003d new TaskSource(tsb);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        TaskSource t2 \u003d new TaskSource(tsb);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertEquals(t1, t2);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    void newBuilderCorrectness_useSameArgumentParameters_valueAsExpected() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        String description \u003d \"test\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        TaskSourceBuilder tsb1 \u003d new TaskSourceBuilder(description);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        TaskSourceBuilder tsb2 \u003d TaskSource.newBuilder(description);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertEquals(tsb1.getDescription(), tsb2.getDescription());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertEquals(tsb1.getDueDate(), tsb2.getDueDate());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertEquals(tsb1.isDone(), tsb2.isDone());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertEquals(tsb1.getTags(), tsb2.getTags());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 24,
      "WeomuCat": 4
    }
  },
  {
    "path": "src/test/java/seedu/address/ui/stub/CalendarPanelTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package seedu.address.ui.stub;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.time.Instant;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.time.ZoneId;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.DateTime;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.events.EventSource;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.tasks.TaskSource;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "public class CalendarPanelTest {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    void combineList() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        List\u003cEventSource\u003e events \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        List\u003cTaskSource\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        LocalDate date \u003d LocalDate.parse(\"2019-11-07\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        Instant instant \u003d date.atStartOfDay(ZoneId.systemDefault()).toInstant();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        LocalDate date1 \u003d LocalDate.parse(\"2019-11-05\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        Instant instant1 \u003d date1.atStartOfDay(ZoneId.systemDefault()).toInstant();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        LocalDate date2 \u003d LocalDate.parse(\"2019-11-06\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        Instant instant2 \u003d date2.atStartOfDay(ZoneId.systemDefault()).toInstant();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        LocalDate date3 \u003d LocalDate.parse(\"2019-11-04\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        Instant instant3 \u003d date3.atStartOfDay(ZoneId.systemDefault()).toInstant();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        EventSource event \u003d EventSource.newBuilder("
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                \"description\","
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                DateTime.newBuilder(instant).build())"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        EventSource event1 \u003d EventSource.newBuilder("
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                \"description1\","
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                DateTime.newBuilder(instant1).build())"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        TaskSource task \u003d TaskSource.newBuilder("
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                \"description2\")"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                .setDueDate(DateTime.newBuilder(instant2).build())"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        TaskSource task1 \u003d TaskSource.newBuilder("
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                \"description3\")"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                .setDueDate(DateTime.newBuilder(instant3).build())"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        events.add(event1);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        events.add(event);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        tasks.add(task1);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        CalendarPanelStub calendarPanel \u003d new CalendarPanelStub();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        assertDoesNotThrow(() -\u003e {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            List\u003cObject\u003e lists \u003d calendarPanel.combineList(events, tasks);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            assertEquals(lists.get(0), task1);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            assertEquals(lists.get(1), event1);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            assertEquals(lists.get(2), task);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            assertEquals(lists.get(3), event);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        });"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 69
    }
  },
  {
    "path": "src/test/java/seedu/address/ui/stub/TimelineWeekViewTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package seedu.address.ui.stub;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.CalendarDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "class TimelineWeekViewTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    void addWeekTest() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        assertDoesNotThrow(() -\u003e {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            TimelineWeekViewStub timelineWeekView \u003d"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    new TimelineWeekViewStub(CalendarDate.fromDayMonthYearString(\"11/11/2019\"));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            CalendarDate[] calendarDates \u003d {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    CalendarDate.fromDayMonthYearString(\"11/11/2019\"),"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    CalendarDate.fromDayMonthYearString(\"12/11/2019\"),"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    CalendarDate.fromDayMonthYearString(\"13/11/2019\"),"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    CalendarDate.fromDayMonthYearString(\"14/11/2019\"),"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    CalendarDate.fromDayMonthYearString(\"15/11/2019\"),"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    CalendarDate.fromDayMonthYearString(\"16/11/2019\"),"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    CalendarDate.fromDayMonthYearString(\"17/11/2019\")"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            };"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            CalendarDate[] timelineCalendarDates \u003d timelineWeekView.addWeek();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            assertEquals(timelineCalendarDates.length, 7);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            for (int i \u003d 0; i \u003c timelineCalendarDates.length; i++) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                assertEquals(calendarDates[i], timelineCalendarDates[i]);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        });"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    void getWeekTest() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        assertDoesNotThrow(() -\u003e {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            TimelineWeekViewStub timelineWeekView \u003d new TimelineWeekViewStub();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            assertEquals("
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                timelineWeekView.getWeek(CalendarDate.fromDayMonthYearString(\"11/11/2019\")),"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                3);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        });"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    void getEnglishWeekDateTest() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        TimelineWeekViewStub timelineWeekView \u003d new TimelineWeekViewStub();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        assertEquals("
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            timelineWeekView.getEnglishWeekDate(3, 11, 2019),"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \"Week 3 of November 2019\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 54
    }
  },
  {
    "path": "src/test/java/seedu/address/ui/stub/UiManagerTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package seedu.address.ui.stub;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.time.Instant;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.time.ZoneId;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.DateTime;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.ModelData;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.events.EventSource;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.tasks.TaskSource;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "class UiManagerTest {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    void onModelListChangeTest() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        UiManagerStub uiManager \u003d new UiManagerStub();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        List\u003cEventSource\u003e events \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        List\u003cTaskSource\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        LocalDate date \u003d LocalDate.parse(\"2019-11-05\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        Instant instant \u003d date.atStartOfDay(ZoneId.systemDefault()).toInstant();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        LocalDate date1 \u003d LocalDate.parse(\"2019-11-04\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        Instant instant1 \u003d date1.atStartOfDay(ZoneId.systemDefault()).toInstant();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        EventSource event \u003d EventSource.newBuilder("
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                \"description\","
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                DateTime.newBuilder(instant).build())"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        EventSource event1 \u003d EventSource.newBuilder("
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                \"description1\","
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                DateTime.newBuilder(instant1).build())"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        TaskSource task \u003d TaskSource.newBuilder("
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                \"description\")"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        TaskSource task1 \u003d TaskSource.newBuilder("
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                \"description1\")"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        events.add(event);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        events.add(event1);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        tasks.add(task1);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        ModelData modelLists \u003d new ModelData(events, tasks);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        assertDoesNotThrow(() -\u003e {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            ModelData lists \u003d uiManager.overrideOnModelListChange(modelLists);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            assertEquals(lists.getEvents().get(0), event1);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            assertEquals(lists.getEvents().get(1), event);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            assertEquals(lists.getTasks().get(0), task);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            assertEquals(lists.getTasks().get(1), task1);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        });"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 59,
      "WeomuCat": 3
    }
  },
  {
    "path": "src/test/java/seedu/address/ui/systemtray/PopupNotificationTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "package seedu.address.ui.systemtray;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "public class PopupNotificationTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    void constructor_inputNull_shouldThrowError() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertThrows(NullPointerException.class, ("
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            ) -\u003e new PopupNotification(\"testName\", null));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertThrows(NullPointerException.class, ("
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            ) -\u003e new PopupNotification(null, \"testDescription\"));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    void equality_inputSameParameters_equalityCheckShouldPass() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        PopupNotification pn1 \u003d new PopupNotification(\"testName\", \"testDescrp\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        PopupNotification pn2 \u003d new PopupNotification(\"testName\", \"testDescrp\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertEquals(pn1, pn2);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    void equality_compareToObjectOfDifferentClass_shouldReturnFalse() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        PopupNotification pn \u003d new PopupNotification(\"testName\", \"testDescrp\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        String string \u003d \"Test String\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertFalse(pn.equals(string));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    void equality_compareSameClassDifferentParameters_shouldReturnFalse() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        PopupNotification pn1 \u003d new PopupNotification(\"testName1\", \"testDescrp1\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        PopupNotification pn2 \u003d new PopupNotification(\"testName2\", \"testDescrp2\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertFalse(pn1.equals(pn2));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        PopupNotification pn3 \u003d new PopupNotification(\"testName1\", \"testDescrp1\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        PopupNotification pn4 \u003d new PopupNotification(\"testName1\", \"testDescrp2\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertFalse(pn3.equals(pn4));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        PopupNotification pn5 \u003d new PopupNotification(\"testName1\", \"testDescrp1\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        PopupNotification pn6 \u003d new PopupNotification(\"testName2\", \"testDescrp1\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertFalse(pn5.equals(pn6));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 48
    }
  }
]
