[
  {
    "path": "README.adoc",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d Horo"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "ifdef::env-github,env-browser[:relfileprefix: docs/]"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "https://travis-ci.org/AY1920S1-CS2103T-F12-1/main[image:https://travis-ci.org/AY1920S1-CS2103T-F12-1/main.svg?branch\u003dmaster[Build Status]]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "https://ci.appveyor.com/project/marcusteh1238/main[image:https://ci.appveyor.com/api/projects/status/clgkon6uh8hw678u?svg\u003dtrue[Build status]]"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "https://coveralls.io/github/AY1920S1-CS2103T-F12-1/main?branch\u003dmaster[image:https://coveralls.io/repos/github/AY1920S1-CS2103T-F12-1/main/badge.svg?branch\u003dmaster[Coverage Status]]"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "https://gitter.im/se-edu/Lobby[image:https://badges.gitter.im/se-edu/Lobby.svg[Gitter chat]]"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "ifdef::env-github[]"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "image::docs/images/Ui.png[width\u003d\"600\"]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "endif::[]"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "ifndef::env-github[]"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "image::images/Ui.png[width\u003d\"600\"]"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "endif::[]"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "Ever forget to go for a group meeting or need reminders for your assignment date? Fret not anymore."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "Horo provides you the ability to store your Events and Tasks, while providing a reminder for whenever you set it."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "You can even tag it to sort by a certain order, as well as import or export your calendar to transfer between computers! +"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "{empty}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "* This is a desktop Reminder application. It has a GUI but most of the user interactions happen using a CLI (Command Line Interface)."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "* It is a Java application *written in an OOP fashion*, developed and intended for students that need reminders for their Events and Tasks."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Site Map"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "* \u003c\u003cUserGuide#, User Guide\u003e\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "* \u003c\u003cDeveloperGuide#, Developer Guide\u003e\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "* \u003c\u003cAboutUs#, About Us\u003e\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "* \u003c\u003cContactUs#, Contact Us\u003e\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Acknowledgements"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "* Some parts of this sample application were inspired by the excellent http://code.makery.ch/library/javafx-8-tutorial/[Java FX tutorial] by"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "_Marco Jakob_."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "* Libraries used: https://openjfx.io/[JavaFX], https://github.com/FasterXML/jackson[Jackson], https://github.com/junit-team/junit5[JUnit5]"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "* The application was based of *AddressBook-Level3* project created by SE-EDU initiative at https://se-education.org"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Licence : link:LICENSE[MIT]"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 9,
      "marcusteh1238": 3,
      "-": 27
    }
  },
  {
    "path": "build.gradle",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "// Gradle Configuration File"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "// For more details take a look at the Java Quickstart chapter in the Gradle"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "// user guide available at http://gradle.org/docs/5.2.1/userguide/tutorial_java_projects.html"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import org.gradle.api.tasks.testing.logging.TestLogEvent"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027jacoco\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.kt3k.coveralls\u0027 version \u00272.4.0\u0027"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027org.asciidoctor.convert\u0027 version \u00271.5.6\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "// Specifies the entry point of the application"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "mainClassName \u003d \u0027seedu.address.Main\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "sourceCompatibility \u003d JavaVersion.VERSION_11"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "targetCompatibility \u003d JavaVersion.VERSION_11"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.1\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "jacocoTestReport {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    reports {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        xml.enabled false"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        csv.enabled false"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        html.destination file(\"${buildDir}/jacocoHtml\")"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    String jUnitVersion \u003d \u00275.4.0\u0027"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    String javaFxVersion \u003d \u002711.0.1\u0027"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveName \u003d \u0027addressbook.jar\u0027"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    destinationDir \u003d file(\"${buildDir}/jar/\")"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "task coverage(type: JacocoReport) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    classDirectories.from files(sourceSets.main.output)"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    executionData.from files(jacocoTestReport.executionData)"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    afterEvaluate {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        classDirectories.from files(classDirectories.files.collect {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        })"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    reports {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        html.enabled \u003d true"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        xml.enabled \u003d true"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "coveralls {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    sourceDirs \u003d sourceSets.main.allSource.srcDirs.absolutePath"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    jacocoReportPath \u003d \"${buildDir}/reports/jacoco/coverage/coverage.xml\""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "tasks.coveralls {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    dependsOn coverage"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    onlyIf { System.env.\u0027CI\u0027 }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        events TestLogEvent.FAILED, TestLogEvent.SKIPPED"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        // Prints the currently running test\u0027s name in the CI\u0027s build log,"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        // so that we can check if tests are being silently skipped or"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        // stalling the build."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        if (System.env.\u0027CI\u0027) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "            events \u003c\u003c TestLogEvent.STARTED"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "    jacoco {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        destinationFile \u003d new File(\"${buildDir}/jacoco/test.exec\")"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "asciidoctor {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "    backends \u0027html5\u0027"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "    sourceDir \u0027docs\u0027"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "    outputDir \"${buildDir}/docs\""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "    options \u003d ["
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        template_dirs: [file(\"${sourceDir}/templates\")],"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "    ]"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "    attributes \u003d ["
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "        linkcss: true,"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "        stylesheet: \u0027gh-pages.css\u0027,"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "        \u0027source-highlighter\u0027: \u0027coderay\u0027,"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "        icons: \u0027font\u0027,"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        experimental: true,"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "        sectlinks: true,"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "        idprefix: \u0027\u0027,  // for compatibility with GitHub preview"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "        idseparator: \u0027-\u0027,"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "        \u0027site-root\u0027: \"${sourceDir}\",  // must be the same as sourceDir, do not modify"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "        \u0027site-name\u0027: \u0027AddressBook-Level3\u0027,"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "        \u0027site-githuburl\u0027: \u0027https://github.com/se-edu/addressbook-level3\u0027,"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "        \u0027site-seedu\u0027: true,  // delete this line if your project is not a fork (not a SE-EDU project)"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "    ]"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "    options[\u0027template_dirs\u0027].each {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "        inputs.files fileTree(it)"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "// Copies stylesheets into the directory containing generated HTML files as"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "// Asciidoctor does not copy linked CSS files to the output directory when rendering."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "// This is needed for linked stylesheets and embedded stylesheets which import other files."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "task copyStylesheets(type: Copy) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "    from \"${asciidoctor.sourceDir}/stylesheets\""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "    into \"${asciidoctor.outputDir}/html5/stylesheets\""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "asciidoctor.dependsOn copyStylesheets"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "defaultTasks \u0027clean\u0027, \u0027test\u0027, \u0027coverage\u0027, \u0027asciidoctor\u0027"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 1,
      "-": 154
    }
  },
  {
    "path": "docs/AboutUs.adoc",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d About Us"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ":site-section: AboutUs"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ":relfileprefix: team/"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ":imagesDir: images"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ":stylesDir: stylesheets"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Horo was developed by a team of 5-man. +"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "We are a team based in the http://www.comp.nus.edu.sg[School of Computing, National University of Singapore]."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Project Team"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003d\u003d\u003d Marcus Teh"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "image::marcusteh1238.png[width\u003d\"150\", align\u003d\"left\"]"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "{empty}[https://github.com/marcusteh1238[github]] [\u003c\u003cmarcusteh1238#, portfolio\u003e\u003e]"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Role: Developer +"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Responsibilities: Testing, Integration and Git Expert"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "\u0027\u0027\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003d\u003d\u003d Timothy Yu Zhiwen"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "image::kyzure.png[width\u003d\"150\", align\u003d\"left\"]"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "{empty}[https://github.com/Kyzure[github]] [\u003c\u003ckyzure#, portfolio\u003e\u003e]"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Role: Developer +"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Responsibilities: Documentation and UI"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "\u0027\u0027\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003d\u003d\u003d Denis"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "image::weomucat.png[width\u003d\"150\", align\u003d\"left\"]"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "{empty}[http://github.com/WeomuCat[github]] [\u003c\u003cweomucat#, portfolio\u003e\u003e]"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "Role: Developer +"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Responsibilities: Logic, Model and Intellij Expert"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "\u0027\u0027\u0027"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003d\u003d\u003d Bruce Ong"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "image::bruceskellator.png[width\u003d\"150\", align\u003d\"left\"]"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "{empty}[http://github.com/bruceskellator[github]] [\u003c\u003cbruceskellator#, portfolio\u003e\u003e]"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "Role: Developer +"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Responsibilities: Code quality, Undo and Redo"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "\u0027\u0027\u0027"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003d\u003d\u003d Ong Cheng Geng"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "image::chenggeng97.png[width\u003d\"150\", align\u003d\"left\"]"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "{empty}[http://github.com/ChengGeng97[github]] [\u003c\u003cchenggeng97#, portfolio\u003e\u003e]"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "Role: Developer +"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Responsibilities: Scheduling and tracking, Reminder and Notification"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "\u0027\u0027\u0027"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 23,
      "-": 33
    }
  },
  {
    "path": "docs/ContactUs.adoc",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d Contact Us"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ":site-section: ContactUs"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ":stylesDir: stylesheets"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "* *Bug reports, Suggestions* : Post in our https://github.com/AY1920S1-CS2103T-F12-1/main/issues[issue tracker] if you noticed bugs or have suggestions on how to improve."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "* *Contributing* : We welcome pull requests. Follow the process described https://github.com/oss-generic/process[here]"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "* *Email us* : You can also reach us at `e0310405 [at] u.nus.edu`"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 2,
      "-": 5
    }
  },
  {
    "path": "docs/DeveloperGuide.adoc",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003d Horo - Developer Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ":site-section: DeveloperGuide"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ":toc:"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ":toc-title:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ":toc-placement: preamble"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ":sectnums:"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ":imagesDir: images"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ":stylesDir: stylesheets"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ":xrefstyle: full"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "ifdef::env-github[]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ":tip-caption: :bulb:"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ":note-caption: :information_source:"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ":warning-caption: :warning:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "endif::[]"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ":repoURL: https://github.com/AY1920S1-CS2103T-F12-1/main"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "By: `Team AY1920S1-CS2103T-F12-1`      Since: `Sept 2019`      Licence: `MIT`"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d\u003d Introduction"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d\u003d\u003d About the Application"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "*Horo* is a command-line interface scheduling application. It helps the user maintain a to-do list and a calendar, and posts timely reminders on their desktop."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d\u003d\u003d Purpose"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "This guide specifies the architecture and software design decisions for Horo, and instructions for building upon the current codebase. This is done in hopes of ensuring extensibility and maintainability of Horo for both current and future developers."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d\u003d\u003d How to use this Guide"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "todo"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Setting up"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "Refer to the guide \u003c\u003cSettingUp#, here\u003e\u003e."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Design"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "[[Design-Architecture]]"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Architecture"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ".Architecture Diagram"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "image::ArchitectureDiagram.png[]"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "The *_Architecture Diagram_* given above explains the high-level design of the App. Given below is a quick overview of each component."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "`Main` has two classes called link:{repoURL}/src/main/java/seedu/address/Main.java[`Main`] and link:{repoURL}/src/main/java/seedu/address/MainApp.java[`MainApp`]. It is responsible for,"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "* At app launch: Initializes the components in the correct sequence, and connects them up with each other."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "* At shut down: Shuts down the components and invokes cleanup method where necessary."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c\u003cDesign-Commons,*`Commons`*\u003e\u003e represents a collection of classes used by multiple other components."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "The following class plays an important role at the architecture level:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "* `LogsCenter` : Used by many classes to write log messages to the App\u0027s log file."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "The rest of the App consists of four components."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "* \u003c\u003cDesign-Ui,*`UI`*\u003e\u003e: The UI of the App."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "* \u003c\u003cDesign-Logic,*`Logic`*\u003e\u003e: The command executor."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "* \u003c\u003cDesign-Model,*`Model`*\u003e\u003e: Holds the data of the App in-memory."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* \u003c\u003cDesign-Storage,*`Storage`*\u003e\u003e: Reads data from, and writes data to the hard disk."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "Each of the four components"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "* Defines its _API_ in an `interface` with the same name as the Component."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "* Exposes its functionality using a `{Component Name}Manager` class."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "For example, the `Logic` component (see the class diagram given below) defines it\u0027s API in the `Logic.java` interface and exposes its functionality using the `LogicManager.java` class."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ".Class Diagram of the Logic Component"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "image::LogicClassDiagram.png[]"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d How the architecture components interact with each other"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "The _Sequence Diagram_ below shows how the components interact with each other for the scenario where the user issues the command `delete 1`."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ".Component interactions for `delete 1` command"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "image::ArchitectureSequenceDiagram.png[]"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "The sections below give more details of each component."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "[[Design-Ui]]"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d UI component"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ".Main structure of the UI Component"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "image::UiClassDiagram.png[]"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "*API* : link:{repoURL}/blob/master/src/main/java/seedu/address/ui/Ui.java[`Ui.java`]"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "The UI consists of a `MainWindow` that is contains 3 main view parts - `CalendarPanel`, `ListPanel`, `LogPanel`. It also holds several other UI parts e.g. `PopUpPanel` and `Command Box`. Every one of the UI classes will abstract from the abstract `UiPart` class."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "The `UI` component uses JavaFx UI framework, and layout of these UI parts are defined in `.fxml` files which are found in the `src/main/resources/view` folder. One example of the layout would be: link:{repoURL}/blob/master/src/main/java/seedu/address/ui/MainWindow.java[`MainWindow`], whose FXML link is specified in link:{repoURL}/blob/master/src/main/resources/view/MainWindow.fxml[`MainWindow.fxml`]"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "The `UI` component does the following:"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* Executes user two different types commands using the `Logic` component."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "** One command, when executed, affect the actual Events."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "** The other command is executed to change the view of the UI. There are currently 3 main views in the application: `CalendarPanel`, `ListPanel`, `LogPanel`."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* It listens for any changes in the list of events using a listener:  link:{repoURL}/blob/master/src/main/java/seedu/address/model/listeners/EventListListener.java[`EventListListener`]."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* It also listens for the output to the user with another listener: link:{repoURL}/blob/master/src/main/java/seedu/address/ui/listeners/UserOutputListener.java[`UserOutputListener`]."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003d\u003d\u003d\u003d Calendar UI View"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ".Structure of the Calendar UI View"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "image::UiCalendarClassDiagram.png[]"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "The Calendar View is made up of the link:{repoURL}/blob/master/src/main/java/seedu/address/ui/panel/calendar/CalendarPanel.java[`CalendarPanel`], which holds several different other UI parts linked together to form the overall UI. In the Calendar View, it displays two UI parts of the Calendar: `CalendarScreen` and `TimelineView`."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "link:{repoURL}/blob/master/src/main/java/seedu/address/ui/panel/calendar/CalendarScreen.java[`CalendarScreen`] is the screen which displays the calendar of a certain month and year to the user. It contains 6 x 7 instance of `CalendarGridDay`, which displays the days of the month."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "link:{repoURL}/blob/master/src/main/java/seedu/address/ui/panel/calendar/TimelineView.java[`TimelineView`] is the screen which displays the timeline using 3 different classes which abstract from `TimelineView`."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* link:{repoURL}/blob/master/src/main/java/seedu/address/ui/panel/calendar/TimelineDayView.java[`TimelineDayView`] displays the timeline of a particular day in a certain month and year."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* link:{repoURL}/blob/master/src/main/java/seedu/address/ui/panel/calendar/TimelineWeekView.java[`TimelineWeekView`] displays the timeline of a particular week. The week is according to the `CalendarScreen`, where each row represents a week of a month."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* link:{repoURL}/blob/master/src/main/java/seedu/address/ui/panel/calendar/TimelineMonthView.java[`TimelineMonthView`] displays the timeline of a particular month in a certain year."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Each of these timeline will hold up to a certain amount of `CardHolder` depending on the type of `TimelineView`. Each of these `CardHolder` will then hold an amount of EventCards for displaying the event name and date."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003d\u003d\u003d\u003d List UI View"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ".Structure of the List UI View"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "image::UiListClassDiagram.png[]"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "The List View is made up of the link:{repoURL}/blob/master/src/main/java/seedu/address/ui/panel/list/ListPanel.java[`ListPanel`] which contains two lists views, `EventListView` and `TaskListView`"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* link:{repoURL}/blob/master/src/main/java/seedu/address/ui/panel/list/EventListView.java[`EventListView`] displays the list of Events containing every piece of information of the Events."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* link:{repoURL}/blob/master/src/main/java/seedu/address/ui/panel/list/TaskListView.java[`TaskListView`] displays the list of Task, containing every piece of information of each Task. [__To be implemented__]"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Similar to `TimelineView`, `EventListView` and `TaskListView` will contain a list of `Card`, but it will not be held in the `CardHolder`."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003d\u003d\u003d\u003d Log UI View"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ".Structure of the Log UI View"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "image::UiLogClassDiagram.png[]"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "The Log View is made up of the link:{repoURL}/blob/master/src/main/java/seedu/address/ui/panel/log/LogPanel.java[`LogPanel`] which contains several instances of `LogBox`."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "link:{repoURL}/blob/master/src/main/java/seedu/address/ui/panel/log/LogBox.java[`LogBox`] displays literal information back to the user when it is called by `MainWindow` when it listens for a command."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "[[Design-Logic]]"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Logic component"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "[[fig-LogicClassDiagram]]"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": ".Structure of the Logic Component"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "image::LogicClassDiagram.png[]"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "*API* :"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "link:{repoURL}/src/main/java/seedu/address/logic/Logic.java[`Logic.java`]"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": ".  `Logic` uses the `AddressBookParser` class to parse the user command."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": ".  This results in a `Command` object which is executed by the `LogicManager`."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": ".  The command execution can affect the `Model` (e.g. adding a person)."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": ".  The result of the command execution is encapsulated as a `CommandResult` object which is passed back to the `Ui`."
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": ".  In addition, the `CommandResult` object can also instruct the `Ui` to perform certain actions, such as displaying help to the user."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "Given below is the Sequence Diagram for interactions within the `Logic` component for the `execute(\"delete 1\")` API call."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": ".Interactions Inside the Logic Component for the `delete 1` Command"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "image::DeleteSequenceDiagram.png[]"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "NOTE: The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "[[Design-Model]]"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Model component"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": ".Structure of the Model Component"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "image::ModelClassDiagram.png[]"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "*API* : link:{repoURL}/src/main/java/seedu/address/model/Model.java[`Model.java`]"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "The `Model`,"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "* stores a `UserPref` object that represents the user\u0027s preferences."
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "* stores the Address Book data."
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "* exposes an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change."
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "* does not depend on any of the other three components."
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "As a more OOP model, we can store a `Tag` list in `Address Book`, which `Person` can reference. This would allow `Address Book` to only require one `Tag` object per unique `Tag`, instead of each `Person` needing their own `Tag` object. An example of how such a model may look like is given below. +"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "image:BetterModelClassDiagram.png[]"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "[[Design-Storage]]"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Storage component"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": ".Structure of the Storage Component"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "image::StorageClassDiagram.png[]"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "*API* : link:{repoURL}/src/main/java/seedu/address/storage/Storage.java[`Storage.java`]"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "The `Storage` component,"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "* can save `UserPref` objects in json format and read it back."
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "* can save the Address Book data in json format and read it back."
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "[[Design-Commons]]"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Common classes"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "Classes used by multiple components are in the `seedu.addressbook.commons` package."
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Implementation"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "This section describes some noteworthy details on how certain features are implemented."
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "// tag::undoredo[]"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d\u003d\u003d Undo/Redo feature"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d\u003d\u003d\u003d Implementation Details"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "The undo/redo mechanism is facilitated by `UndoRedoManager`, which contains `undoStateList` - a history of `UndoRedoStates`. Each `UndoRedoState` object contains two lists: one to store `EventSources` and the other to store `TaskSources`, together representing the state of all event and task data at that point in time. UndoRedoManager also contains a `currentStateIndex`, which keeps track of the index of the `UndoRedoState` being used presently."
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "A key point to take note of is that `ModelManager` contains an `eventList` (a list of `EventSources`) and a `taskList` (a list of `TaskSources`), both of which cannot be reinitialized. This is because these two lists are directly in sync with the GUI; changes to these specific list instances are reflected as changes to the GUI, but changes to other copies of `EventSource` or `TaskSource` lists will not affect the GUI. Hence, the history of `UndoRedoStates` held by `UndoRedoManager` stores deep-copies of `EventSource` and `TaskSource` lists. Should there be a need to revert back to a past or future state (if undo or redo is called), these lists will retrieve their data from the appropriate copy of `UndoRedoState` in the list of duplicates."
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "`UndoRedoManager` also implements the following operations:"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* `UndoRedoManager#commit(UndoRedoState state)` -- Adds the new state (which contains a deep-copied version of `TaskSource` and `EventSource` lists) to the `undoStateList`"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* `UndoRedoManager#undo()` -- Restore `eventList` and `taskList` in `ModelManager` to their previous versions from the appropriate duplicate in `undoStateList` via an `UndoRedoListener`"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* `UndoRedoManager#redo()` -- Restore `eventList` and `taskList` in `ModelManager` to their future versions from the appropriate duplicate in `undoStateList` via an `UndoRedoListener`"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* `UndoRedoManager#clearFutureHistory()` -- Delete all duplicates of `UndoRedoState` that occur in `undoStateList` after the index given by the `currentStateIndex`"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "The `UndoCommand` and `RedoCommand` will interact directly with `UndoRedoManager` while other state-changing commands (such as adding or deleting tasks) will interact only with `ModelManager`."
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "There are three key *Listener* interfaces that help us achieve the desired undo-redo functionality:"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* `EventListListener`"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* `TaskListListener`"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* `UndoRedoListener`"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "The `UndoRedoManager` implements the `EventListListener` interface’s method `onEventListChange(List\u003cEventSource\u003e events)` to “listen” for any changes to `ModelManager`’s `eventList`. (e.g. when an event is added or deleted) If such a change exists, it will be handled by first calling `UndoRedoManager#clearFutureHistory()`, instantiating a `UndoRedoState` with a deep-copied version of the `taskList` and the modified `eventList`, and calling `UndoRedoManager#commit(UndoRedoState state)` to commit this state. `UndoRedoManager` also implements `TaskListListener` in the same fashion, except that changes to the `taskList` are “listened” to rather than the `eventList`."
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "The `ModelManager` implements the `UndoRedoListener` interface’s method `onUndoRedo(UndoRedoState state)` to “listen” for any undo or redo being executed. This will be handled by updating `ModelManager`’s `eventList` and `taskList` data to match the data of the `UndoRedoState` with index `currentStateIndex` in `undoStateList`."
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "Given below is an example usage scenario and how the undo/redo mechanism behaves at each step."
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Step 1. The user runs the program for the first time. The `UndoRedoManager` will be initialized with the initial `undoStateList`. An `UndoRedoState` will be added to `undoStateList` and the `currentStateIndex` will point to that single `undoRedoState` in the list."
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "image::UndoRedoState0.png[]"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "Step 2. The user executes `add_event “Suntec City Computer Fair” --at “17/11/2019 12:00”`. The event will be added to `ModelManager`’s `eventList`. Then, `UndoRedoManager#onEventListChange(List\u003cEventSource\u003e events)` will be called (as there has been a change to the `eventList`), clearing all future states beyond the `currentStateIndex` as they are no longer useful. In this particular case, there are no future states to be cleared. Then, the modified `eventList` and `taskList` will be deep-copied and a new `UndoRedoState` containing the deep-copies will be added to `undoStateList`. The `currentStateIndex` is incremented by one to contain the index of the newly inserted undo redo state."
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "image::UndoRedoState1.png[]"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "If a command fails its execution, it will not result in any change to `ModelManager#eventList` or `ModelManager#taskList`. Hence, there is no change to trigger the listener methods and thus no `UndoRedoState` will be saved to `undoStateList`."
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Step 3. Suppose the user decides that adding the task was a mistake. He/she then executes the undo command to rectify the error. The undo command will decrement the `currentStateIndex` by one to contain the index of the previous undo redo state, thereafter triggering the `UndoRedoListener#onUndoRedo` method. This method updates `ModelManager`’s `eventList` and `taskList` data to match the data of the `UndoRedoState` with index `currentStateIndex` in `undoStateList`."
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "image::UndoRedoState2.png[]"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "If the `currentStateIndex` is 0, pointing to the initial undo redo state, then there are no previous undo redo states to restore. The undo command uses `UndoRedoManager#canUndo()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the undo."
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "The following sequence diagram shows how the undo operation works:"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "image::UndoSequenceDiagram.png[width\u003d100%]"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "NOTE: The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram."
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "The redo command does the opposite — it calls `UndoRedoManager#redo()`, which increments the `currentStateIndex` by one to contain the index of the previously undone state. The `UndoRedoListener` then causes `ModelManager#eventList` and `ModelManager#taskList` to reset their data to this state’s list data."
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "If the `currentStateIndex` is at index `undoStateList.size() - 1`, pointing to the latest undo redo state, then there are no undone undo redo states to restore. The `redo` command uses `UndoRedoManager#canRedo()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo."
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "Step 4. The user decides to execute the command `log`. Non-state-changing commands such as `log` do not manipulate task and event data. Since no changes to `taskList` or `eventList` have been made, the listener methods will not be triggered and no `UndoRedoState` will be saved to `undoStateList`. Thus, the `undoStateList` remains unchanged."
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "image::UndoRedoState3.png[]"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "Step 5. The user executes `delete_event 1`, removing the event from `ModelManager`’s `eventList`. `UndoRedoManager#onEventListChange(List\u003cEventSource\u003e events)` will be called (as there has been a change to the `eventList`), purging all future states beyond the `currentStateIndex` as they are no longer useful. Then, the modified `eventList` and `taskList` will be deep-copied and a new `UndoRedoState` containing the deep-copies will be added to `undoStateList`. The `currentStateIndex` is incremented by one to contain the index of the newly inserted undo redo state."
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "image::UndoRedoState4.png[]"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "The following activity diagram summarizes what happens when a user executes a new command:"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "image::CommitActivityDiagram.png[]"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d Design Considerations"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d Aspect: How undo \u0026 redo executes"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "* **Alternative 1 (current choice):** Saves `EventSource` and `TaskSource` data every time a change has been made."
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "** Pros: Easy to understand and implement."
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "** Cons: Performance issues may arise due to the relatively larger memory usage required."
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* **Alternative 2:** Individual command knows how to undo/redo by itself; inverse functions have to be implemented (if I undo the deletion of a person, it would be equivalent to adding him back to the list)"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "** Pros: Uses less memory as we only need to keep track of what commands have been executed and their parameters, as opposed to storing all task and event data between every change."
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "** Cons: Every command will have to be implemented twice, since their inverse operations will all be different. This is compounded by the fact that we have to ensure the correctness of every inverse operation individually as well."
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "// end::undoredo[]"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "// tag::notification[]"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d\u003d\u003d Notification System"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d\u003d\u003d\u003d Class Architecture"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ".Class diagram for Notification System"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "image::NotificationClassDiagram.png[]"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "The Notification System is facilitated by the  `NotificationManager`, which is found in the Logic component. Other constituent classes of the Notification System can be found in the Logic and UI components, depending on their functionality. These classes and their functionalities are listed below:"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d *Logic Classes*"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "Logic classes are responsible for deciding if a notification should be posted. As with other components, their functionality is accessed through the `NotificationManager` class. The `NotificationManager` class maintains a reference to a `NotificationCheckingThread` as well as a `SystemTrayCommunicator`."
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "The logic classes of the Notification System can be found under the `notification` package under the `Logic` component."
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "- The `NotificationCheckingThread` is a daemon thread that runs in parallel with the main application. It checks for new notifications to post every minute."
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "- The `NotificationChecker` is responsible for checking `Model` for any notifications that need to be posted."
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d *UI Classes*"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "UI classes are responsible for displaying notifications to the user."
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "The UI classes of the Notification System can be found under the `systemtray` package under the `ui` component."
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "- The `PopupListener` class is the main channel of communication between the logic and UI classes. When a notification needs to be posted, it will relay the information from the logic to UI classes."
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "- The `SystemTrayCommunicator` handles posting notifications and displaying the app\u0027s icon on the System Tray. It listens to the `NotificationCheckingThread` through a `PopupListener`."
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "- The `PopupNotification` class carries the information that will be posted to a popup notification."
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "- The `NotificationClickActionListener` is called when the user clicks on a popup notification."
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d\u003d\u003d\u003d Class Activity"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "As with other Manager classes, an instance of the  `NotificationManager` is created upon the starting of MainApp. The NotificationManager proceeds to initialize and run a `NotificationCheckingThread`, as well as a `SystemTrayCommunicator`. Upon being started, the `NotificationCheckingThread` will enter a `notificationCheckingLoop` by calling its method of the same name."
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "To give a better explanation of how the `NotificationCheckingThread` works, a single run of its loop is illustrated below:"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ".Sequence diagram for NotificationCheckingThread\u0027s main loop"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "image::NotificationCheckingLoopSequenceDiagram.png[]"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "Step 1. The `NotificationCheckingThread` calls the `NotificationChecker` to generate `PopupNotification`s through a call to `NotificationChecker#getListOfPopupNotifications()`"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "Step 2. For each `PopupNotification` generated by the NotificationChecker, a call to `PopupListener#notify()` is made."
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "Step 3. This prompts the `SystemTrayCommunicator` to post a new notification."
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "Step 4. The `NotificationCheckingThread` sleeps until the start of the next minute, found by the method `NotificationCheckingThread#findMillisecondsToNextMinute()`."
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d\u003d\u003d\u003d Design Considerations"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d Aspect: How the Notification system should run"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "* **Alternative 1 (current choice):** Running the Notification system as a separate thread in the same application"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "** Pros: Easier to implement and test."
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "** Cons: The user would have to leave the application on if they always wanted to be notified."
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "* **Alternative 2:** Running the Notification system as a background application"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "** Pros: This would allow notifications to be posted to the user\u0027s desktop even if the Horo main app were not open."
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "** Cons: This would require the creation of a separate application that the user would have to install on their computer. Because different Java applications are ran in different instances of Java Virtual Machines, this could vastly complicate implementation as the Notification System and the rest Horo would be unable to interact directly."
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "Alternative 1 was eventually chosen as it was simpler to implement and test, and remain within the initial scope of Horo\u0027s development. The application can be potentially changed to use Alternative 2 in the future."
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "// end::notification[]"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Logging"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "-"
        },
        "content": "We are using `java.util.logging` package for logging. The `LogsCenter` class is used to manage the logging levels and logging destinations."
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "-"
        },
        "content": "* The logging level can be controlled using the `logLevel` setting in the configuration file (See \u003c\u003cImplementation-Configuration\u003e\u003e)"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "-"
        },
        "content": "* The `Logger` for a class can be obtained using `LogsCenter.getLogger(Class)` which will log messages according to the specified logging level"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "-"
        },
        "content": "* Currently log messages are output through: `Console` and to a `.log` file."
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": "*Logging Levels*"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "-"
        },
        "content": "* `SEVERE` : Critical problem detected which may possibly cause the termination of the application"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "-"
        },
        "content": "* `WARNING` : Can continue, but with caution"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": "* `INFO` : Information showing the noteworthy actions by the App"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "-"
        },
        "content": "* `FINE` : Details that is not usually noteworthy but may be useful in debugging e.g. print the actual list instead of just its size"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "[[Design-Ics]]"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003d\u003d\u003d Ics Component"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "*API* : link:{repoURL}/src/main/java/seedu/address/ics/IcsParser.java[`IcsParser.java`]"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "The ICS component is made up of 2 main sub-components: ICS file parser, and ICS file exporter."
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "The file parser makes use of a custom parser that converts files with the `.ics` file extension"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "to `EventSource` and `TaskSource` objects in Horo."
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "Here is an overview of how the ICS component looks like:"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "image::IcsComponentDiagram.png[]"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "The file exporter uses the `IcsConverter` class to convert `EventSource` and `TaskSource` objects"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "stored in the `ModelManager` singleton object into their ICS String representations. Check out the"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "link:https://en.wikipedia.org/wiki/ICalendar[iCalendar Wiki Page] for more information on the specifications."
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* Can export Horo\u0027s save data as a file"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "The `ICS` Component,with a `.ics` extension."
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* Can import other Horo\u0027s save data from a `.ics` file."
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "\u003d\u003d\u003d\u003d Design Considerations"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d Aspect: Handling of Horo TaskSource and EventSource conversion to ICS Strings"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "- **Alternative 1 (Current Choice):** Use of a separate class `IcsConverter` to convert `TaskSource` and `EventSource` objects"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    their ICS string representations."
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    * Pros: Adherence to Single Responsibility Principle,"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        decouples `IcsExporter` from the `TaskSource` and `EventSource` classes, and keeps code reusable and scalable."
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    * Cons: Not consistent with Object-Oriented Programming structure."
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "- **Alternative 2:** Create a common `IcsConvertible` Interface for `TaskSource` and `EventSource` to implement a `toIcsString()` function."
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    * Pros: Adheres to Object-Oriented Programming structure."
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    * Cons: Hard to reuse functions and modify code."
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "Alternative 1 was chosen eventually, as I felt that it is more important to adhere to the Single Responsibility Principle"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "and keep all code relevant to converting objects to ICS Strings in the same class."
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "This further makes it easier for future debugging,"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "and makes adding new exportable objects a lot easier as there are common functions that can be used."
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003d\u003d Implementation"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "-"
        },
        "content": "[[Implementation-Configuration]]"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Configuration"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "-"
        },
        "content": "Certain properties of the application can be controlled (e.g user prefs file location, logging level) through the configuration file (default: `config.json`)."
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Documentation"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "-"
        },
        "content": "Refer to the guide \u003c\u003cDocumentation#, here\u003e\u003e."
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Testing"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "-"
        },
        "content": "Refer to the guide \u003c\u003cTesting#, here\u003e\u003e."
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Dev Ops"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "-"
        },
        "content": "Refer to the guide \u003c\u003cDevOps#, here\u003e\u003e."
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "-"
        },
        "content": "[appendix]"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Product Scope"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "-"
        },
        "content": "*Target user profile*:"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* is a student"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* has a need to manage their Events and Tasks for visualization."
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* requires reminders for their Events and Tasks."
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "-"
        },
        "content": "* prefer desktop apps over other types"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "-"
        },
        "content": "* can type fast"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "-"
        },
        "content": "* prefers typing over mouse input"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "-"
        },
        "content": "* is reasonably comfortable using CLI apps"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "*Value proposition*: manage Reminders as well as viewing Events and Tasks much faster than a typical mouse/GUI driven app"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "-"
        },
        "content": "[appendix]"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d User Stories"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "-"
        },
        "content": "Priorities: High (must have) - `* * \\*`, Medium (nice to have) - `* \\*`, Low (unlikely to have) - `*`"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "-"
        },
        "content": "[width\u003d\"59%\",cols\u003d\"22%,\u003c23%,\u003c25%,\u003c30%\",options\u003d\"header\",]"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "-"
        },
        "content": "|\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "-"
        },
        "content": "|Priority |As a ... |I want to ... |So that I can..."
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "-"
        },
        "content": "|`* * *` |new user |see usage instructions |refer to instructions when I forget how to use the App"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "|`* * *` |user |add an Event or Task |keep track of an Event or Task that I have in the future"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "|`* * *` |user |delete an Event or Task |remove the Event or Task I no longer need."
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "|`* * *` |user |find an Event or Task by name |locate the details of the Event or Task without having to go through the entire list"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "|`* * *` |user |find an Event or Task by tags|remember the details of the Event or Task that I forget about"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "|`* * *` |user|undo and redo commands |undo any commands which wrongly inputted"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "|`* * *` |user|edit my Events and Tasks |change the details of the event, be it location, date or time"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "|`* * *` |user that works on multiple computer |port my data between computers |keep track on all my computers."
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "|`* * *` |student |have constant reminders to track the deadline of my assignments |not forget to complete and submit them"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "|`* * *` |student |keep track of how long it takes for me to complete a task |gauge how long I will need to take for future similar tasks"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "|`* * *` |student with weekly assignments and lectures |have my reminders to be recurring | be reminded without having to input the information in again"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "|`* * *` |busy student |have a convenient way to visually see my assignments and projects |complete them in the right priority"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "|`* * *` |busy user |be informed if any different events clash with each other |understand which event to prioritize or reschedule"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "|`* *` |user |add a contacts | add them into Events to remind myself who I am meeting up with"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "|`* *` |user |archive my completed Tasks | remind myself if I complete a task but forgot about it"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "|`* *` |user |create custom commands that contain the execution of multiple sub-commands |quickly input in a command without the need to edit it"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "|`* *` |student |visualize my timetable |plan for when it is time to take a break from studying"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "|`* *` |student |find a time for my project teammates to meet up |schedule a meeting without clashing together with other events"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "|`*` |user |import contacts in vCard format| integrate them with my events"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "|`*` |user |export contacts in vCard format | integrate them with my other computers"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "|`*` |student |keep track of sub-tasks in a main task | know my current progress in a report"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "-"
        },
        "content": "|\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "-"
        },
        "content": "_{More to be added}_"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "-"
        },
        "content": "[appendix]"
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Use Cases"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "(For all use cases below, the *System* is the `Horo` and the *Actor* is the `user`, unless specified otherwise)"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "-"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003d\u003d\u003d Use case 1: Add a Task"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "-"
        },
        "content": "*MSS*"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "1.  User requests to add a Task"
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "2.  Horo replies that the Task has been added"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "-"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "-"
        },
        "content": "*Extensions*"
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* 1a. The user adds additional sub-commands to the Task command"
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "+"
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* 2a. The given add Task command is of the wrong format."
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "+"
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "-"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "** 2a1. Horo displays an error message."
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "+"
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Use case resumes at step 1."
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003d\u003d\u003d Use case 2: Delete a Task"
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "*MSS*"
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "1.  User requests to delete a specific Task from the already displayed list"
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "2.  Horo deletes the Task"
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "-"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "*Extensions*"
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* 2a. The given delete Task command is of the wrong format."
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "-"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "** 2a1. Horo displays an error message."
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Use case resumes at step 1."
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003d\u003d\u003d Use case 3: Find a Task by name"
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "*MSS*"
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "1.  User requests to find a Task"
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "2.  Horo displays the list of Task with the keywords found in its name"
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "+"
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "*Extensions*"
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* 2a. The given find Task command is of the wrong format."
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "+"
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "** 2a1. Horo displays an error message."
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "+"
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Use case resumes at step 1."
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003d\u003d\u003d Use case 4: Undo and Redo commands"
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "*MSS*"
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "1.  User requests to add an Task"
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "2.  Horo replies that the Task has been added"
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "3.  User requests to undo the command"
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "4.  Horo replies that the previous command has been undone"
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "+"
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "*Extensions*"
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* 1a. The user adds additional sub-commands to the Task command"
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "+"
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* 2a. The given add Task command is of the wrong format."
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "+"
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "** 2a1. Horo displays an error message."
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Use case resumes at step 1"
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* 4a. User decides the to Redo the added Task"
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "+"
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "** 3a1. Horo replies that the added Task has been redone"
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "+"
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Use case ends"
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 594,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 595,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003d\u003d\u003d Use case 5: Edit a Task"
      },
      {
        "lineNumber": 596,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 597,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "*MSS*"
      },
      {
        "lineNumber": 598,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 599,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "1.  User requests to add a Task"
      },
      {
        "lineNumber": 600,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "2.  Horo replies that the Task has been added"
      },
      {
        "lineNumber": 601,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "3.  User request to edit a Task with the sub-commands"
      },
      {
        "lineNumber": 602,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "4.  Horo replies that the Task has been edited"
      },
      {
        "lineNumber": 603,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "+"
      },
      {
        "lineNumber": 604,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 605,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 606,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "*Extensions*"
      },
      {
        "lineNumber": 607,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 608,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* 1a. The user adds additional sub-commands to the Task command"
      },
      {
        "lineNumber": 609,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "+"
      },
      {
        "lineNumber": 610,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 611,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 612,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* 2a. The given add Task command is of the wrong format."
      },
      {
        "lineNumber": 613,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "+"
      },
      {
        "lineNumber": 614,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 615,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "** 2a1. Horo displays an error message."
      },
      {
        "lineNumber": 616,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "+"
      },
      {
        "lineNumber": 617,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Use case resumes at step 1."
      },
      {
        "lineNumber": 618,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 619,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* 4a. The given edit Task command is of the wrong format."
      },
      {
        "lineNumber": 620,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "+"
      },
      {
        "lineNumber": 621,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 622,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "** 4a1. Horo displays an error message."
      },
      {
        "lineNumber": 623,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "+"
      },
      {
        "lineNumber": 624,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Use case resumes at step 3."
      },
      {
        "lineNumber": 625,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "+"
      },
      {
        "lineNumber": 626,
        "author": {
          "gitId": "-"
        },
        "content": "_{More to be added}_"
      },
      {
        "lineNumber": 627,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 628,
        "author": {
          "gitId": "-"
        },
        "content": "[appendix]"
      },
      {
        "lineNumber": 629,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Non Functional Requirements"
      },
      {
        "lineNumber": 630,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 631,
        "author": {
          "gitId": "-"
        },
        "content": ".  Should work on any \u003c\u003cmainstream-os,mainstream OS\u003e\u003e as long as it has Java `11` or above installed."
      },
      {
        "lineNumber": 632,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ".  Should be able to hold up to 1000 Events and Tasks without a noticeable sluggishness in performance for typical usage."
      },
      {
        "lineNumber": 633,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ".  Should function on both `32-bit environment` and `64-bit environment`"
      },
      {
        "lineNumber": 634,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ".  Should work without any internet required."
      },
      {
        "lineNumber": 635,
        "author": {
          "gitId": "-"
        },
        "content": ".  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse."
      },
      {
        "lineNumber": 636,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "."
      },
      {
        "lineNumber": 637,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 638,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 639,
        "author": {
          "gitId": "-"
        },
        "content": "_{More to be added}_"
      },
      {
        "lineNumber": 640,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 641,
        "author": {
          "gitId": "-"
        },
        "content": "[appendix]"
      },
      {
        "lineNumber": 642,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Glossary"
      },
      {
        "lineNumber": 643,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 644,
        "author": {
          "gitId": "-"
        },
        "content": "[[mainstream-os]] Mainstream OS::"
      },
      {
        "lineNumber": 645,
        "author": {
          "gitId": "-"
        },
        "content": "Windows, Linux, Unix, OS-X"
      },
      {
        "lineNumber": 646,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 647,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "[[event]] Event::"
      },
      {
        "lineNumber": 648,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "A thing that happens or takes place during a certain period of time, or of a general time."
      },
      {
        "lineNumber": 649,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 650,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "[[task]] Task::"
      },
      {
        "lineNumber": 651,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "A piece of work that is to be completed or taken note of."
      },
      {
        "lineNumber": 652,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 653,
        "author": {
          "gitId": "-"
        },
        "content": "[appendix]"
      },
      {
        "lineNumber": 654,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Product Survey"
      },
      {
        "lineNumber": 655,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 656,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "*reminder-bot on Discord*"
      },
      {
        "lineNumber": 657,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 658,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Author: JellyWX"
      },
      {
        "lineNumber": 659,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 660,
        "author": {
          "gitId": "-"
        },
        "content": "Pros:"
      },
      {
        "lineNumber": 661,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 662,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* A reminder bot on a popular voice and text chat application"
      },
      {
        "lineNumber": 663,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* Capable of parsing english language as compared to CLI styled commands"
      },
      {
        "lineNumber": 664,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 665,
        "author": {
          "gitId": "-"
        },
        "content": "Cons:"
      },
      {
        "lineNumber": 666,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 667,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* Lack of visualization of the Events and Tasks"
      },
      {
        "lineNumber": 668,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* Parsing english language makes it slower to type with a longer requirement as compared to CLI styled commands"
      },
      {
        "lineNumber": 669,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 670,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "*Google Calendar*"
      },
      {
        "lineNumber": 671,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 672,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Company: Google"
      },
      {
        "lineNumber": 673,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 674,
        "author": {
          "gitId": "-"
        },
        "content": "Pros:"
      },
      {
        "lineNumber": 675,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 676,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* A Calendar application that is capable of storing Events and Tasks as well."
      },
      {
        "lineNumber": 677,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* Mostly uses GUI for interaction with user instead of having CLI, favouring to the common crowd."
      },
      {
        "lineNumber": 678,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 679,
        "author": {
          "gitId": "-"
        },
        "content": "Cons:"
      },
      {
        "lineNumber": 680,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 681,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* Mostly uses GUI for interaction with user instead of having CLI, which does not favour those who prefers CLI."
      },
      {
        "lineNumber": 682,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* It requires an account to be usable."
      },
      {
        "lineNumber": 683,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "* The desktop version requires a browser, which in turn requires Internet and hence not offline."
      },
      {
        "lineNumber": 684,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 685,
        "author": {
          "gitId": "-"
        },
        "content": "[appendix]"
      },
      {
        "lineNumber": 686,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Instructions for Manual Testing"
      },
      {
        "lineNumber": 687,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 688,
        "author": {
          "gitId": "-"
        },
        "content": "Given below are instructions to test the app manually."
      },
      {
        "lineNumber": 689,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 690,
        "author": {
          "gitId": "-"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 691,
        "author": {
          "gitId": "-"
        },
        "content": "These instructions only provide a starting point for testers to work on; testers are expected to do more _exploratory_ testing."
      },
      {
        "lineNumber": 692,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 693,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Launch and Shutdown"
      },
      {
        "lineNumber": 694,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 695,
        "author": {
          "gitId": "-"
        },
        "content": ". Initial launch"
      },
      {
        "lineNumber": 696,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 697,
        "author": {
          "gitId": "-"
        },
        "content": ".. Download the jar file and copy into an empty folder"
      },
      {
        "lineNumber": 698,
        "author": {
          "gitId": "-"
        },
        "content": ".. Double-click the jar file +"
      },
      {
        "lineNumber": 699,
        "author": {
          "gitId": "-"
        },
        "content": "  Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum."
      },
      {
        "lineNumber": 700,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 701,
        "author": {
          "gitId": "-"
        },
        "content": ". Saving window preferences"
      },
      {
        "lineNumber": 702,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 703,
        "author": {
          "gitId": "-"
        },
        "content": ".. Resize the window to an optimum size. Move the window to a different location. Close the window."
      },
      {
        "lineNumber": 704,
        "author": {
          "gitId": "-"
        },
        "content": ".. Re-launch the app by double-clicking the jar file. +"
      },
      {
        "lineNumber": 705,
        "author": {
          "gitId": "-"
        },
        "content": "  Expected: The most recent window size and location is retained."
      },
      {
        "lineNumber": 706,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 707,
        "author": {
          "gitId": "-"
        },
        "content": "_{ more test cases ... }_"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 65,
      "Kyzure": 266,
      "marcusteh1238": 29,
      "bruceskellator": 11,
      "-": 336
    }
  },
  {
    "path": "docs/UserGuide.adoc",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d Horo - User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ":site-section: UserGuide"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ":toc:"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ":toc-title:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ":toc-placement: preamble"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ":sectnums:"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ":imagesDir: images"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ":stylesDir: stylesheets"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ":xrefstyle: full"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ":experimental:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "ifdef::env-github[]"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ":tip-caption: :bulb:"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ":note-caption: :information_source:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "endif::[]"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ":repoURL: https://github.com/AY1920S1-CS2103T-F12-1/main"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "By: `Team AY1920S1-CS2103T-F12-1`      Since: `Sept 2019`      Licence: `MIT`"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Introduction"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "*Horo* is a command-line interface scheduling application. It helps the user maintain a to-do list and a calendar, and posts timely reminders on their desktop. This User Guide provides documentation of *Horo*\u0027s functionalities. Users may refer to this guide as a reference for what the application can do, as well as the commands that Horo will accept.."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Quick Start"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ".  Ensure you have Java `11` or above installed in your Computer."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ".  Download the latest `horo.jar` link:{repoURL}/releases[here]."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ".  Copy the file to the folder you want to use as the home folder for Horo."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ".  Double-click the file to start the app. The GUI should appear in a few seconds."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ".Startup Screen Shot of Horo"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "image::Ui.png[width\u003d\"790\"]"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ".  Type the command in the command box and press kbd:[Enter] to execute it."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ".  Some example commands you can try:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "* `*add_task* \"Buy Groceries\"`: adds a task to Horo."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "* `*delete_task* 1` : deletes the first task in Horo."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "* `*exit*` : exits Horo."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ".  Refer to \u003c\u003cFeatures\u003e\u003e for details of each command."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "[[Features]]"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Features"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "*Command Format for Horo*"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "* You can enter a command by typing the command name first followed by arguments of the command."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- E.g. `*command_name* \u003cargument1\u003e \u003cargument2\u003e...`"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "* If you want to type an argument containing blank spaces, surround your sentence within quotation marks."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- E.g. `\"Buy Groceries\"`"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- E.g. `*add_task* \"Buy Groceries\"`"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "* Command parameters are prefixed by `--`, and they are optional."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- E.g. `*--date* 09/2019`"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- E.g. `*calendar* *--date* 09/2019`"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "*Command Format for this User Guide*"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "* Arguments are fully capitalized which are to be supplied by you."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- E.g. `*add_task* TASK`"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "* Arguments suffixed with ellipsis (`...`) indicate that the argument can be entered zero or more times."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- E.g. `*delete_task* INDEX...`"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "* Parameters separated by a vertical bar `|` can be used interchangeably."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- e.g. given the command format `-d|--description DESCRIPTION`, the following inputs accomplish the same thing:"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- `*--description* \"Buy Groceries\"`"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- `*-d* \"Buy Groceries\"`"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d\u003d\u003d Asking for help : `help` **`[coming in v2.0]`**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "Provides a guide if you ever need help with Horo\u0027s commands and command formats."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Command Format: +"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*help*`"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d\u003d\u003d Calendar, Events and Task"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "The following commands are related to Events and Tasks, which Horo recognises as different entities. Stated below are the differences between Events and Tasks:"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "* Event:"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "- Will show up on the Calendar."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "- Cannot be marked as done."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "- Will be automatically removed from the Calendar past its due date, provided it is a non-recurring event."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "* Task"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "- Will show up on the Calendar only if a due-date is specified."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "- Can be marked as done."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "- If not accomplished by its due date, will be automatically archived into an undone list."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d\u003d\u003d\u003d Adding Events"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ".Add Event Command"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "image::AddEventCommandScreenShot.png[]"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "You may use the `add_event` command to add an event to the calendar."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Command Format: +"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*add_event* DESCRIPTION START_DATE`"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Command Parameters: +"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*--end* END_DATE` +"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*--remind* REMIND_DATE` +"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*--tag* TAG...`"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Argument Format: +"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`START_DATE` : `\"DD/MM/YYYY HH:MM\"` +"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`END_DATE` : `\"DD/MM/YYYY HH:MM\"` +"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`REMIND_DATE` : `\"DD/MM/YYYY HH:MM\"`"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "Examples: +"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*add_event* “Rori’s Birthday” “18/08/2019 16:00”` +"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*add_event* “Rori’s Birthday” “18/08/2019 16:00” *--end* “18/08/2019 20:00”` +"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*add_event* “Rori’s Birthday” “18/08/2019 16:00” *--end* “18/08/2019 20:00” *--remind* “18/08/2019 12:00” *--tag* Birthday Rori`"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d\u003d\u003d\u003d Deleting Events"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ".Delete Event Command"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "image::DeleteEventCommandScreenShot.png[]"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "You may use the `delete_event` command to delete one or more events from the calendar."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Command Format: +"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*delete_event* INDEX...`"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Command Parameters: +"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*--tag* TAG...` +"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Remarks: +"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Events which match both `INDEX` and `TAG` will be deleted."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Examples: +"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*delete_event* 1` +"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*delete_event* 1 2 3` : Deletes events 1, 2 and 3. +"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*delete_event* *--tag* Birthday` : Deletes events tagged as `Birthday`. +"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*delete_event* *--tag* Birthday Rori` : Deletes events tagged as `Birthday` and `Rori`. +"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*delete_event* 1 2 3 *--tag* Birthday Rori` : Deletes events 1, 2 and 3 only if they have been tagged as `Birthday` and `Rori`."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d\u003d\u003d\u003d Editing Events"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ".Edit Event Command"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "image::EditEventCommandScreenShot.png[]"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "You may use the `edit_event` command to edit one or more existing events."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Command Format: +"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*edit_event* INDEX...`"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Command Parameters: +"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*--description* DESCRIPTION` +"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*--start* START_DATE` +"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*--end* END_DATE` +"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*--remind* REMIND_DATE` +"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*--tag* TAG...`"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Argument Format: +"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`START_DATE` : `\"DD/MM/YYYY HH:MM\"` +"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`END_DATE` : `\"DD/MM/YYYY HH:MM\"` +"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`REMIND_DATE` : `\"DD/MM/YYYY HH:MM\"`"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Remarks: +"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Events which matches `INDEX` will be edited."
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "Examples: +"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*edit_event* 1 2 3 *--tag* Rori` : Edits events 1, 2 and 3. +"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*edit_event* 1 *--description* “Play Monster Hunter” *--start* “17/08/2019 19:00” *--remind* “17/08/2019 12:00” *--tag* Kyzure`"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003d\u003d\u003d\u003d Adding Tasks"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ".Adds Task to Task List"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "image::AddTaskCommandScreenShot.png[]"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "You may use the `add_task` command to add a task to the to-do list."
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Command Format: +"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*add_task* DESCRIPTION`"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Command Parameters: +"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*--due* DUE_DATE` +"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*--tag* TAG...`"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Argument Format: +"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`DUE_DATE` : `\"DD/MM/YYYY HH:MM\"`"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "Examples: +"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*add_task* “Buy Rori a birthday cake”` +"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*add_task* “Buy Rori a birthday cake” *--due* “18/08/2019 12:00”` +"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*add_task* “Buy Rori a birthday cake” *--tag* \"Birthday Rori\"`"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003d\u003d\u003d\u003d Deleting Tasks"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ".Delete Task from the task list."
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "image::DeleteTaskCommandScreenShot.png[]"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "You may use the `delete_task` command to delete one or more tasks from the to-do list."
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Command Format: +"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*delete_task* INDEX...`"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Command Parameters: +"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*--tag* TAG...`"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Remarks: +"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Tasks which match both `INDEX` and `TAG` will be deleted."
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "Examples: +"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*delete_task* 1` +"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*delete_task* 1 2 3` : Deletes tasks 1, 2 and 3. +"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*delete_task* *--tag* Birthday` : Deletes tasks tagged as `Birthday`. +"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*delete_task* *--tag* Birthday Rori` : Deletes tasks tagged as `Birthday` and `Rori`. +"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*delete_task* 1 2 3 *--tag* Birthday Rori` : Deletes tasks 1, 2 and 3 only if they have been tagged as `Birthday` and `Rori`."
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003d\u003d\u003d\u003d Editing Tasks"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ".Edit Task for Tasks"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "image::EditTaskCommandScreenShot.png[]"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "The `edit_task` command edits 1 or more existing events. Events should be specified by their index only. +"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Command Format: +"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*edit_task* INDEX...`"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Command Parameters: +"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*--description* DESCRIPTION` +"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*--due* DUE_DATE` +"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*--tag* TAG...`"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Argument Format: +"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`DUE_DATE` : `\"DD/MM/YYYY HH:MM\"` +"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "Examples: +"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*edit_task* 1 2 3 *--tag* Present` : Edits tasks 1, 2 and 3. +"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*edit_task* 1 *--description* “Buy Rori a present” *--due* “17/08/2019 12:00” *--tag* Present`"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d\u003d\u003d\u003d Making recurring Events: `recur` **`[coming in v2.0]`**"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "The `recur` command makes an Event show up repeatedly in the Calendar."
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Command Format: +"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*recur* INDEX...`"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Command Parameters: +"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*-f*|*--frequency*` FREQUENCY"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "Examples: +"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*recur* 1 2 3 *-f* daily` +"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*recur* 1 2 3 *--frequency* daily`"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "* This will make Events 1, 2 and 3 recur daily on the Calendar."
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d\u003d\u003d\u003d Finding Events and Tasks **`[coming in v2.0]`**"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "The `find` command returns Events or Tasks whose name or tag contains the specified keyword. If no optional arguments are specified, all items which name or tags contain the keyword will be returned."
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Command Format: +"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*find* KEYWORD`"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Command Parameters: +"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*--event* KEYWORD` +"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*--task* KEYWORD` +"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*--tag* KEYWORD...`"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Examples: +"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*find* Birthday` +"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*find* *--event* Rori` +"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*find* *--task* Rori` +"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*find* *--tag* Birthday` +"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*find* *--tag* Birthday Pet`"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d\u003d\u003d\u003d Completing Tasks **`[coming in v2.0]`**"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "The `done` command marks a Task as complete. Tasks may be specified by index, or by their associated tags."
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Command Format: +"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*done* INDEX...`"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Command Parameters: +"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*--tag* TAG...`"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Examples: +"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*done* 1` +"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*done* 1 2 3`"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*done* --tag Birthday` +"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*done* 1 2 3 --tag Birthday`"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d\u003d\u003d Tagging System **`[coming in v2.0]`**"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "The following commands are related to the tagging of Events and Tasks, which gives you finer control over editing your events and tasks."
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d\u003d\u003d\u003d Adding Tags to Events**`[coming in v2.0]`**"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "The `tag_event` command adds tags to the specified Events."
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Command Format: +"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*tag_event* INDEX...`"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Command Parameters: +"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*--tag* TAG...`"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Examples: +"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*tag_event* 1 2 3`"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*tag_event* 1 2 3 *--tag* Birthday`"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d\u003d\u003d\u003d Adding Tags to Tasks**`[coming in v2.0]`**"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "The `tag_task` command adds tags to the specified Tasks."
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Command Format: +"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*tag_task* INDEX...`"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Command Parameters: +"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*--tag* TAG...`"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Examples: +"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*tag_task* 1 2 3`"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*tag_task* 1 2 3 *--tag* Birthday`"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d\u003d\u003d\u003d Removing Tags from events **`[coming in v2.0]`**"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "The `untag_event` command removes tags from the specified Events."
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Command Format: +"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*untag_event* INDEX...`"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Command Parameters: +"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*--tag* TAG...`"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "Example: +"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*untag_event* 1 2 3` +"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*untag_event* 1 2 3 *--tag* Birthdays`"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d\u003d\u003d\u003d Removing Tags from Tasks **`[coming in v2.0]`**"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "The `untag_task` command removes tags from the specified Tasks."
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Command Format: +"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*untag_task* INDEX...`"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Command Parameters: +"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "*--tag* TAG..."
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Examples: +"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*untag_task* 1 2 3` +"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*untag_task* 1 2 3 *--tag* Birthdays`"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d\u003d\u003d UI"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "The following commands are related to the changing the display of the UI."
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003d\u003d\u003d\u003d Changing Screen View to Calendar View"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ".Calendar View Command for Calendar"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "image::Ui.png[]"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "The `calendar` command switches the display to the Calendar View, which displays a calendar of the specified month and year in addition to a timeline of the specified day, week or month."
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "The Calendar View will display the specified date. If no date is specified, the last specified date will be displayed. This defaults to the current date."
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "Upon the initial launch of the application, the timeline and calendar dates will be set to the system\u0027s current date."
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Command Format: +"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*calendar*` +"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Command Parameters: +"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*--date* MONTH_YEAR`"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Argument Format: +"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`MONTH_YEAR` : `MM/YYYY`"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Example: +"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*calendar*` : Switch back to calendar view, without changing the date. +"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*calendar* *--date* 10/2019`"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003d\u003d\u003d\u003d Changing Timeline to a given day"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ".Day View Command for the Timeline"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "image::DayViewCommandScreenShot.png[]"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "The `day` command sets the timeline in the Calendar View to that of the specified day. In addition, this command will cause a switch to the Calendar View if it is not the current display."
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Command Format: +"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*day* DATE`"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Argument Format: +"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`DATE` : `DD/MM/YYYY`"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Example: +"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*day* 11/10/2019`"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003d\u003d\u003d\u003d Changing Timeline to a given week"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ".Week View Command for the Timeline"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "image::WeekViewCommandScreenShot.png[]"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "The `week` command sets the timeline in the Calendar View to the week of the specified day of the month. In addition, this command will cause a switch to the Calendar View if it is not the current display."
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Command Format: +"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*week* DATE`"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Argument Format: +"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`DATE` : `DD/MM/YYYY`"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Example: +"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*week* 01/11/2019`"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003d\u003d\u003d\u003d Changing Timeline to a given month"
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ".Month View Command for the Timeline"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "image::MonthViewCommandScreenShot.png[]"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "The `month` command sets the timeline in the Calendary view to that of the specified month. In addition, this command will cause a switch to the Calendar View if it is not the current display."
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Command Format: +"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*month* MONTH_YEAR`"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Argument Format: +"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`MONTH_YEAR` : `MM/YYYY`"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Example: +"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*month* 11/2019`"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003d\u003d\u003d\u003d Changing Screen View to List View"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ".List View Command"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "image::ListCommandScreenShot.png[]"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "The `list` command will switch the display to the List View, which displays a list of upcoming events on the left, and a to-do list of tasks on the right side."
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Command Format and Example: +"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*list*`"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003d\u003d\u003d\u003d Changing Screen View to Log View"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ".Log View Command"
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "image::LogCommandScreenShot.png[]"
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "The `log` command switches the display to the Log View, which displays a catalogue of all past responses to input commands."
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Command Format and Example: +"
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*log*`"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003d\u003d\u003d Notification System"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Horo will post notifications to your system tray to remind you that an event is starting or that a task is due."
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "Take note that Horo can only post reminders as long as the application is open. To tell if Horo is running, check that the appropriate icon appears in the system tray"
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ".Horo tray icon"
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "image::HoroIconScreenShot.png[]"
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "Also take note that notifications are switched on by default upon launch. This status is not carried over between sessions. If you would like to switch notifications off, you would have to do so whenever you start Horo up."
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "You can tell if notifications are switched on by mousing over the icon in the system tray."
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ".Mousing over the Horo tray icon"
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "image::IconMouseOverScreenShot.png[]"
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003d\u003d\u003d\u003d Notification Popups"
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "When Horo posts a notification, it should appear at the bottom-right side of the screen, where the system tray should be."
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ".A Popup Notification"
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "image::PopUpScreenShot.png[]"
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003d\u003d\u003d\u003d Switch notifications on"
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "The `notif_on` command switches notifications on. +"
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Command Format: +"
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*notif_on*`"
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "1. If you would like to switch notifications on, type the command *`notif_on`* into the command box and press kbd:[Enter] to execute it. +"
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ".`notif_on` command in the Command Box"
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "image::NotificationOnCommandBoxScreenShot.png[]"
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "2. An in-app popup should appear, displaying “Notifications switched on”. The log view should also record this action. +"
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ".Feedback for the `notif_on` command"
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "image::NotificationOnFeedbackScreenShot.png[]"
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003d\u003d\u003d\u003d Switch notifications off"
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "The `notif_off` command switches notifications off. +"
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Command Format: +"
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*notif_off*`"
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "1. If you would like to switch notifications off, type the command *`notif_off`* into the command box and press kbd:[Enter] to execute it. +"
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ".`notif_off` command in the Command Box"
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "image::NotificationOffCommandBoxScreenShot.png[]"
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "2. An in-app popup should appear, displaying “Notifications switched off”. The log view should also record this action. +"
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ".Feedback for the `notif_off` command"
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "image::NotificationOffFeedbackScreenShot.png[]"
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d\u003d\u003d Undo-Redo"
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "The following commands allow you to undo and redo previously input commands."
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d\u003d\u003d\u003d Undo"
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ".Undo Command"
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "image::UndoCommandScreenShot.png[]"
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 594,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 595,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "The `undo` command undoes the previous command. +"
      },
      {
        "lineNumber": 596,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "Commands can be undone up to the program\u0027s launch."
      },
      {
        "lineNumber": 597,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 598,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Command Format: +"
      },
      {
        "lineNumber": 599,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*undo*`"
      },
      {
        "lineNumber": 600,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 601,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 602,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 603,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d\u003d\u003d\u003d Redo"
      },
      {
        "lineNumber": 604,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 605,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ".Redo Command"
      },
      {
        "lineNumber": 606,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "image::RedoCommandScreenShot.png[]"
      },
      {
        "lineNumber": 607,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 608,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 609,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 610,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "The `redo` command redoes a previously undone command."
      },
      {
        "lineNumber": 611,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "The `redo` command is able to redo any undone commands that have not been succeeded by a separate state-changing command (e.g. add_event, delete_event, edit)."
      },
      {
        "lineNumber": 612,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 613,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "For example, suppose you added an event `\"Attend Horo\u0027s Birthday\"` and ran the `undo` command, thus removing the event from Horo."
      },
      {
        "lineNumber": 614,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "Now, if you run `redo`, the previous state of Horo before the latest `undo` command was executed will be restored;"
      },
      {
        "lineNumber": 615,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "`\"Attend Horo\u0027s Birthday\"` will once again appear in Horo."
      },
      {
        "lineNumber": 616,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 617,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "However, if you had executed any state-changing command (except for `undo` or `redo`) just after undoing the `add_event` command,"
      },
      {
        "lineNumber": 618,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "calling redo will then amount to no effect."
      },
      {
        "lineNumber": 619,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 620,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "If you\u0027ve ever used another application with undo-redo functionality, just imagine that Horo\u0027s undo-redo functions are as intuitive as theirs."
      },
      {
        "lineNumber": 621,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 622,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Command Format: +"
      },
      {
        "lineNumber": 623,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*redo*`"
      },
      {
        "lineNumber": 624,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 625,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 626,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 627,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "\u003d\u003d\u003d iCalendar (ICS) Integration"
      },
      {
        "lineNumber": 628,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 629,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "Horo stores data in the ICS format. Files saved in this format have the extension `.ics`."
      },
      {
        "lineNumber": 630,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "This allows for data to be imported to and exported from other calendar applications that also use the `.ics` format."
      },
      {
        "lineNumber": 631,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 632,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003d\u003d\u003d\u003d Export current calendar"
      },
      {
        "lineNumber": 633,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 634,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ".Export Command"
      },
      {
        "lineNumber": 635,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "image::ExportCommandScreenShot.png[]"
      },
      {
        "lineNumber": 636,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 637,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ".Exported File"
      },
      {
        "lineNumber": 638,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "image::ExportFileScreenShot.png[]"
      },
      {
        "lineNumber": 639,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 640,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "The `export` command exports your current calendar as an ICS file to the specified directory."
      },
      {
        "lineNumber": 641,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "If no directory is specified, the file will be created in the same directory as Horo."
      },
      {
        "lineNumber": 642,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 643,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Command Format: +"
      },
      {
        "lineNumber": 644,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*export*` +"
      },
      {
        "lineNumber": 645,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*export* *--directory* DIRECTORY`"
      },
      {
        "lineNumber": 646,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 647,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Example: +"
      },
      {
        "lineNumber": 648,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*export* *--directory* \"C:\\Users\\USER_NAME\\Desktop\\Horo\"`"
      },
      {
        "lineNumber": 649,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 650,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 651,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 652,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003d\u003d\u003d\u003d Import other calendar"
      },
      {
        "lineNumber": 653,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 654,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ".Import Command"
      },
      {
        "lineNumber": 655,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "image::ImportCommandScreenShot.png[]"
      },
      {
        "lineNumber": 656,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 657,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ".Imported File"
      },
      {
        "lineNumber": 658,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "image::ImportFileScreenShot.png[]"
      },
      {
        "lineNumber": 659,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 660,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "The `import` command imports an ICS file from the specified filepath."
      },
      {
        "lineNumber": 661,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 662,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Command Format: +"
      },
      {
        "lineNumber": 663,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*import* FILEPATH`"
      },
      {
        "lineNumber": 664,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 665,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Example: +"
      },
      {
        "lineNumber": 666,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*import* \"C:\\Users\\USER_NAME\\Desktop\\OtherCalendars\\Others.ics\"`"
      },
      {
        "lineNumber": 667,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 668,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 669,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 670,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003d\u003d\u003d Exiting the program"
      },
      {
        "lineNumber": 671,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 672,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "Exits the program."
      },
      {
        "lineNumber": 673,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 674,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "Command Format: +"
      },
      {
        "lineNumber": 675,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "`*exit*`"
      },
      {
        "lineNumber": 676,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 677,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 678,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 679,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d FAQ"
      },
      {
        "lineNumber": 680,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 681,
        "author": {
          "gitId": "-"
        },
        "content": "*Q*: How do I transfer my data to another Computer? +"
      },
      {
        "lineNumber": 682,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "*A*: Install the app on the other computer and overwrite the empty data file it creates with Horo\u0027s save file."
      },
      {
        "lineNumber": 683,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 684,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 685,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 686,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Command Summary"
      },
      {
        "lineNumber": 687,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 688,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "* *Help* : `*help*` +"
      },
      {
        "lineNumber": 689,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "* *Adding an Event* : `*add_event* DESCRIPTION START_DATE *--end* END_DATE *--remind* REMIND_DATE *--tag* TAG...` +"
      },
      {
        "lineNumber": 690,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "* *Deleting Events* : `*delete_event* INDEX... *--tag* TAG...` +"
      },
      {
        "lineNumber": 691,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "* *Editing Events* : `*edit_event* INDEX... *--description* DESCRIPTION *--start* START_DATE *--end* END_DATE *--remind* REMIND_DATE *--tag* TAG...` +"
      },
      {
        "lineNumber": 692,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "* *Adding a Task* : `*add_task* DESCRIPTION *--due* DUE_DATE *--tag* TAG...` +"
      },
      {
        "lineNumber": 693,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "* *Deleting Tasks* : `*delete_task* INDEX... *--tag* TAG...` +"
      },
      {
        "lineNumber": 694,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "* *Editing Tasks* : `*edit_task* INDEX... *--description* DESCRIPTION *--due* DUE_DATE *--tag* TAG...` +"
      },
      {
        "lineNumber": 695,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "* *Adding a Tag* : `*tag* INDEX... *--tag* TAG...` +"
      },
      {
        "lineNumber": 696,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "* *Removing a Tag* : `*remove_tag* INDEX... *--tag* TAG...` +"
      },
      {
        "lineNumber": 697,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "* *Find* : `*find* KEYWORD... *--tag* TAG` +"
      },
      {
        "lineNumber": 698,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "* *Calendar View* : `*calendar* *--date* MONTH_YEAR`"
      },
      {
        "lineNumber": 699,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "* *Day View for Timeline* : `*day* DATE`"
      },
      {
        "lineNumber": 700,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "* *Week View for Timeline* : `*week* DATE`"
      },
      {
        "lineNumber": 701,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "* *Month View for Timeline* : `*month* MONTH_YEAR`"
      },
      {
        "lineNumber": 702,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "* *List View* : `*list*`"
      },
      {
        "lineNumber": 703,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "* *Log View* : `*log*`"
      },
      {
        "lineNumber": 704,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "* *Undo* : `*undo*`"
      },
      {
        "lineNumber": 705,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "* *Redo* : `*redo*`"
      },
      {
        "lineNumber": 706,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "* *Switch notifications on* : `*notif_on*`"
      },
      {
        "lineNumber": 707,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "* *Switch notifications off* : `*notif_off*`"
      },
      {
        "lineNumber": 708,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "* *Export .ics File* : `*export* *--directory* DIRECTORY`"
      },
      {
        "lineNumber": 709,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "* *Import .ics File* : `*import* FILE_PATH`"
      },
      {
        "lineNumber": 710,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "* *Exiting the Program* : `*exit*`"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 159,
      "Kyzure": 124,
      "marcusteh1238": 6,
      "bruceskellator": 11,
      "WeomuCat": 309,
      "-": 101
    }
  },
  {
    "path": "docs/diagrams/IcsComponentDiagram.puml",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "@startuml"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "!include style.puml"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "skinparam arrowThickness 1.1"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "skinparam arrowColor LOGIC_COLOR_T4"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "skinparam classBackgroundColor LOGIC_COLOR"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "class IcsExporter"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "class IcsParser"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "class IcsConverter"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "class EventSource"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "class TaskSource"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "IcsExporter ..\u003e IcsConverter"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "IcsConverter ..\u003e EventSource"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "IcsConverter ..\u003e TaskSource"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "IcsParser ..\u003e EventSource"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "IcsParser ..\u003e TaskSource"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "@enduml"
      }
    ],
    "authorContributionMap": {
      "marcusteh1238": 18
    }
  },
  {
    "path": "docs/diagrams/NotificationCheckingLoopSequenceDiagram.puml",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "@startuml"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "!include style.puml"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "box Logic LOGIC_COLOR_T1"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "participant \":NotificationCheckingThread\" as NotificationCheckingThread LOGIC_COLOR"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "participant \":NotificationChecker\" as NotificationChecker LOGIC_COLOR"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "end box"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "box Ui UI_COLOR_T1"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "participant \"pn:PopupNotification\" as PopupNotification UI_COLOR"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "participant \":PopupListener\" as PopupListener UI_COLOR"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "participant \":SystemTrayCommunicator\" as SystemTrayCommunicator UI_COLOR"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "end box"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "[-\u003e NotificationCheckingThread : run()"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "loop infinitely"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    activate NotificationCheckingThread"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    NotificationCheckingThread -\u003e NotificationChecker : getListOfPopupNotifications()"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    activate NotificationChecker"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    create PopupNotification"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    NotificationChecker -\u003e PopupNotification"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    activate PopupNotification"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    PopupNotification --\u003e NotificationChecker : pn"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    deactivate PopupNotification"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    NotificationChecker --\u003e NotificationCheckingThread : pn"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    deactivate NotificationChecker"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    NotificationCheckingThread -\u003e PopupListener : notify(pn)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    activate PopupListener"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    PopupListener -\u003e SystemTrayCommunicator : postNewNotification(pn)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    activate SystemTrayCommunicator"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    SystemTrayCommunicator --\u003e PopupListener"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    deactivate SystemTrayCommunicator"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    PopupListener --\u003e NotificationCheckingThread"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    deactivate PopupListener"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    destroy PopupNotification"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    deactivate NotificationCheckingThread"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "end"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "@enduml"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 50
    }
  },
  {
    "path": "docs/diagrams/NotificationClassDiagram.puml",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "@startuml"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "!include style.puml"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "skinparam arrowThickness 1.1"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "skinparam arrowColor LOGIC_COLOR_T4"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "package Logic {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    Class NotificationManager LOGIC_COLOR"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    Class NotificationCheckingThread LOGIC_COLOR"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    Class NotificationChecker LOGIC_COLOR"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "package Ui {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    Class SystemTrayCommunicator UI_COLOR"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    Class PopupListener UI_COLOR"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    Class PopupNotification UI_COLOR"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    Class NotificationClickActionListener UI_COLOR"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "package Model{"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    Class HiddenModel #FFFFFF"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "Class HiddenOutside #FFFFFF"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "HiddenOutside .right.\u003e NotificationManager"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "NotificationManager -down-\u003e \"1\" NotificationCheckingThread : runs \u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "NotificationManager -right-\u003e \"1\" SystemTrayCommunicator : creates \u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "NotificationCheckingThread -down-\u003e \"1\" NotificationChecker"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "NotificationCheckingThread .right.\u003e PopupNotification"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "NotificationCheckingThread -right-\u003e PopupListener : notifies \u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "NotificationChecker .right.\u003e PopupNotification"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "NotificationChecker -down-\u003e Model"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "PopupListener -up-\u003e SystemTrayCommunicator : notifies \u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "PopupListener .down.\u003e PopupNotification"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "SystemTrayCommunicator -right-\u003e NotificationClickActionListener"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "@enduml"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 41
    }
  },
  {
    "path": "docs/diagrams/UiCalendarClassDiagram.puml",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "@startuml"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "!include style.puml"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "skinparam arrowThickness 1.1"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "skinparam arrowColor UI_COLOR_T4"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "skinparam classBackgroundColor UI_COLOR"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d Packages \u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package Ui \u003c\u003cRectangle\u003e\u003e {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027Class \"{abstract}\\nUiPart\" as UiPart"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Class \"{abstract}\\nCard\" as Card"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Class MainWindow"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Class CardHolder"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Class EventCard"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Class TaskCard"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Class UpcomingEventCard"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Class UpcomingTaskCard"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    package Calendar \u003c\u003cRectangle\u003e\u003e {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        Class \"{abstract}\\nTimelineView\" as TimelineView"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        Class CalendarPanel"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        Class TimelineDayView"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        Class TimelineWeekView"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        Class TimelineMonthView"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        Class CalendarScreen"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        Class CalendarGridDay"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        Class UpcomingView"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package Logic \u003c\u003cRectangle\u003e\u003e {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    Class UiManager"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package Model \u003c\u003cRectangle\u003e\u003e {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    Class EventSource"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    Class TaskSource"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    Interface ModelListsListener \u003c\u003cInterface\u003e\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Class HiddenOutside #FFFFFF"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "HiddenOutside .down.\u003e UiManager"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d UiManager \u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "UiManager *--\u003e MainWindow"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "UiManager ..|\u003e ModelListsListener"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d MainWindow \u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "MainWindow *-down--\u003e CalendarPanel"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d CalendarPanel \u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "CalendarPanel *-right--\u003e TimelineView"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "CalendarPanel *-left-\u003e CalendarScreen"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "CalendarPanel *-up--\u003e UpcomingView"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d CardHolder \u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "CardHolder *-down-\u003e Card"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d Card \u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d EventCard \u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "EventCard --|\u003e Card"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "EventCard *-up-\u003e EventSource"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d TaskCard \u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "TaskCard --|\u003e Card"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "TaskCard *-up-\u003e TaskSource"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d TimelineView \u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "TimelineView *-up--\u003e CardHolder"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d TimelineDayView \u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "TimelineDayView -up--|\u003e TimelineView"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d TimelineWeekView \u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "TimelineWeekView -up--|\u003e TimelineView"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d TimelineMonthView \u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "TimelineMonthView -up--|\u003e TimelineView"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d CalendarScreen \u003d\u003d\u003d\u003d\u0027"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "CalendarScreen *-down-\u003e CalendarGridDay"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d UpcomingView \u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "UpcomingView *-up-\u003e UpcomingEventCard"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "UpcomingView *-up-\u003e UpcomingTaskCard"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d UpcomingEventCard \u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "UpcomingEventCard *-up-\u003e EventSource"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d UpcomingTaskCard \u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "UpcomingTaskCard *-up-\u003e TaskSource"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "EventSource ..[hidden]down|\u003e TaskSource"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "UpcomingTaskCard ..[hidden]left|\u003e MainWindow"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "@enduml"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 96
    }
  },
  {
    "path": "docs/diagrams/UiClassDiagram.puml",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@startuml"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "!include style.puml"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "skinparam arrowThickness 1.1"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "skinparam arrowColor UI_COLOR_T4"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "skinparam classBackgroundColor UI_COLOR"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d Packages \u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "package UI \u003c\u003cRectangle\u003e\u003e {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "Interface Ui \u003c\u003cInterface\u003e\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "Class \"{abstract}\\nUiPart\" as UiPart"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "Class MainWindow"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "Class CommandBox"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Class CalendarPanel"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Class ListPanel"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Class LogPanel"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Class PopUpBox"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "package Logic \u003c\u003cRectangle\u003e\u003e {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    Class UiManager"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package List \u003c\u003cRectangle\u003e\u003e {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package Calendar \u003c\u003cRectangle\u003e\u003e {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package Log \u003c\u003cRectangle\u003e\u003e {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "Class HiddenOutside #FFFFFF"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "HiddenOutside .down.\u003e Ui"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d UiManager \u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "UiManager .left.|\u003e Ui"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "UiManager *-down-\u003e MainWindow"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d MainWindow \u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "MainWindow *-down-\u003e CommandBox"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "MainWindow *-down-\u003e ListPanel"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "MainWindow *-down-\u003e CalendarPanel"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "MainWindow *-down-\u003e LogPanel"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "MainWindow *-down-\u003e PopUpBox"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "MainWindow -|\u003e UiPart"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d CommandBox \u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "CommandBox -down-|\u003e UiPart"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d CalendarPanel \u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "CalendarPanel -down--|\u003e UiPart"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "CalendarPanel -down..\u003e Calendar"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d ListPanel \u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "ListPanel -down--|\u003e UiPart"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "ListPanel -down..\u003e List"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d LogPanel \u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "LogPanel -down--|\u003e UiPart"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "LogPanel -down..\u003e Log"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d PopUpBox \u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "PopUpBox -down--\u003e UiPart"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d Positioning \u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "MainWindow -[hidden]-|\u003e UiPart"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "UiManager -[hidden]-|\u003e MainWindow"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "@enduml"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 40,
      "-": 31
    }
  },
  {
    "path": "docs/diagrams/UiListClassDiagram.puml",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "@startuml"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "!include style.puml"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "skinparam arrowThickness 1.1"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "skinparam arrowColor UI_COLOR_T4"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "skinparam classBackgroundColor UI_COLOR"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d Packages \u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package Ui \u003c\u003cRectangle\u003e\u003e {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    Class MainWindow"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    Class EventCard"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    Class TaskCard"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    package List \u003c\u003cRectangle\u003e\u003e {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        Class ListPanel"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        Class EventListPanel"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        Class TaskListPanel"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package Logic \u003c\u003cRectangle\u003e\u003e {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    Class UiManager"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package Model \u003c\u003cRectangle\u003e\u003e {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    Class EventSource"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    Class TaskSource"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    Interface EventListListener \u003c\u003cInterface\u003e\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    Interface TaskListListener \u003c\u003cInterface\u003e\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Class HiddenOutside #FFFFFF"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "HiddenOutside .left\u003e UiManager"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d UiManager \u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "UiManager *--\u003e MainWindow"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "UiManager .up.|\u003e EventListListener"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "UiManager .up.|\u003e TaskListListener"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d MainWindow \u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "MainWindow -down-\u003e ListPanel"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d ListPanel \u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "ListPanel *-down-\u003e EventListPanel"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "ListPanel *-down-\u003e TaskListPanel"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d EventListPanel \u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "EventListPanel *-up--\u003e EventCard"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d TaskListPanel \u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "TaskListPanel *--\u003e TaskCard"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d EventCard \u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "EventCard *-up-\u003e EventSource"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d TaskCard \u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "TaskCard *-up-\u003e TaskSource"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "EventSource .[hidden]right.|\u003e TaskSource"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "EventListPanel .[hidden]down|\u003e TaskListPanel"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "TaskCard .[hidden]up|\u003e TaskSource"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "@enduml"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 61
    }
  },
  {
    "path": "docs/diagrams/UiLogClassDiagram.puml",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "@startuml"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "!include style.puml"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "skinparam arrowThickness 1.1"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "skinparam arrowColor UI_COLOR_T4"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "skinparam classBackgroundColor UI_COLOR"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d Packages \u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package UI \u003c\u003cRectangle\u003e\u003e {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Class MainWindow"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Class PopUpBox"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    package Log \u003c\u003cRectangle\u003e\u003e {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        Class LogPanel"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        Class LogBox"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package Logic \u003c\u003cRectangle\u003e\u003e {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    Class UiManager"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package Model \u003c\u003cRectangle\u003e\u003e {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    Interface UserOutputListener \u003c\u003cInterface\u003e\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "Class HiddenOutside #FFFFFF"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "HiddenOutside ..\u003e UiManager"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d UiManager\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "UiManager .left..|\u003e UserOutputListener"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "UiManager *--\u003e MainWindow"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d MainWindow \u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "MainWindow *-down--\u003e LogPanel"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "MainWindow .left.\u003e PopUpBox"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u0027\u003d\u003d\u003d\u003d LogPanel \u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "LogPanel *-right--\u003e LogBox"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "@enduml"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 39
    }
  },
  {
    "path": "docs/stylesheets/gh-pages.css",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "@import url(https://fonts.googleapis.com/css?family\u003dRoboto|Open+Sans);"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "@import \"asciidoctor.css\"; /* Default asciidoc style framework - important */"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "/* Custom block: details */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ".sidebarblock.details \u003e .content {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    border-left: .25rem solid rgba(0, 0, 0, 0.1);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ".sidebarblock.details \u003e .content {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    padding-left: .5rem"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ".sidebarblock.details {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    background-color: transparent;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    border: none;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    padding-bottom: 0;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    padding-top: 0;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "/* Overrides for asciidoctor.css */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "a {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    color: #0074c7;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "h1,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "#content h1 \u003e a.link,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "h2,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "h2 \u003e a.link,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "h3,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "h3 \u003e a.link,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "#toctitle,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "#toctitle \u003e a.link,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ".sidebarblock \u003e .content \u003e .title,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ".sidebarblock \u003e .content \u003e .title \u003e a.link,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "h4,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "h4 \u003e a.link,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "h5,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "h5 \u003e a.link,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "h6,"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "h6 \u003e a.link {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    color: #e46c0a;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ".subheader,"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ".admonitionblock td.content \u003e .title,"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ".audioblock \u003e .title,"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ".exampleblock \u003e .title,"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ".imageblock \u003e .title,"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ".listingblock \u003e .title,"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ".literalblock \u003e .title,"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ".stemblock \u003e .title,"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ".openblock \u003e .title,"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ".paragraph \u003e.title,"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ".quoteblock \u003e .title,"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "table.tableblock \u003e .title,"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ".verseblock \u003e .title,"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ".videoblock \u003e .title,"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ".dlist \u003e .title,"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ".olist \u003e .title,"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ".ulist \u003e .title,"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ".qlist \u003e .title,"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ".hdlist \u003e .title {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    color: rgb(197, 90, 17);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "@media screen {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    #footer {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        background-color: #f6f6f6;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        border-top: 1px #d2d2d2 solid;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        border-bottom: 1px #d2d2d2 solid;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        font-family: \"Open Sans\", \"DejaVu Sans\", sans-serif;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    #footer-text {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        color: #595959;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        line-height: 1;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "/* Utilities */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ".container {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    width: 100%;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    max-width: 62.5rem;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    margin-left: auto;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    margin-right: auto;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "/* Colors */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ".bg-light {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    background-color: #f8f9fa;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ".bg-lighter {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    background-color: #fbfbfb;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "/* Navbar */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ".navbar {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    display: flex;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    flex-wrap: nowrap;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    justify-content: center;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    font-family: \"Open Sans\", \"DejaVu Sans\", sans-serif;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    font-size: 1rem;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    padding: 0px 1rem;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": ".navbar-lg {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "    font-size: 1.3rem;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ".navbar-light {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "    border-bottom: 1px #d2d2d2 solid;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ".navbar a {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "    text-decoration: none;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": ".navbar-light a {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "    color: #595959;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": ".navbar-light a:hover,"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": ".navbar-light a:focus {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "    color: #000000;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": ".navbar a.active,"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": ".navbar a.active:hover,"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": ".navbar a.active:focus {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "    font-weight: bold;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": ".navbar-light a.active,"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": ".navbar-light a.active:hover,"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": ".navbar-light a.active:focus {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "    color: #000000;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": ".navbar-light .nav-link {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "    border-bottom: 2px transparent solid;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": ".navbar-light .nav-link.active {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "    border-bottom: 2px #e46c0a solid;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": ".navbar-lg .nav-link.active {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "    border-bottom: 0;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": ".navbar \u003e .container {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "    display: flex;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "    flex-wrap: wrap;"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "    justify-content: center;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": ".navbar-brand {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "    display: inline-block;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "    margin-right: 1rem;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "    padding: 0.8125rem 0rem;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "    padding-left: 0.9375rem;"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "    font-size: 1.25rem;"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": ".navbar-brand img {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "    height: 1.4rem;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "    margin: 0rem 0.4rem;"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "    padding: 0;"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "    vertical-align: middle;"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": ".navbar-lg .navbar-brand {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "    font-size: 1.7rem;"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": ".navbar-lg .navbar-brand img {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "    height: 2.3rem;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": ".navbar-nav {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "    display: flex;"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "    flex-wrap: wrap;"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "    flex-grow: 1;"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "    align-items: center;"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "    margin: 0px;"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "    padding: 0px;"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "    list-style: none;"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "    line-height: inherit;"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": ".nav-link {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "    display: block;"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "    margin: 0px;"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "    border: 0px;"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "    padding: 1rem 1rem;"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "/* Do not display site header on print mediums */"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "@media print {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "    #seedu-header {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "        display: none;"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "    #site-header {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "        display: none;"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 1,
      "-": 213
    }
  },
  {
    "path": "docs/team/chenggeng97.adoc",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d Ong Cheng Geng - Project Portfolio for Horo"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ":site-section: AboutUs"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ":imagesDir: ../images"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ":stylesDir: ../stylesheets"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "---"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d\u003d About the Project"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "For our Software Engineering Team Project, my team looked to enhance a basic Command Line Interface app. We decided to transform it into a Calendar and Scheduling application called Horo. Horo helps the user maintain a to-do list and to schedule their activities and is able to post reminders to their desktop."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "My role was to design and implement the Notification system of the application. Subsequent sections will go into greater detail with regards to my contributions, as well as the documentation I have added to User and Developer guides."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d\u003d Summary of Contributions"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "This section lists the code and documentation I contributed to the project."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d\u003d\u003d Enhancement Added: Notification System"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "[cols\u003d\"2,8\"]"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "|\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "|What it does  | The Notification System runs in parallel to the main thread in the app. Every minute, it checks whether the user should be reminded of any Event or Task, and posts a new notification if necessary."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "|Justification | The Notification System is a natural extension of an application meant for tracking deadlines and schedules. It serves to remind a forgetful or busy user of their commitments."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "|Highlights    | •\tAn initial design for the notification system involved running it not as a parallel thread, but as a separate background application. This would allow notifications to be posted even if the main app were closed. However, this design was eventually reworked.  Going forward with the original design would necessitate the development of a second application that the user would have to install in addition to Horo. This would have been at odds with module requirements and learning objectives."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                  {empty} +"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                  {empty} +"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                 •\tAn alternative design involved running instantiating the Notification System as a separate component to UI, Logic and Model. However, this design would have been at odds with OOP principles. The Notification System was thus further split into separate extensions of the Logic and UI packages."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "|\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d\u003d\u003d\u003d Code Contributed"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "|\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "| Functional Code | link:https://github.com/AY1920S1-CS2103T-F12-1/main/blob/master/src/main/java/seedu/address/logic/NotificationManager.java[1] link:https://github.com/AY1920S1-CS2103T-F12-1/main/blob/master/src/main/java/seedu/address/logic/notification/NotificationCheckingThread.java[2] link:https://github.com/AY1920S1-CS2103T-F12-1/main/blob/master/src/main/java/seedu/address/logic/notification/NotificationChecker.java[3] link:https://github.com/AY1920S1-CS2103T-F12-1/main/blob/master/src/main/java/seedu/address/ui/systemtray/SystemTrayCommunicator.java[4] link:https://github.com/AY1920S1-CS2103T-F12-1/main/blob/master/src/main/java/seedu/address/ui/systemtray/PopupNotification.java[5] link:https://github.com/AY1920S1-CS2103T-F12-1/main/blob/master/src/main/java/seedu/address/ui/systemtray/PopupListener.java[6] link:https://github.com/AY1920S1-CS2103T-F12-1/main/blob/master/src/main/java/seedu/address/ui/systemtray/NotificationClickActionListener.java[7]"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "| Test Code       | link:https://github.com/AY1920S1-CS2103T-F12-1/main/blob/master/src/test/java/seedu/address/model/tasks/TaskSourceTest.java[1] link:https://github.com/AY1920S1-CS2103T-F12-1/main/blob/master/src/test/java/seedu/address/model/tasks/TaskSourceBuilderTest.java[2]"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "|\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d\u003d\u003d Other Contributions"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "|\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "|Project Documentation | Reviewed pull requests  link:https://github.com/AY1920S1-CS2103T-F12-1/main/pull/78[#78] link:https://github.com/AY1920S1-CS2103T-F12-1/main/pull/95[#95] link:https://github.com/AY1920S1-CS2103T-F12-1/main/pull/107[#107]"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "|Documentation         | Edited the User Guide for better clarity and to fix grammatical mistakes link:https://github.com/AY1920S1-CS2103T-F12-1/main/pull/121[#121]"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "|\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d\u003d Contributions to the User Guide"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "The following section includes excerpts of my contribution to the Horo User Guide, explaining the Notification System and the notif_on and notif_off commands."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "// tag::ug[]"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d\u003d\u003d Notification System"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "Horo will post notifications to your system tray to remind you that an event is starting or that a task is due."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "Take note that Horo can only post reminders as long as the application is open. To tell if Horo is running, check that the appropriate icon appears in the system tray"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ".Horo tray icon"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "image::HoroIconScreenShot.png[]"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "Also take note that notifications are switched on by default upon launch. This status is not carried over between sessions. If you would like to switch notifications off, you would have to do so whenever you start Horo up."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "You can tell if notifications are switched on by mousing over the icon in the system tray."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ".Mousing over the Horo tray icon"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "image::IconMouseOverScreenShot.png[]"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d\u003d\u003d\u003d Notification Popups"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "When Horo posts a notification, it should appear at the bottom-right side of the screen, where the system tray should be."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ".A Popup Notification"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "image::PopUpScreenShot.png[]"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d\u003d\u003d\u003d Switch notifications on"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "The `notif_on` command switches notifications on. +"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "Format: +"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "*`notif_on`*"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "1. If you would like to switch notifications on, type the command *`notif_on`* into the command box and press kbd:[Enter] to execute it. +"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ".`notif_on` command in the Command Box"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "image::NotificationOnCommandBoxScreenShot.png[]"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "2. An in-app popup should appear, displaying “Notifications switched on”. The log view should also record this action. +"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ".Feedback for the `notif_on` command"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "image::NotificationOnFeedbackScreenShot.png[]"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "// end::ug[]"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d\u003d Contributions to the Developer Guide"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "The following section includes excerpts of my contributions to the Horo Developer Guide, explaining the class architecture and behaviour behind the Notification System."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "// tag::dg[]"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d\u003d\u003d Notification System"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d\u003d\u003d\u003d Class Architecture"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ".Class diagram for Notification System"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "image::NotificationClassDiagram.png[]"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "The Notification System is facilitated by the  `NotificationManager`, which is found in the Logic component. Other constituent classes of the Notification System can be found in the Logic and UI components, depending on their functionality. These classes and their functionalities are listed below:"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d *Logic Classes*"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "Logic classes are responsible for deciding if a notification should be posted. As with other components, their functionality is accessed through the `NotificationManager` class. The `NotificationManager` class maintains a reference to a `NotificationCheckingThread` as well as a `SystemTrayCommunicator`."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "The logic classes of the Notification System can be found under the `notification` package under the `Logic` component."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "- The `NotificationCheckingThread` is a daemon thread that runs in parallel with the main application. It checks for new notifications to post every minute."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "- The `NotificationChecker` is responsible for checking `Model` for any notifications that need to be posted."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d *UI Classes*"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "UI classes are responsible for displaying notifications to the user."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "The UI classes of the Notification System can be found under the `systemtray` package under the `ui` component."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "- The `PopupListener` class is the main channel of communication between the logic and UI classes. When a notification needs to be posted, it will relay the information from the logic to UI classes."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "- The `SystemTrayCommunicator` handles posting notifications and displaying the app\u0027s icon on the System Tray. It listens to the `NotificationCheckingThread` through a `PopupListener`."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "- The `PopupNotification` class carries the information that will be posted to a popup notification."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "- The `NotificationClickActionListener` is called when the user clicks on a popup notification."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d\u003d\u003d\u003d Class Activity"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "As with other Manager classes, an instance of the  `NotificationManager` is created upon the starting of MainApp. The NotificationManager proceeds to initialize and run a `NotificationCheckingThread`, as well as a `SystemTrayCommunicator`. Upon being started, the `NotificationCheckingThread` will enter a `notificationCheckingLoop` by calling its method of the same name."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "To give a better explanation of how the `NotificationCheckingThread` works, a single run of its loop is illustrated below:"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ".Sequence diagram for NotificationCheckingThread\u0027s main loop"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "image::NotificationCheckingLoopSequenceDiagram.png[]"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "Step 1. The `NotificationCheckingThread` calls the `NotificationChecker` to generate `PopupNotification`s through a call to `NotificationChecker#getListOfPopupNotifications()`"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "Step 2. For each `PopupNotification` generated by the NotificationChecker, a call to `PopupListener#notify()` is made."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "Step 3. This prompts the `SystemTrayCommunicator` to post a new notification."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "Step 4. The `NotificationCheckingThread` sleeps until the start of the next minute, found by the method `NotificationCheckingThread#findMillisecondsToNextMinute()`."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d\u003d\u003d\u003d Design Considerations"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d Aspect: How the Notification system should run"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "* **Alternative 1 (current choice):** Running the Notification system as a separate thread in the same application"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "** Pros: Easier to implement and test."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "** Cons: The user would have to leave the application on if they always wanted to be notified."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "* **Alternative 2:** Running the Notification system as a background application"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "** Pros: This would allow notifications to be posted to the user\u0027s desktop even if the Horo main app were not open."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "** Cons: This would require the creation of a separate application that the user would have to install on their computer. Because different Java applications are ran in different instances of Java Virtual Machines, this could vastly complicate implementation as the Notification System and the rest Horo would be unable to interact directly."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "Alternative 1 was eventually chosen as it was simpler to implement and test, and remain within the initial scope of Horo\u0027s development. The application can be potentially changed to use Alternative 2 in the future."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "// end::dg[]"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 146
    }
  },
  {
    "path": "docs/team/kyzure.adoc",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d Timothy Yu Zhiwen - Project Portfolio"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ":site-section: AboutUs"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ":imagesDir: ../images"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ":stylesDir: ../stylesheets"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "\u003d\u003d PROJECT: Horo"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "---"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Overview"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "Horo is a desktop Reminder application. It has a GUI but most of the user interactions happen using a CLI (Command Line Interface). It is a Java application *written in an OOP fashion*, developed and intended for Students requiring a place to consolidate their Events and Task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Summary of contributions"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "* *Major enhancement*: enhanced *UI* component."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "** What it does: allows the user to interact with the GUI together with CLI, showing the Events and Task to the user as well as outputting the log for what the user did."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "** Justification: This feature is what makes the product visually appealing for the user, making the Events and Tasks compact and concise for the user to see, as well as having a log for what the user previously did."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "** Highlights: This enhancement affects the current and future commands, as it requires several other components for it to show the result to the user. Future commands or addition to Events and Task requires changes to the existing UI, as the GUI and UI component will require further changes."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "** Credits: _[https://top.gg/bot/349920059549941761[Reminder Bot]]_"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "* *Minor enhancement*: _To be implemented_"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "* *Code contributed*: _To be implemented_"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "* *Other contributions*:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "_To be implemented_ +"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "** Project management:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "*** Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "** Enhancements to existing features:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "*** Updated the GUI color scheme (Pull requests https://github.com[#33], https://github.com[#34])"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "*** Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests https://github.com[#36], https://github.com[#38])"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "** Documentation:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "*** Did cosmetic tweaks to existing contents of the User Guide: https://github.com[#14]"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "** Community:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "*** PRs reviewed (with non-trivial review comments): https://github.com[#12], https://github.com[#32], https://github.com[#19], https://github.com[#42]"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "*** Contributed to forum discussions (examples:  https://github.com[1], https://github.com[2], https://github.com[3], https://github.com[4])"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "*** Reported bugs and suggestions for other teams in the class (examples:  https://github.com[1], https://github.com[2], https://github.com[3])"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "*** Some parts of the history feature I added was adopted by several other class mates (https://github.com[1], https://github.com[2])"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "** Tools:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "*** Integrated a third party library (Natty) to the project (https://github.com[#42])"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "*** Integrated a new Github plugin (CircleCI) to the team repo"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Contributions to the User Guide"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "|_Given below are sections I contributed to the User Guide. They showcase my ability to write documentation targeting end-users._"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "_To be implemented_"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "include::../UserGuide.adoc[tag\u003ddelete]"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "include::../UserGuide.adoc[tag\u003ddataencryption]"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Contributions to the Developer Guide"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "|_Given below are sections I contributed to the Developer Guide. They showcase my ability to write technical documentation and the technical depth of my contributions to the project._"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "_To be implemented_"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "include::../DeveloperGuide.adoc[tag\u003dundoredo]"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "include::../DeveloperGuide.adoc[tag\u003ddataencryption]"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d PROJECT: PowerPointLabs"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "---"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "_{Optionally, you may include other projects in your portfolio.}_"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 17,
      "-": 60
    }
  },
  {
    "path": "docs/team/marcusteh1238.adoc",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "\u003d Teh Hao Rui Marcus - Project Portfolio"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ":site-section: AboutUs"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ":imagesDir: ../images"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ":stylesDir: ../stylesheets"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ":repoURL: https://github.com/AY1920S1-CS2103T-F12-1/main"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "\u003d\u003d Project Horo - Overview"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "Our group of 5 software engineering students were tasked to enhance or morph"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "a basic command line interface Address Book application for our Software Engineering project."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "We chose to morph it into a personal time management helper app called **Horo**."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "**Horo** enables users to keep tracks of their upcoming tasks and events,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "reminding users when a deadline or event draws near,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "and users can also share their data through iCalendar (ICS) files."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "This is how the main page of our app looks like:"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ".Horo\u0027s Graphical User Interface (GUI)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "image::HoroMainViewDescription.png[]"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "n this project, my role was to design and implement the code for the export and import commands."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "The following sections illustrate these enhancements in more detail,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "including some of the relevant documentation I have added"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "to the User Guide and Developer Guide in relation to these enhancements."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "Note the following symbols and formatting used in this document:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "[cols\u003d\"2,5\"]"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "|`export`  | A grey highlight (called a mark-up) indicates that"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "this is a command that can be inputted into the command line and executed by the application.|"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "\u003d\u003d Summary of Contributions"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "This section summarizes my contributions to the team project, including coding and documentation."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "---"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "_Enhancement added:_ The ability to import and export *Horo*’s Event and Task data through ICS files."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "- How to use it:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    * The command `export` allows users to export *Horo*’s data into an ICS file."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        This file will be in the same directory as the *Horo* app."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    * The user may use the command `import \u003cfilepath\u003e`, where `\u003cfilepath\u003e` is the path to the ICS file,"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        or any other *Horo* save file, in order to import its data to the current app."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "- Justification:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    * If users want to share their event details with their friends,"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        they can easily do so by exporting *Horo*’s save data, sharing the ICS file,"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        and having their friends import the save data from the file."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "- Highlights:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    * As ICS is a widely used format for exporting and importing calendars into various calendar apps,"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        our app can also import and export data to and from other calendar apps."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    * Although there are existing libraries for ICS files, my code is not dependant on any of them,"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        as I did not want to introduce bugs into our app, thus I wrote a custom parser that better suited our needs."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "_Code Contributed:_ I mainly contributed code to the “ics” package of our repository."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    Click the link link:{repoURL}/blob/master/src/main/java/seedu/address/ics/IcsParser.java[here] for a sample of my code!"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "_Other contributions:_"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "- Project Management"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    * Managed the release of v1.1."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    * Came up with the code integration workflow."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "- Documentation:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    * Added information about the ICS package to the User Guide and Developer Guide. (Pull Requests"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        link:{repoURL}/pull/11[#11], link:{repoURL}/pull/98[#98])"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "- Team:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    * Reviewed Pull Requests with non-trivial review comments:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        link:{repoURL}/pull/51[#51], link:{repoURL}/pull/55[#55]"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    * Reported bugs found on Horo in the Discord server."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "- Tools:"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    * Integrated Travis Continuous Integration to the team repository."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    * Integrated a Github webhook to the team’s Discord server."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "\u003d\u003d Contributions to the User Guide"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "As part of the requirements, we had to update the original User Guide with instructions"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "regarding how to use our new features."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "This section contains an excerpt from the User Guide showing how to use the export command."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "---"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "\u003d\u003d\u003d iCalendar (ICS) Integration"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "Horo stores data in the ICS format. Files saved in this format have the extension `.ics`."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "This allows for data to be imported to and exported from other calendar applications that also use the `.ics` format."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "\u003d\u003d\u003d\u003d Export current calendar : `export --directory [\"DIRECTORY\"]`"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ".Export Command"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "image::ExportCommandScreenShot.png[]"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ".Exported File"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "image::ExportFileScreenShot.png[]"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "The `export` command exports your current calendar as an ICS file to the specified directory."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "If no directory is specified, the file will be created in the same directory as Horo."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "Format: +"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "`export` +"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "`export --directory [\"DIRECTORY\"]`"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "Example: +"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "`export --directory \"C:\\Users\\USER_NAME\\Desktop\\Horo\"`"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "\u003d\u003d Contributions to the Developer Guide"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "The following section shows my additions to the Horo Developer Guide for the import and export features."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "---"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "\u003d\u003d\u003d Ics Component"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "*API* : link:{repoURL}/src/main/java/seedu/address/ics/IcsParser.java[`IcsParser.java`]"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "The ICS component is made up of two parts: ICS file importer, and ICS file exporter."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "The file importer makes use of a custom parser that converts files with the `.ics` file extension"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "to `EventSource` objects in Horo."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "The file exporter takes the `EventSource` objects stored in the `Model` singleton object and"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "generates ICS String representations of them. Check out the"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "link:https://en.wikipedia.org/wiki/ICalendar[ICalendar Wiki Page] for more information on the specifications."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "* Can export Horo\u0027s save data as a file"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "The `ICS` Component,with a `.ics` extension."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "* Can import other Horo\u0027s save data from a `.ics` file."
      }
    ],
    "authorContributionMap": {
      "marcusteh1238": 130
    }
  },
  {
    "path": "src/main/java/seedu/address/MainApp.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.Version;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.CommandManager;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.logic.NotificationManager;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.StorageManager;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.UiManager;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.UndoRedoManager;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.logic.commands.AddEventCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import seedu.address.logic.commands.AddTaskCommand;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.logic.commands.CalendarViewCommand;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.logic.commands.DayViewCommand;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.logic.commands.DeleteEventCommand;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.DeleteTaskCommand;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.logic.commands.EditEventCommand;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.EditTaskCommand;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.ExitCommand;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.logic.commands.ExportIcsCommand;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.logic.commands.ImportIcsCommand;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.logic.commands.ListViewCommand;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.logic.commands.LogViewCommand;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.logic.commands.MonthViewCommand;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.logic.commands.NotificationOffCommand;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.logic.commands.NotificationOnCommand;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.logic.commands.RedoCommand;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.logic.commands.UndoCommand;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.logic.commands.WeekViewCommand;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": " * Runs the application."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "public class MainApp extends Application {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final Version VERSION \u003d new Version(0, 6, 0, true);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final String COMMAND_ADD_EVENT \u003d \"add_event\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final String COMMAND_DELETE_EVENT \u003d \"delete_event\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final String COMMAND_EDIT_EVENT \u003d \"edit_event\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    private static final String COMMAND_ADD_TASK \u003d \"add_task\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final String COMMAND_DELETE_TASK \u003d \"delete_task\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final String COMMAND_EDIT_TASK \u003d \"edit_task\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    private static final String COMMAND_UNDO \u003d \"undo\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    private static final String COMMAND_REDO \u003d \"redo\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    private static final String COMMAND_IMPORT_ICS \u003d \"import\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    private static final String COMMAND_EXPORT_ICS \u003d \"export\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    private static final String COMMAND_NOTIFICATION_OFF \u003d \"notif_off\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    private static final String COMMAND_NOTIFICATION_ON \u003d \"notif_on\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private static final String COMMAND_DAY_VIEW \u003d \"day\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private static final String COMMAND_WEEK_VIEW \u003d \"week\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private static final String COMMAND_MONTH_VIEW \u003d \"month\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private static final String COMMAND_CALENDAR_VIEW \u003d \"calendar\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private static final String COMMAND_LIST_VIEW \u003d \"list\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private static final String COMMAND_LOG_VIEW \u003d \"log\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final String COMMAND_EXIT \u003d \"exit\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private CommandManager commandManager;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private ModelManager modelManager;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private NotificationManager notificationManager;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private UiManager uiManager;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private StorageManager storageManager;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private UndoRedoManager undoRedoManager;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    public void init() throws Exception {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        super.init();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        commandManager \u003d new CommandManager();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        modelManager \u003d new ModelManager();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        notificationManager \u003d new NotificationManager(modelManager);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        storageManager \u003d new StorageManager();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        storageManager.setEventsFile(Paths.get(\"data\", \"events.json\"));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        storageManager.setTasksFile(Paths.get(\"data\", \"tasks.json\"));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        uiManager \u003d new UiManager();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        undoRedoManager \u003d new UndoRedoManager();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        registerCommands();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        addListeners();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     * Registers each of the commands to the CommandManager."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private void registerCommands() {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        commandManager.addCommand(COMMAND_ADD_EVENT, () -\u003e AddEventCommand.newBuilder(modelManager));"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        commandManager.addCommand(COMMAND_DELETE_EVENT, () -\u003e DeleteEventCommand.newBuilder(modelManager));"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        commandManager.addCommand(COMMAND_EDIT_EVENT, () -\u003e EditEventCommand.newBuilder(modelManager));"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        commandManager.addCommand(COMMAND_ADD_TASK, () -\u003e AddTaskCommand.newBuilder(modelManager));"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        commandManager.addCommand(COMMAND_DELETE_TASK, () -\u003e DeleteTaskCommand.newBuilder(modelManager));"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        commandManager.addCommand(COMMAND_EDIT_TASK, () -\u003e EditTaskCommand.newBuilder(modelManager));"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        commandManager.addCommand(COMMAND_UNDO, () -\u003e UndoCommand.newBuilder(undoRedoManager));"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        commandManager.addCommand(COMMAND_REDO, () -\u003e RedoCommand.newBuilder(undoRedoManager));"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        commandManager.addCommand(COMMAND_IMPORT_ICS, () -\u003e ImportIcsCommand.newBuilder(modelManager));"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        commandManager.addCommand(COMMAND_EXPORT_ICS, () -\u003e ExportIcsCommand.newBuilder(modelManager));"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        commandManager.addCommand(COMMAND_NOTIFICATION_OFF, () -\u003e"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            NotificationOffCommand.newBuilder(notificationManager));"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        commandManager.addCommand(COMMAND_NOTIFICATION_ON, () -\u003e"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            NotificationOnCommand.newBuilder(notificationManager));"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        commandManager.addCommand(COMMAND_DAY_VIEW, () -\u003e DayViewCommand.newBuilder(uiManager));"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        commandManager.addCommand(COMMAND_WEEK_VIEW, () -\u003e WeekViewCommand.newBuilder(uiManager));"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        commandManager.addCommand(COMMAND_MONTH_VIEW, () -\u003e MonthViewCommand.newBuilder(uiManager));"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        commandManager.addCommand(COMMAND_CALENDAR_VIEW, () -\u003e CalendarViewCommand.newBuilder(uiManager));"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        commandManager.addCommand(COMMAND_LIST_VIEW, () -\u003e ListViewCommand.newBuilder(uiManager));"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        commandManager.addCommand(COMMAND_LOG_VIEW, () -\u003e LogViewCommand.newBuilder(uiManager));"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        commandManager.addCommand(COMMAND_EXIT, ExitCommand::newBuilder);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     * Registers each listener to the appropriate manager."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private void addListeners() {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        commandManager.addUserOutputListener(uiManager);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        modelManager.addEventListListener(uiManager);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        modelManager.addTaskListListener(uiManager);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        modelManager.addModelListListener(uiManager);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        modelManager.addModelListListener(storageManager);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        modelManager.addModelListListener(undoRedoManager);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        storageManager.addModelResetListener(modelManager);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        uiManager.addCommandInputListener(commandManager);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        undoRedoManager.addModelResetListener(modelManager);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "    public void start(Stage primaryStage) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.info(\"Starting AddressBook \" + MainApp.VERSION);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        // Start UiManager"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        uiManager.start(primaryStage);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        // Load Model from storage"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        storageManager.load();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        // Start UndoRedoManager"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        undoRedoManager.start(modelManager.getModelList());"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "    public void stop() {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 8,
      "Kyzure": 29,
      "marcusteh1238": 4,
      "bruceskellator": 7,
      "WeomuCat": 63,
      "-": 44
    }
  },
  {
    "path": "src/main/java/seedu/address/commons/core/GuiSettings.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.commons.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.awt.Point;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": " * A Serializable class that contains the GUI settings."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " * Guarantees: immutable."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class GuiSettings implements Serializable {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final double DEFAULT_HEIGHT \u003d 720;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final double DEFAULT_WIDTH \u003d 1280;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    private final double windowWidth;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    private final double windowHeight;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Point windowCoordinates;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    public GuiSettings() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        windowWidth \u003d DEFAULT_WIDTH;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        windowHeight \u003d DEFAULT_HEIGHT;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        windowCoordinates \u003d null; // null represent no coordinates"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        this.windowWidth \u003d windowWidth;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        this.windowHeight \u003d windowHeight;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        windowCoordinates \u003d new Point(xPosition, yPosition);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    public double getWindowWidth() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        return windowWidth;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    public double getWindowHeight() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        return windowHeight;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    public Point getWindowCoordinates() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!(other instanceof GuiSettings)) { //this handles null as well."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        GuiSettings o \u003d (GuiSettings) other;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        return windowWidth \u003d\u003d o.windowWidth"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 windowHeight \u003d\u003d o.windowHeight"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        return Objects.hash(windowWidth, windowHeight, windowCoordinates);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        sb.append(\"Width : \" + windowWidth + \"\\n\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        sb.append(\"Height : \" + windowHeight + \"\\n\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        sb.append(\"Position : \" + windowCoordinates);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 2,
      "-": 71
    }
  },
  {
    "path": "src/main/java/seedu/address/commons/core/Messages.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.commons.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": " * Container for user visible messages."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class Messages {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command!\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format!\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static final String MESSAGE_REQUIRED_COMMAND_ARGUMENT \u003d \"Argument \u0027%s\u0027 is required!\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static final String MESSAGE_INVALID_DATE_TIME \u003d \"Invalid date time! Please enter in \u0027%s\u0027 format.\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public static final String MESSAGE_INVALID_CALENDAR_DATE \u003d \"Invalid calendar date! Please enter in \u0027%s\u0027 format.\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static final String MESSAGE_INVALID_INDEX \u003d \"Invalid index! Please enter an integer.\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static final String MESSAGE_INVALID_EVENT_INDEX \u003d \"Invalid index! Event with index \u0027%s\u0027 does not exist.\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public static final String MESSAGE_INVALID_TASK_INDEX \u003d \"Invalid index! Task with index \u0027%s\u0027 does not exist.\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static final String MESSAGE_NOTHING_TO_UNDO \u003d \"There is nothing to undo!\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static final String MESSAGE_NOTHING_TO_REDO \u003d \"There is nothing to redo!\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static final String MESSAGE_ADD_EVENT_SUCCESS \u003d \"New event added: %s\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static final String MESSAGE_DELETE_EVENT_SUCCESS \u003d \"Events deleted: %s\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static final String MESSAGE_EDIT_EVENT_SUCCESS \u003d \"Events edited: %s\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public static final String MESSAGE_ADD_TASK_SUCCESS \u003d \"New task added: %s\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public static final String MESSAGE_DELETE_TASK_SUCCESS \u003d \"Tasks deleted: %s\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public static final String MESSAGE_EDIT_TASK_SUCCESS \u003d \"Tasks edited: %s\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static final String MESSAGE_UNDO_SUCCESS \u003d \"Previous command has been undone!\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static final String MESSAGE_REDO_SUCCESS \u003d \"Previous undone command has been redone!\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    public static final String MESSAGE_IMPORT_ICS_SUCCESS \u003d \"ICS file at %s has been successfully imported!\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    public static final String MESSAGE_EXPORT_ICS_SUCCESS \u003d \"Horo has successfully been exported at the filepath: %s\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static final String MESSAGE_EXIT_SUCCESS \u003d \"Exiting Horo!\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public static final String MESSAGE_DAY_VIEW_SUCCESS \u003d \"Changed Day to: %s\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public static final String MESSAGE_WEEK_VIEW_SUCCESS \u003d \"Changed Week to week of: %s\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public static final String MESSAGE_MONTH_VIEW_SUCCESS \u003d \"Changed Month to: %s\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public static final String MESSAGE_CALENDAR_VIEW_SUCCESS \u003d \"Switched to Calendar View.\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public static final String MESSAGE_LIST_VIEW_SUCCESS \u003d \"Switched to List View.\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public static final String MESSAGE_LOG_VIEW_SUCCESS \u003d \"Switched to Log View\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static final String MESSAGE_DELETE_EVENT_EMPTY \u003d \"Please fill in at least INDEXES or TAGS.\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static final String MESSAGE_DELETE_EVENT_FAILURE \u003d \"No matching events.\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static final String MESSAGE_DELETE_TASK_EMPTY \u003d \"Please fill in at least INDEXES or TAGS.\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static final String MESSAGE_DELETE_TASK_FAILURE \u003d \"No matching tasks.\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public static final String MESSAGE_NOTIFICATION_OFF \u003d \"Notifications have been turned off.\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public static final String MESSAGE_NOTIFICATION_ON \u003d \"Notifications have been turned on.\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 3,
      "Kyzure": 8,
      "marcusteh1238": 2,
      "bruceskellator": 4,
      "WeomuCat": 21,
      "-": 9
    }
  },
  {
    "path": "src/main/java/seedu/address/ics/IcsConverter.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "package seedu.address.ics;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import java.time.Instant;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import seedu.address.model.DateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import seedu.address.model.events.EventSource;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import seedu.address.model.tasks.TaskSource;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": " * This is the class responsible for converting Events and Tasks into their relevant ICS strings."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "public class IcsConverter {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * Converts an EventSource object into its String representation in the Ics file format."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * Its details and start time will be saved in this String representation."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * @param event The EventSource object to be converted to the Ics file format."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * @return The String representation of the EventSource in the Ics file format."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    public static String convertEvent(EventSource event) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        StringBuilder icsStringBuilder \u003d new StringBuilder(\"BEGIN:VEVENT\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        String uid \u003d generateUid();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        String dtStamp \u003d DateTime.now().toIcsString();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        String start \u003d event.getStartDateTime().toIcsString();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        icsStringBuilder"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                .append(\"\\n\").append(\"UID:\").append(uid)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                .append(\"\\n\").append(\"DTSTAMP:\").append(dtStamp)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                .append(\"\\n\").append(\"DTSTART:\").append(start)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                .append(\"\\n\").append(\"SUMMARY:\").append(event.getDescription());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        if (event.getEndDateTime() !\u003d null) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            String end \u003d event.getEndDateTime().toIcsString();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            icsStringBuilder"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                    .append(\"\\n\").append(\"DTEND:\").append(end);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        icsStringBuilder.append(\"\\n\").append(\"END:VEVENT\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        return icsStringBuilder.toString();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * Converts a TaskSource object into its String representation in the Ics file format."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * Its details and due date will be saved in this String representation."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * @param task The TaskSource object to be converted to the Ics file format."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * @return The String representation of the TaskSource in the Ics file format."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    public static String convertTask(TaskSource task) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        StringBuilder icsStringBuilder \u003d new StringBuilder(\"BEGIN:VTODO\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        String uid \u003d generateUid();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        String dtStamp \u003d DateTime.now().toIcsString();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        icsStringBuilder"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                .append(\"\\n\").append(\"UID:\").append(uid)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                .append(\"\\n\").append(\"DTSTAMP:\").append(dtStamp)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .append(\"\\n\").append(\"SUMMARY:\").append(task.getDescription());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        if (task.getDueDate() !\u003d null) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            icsStringBuilder.append(\"\\n\").append(\"DUE:\").append(task.getDueDate().toIcsString());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        icsStringBuilder.append(\"\\n\").append(\"END:VTODO\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        return icsStringBuilder.toString();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * Generates a unique UID that complies with section RFC5545 of the iCalendar specification."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * This is achieved by using the Instant of the function call."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * @return A UID String."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    public static String generateUid() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        Instant currentInstant \u003d Instant.now();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        return currentInstant + \"@Horo\";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcusteh1238": 71,
      "WeomuCat": 5
    }
  },
  {
    "path": "src/main/java/seedu/address/ics/IcsException.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.ics;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Exception is created within the IcsParser class when something wrong happens while an ICS file is being imported."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class IcsException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public IcsException(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 10
    }
  },
  {
    "path": "src/main/java/seedu/address/ics/IcsExporter.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "package seedu.address.ics;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import static seedu.address.commons.util.FileUtil.createIfMissing;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import static seedu.address.commons.util.FileUtil.writeToFile;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.DateTime;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import seedu.address.model.events.EventSource;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import seedu.address.model.tasks.TaskSource;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": " * Class responsible for exporting Horo\u0027s tasks and events into an .ics file."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "public class IcsExporter {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    private static final String EXPORT_ERROR_MESSAGE \u003d \"Error occurred while exporting file!\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    private static final String PROD_ID \u003d \"-//Horo//Exported Calendar// v1.0//EN\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    private static final String CALENDAR_VERSION \u003d \"2.0\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    private ModelManager model;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    public IcsExporter(ModelManager model) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        this.model \u003d model;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * Saves the events in an ics file, whose location is specified in the parameter."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * @param filepathString the path of where the file should be made."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * @throws IOException if the file or directory cannot be created."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    public void export(String filepathString) throws IcsException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            Path filepath \u003d Path.of(filepathString);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            createIfMissing(filepath);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            writeToFile(filepath, generateIcsFileContent());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            throw new IcsException(EXPORT_ERROR_MESSAGE);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * Generates the contents in the .ics file from the event list."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * @return The .ics file content to be exported."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    private String generateIcsFileContent() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        List\u003cEventSource\u003e eventList \u003d model.getEventList();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        List\u003cTaskSource\u003e taskList \u003d model.getTaskList();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        requireNonNull(eventList);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        requireNonNull(taskList);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        StringBuilder stringBuilder \u003d new StringBuilder(\"BEGIN:VCALENDAR\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        stringBuilder"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                .append(\"\\n\").append(\"VERSION:\").append(CALENDAR_VERSION)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                .append(\"\\n\").append(\"PRODID:\").append(PROD_ID);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        for (EventSource eventSource : eventList) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            String icsEventString \u003d IcsConverter.convertEvent(eventSource);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            stringBuilder.append(\"\\n\").append(icsEventString);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        for (TaskSource taskSource : taskList) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            String icsEventString \u003d IcsConverter.convertTask(taskSource);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            stringBuilder.append(\"\\n\").append(icsEventString);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        stringBuilder.append(\"\\n\").append(\"END:VCALENDAR\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        return stringBuilder.toString();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    public static String getExportFileName() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        String timestamp \u003d DateTime.now().toIcsString();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        return \"Horo_export_\" + timestamp + \".ics\";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 2,
      "marcusteh1238": 73,
      "WeomuCat": 2
    }
  },
  {
    "path": "src/main/java/seedu/address/ics/IcsParser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.ics;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import java.time.Duration;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import java.time.ZoneId;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import seedu.address.logic.parser.DateTimeParser;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.model.DateTime;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.events.EventSource;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import seedu.address.model.tasks.TaskSource;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/***"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Parses an ICS file to allow importing into Horo."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class IcsParser {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final String FILE_DOES_NOT_EXIST \u003d \"Sorry, the file path you\u0027ve specified is invalid!\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final String FILE_CANNOT_BE_READ \u003d \"Sorry, the file specified cannot be read!\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final String FILE_CANNOT_BE_FOUND \u003d \"Sorry, the file specified cannot be found!\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final String INVALID_FILE_EXTENSION \u003d \"The file specified is not an ICS file!\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final String FILE_IS_CORRUPTED \u003d \"The ICS file is corrupted!\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    private static final String TIMESTAMP_IS_INVALID \u003d \"The timestamp provided is invalid!\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * This enum represents the different types of objects the IcsParser could be parsing at any given point in time."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    private enum Parsing { TASK, EVENT }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private File icsFile;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private IcsParser(String path) throws IcsException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.icsFile \u003d getIcsFile(path);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static IcsParser getParser(String path) throws IcsException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return new IcsParser(path);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private File getIcsFile(String path) throws IcsException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        File file \u003d new File(path);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        if (!file.exists()) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            throw new IcsException(FILE_DOES_NOT_EXIST);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        } else if (!file.canRead()) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            throw new IcsException(FILE_CANNOT_BE_READ);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        } else if (!file.toString().endsWith(\".ics\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            throw new IcsException(INVALID_FILE_EXTENSION);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return file;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Parses the file provided in the file path and returns an ArrayList of EventSources."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @return An ArrayList of EventSources from the file."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @throws IcsException Thrown if the file cannot be found or read,"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * is not a proper Ics file, or if a description for an event in the file is empty."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    public EventSource[] parseEvents() throws IcsException {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        String fileContent \u003d getFileContent();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        return getEventsFromFile(fileContent);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * Parses the file provided in the file path and returns an ArrayList of TaskSources."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * @return An ArrayList of TaskSources from the file."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * @throws IcsException Thrown if the file cannot be found or read,"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * is not a proper Ics file, or if a description for an event in the file is empty."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    public TaskSource[] parseTasks() throws IcsException {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String fileContent \u003d getFileContent();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        return getTasksFromFile(fileContent);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Obtains the file content of the ics file specified in the filepath."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @return A single String of the whole file."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @throws IcsException Thrown if the file cannot be found or read."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private String getFileContent() throws IcsException {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            BufferedReader br \u003d new BufferedReader(new FileReader(icsFile));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            StringBuilder sb \u003d new StringBuilder(\"\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            boolean first \u003d true;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            while (br.ready()) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                String line \u003d br.readLine();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                if (first) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    sb.append(line);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    first \u003d false;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    sb.append(\"\\n\").append(line);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            return sb.toString();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            throw new IcsException(FILE_CANNOT_BE_FOUND);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            throw new IcsException(FILE_CANNOT_BE_READ);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * Parses the Ics file for its Events only and returns an array of EventSource objects."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @param fileContent The contents of the Ics file."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @return An ArrayList of EventSources provided by the Ics file."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @throws IcsException If the file is not a proper Ics file, or if a description for an event is empty."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    public EventSource[] getEventsFromFile(String fileContent) throws IcsException {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        ArrayList\u003cEventSource\u003e events \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        Pattern pattern \u003d Pattern.compile(\"BEGIN:VEVENT(.*?)END:VEVENT\", Pattern.DOTALL);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        Matcher matcher \u003d pattern.matcher(fileContent);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        int count \u003d matcher.groupCount();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        while (matcher.find()) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            String icsString \u003d matcher.group(1);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            EventSource newEvent \u003d parseSingleEvent(icsString);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            events.add(newEvent);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        return eventSourceArray(events);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * Parses the Ics file for its Tasks only and returns an array of TaskSource objects."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * @param fileContent The contents of the Ics file."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * @return An ArrayList of TaskSources provided by the Ics file."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * @throws IcsException If the file is not a proper Ics file, or if a description for a task is empty."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     */"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    public TaskSource[] getTasksFromFile(String fileContent) throws IcsException {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        ArrayList\u003cTaskSource\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        Pattern pattern \u003d Pattern.compile(\"BEGIN:VTODO(.*?)END:VTODO\", Pattern.DOTALL);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        Matcher matcher \u003d pattern.matcher(fileContent);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        int count \u003d matcher.groupCount();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        while (matcher.find()) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            String icsString \u003d matcher.group(1);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            TaskSource newTask \u003d parseSingleTask(icsString);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            tasks.add(newTask);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        return taskSourceArray(tasks);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * Converts an ArrayList of EventSource objects into an array."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * @param events the ArrayList of EventSource objects."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * @return An array of EventSource objects."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     */"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    private EventSource[] eventSourceArray(ArrayList\u003cEventSource\u003e events) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        int size \u003d events.size();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        EventSource[] array \u003d new EventSource[size];"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        for (int i \u003d 0; i \u003c size; i++) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            array[i] \u003d events.get(i);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        return array;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * Converts an ArrayList of TaskSource objects into an array."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * @param tasks the ArrayList of EventSource objects."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * @return An array of TaskSource objects."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     */"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    private TaskSource[] taskSourceArray(ArrayList\u003cTaskSource\u003e tasks) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        int size \u003d tasks.size();"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        TaskSource[] array \u003d new TaskSource[size];"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        for (int i \u003d 0; i \u003c size; i++) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            array[i] \u003d tasks.get(i);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        return array;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Creates an EventSource object from the data provided in the ICS File."
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Currently it will only parse the Start time and Description of the ICS VEvent."
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @param segment A String that represents the Event object in the ICS File."
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @return an EventSource object representing the data provided."
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @throws IcsException Exception thrown when there was an issue while making the EventSource object."
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public EventSource parseSingleEvent(String segment) throws IcsException {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String[] lines \u003d segment.split(\"\\\\r?\\\\n\");"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String description \u003d \"\";"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        DateTime eventStart \u003d null;"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        DateTime eventEnd \u003d null;"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        for (String line : lines) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            if (line.startsWith(\"DESCRIPTION:\")) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                description \u003d line.replaceFirst(\"DESCRIPTION:\", \"\");"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                if (description.equals(\"\")) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                    description \u003d \"\u003cempty\u003e\";"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            } else if (line.startsWith(\"DTSTART:\")) {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                String timestamp \u003d line.replaceFirst(\"DTSTART:\", \"\");"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                eventStart \u003d timestamp.equals(\"\")"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                        ? DateTime.now()"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                        : parseTimeStamp(timestamp);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            } else if (line.startsWith(\"DTEND:\")) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                String timestamp \u003d line.replaceFirst(\"DTEND:\", \"\");"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                eventEnd \u003d parseTimeStamp(timestamp);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            } else if (line.equals(\"END:VCALENDAR\") \u0026\u0026 !line.equals(lines[lines.length - 1])) {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                throw new IcsException(FILE_IS_CORRUPTED);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return EventSource.newBuilder(description, eventStart)"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .build();"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * Creates an TaskSource object from the data provided in the ICS File."
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * @param segment A String that represents the Task object in the ICS File."
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * @return a TaskSource object representing the data provided."
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * @throws IcsException Exception thrown when there was an issue while making the TaskSource object."
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     */"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    public TaskSource parseSingleTask(String segment) throws IcsException {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        String[] lines \u003d segment.split(\"\\\\r?\\\\n\");"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        String description \u003d \"\";"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        DateTime taskStart \u003d null;"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        DateTime due \u003d null;"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        Duration duration \u003d null;"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        for (String line : lines) {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            if (line.startsWith(\"SUMMARY:\")) {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                description \u003d line.replaceFirst(\"SUMMARY:\", \"\");"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                if (description.equals(\"\")) {"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                    description \u003d \"\u003cempty\u003e\";"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            } else if (line.startsWith(\"DUE:\")) {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                String timestamp \u003d line.replaceFirst(\"DUE:\", \"\");"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                due \u003d timestamp.equals(\"\")"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                        ? DateTime.now()"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                        : parseTimeStamp(timestamp);"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            } else if (line.startsWith(\"DURATION:\")) {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                String durationString \u003d line.replaceFirst(\"DURATION:\", \"\");"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                    duration \u003d Duration.parse(durationString);"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                    throw new IcsException(FILE_IS_CORRUPTED);"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                }"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            } else if (line.startsWith(\"DTSTART:\")) {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                String startString \u003d line.replaceFirst(\"DURATION:\", \"\");"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                taskStart \u003d startString.equals(\"\")"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                        ? DateTime.now()"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                        : parseTimeStamp(startString);"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            }"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        }"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        if (description.equals(\"\")) {"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            throw new IcsException(FILE_IS_CORRUPTED);"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        }"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        if (due \u003d\u003d null \u0026\u0026 !(duration \u003d\u003d null || taskStart \u003d\u003d null)) {"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            due \u003d taskStart.addDuration(duration);"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        }"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        return due !\u003d null"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                ? TaskSource.newBuilder(description).setDueDate(due).build()"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                : TaskSource.newBuilder(description).build();"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * Converts the timestamp from the format given in the ICS file to a DateTime object."
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * @param icsTimeStamp A timestamp in the default ICS file specification format."
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * @return A DateTime object representing the timestamp."
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * @throws IcsException Thrown when the timestamp provided is invalid."
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     */"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    public static DateTime parseTimeStamp(String icsTimeStamp) throws IcsException {"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            DateTimeParser dateTimeParser \u003d"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                    new DateTimeParser(DateTimeFormatter.ofPattern(\"yyyyMMdd\u0027T\u0027HHmmss\u0027Z\u0027\")"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "                            .withZone(ZoneId.of(\"GMT\")));"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            return dateTimeParser.parse(icsTimeStamp);"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            throw new IcsException(TIMESTAMP_IS_INVALID);"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        }"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 1,
      "marcusteh1238": 150,
      "WeomuCat": 125
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/CommandManager.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.function.Supplier;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.CommandBuilder;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.listeners.CommandInputListener;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.parser.CommandKeywordParser;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.parser.CommandParser;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.ui.ColorTheme;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.ui.UserOutput;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.ui.listeners.UserOutputListener;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents a class that invokes commands based on command input it receives from a Ui."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents the invoker class in https://en.wikipedia.org/wiki/Command_pattern."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class CommandManager implements CommandInputListener {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final Logger logger \u003d LogsCenter.getLogger(CommandManager.class);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final CommandKeywordParser keywordParser;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final CommandParser commandParser;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final List\u003cUserOutputListener\u003e userOutputListeners;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public CommandManager() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.keywordParser \u003d new CommandKeywordParser();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.commandParser \u003d new CommandParser(this.keywordParser);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.userOutputListeners \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Adds a command to be tracked by CommandManager."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @param keyword the command keyword"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @param builder the supplier to invoke"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public void addCommand(String keyword, Supplier\u003cCommandBuilder\u003e builder) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.keywordParser.addCommand(keyword, builder);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public void addUserOutputListener(UserOutputListener listener) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.userOutputListeners.add(listener);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public void onCommandInput(String input) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            Command command \u003d this.commandParser.parse(input);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            UserOutput output \u003d command.execute();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            userOutputListeners.forEach(l -\u003e l.onUserOutput(output, ColorTheme.SUCCESS));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        } catch (CommandException | ParseException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            logger.info(\"Invalid command: \" + input);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            userOutputListeners.forEach(l -\u003e l.onUserOutput(new UserOutput(e.getMessage()), ColorTheme.FAILURE));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 61
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/NotificationManager.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "package seedu.address.logic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.logic.notification.NotificationChecker;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.logic.notification.NotificationCheckingThread;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.ui.systemtray.PopupListener;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.ui.systemtray.SystemTrayCommunicator;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": " * A class that manages the multi-threading operations necessary for posting notifications."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "public class NotificationManager {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    private NotificationCheckingThread notificationCheckingThread;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    private SystemTrayCommunicator systemTrayCommunicator;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public NotificationManager(ModelManager modelManager) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        NotificationChecker notificationChecker \u003d new NotificationChecker(modelManager);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        notificationCheckingThread \u003d new NotificationCheckingThread(notificationChecker);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        systemTrayCommunicator \u003d new SystemTrayCommunicator();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        notificationCheckingThread.addPopupListener(new PopupListener(systemTrayCommunicator));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        notificationCheckingThread.setDaemon(true);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        notificationCheckingThread.start();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     * Switches off notifications."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public void switchOffNotifications() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        notificationCheckingThread.switchOffNotifications();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        systemTrayCommunicator.switchOffNotifications();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     * Switches on notifications."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public void switchOnNotifications() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        notificationCheckingThread.switchOnNotifications();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        systemTrayCommunicator.switchOnNotifications();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 41
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/StorageManager.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import com.fasterxml.jackson.core.type.TypeReference;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import com.fasterxml.jackson.databind.ObjectMapper;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import com.fasterxml.jackson.databind.SerializationFeature;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.storage.exceptions.StorageIoException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.ModelLists;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.events.EventSource;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.events.EventSourceBuilder;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.listeners.ModelListListener;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.listeners.ModelResetListener;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.tasks.TaskSource;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.tasks.TaskSourceBuilder;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Manages saving and loading (to local storage) of the Model in Horo."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class StorageManager implements ModelListListener {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final ObjectMapper mapper;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final List\u003cModelResetListener\u003e modelResetListeners;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private Path eventsFile;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private Path tasksFile;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public StorageManager() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.mapper \u003d new ObjectMapper()"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .enable(SerializationFeature.INDENT_OUTPUT);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.modelResetListeners \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public void addModelResetListener(ModelResetListener listener) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.modelResetListeners.add(listener);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public void setEventsFile(Path eventsFile) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.eventsFile \u003d eventsFile;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public void setTasksFile(Path tasksFile) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.tasksFile \u003d tasksFile;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Load Model from local storage."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public void load() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            List\u003cEventSourceBuilder\u003e eventBuilders;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            if (this.eventsFile \u003d\u003d null || Files.notExists(this.eventsFile)) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                eventBuilders \u003d List.of();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                eventBuilders \u003d this.mapper.readValue(this.eventsFile.toFile(),"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    new TypeReference\u003cList\u003cEventSourceBuilder\u003e\u003e() {});"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            List\u003cTaskSourceBuilder\u003e taskBuilders;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            if (this.tasksFile \u003d\u003d null || Files.notExists(this.tasksFile)) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                taskBuilders \u003d List.of();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                taskBuilders \u003d this.mapper.readValue(this.tasksFile.toFile(),"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    new TypeReference\u003cList\u003cTaskSourceBuilder\u003e\u003e() {});"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            this.modelResetListeners.forEach(listener -\u003e {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                // Create events and tasks from builders."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                List\u003cEventSource\u003e events \u003d eventBuilders.stream()"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    .map(EventSourceBuilder::build)"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    .collect(Collectors.toList());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                List\u003cTaskSource\u003e tasks \u003d taskBuilders.stream()"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    .map(TaskSourceBuilder::build)"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    .collect(Collectors.toList());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                listener.onModelReset(new ModelLists(events, tasks), this);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            });"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public void onModelListChange(ModelLists lists) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            Files.createDirectories(this.eventsFile.getParent());"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            Files.createDirectories(this.tasksFile.getParent());"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            if (this.eventsFile !\u003d null) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                this.mapper.writeValue(this.eventsFile.toFile(), lists.getEvents());"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            if (this.tasksFile !\u003d null) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                this.mapper.writeValue(this.tasksFile.toFile(), lists.getTasks());"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            throw new StorageIoException();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 107
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/UiManager.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.Alert;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.Alert.AlertType;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.MainApp;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.util.StringUtil;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.listeners.CommandInputListener;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.CalendarDate;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.ModelLists;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.events.EventDateComparator;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.events.EventSource;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.listeners.EventListListener;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.listeners.ModelListListener;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import seedu.address.model.listeners.TaskListListener;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.tasks.TaskDateComparator;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import seedu.address.model.tasks.TaskSource;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.ColorTheme;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.ui.MainWindow;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.ui.Ui;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.ui.UserOutput;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.ui.listeners.UserOutputListener;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": " * The manager of the UI component."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Responsible for creating and destroying the graphical ui."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "public class UiManager implements Ui, UserOutputListener, EventListListener, TaskListListener, ModelListListener {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String ICON_APPLICATION \u003d \"/images/address_book_32.png\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    private MainWindow mainWindow;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private List\u003cCommandInputListener\u003e uiListeners;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public UiManager() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.uiListeners \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    public void start(Stage primaryStage) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.info(\"Starting UI...\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        //Set the application icon."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        primaryStage.getIcons().add(getImage(ICON_APPLICATION));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            mainWindow \u003d new MainWindow(primaryStage, commandInput -\u003e {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                this.uiListeners.forEach(listener -\u003e listener.onCommandInput(commandInput));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            });"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "            mainWindow.show(); //This should be called before creating other UI parts"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "            mainWindow.fillInnerParts();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (Throwable e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.severe(StringUtil.getDetails(e));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public void addCommandInputListener(CommandInputListener listener) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.uiListeners.add(listener);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    private Image getImage(String imagePath) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        return new Image(MainApp.class.getResourceAsStream(imagePath));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "     * Shows an alert dialog on {@code owner} with the given parameters."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "     * This method only returns after the user has closed the alert dialog."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "                                               String contentText) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        final Alert alert \u003d new Alert(type);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        alert.initOwner(owner);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        alert.setTitle(title);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        alert.setHeaderText(headerText);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        alert.setContentText(contentText);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        alert.showAndWait();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "     * Shows an error alert dialog with {@code title} and error message, {@code e},"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "     * and exits the application after the user has closed the alert dialog."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        Platform.exit();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        System.exit(1);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public void viewDay(CalendarDate calendarDate) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        mainWindow.viewDay(calendarDate);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public void viewWeek(CalendarDate calendarDate) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        mainWindow.viewWeek(calendarDate);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public void viewMonth(CalendarDate calendarDate) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        mainWindow.viewMonth(calendarDate);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public void viewList() {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        mainWindow.viewList();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public void viewLog() {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        mainWindow.viewLog();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Changes the view of the UI to the CalendarPanel to the given date."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param calendarDate The given date."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public void viewCalendar(CalendarDate calendarDate) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        if (calendarDate \u003d\u003d null) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            mainWindow.viewCalendar();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            mainWindow.changeCalendarScreenDate(calendarDate);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Returns a copy of the event list sorted by start date."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param events The given event list."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @return A copy of the event list sorted by date."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private List\u003cEventSource\u003e sortDateEventList(List\u003cEventSource\u003e events) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        List\u003cEventSource\u003e sortedDateEventList \u003d new ArrayList\u003c\u003e(events);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        sortedDateEventList.sort(new EventDateComparator());"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return sortedDateEventList;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Returns a HashMap based on the front index and back index of the event and sorted events."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param events The unsorted event list."
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param sortedEvents The sorted event list."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @return Returns a HashMap based on the front index and back index of the event and sorted events."
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private HashMap\u003cInteger, Integer\u003e addEventIndex(List\u003cEventSource\u003e events, List\u003cEventSource\u003e sortedEvents) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        int frontIndex \u003d 0;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        int backIndex \u003d 0;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        HashMap\u003cInteger, Integer\u003e eventHash \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        for (EventSource sortedEvent : sortedEvents) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            for (EventSource event : events) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                if (event.equals(sortedEvent)) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    eventHash.put(frontIndex, backIndex);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    backIndex \u003d 0;"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                backIndex++;"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            frontIndex++;"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return eventHash;"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Returns a copy of the task list sorted by due date."
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param tasks The given task list."
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @return A copy of the task list sorted by due date."
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private List\u003cTaskSource\u003e sortDateTaskList(List\u003cTaskSource\u003e tasks) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        List\u003cTaskSource\u003e sortedDateTaskList \u003d new ArrayList\u003c\u003e(tasks);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        sortedDateTaskList.sort(new TaskDateComparator());"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return sortedDateTaskList;"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Returns a HashMap based on the front index and back index of the task and sorted tasks."
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param tasks The unsorted task list."
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param sortedTasks The sorted task list."
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @return Returns a HashMap based on the front index and back index of the task and sorted tasks."
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private HashMap\u003cInteger, Integer\u003e addTaskIndex(List\u003cTaskSource\u003e tasks, List\u003cTaskSource\u003e sortedTasks) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        int frontIndex \u003d 0;"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        int backIndex \u003d 0;"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        HashMap\u003cInteger, Integer\u003e taskHash \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        for (TaskSource sortedTask : sortedTasks) {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            for (TaskSource task : tasks) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                if (task.equals(sortedTask)) {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    taskHash.put(frontIndex, backIndex);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    backIndex \u003d 0;"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                backIndex++;"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            frontIndex++;"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return taskHash;"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public void onEventListChange(List\u003cEventSource\u003e events) {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        List\u003cEventSource\u003e sortedDateEventList \u003d sortDateEventList(events);"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.mainWindow.onEventListChange(sortedDateEventList, addEventIndex(events, sortedDateEventList));"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public void onTaskListChange(List\u003cTaskSource\u003e tasks) {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        List\u003cTaskSource\u003e sortedDateTaskList \u003d sortDateTaskList(tasks);"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.mainWindow.onTaskListChange(sortedDateTaskList, addTaskIndex(tasks, sortedDateTaskList));"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public void onModelListChange(ModelLists lists) {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.mainWindow.onModelListChange(sortDateEventList(lists.getEvents()), sortDateTaskList(lists.getTasks()));"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public void onUserOutput(UserOutput output, ColorTheme result) {"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.mainWindow.onUserOutput(output, result);"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 127,
      "bruceskellator": 3,
      "WeomuCat": 31,
      "-": 77
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/UndoRedoManager.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_NOTHING_TO_REDO;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_NOTHING_TO_UNDO;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.ModelLists;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.listeners.ModelListListener;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.listeners.ModelResetListener;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": " * UndoRedoManager contains all EventList states"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": " * at different points of time in its eventListStateList"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": " * as well as a currentStateIndex that stores the index of the"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": " * current EventList state in the list."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": " * It also contains a mainEventList that represents the current EventList"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": " * state. Duplicates of this mainEventList are stored in the eventListStateList."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": " * Whenever an undo or redo command is executed, mainEventList restores itself to a"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": " * past/future state by copying the data in its duplicate over to itself."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class UndoRedoManager implements ModelListListener {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Deep-copies of Model are stored to this list"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     * every time a state-changing command is executed."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     * This allows mainEventList to retrieve its data"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     * from any of these past or future states when an"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     * undo or redo command is called."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final List\u003cModelLists\u003e undoStateList;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final List\u003cModelResetListener\u003e modelResetListeners;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private boolean start;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private int undoIndex;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public UndoRedoManager() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        undoStateList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        modelResetListeners \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public void addModelResetListener(ModelResetListener listener) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.modelResetListeners.add(listener);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * This method should be called first."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Initializes the UndoRedoManager with an initial ModelList."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Allows UndoRedoManager to start listening to ModelList changes."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @param modelLists the starting ModelList"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public void start(ModelLists modelLists) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        undoStateList.add(modelLists);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        start \u003d true;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        undoIndex \u003d 0;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Restores the previous ModelList from UndoRedoManager."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public void undo() throws CommandException {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        if (!canUndo()) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            throw new CommandException(MESSAGE_NOTHING_TO_UNDO);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        undoIndex--;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        notifyModelResetListeners();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Restores the previously undone ModelList from UndoRedoManager."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public void redo() throws CommandException {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        if (!canRedo()) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            throw new CommandException(MESSAGE_NOTHING_TO_REDO);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        undoIndex++;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        notifyModelResetListeners();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     * Clears all future event list states in eventListStateList beyond the index given by currentStateIndex"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private void clearFutureHistory() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        List\u003cModelLists\u003e subList \u003d new ArrayList\u003c\u003e(undoStateList.subList(0, undoIndex + 1));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        undoStateList.clear();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        undoStateList.addAll(subList);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     * Returns true if there are previous event list states to restore, and false otherwise."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     *"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     * @return boolean"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    private boolean canUndo() {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return undoIndex \u003e 0;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     * Returns true if there are future event list states to reset to, and false otherwise."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     *"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     * @return boolean"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    private boolean canRedo() {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return undoIndex \u003c undoStateList.size() - 1;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private ModelLists getCurrentState() {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return undoStateList.get(undoIndex);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Notify all UndoRedoListeners that undo/redo was called, and provide them with the current UndoState."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private void notifyModelResetListeners() {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        ModelLists state \u003d getCurrentState();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        for (ModelResetListener listener : modelResetListeners) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            listener.onModelReset(state, this);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Appends the current ModelLists, containing the current events and tasks, to undoStateList."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public void onModelListChange(ModelLists lists) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        if (start) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            clearFutureHistory();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            assert undoIndex \u003e\u003d undoStateList.size() - 1"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                : \"Pointer always points to end of list during commit; All future states must have been discarded.\";"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            undoStateList.add(lists);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            undoIndex++;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return undoStateList.size() + \" states in history\";"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        if (other \u003d\u003d this) { // short circuit if same object"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            if (!(other instanceof UndoRedoManager)) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            UndoRedoManager otherHistory \u003d ((UndoRedoManager) other);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            if (undoIndex !\u003d otherHistory.undoIndex"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    || undoStateList.size() !\u003d otherHistory.undoStateList.size()) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            for (int i \u003d 0; i \u003c undoStateList.size(); i++) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                if (!undoStateList.get(i).equals(otherHistory.undoStateList.get(i))) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                    return false;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bruceskellator": 89,
      "WeomuCat": 74
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/AddEventCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_ADD_EVENT_SUCCESS;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.model.DateTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.events.EventSource;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.ui.UserOutput;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents a Command which adds an EventSource to the Model."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class AddEventCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final ModelManager model;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final EventSource event;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    AddEventCommand(AddEventCommandBuilder builder) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String description \u003d Objects.requireNonNull(builder.getDescription());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        DateTime start \u003d Objects.requireNonNull(builder.getStart());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.model \u003d builder.getModel();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.event \u003d EventSource.newBuilder(description, start)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .setEnd(builder.getEnd())"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            .setRemind(builder.getRemind())"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .setTags(builder.getTags())"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .build();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static CommandBuilder newBuilder(ModelManager model) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return new AddEventCommandBuilder(model).init();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public UserOutput execute() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        model.addEvents(this.event);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return new UserOutput(String.format(MESSAGE_ADD_EVENT_SUCCESS, this.event.getDescription()));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 3,
      "WeomuCat": 38
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/AddEventCommandBuilder.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.DateTimeArgument;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.StringArgument;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.StringVariableArguments;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.list.ArgumentList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.list.OptionalArgumentList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.list.RequiredArgumentList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.model.DateTime;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents a CommandBuilder responsible for creating {@link AddEventCommand}."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "class AddEventCommandBuilder extends CommandBuilder {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static final String OPTION_END_DATE_TIME \u003d \"--end\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static final String OPTION_REMIND_DATE_TIME \u003d \"--remind\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static final String OPTION_TAGS \u003d \"--tag\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final String ARGUMENT_DESCRIPTION \u003d \"DESCRIPTION\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final String ARGUMENT_START_DATE_TIME \u003d \"START_DATE_TIME\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final String ARGUMENT_END_DATE_TIME \u003d \"END_DATE_TIME\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final String ARGUMENT_REMIND_DATE_TIME \u003d \"REMIND_DATE_TIME\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final String ARGUMENT_TAGS \u003d \"TAGS\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final ModelManager model;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private DateTime start;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private DateTime end;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private DateTime remind;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private List\u003cString\u003e tags;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    AddEventCommandBuilder(ModelManager model) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.model \u003d model;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    RequiredArgumentList defineCommandArguments() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return ArgumentList.required()"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .addArgument(StringArgument.newBuilder(ARGUMENT_DESCRIPTION, v -\u003e this.description \u003d v))"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .addArgument(DateTimeArgument.newBuilder(ARGUMENT_START_DATE_TIME, v -\u003e this.start \u003d v));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    Map\u003cString, OptionalArgumentList\u003e defineCommandOptions() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return Map.of("
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            OPTION_END_DATE_TIME, ArgumentList.optional()"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .addArgument(DateTimeArgument.newBuilder(ARGUMENT_END_DATE_TIME, v -\u003e this.end \u003d v)),"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            OPTION_REMIND_DATE_TIME, ArgumentList.optional()"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .addArgument(DateTimeArgument.newBuilder(ARGUMENT_REMIND_DATE_TIME, v -\u003e this.remind \u003d v)),"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            OPTION_TAGS, ArgumentList.optional()"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .setVariableArguments(StringVariableArguments.newBuilder(ARGUMENT_TAGS, v -\u003e this.tags \u003d v))"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        );"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    ModelManager getModel() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return model;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    String getDescription() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    DateTime getStart() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this.start;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    DateTime getEnd() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return end;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    DateTime getRemind() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        return this.remind;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    List\u003cString\u003e getTags() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return tags;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    Command commandBuild() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return new AddEventCommand(this);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 5,
      "WeomuCat": 84
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/AddTaskCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_ADD_TASK_SUCCESS;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import seedu.address.model.tasks.TaskSource;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import seedu.address.ui.UserOutput;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": " * Represents a Command which adds a TaskSource to the Model."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "public class AddTaskCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    private final ModelManager model;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    private final TaskSource task;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    AddTaskCommand(AddTaskCommandBuilder builder) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        String description \u003d Objects.requireNonNull(builder.getDescription());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        this.model \u003d builder.getModel();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.task \u003d TaskSource.newBuilder(description)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .setDueDate(builder.getDueDate())"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .setTags(builder.getTags())"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            .build();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public static CommandBuilder newBuilder(ModelManager model) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        return new AddTaskCommandBuilder(model).init();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public UserOutput execute() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        model.addTasks(this.task);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        return new UserOutput(String.format(MESSAGE_ADD_TASK_SUCCESS, this.task.getDescription()));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bruceskellator": 35,
      "WeomuCat": 3
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/AddTaskCommandBuilder.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import seedu.address.logic.commands.arguments.DateTimeArgument;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import seedu.address.logic.commands.arguments.StringArgument;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import seedu.address.logic.commands.arguments.StringVariableArguments;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.list.ArgumentList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.list.OptionalArgumentList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.list.RequiredArgumentList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import seedu.address.model.DateTime;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": " * Represents a CommandBuilder responsible for creating {@link AddTaskCommand}."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "class AddTaskCommandBuilder extends CommandBuilder {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public static final String OPTION_TAGS \u003d \"--tag\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static final String OPTION_DUE_DATE_TIME \u003d \"--due\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    private static final String ARGUMENT_DESCRIPTION \u003d \"DESCRIPTION\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final String ARGUMENT_DUE_DATE_TIME \u003d \"DUE_DATE_TIME\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    private static final String ARGUMENT_TAGS \u003d \"TAGS\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    private final ModelManager model;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private DateTime due;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private List\u003cString\u003e tags;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    AddTaskCommandBuilder(ModelManager model) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        this.model \u003d model;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    RequiredArgumentList defineCommandArguments() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return ArgumentList.required()"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .addArgument(StringArgument.newBuilder(ARGUMENT_DESCRIPTION, v -\u003e this.description \u003d v));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    Map\u003cString, OptionalArgumentList\u003e defineCommandOptions() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        return Map.of("
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            OPTION_TAGS, ArgumentList.optional()"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .setVariableArguments(StringVariableArguments.newBuilder(ARGUMENT_TAGS, v -\u003e this.tags \u003d v)),"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            OPTION_DUE_DATE_TIME, ArgumentList.optional()"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .addArgument(DateTimeArgument.newBuilder(ARGUMENT_DUE_DATE_TIME, v -\u003e this.due \u003d v))"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        );"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    ModelManager getModel() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this.model;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    String getDescription() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    DateTime getDueDate() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this.due;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    List\u003cString\u003e getTags() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this.tags;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    Command commandBuild() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        return new AddTaskCommand(this);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bruceskellator": 49,
      "WeomuCat": 24
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/CalendarViewCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_CALENDAR_VIEW_SUCCESS;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.logic.UiManager;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.CalendarDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.UserOutput;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * Represents a Command which adds an EventSource to the Model."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "public class CalendarViewCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private final UiManager uiManager;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private final CalendarDate calendarDate;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    CalendarViewCommand(CalendarViewCommandBuilder builder) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.uiManager \u003d Objects.requireNonNull(builder.getUiManager());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.calendarDate \u003d builder.getCalendarDate();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public static CommandBuilder newBuilder(UiManager uiManager) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return new CalendarViewCommandBuilder(uiManager).init();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public UserOutput execute() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        uiManager.viewCalendar(this.calendarDate);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return new UserOutput(String.format(MESSAGE_CALENDAR_VIEW_SUCCESS));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 33
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/CalendarViewCommandBuilder.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.logic.UiManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.logic.commands.arguments.MonthYearArgument;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.logic.commands.arguments.list.ArgumentList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.logic.commands.arguments.list.OptionalArgumentList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.logic.commands.arguments.list.RequiredArgumentList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.CalendarDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * Represents a CommandBuilder responsible for creating {@link  CalendarViewCommand}."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "class CalendarViewCommandBuilder extends CommandBuilder {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public static final String OPTION_CALENDAR_SCREEN_DATE \u003d \"--date\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private static final String ARGUMENT_CALENDAR_SCREEN_DATE \u003d \"CALENDAR_MONTH_YEAR\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private UiManager uiManager;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private CalendarDate calendarDate;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    CalendarViewCommandBuilder(UiManager uiManager) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.uiManager \u003d uiManager;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    RequiredArgumentList defineCommandArguments() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    // TODO: Currently has a bug when typing \"calendar\" only. Either add new command or fix this."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    Map\u003cString, OptionalArgumentList\u003e defineCommandOptions() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return Map.of("
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                OPTION_CALENDAR_SCREEN_DATE, ArgumentList.optional()"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        .addArgument(MonthYearArgument.newBuilder("
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                ARGUMENT_CALENDAR_SCREEN_DATE, v -\u003e this.calendarDate \u003d v))"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        );"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    UiManager getUiManager() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return uiManager;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    CalendarDate getCalendarDate() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return this.calendarDate;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    Command commandBuild() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return new CalendarViewCommand(this);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 55
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/Command.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.ui.UserOutput;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents a command with hidden internal logic and the ability to be executed."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "     * Executes the command and returns the result message."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return feedback message of the operation result for display"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws CommandException If an error occurs during command execution."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public abstract UserOutput execute() throws CommandException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 2,
      "-": 16
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/CommandBuilder.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.list.ArgumentList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.list.OptionalArgumentList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.list.RequiredArgumentList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.exceptions.ArgumentException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents an object which can build commands."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Responsible for giving the correct user input to the correct {@link ArgumentList}."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public abstract class CommandBuilder {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    // Context is the current ArgumentList to add arguments to."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private ArgumentList context;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    // Represents the command arguments in a Command."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private ArgumentList commandArguments;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    // Represents the command options in a Command."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    // Key: option keyword, Value: option arguments"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private Map\u003cString, ArgumentList\u003e commandOptions;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * This method must be called first."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    CommandBuilder init() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        RequiredArgumentList arguments \u003d this.defineCommandArguments();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        Map\u003cString, OptionalArgumentList\u003e options \u003d this.defineCommandOptions();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        // Set null values to blank values."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        if (arguments \u003d\u003d null) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            arguments \u003d ArgumentList.required();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        if (options \u003d\u003d null) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            options \u003d Map.of();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        // Build OptionBuilders"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.commandArguments \u003d arguments.build();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.commandOptions \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        for (Map.Entry\u003cString, OptionalArgumentList\u003e entry : options.entrySet()) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            String keyword \u003d entry.getKey();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            OptionalArgumentList option \u003d entry.getValue();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            this.commandOptions.put(keyword, option.build());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        // Set the initial context."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.context \u003d this.commandArguments;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Accepts a sentence from user input tokens."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * A sentence can either be an option or an argument."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @param sentence a sentence from user input"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public CommandBuilder acceptSentence(String sentence) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        if (this.commandOptions.containsKey(sentence)) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            // Sets the context."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            this.context \u003d this.commandOptions.get(sentence);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            this.context.setRequired();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            // Adds an argument to the context."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            this.context.acceptArgument(sentence);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Builds all arguments and returns a Command."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     *"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @return the built Command"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @throws ArgumentException if any argument is required but null"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @throws ParseException    if any argument is required but null"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public Command build() throws ArgumentException, ParseException {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.commandArguments.build();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        for (ArgumentList option : this.commandOptions.values()) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            option.build();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this.commandBuild();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    abstract RequiredArgumentList defineCommandArguments();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    abstract Map\u003cString, OptionalArgumentList\u003e defineCommandOptions();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    abstract Command commandBuild();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 96
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/DayViewCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_DAY_VIEW_SUCCESS;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.logic.UiManager;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.CalendarDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.UserOutput;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * Represents a Command which adds an EventSource to the Model."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "public class DayViewCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private final CalendarDate calendarDate;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private final UiManager uiManager;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    DayViewCommand(DayViewCommandBuilder builder) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        calendarDate \u003d Objects.requireNonNull(builder.getStart());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        uiManager \u003d Objects.requireNonNull(builder.getUiManager());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public static CommandBuilder newBuilder(UiManager uiManager) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return new DayViewCommandBuilder(uiManager).init();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public UserOutput execute() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        uiManager.viewDay(calendarDate);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return new UserOutput(String.format(MESSAGE_DAY_VIEW_SUCCESS, calendarDate.toString()));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 33
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/DayViewCommandBuilder.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.logic.UiManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.logic.commands.arguments.DayMonthYearArgument;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.list.ArgumentList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.list.OptionalArgumentList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.list.RequiredArgumentList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.CalendarDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * Represents a CommandBuilder responsible for creating {@link AddEventCommand}."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "class DayViewCommandBuilder extends CommandBuilder {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final String ARGUMENT_START_DATE_TIME \u003d \"DATE\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private CalendarDate start;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private UiManager uiManager;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    DayViewCommandBuilder(UiManager uiManager) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.uiManager \u003d uiManager;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    RequiredArgumentList defineCommandArguments() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return ArgumentList.required()"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            .addArgument(DayMonthYearArgument.newBuilder(ARGUMENT_START_DATE_TIME, o -\u003e this.start \u003d o));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    Map\u003cString, OptionalArgumentList\u003e defineCommandOptions() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    UiManager getUiManager() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return uiManager;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    CalendarDate getStart() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this.start;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    Command commandBuild() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return new DayViewCommand(this);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 40,
      "WeomuCat": 9
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/DeleteEventCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_DELETE_EVENT_EMPTY;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_DELETE_EVENT_FAILURE;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_DELETE_EVENT_SUCCESS;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_EVENT_INDEX;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.events.EventSource;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.ui.UserOutput;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents a Command that deletes EventSources from the Model."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class DeleteEventCommand extends Command {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final ModelManager model;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final List\u003cInteger\u003e indexes;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final List\u003cString\u003e tags;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    DeleteEventCommand(DeleteEventCommandBuilder builder) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.model \u003d builder.getModel();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.indexes \u003d builder.getIndexes();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.tags \u003d builder.getTags();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static CommandBuilder newBuilder(ModelManager model) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return new DeleteEventCommandBuilder(model).init();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public UserOutput execute() throws CommandException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        List\u003cEventSource\u003e list \u003d model.getEventList();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        List\u003cEventSource\u003e toDelete \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        if (this.indexes.isEmpty()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            if (this.tags.isEmpty()) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                throw new CommandException(MESSAGE_DELETE_EVENT_EMPTY);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            // Indexes empty but tags is not empty:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            // Delete all events with matching tags."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            for (EventSource event : list) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                Set\u003cString\u003e tags \u003d event.getTags();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                if (tags \u003d\u003d null || tags.containsAll(this.tags)) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    toDelete.add(event);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            // Indexes not empty:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            // Delete given events with matching tags"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            for (Integer index : indexes) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    EventSource event \u003d list.get(index);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    // Delete EventSource only if it matches all tags."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    Set\u003cString\u003e tags \u003d event.getTags();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    if (tags \u003d\u003d null || tags.containsAll(this.tags)) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                        toDelete.add(list.get(index));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    throw new CommandException(String.format(MESSAGE_INVALID_EVENT_INDEX, index + 1));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        // No events found."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        if (toDelete.isEmpty()) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            throw new CommandException(MESSAGE_DELETE_EVENT_FAILURE);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        for (EventSource event : toDelete) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            model.removeEvent(event);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return new UserOutput(String.format(MESSAGE_DELETE_EVENT_SUCCESS, toDelete.stream()"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .map(EventSource::getDescription)"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .collect(Collectors.joining(\", \"))));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 85
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/DeleteEventCommandBuilder.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.IndexVariableArguments;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.StringVariableArguments;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.list.ArgumentList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.list.OptionalArgumentList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.list.RequiredArgumentList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents a CommandBuilder responsible for creating {@link DeleteEventCommand}."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "class DeleteEventCommandBuilder extends CommandBuilder {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static final String OPTION_TAGS \u003d \"--tag\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final String ARGUMENT_INDEXES \u003d \"INDEXES\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final String ARGUMENT_TAGS \u003d \"TAGS\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final ModelManager model;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private List\u003cInteger\u003e indexes;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private List\u003cString\u003e tags;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    DeleteEventCommandBuilder(ModelManager model) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.model \u003d model;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    RequiredArgumentList defineCommandArguments() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return ArgumentList.required()"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .setVariableArguments(IndexVariableArguments.newBuilder(ARGUMENT_INDEXES, o -\u003e this.indexes \u003d o));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    Map\u003cString, OptionalArgumentList\u003e defineCommandOptions() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return Map.of("
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            OPTION_TAGS, ArgumentList.optional()"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .setVariableArguments(StringVariableArguments.newBuilder(ARGUMENT_TAGS, o -\u003e this.tags \u003d o))"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        );"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    ModelManager getModel() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return model;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    List\u003cInteger\u003e getIndexes() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this.indexes;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    List\u003cString\u003e getTags() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this.tags;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    Command commandBuild() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return new DeleteEventCommand(this);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 62
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/DeleteTaskCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_DELETE_TASK_EMPTY;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_DELETE_TASK_FAILURE;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_DELETE_TASK_SUCCESS;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_TASK_INDEX;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import seedu.address.model.tasks.TaskSource;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import seedu.address.ui.UserOutput;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": " * Represents a Command that deletes TaskSources from the Model."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "public class DeleteTaskCommand extends Command {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    private final ModelManager model;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    private final List\u003cInteger\u003e indexes;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    private final List\u003cString\u003e tags;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    DeleteTaskCommand(DeleteTaskCommandBuilder builder) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        this.model \u003d builder.getModel();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        this.indexes \u003d builder.getIndexes();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        this.tags \u003d builder.getTags();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public static CommandBuilder newBuilder(ModelManager model) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        return new DeleteTaskCommandBuilder(model).init();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public UserOutput execute() throws CommandException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        List\u003cTaskSource\u003e list \u003d model.getTaskList();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        List\u003cTaskSource\u003e toDelete \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        if (this.indexes.isEmpty()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            if (this.tags.isEmpty()) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                throw new CommandException(MESSAGE_DELETE_TASK_EMPTY);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            // Indexes empty but tags is not empty:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            // Delete all tasks with matching tags."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            for (TaskSource task : list) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                Set\u003cString\u003e tags \u003d task.getTags();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                if (tags \u003d\u003d null || tags.containsAll(this.tags)) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    toDelete.add(task);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            // Indexes not empty:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            // Delete given tasks with matching tags"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            for (Integer index : indexes) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    TaskSource task \u003d list.get(index);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    // Delete TaskSource only if it matches all tags."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    Set\u003cString\u003e tags \u003d task.getTags();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    if (tags \u003d\u003d null || tags.containsAll(this.tags)) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                        toDelete.add(list.get(index));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                    throw new CommandException(String.format(MESSAGE_INVALID_TASK_INDEX, index + 1));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        // No tasks found."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        if (toDelete.isEmpty()) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            throw new CommandException(MESSAGE_DELETE_TASK_FAILURE);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        for (TaskSource task : toDelete) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            model.removeTask(task);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return new UserOutput(String.format(MESSAGE_DELETE_TASK_SUCCESS, toDelete.stream()"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                .map(TaskSource::getDescription)"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                .collect(Collectors.joining(\", \"))));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bruceskellator": 50,
      "WeomuCat": 35
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/DeleteTaskCommandBuilder.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import seedu.address.logic.commands.arguments.IndexVariableArguments;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import seedu.address.logic.commands.arguments.StringVariableArguments;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import seedu.address.logic.commands.arguments.list.ArgumentList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import seedu.address.logic.commands.arguments.list.OptionalArgumentList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import seedu.address.logic.commands.arguments.list.RequiredArgumentList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": " * Represents a CommandBuilder responsible for creating {@link DeleteTaskCommand}."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "class DeleteTaskCommandBuilder extends CommandBuilder {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public static final String OPTION_TAGS \u003d \"--tag\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    private static final String ARGUMENT_INDEXES \u003d \"INDEXES\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    private static final String ARGUMENT_TAGS \u003d \"TAGS\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    private final ModelManager model;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    private List\u003cInteger\u003e indexes;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    private List\u003cString\u003e tags;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    DeleteTaskCommandBuilder(ModelManager model) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        this.model \u003d model;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    RequiredArgumentList defineCommandArguments() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        return ArgumentList.required()"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                .setVariableArguments(IndexVariableArguments.newBuilder(ARGUMENT_INDEXES, o -\u003e this.indexes \u003d o));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    Map\u003cString, OptionalArgumentList\u003e defineCommandOptions() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        return Map.of("
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                OPTION_TAGS, ArgumentList.optional()"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                        .setVariableArguments(StringVariableArguments.newBuilder(ARGUMENT_TAGS, o -\u003e this.tags \u003d o))"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        );"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    ModelManager getModel() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        return model;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    List\u003cInteger\u003e getIndexes() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        return this.indexes;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    List\u003cString\u003e getTags() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        return this.tags;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    Command commandBuild() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        return new DeleteTaskCommand(this);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bruceskellator": 62
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/EditEventCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_EDIT_EVENT_SUCCESS;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_EVENT_INDEX;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.Collection;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.model.DateTime;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.events.EventSource;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.ui.UserOutput;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents a Command that edits EventSources in the Model."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class EditEventCommand extends Command {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final ModelManager model;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final List\u003cInteger\u003e indexes;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final DateTime start;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final DateTime end;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final DateTime remind;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final List\u003cString\u003e tags;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    EditEventCommand(EditEventCommandBuilder builder) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.model \u003d builder.getModel();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.indexes \u003d builder.getIndexes();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.description \u003d builder.getDescription();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.start \u003d builder.getStart();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.end \u003d builder.getEnd();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.remind \u003d builder.getRemind();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.tags \u003d builder.getTags();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static CommandBuilder newBuilder(ModelManager model) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return new EditEventCommandBuilder(model).init();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public UserOutput execute() throws CommandException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        List\u003cEventSource\u003e list \u003d model.getEventList();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        List\u003cEventSource\u003e toEdit \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        for (Integer index : indexes) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                toEdit.add(list.get(index));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                throw new CommandException(String.format(MESSAGE_INVALID_EVENT_INDEX, index + 1));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        // Replace field if it is not null."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        for (EventSource event : toEdit) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            String description;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            if (this.description \u003d\u003d null) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                description \u003d event.getDescription();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                description \u003d this.description;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            DateTime start;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            if (this.start \u003d\u003d null) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                start \u003d event.getStartDateTime();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                start \u003d this.start;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            DateTime end;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            if (this.end \u003d\u003d null) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                end \u003d event.getEndDateTime();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                end \u003d this.end;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            DateTime remind;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            if (this.remind \u003d\u003d null) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                remind \u003d event.getRemindDateTime();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                remind \u003d this.remind;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            Collection\u003cString\u003e tags;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            if (this.tags \u003d\u003d null) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                tags \u003d event.getTags();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                tags \u003d this.tags;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            EventSource replacement \u003d EventSource.newBuilder(description, start)"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .setEnd(end)"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                .setRemind(remind)"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .setTags(tags)"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            model.replaceEvent(event, replacement);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return new UserOutput(String.format(MESSAGE_EDIT_EVENT_SUCCESS, toEdit.stream()"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .map(EventSource::getDescription)"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .collect(Collectors.joining(\", \"))));"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 9,
      "WeomuCat": 97
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/EditEventCommandBuilder.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.DateTimeArgument;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.IndexVariableArguments;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.StringArgument;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.StringVariableArguments;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.list.ArgumentList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.list.OptionalArgumentList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.list.RequiredArgumentList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.model.DateTime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents a CommandBuilder responsible for creating {@link EditEventCommand}."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "class EditEventCommandBuilder extends CommandBuilder {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static final String OPTION_DESCRIPTION \u003d \"--description\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static final String OPTION_START_DATE_TIME \u003d \"--start\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static final String OPTION_END_DATE_TIME \u003d \"--end\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static final String OPTION_REMIND_DATE_TIME \u003d \"--remind\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static final String OPTION_TAGS \u003d \"--tag\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final String ARGUMENT_INDEXES \u003d \"INDEXES\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final String ARGUMENT_DESCRIPTION \u003d \"DESCRIPTION\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final String ARGUMENT_START_DATE_TIME \u003d \"START_DATE_TIME\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final String ARGUMENT_END_DATE_TIME \u003d \"END_DATE_TIME\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final String ARGUMENT_REMIND_DATE_TIME \u003d \"REMIND_DATE_TIME\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final String ARGUMENT_TAGS \u003d \"TAGS\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final ModelManager model;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private List\u003cInteger\u003e indexes;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private DateTime start;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private DateTime end;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private DateTime remind;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private List\u003cString\u003e tags;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    EditEventCommandBuilder(ModelManager model) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.model \u003d model;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    RequiredArgumentList defineCommandArguments() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return ArgumentList.required()"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .setVariableArguments(IndexVariableArguments.newBuilder(ARGUMENT_INDEXES, o -\u003e this.indexes \u003d o));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    Map\u003cString, OptionalArgumentList\u003e defineCommandOptions() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return Map.of("
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            OPTION_DESCRIPTION, ArgumentList.optional()"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .addArgument(StringArgument.newBuilder(ARGUMENT_DESCRIPTION, o -\u003e this.description \u003d o)),"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            OPTION_START_DATE_TIME, ArgumentList.optional()"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .addArgument(DateTimeArgument.newBuilder(ARGUMENT_START_DATE_TIME, o -\u003e this.start \u003d o)),"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            OPTION_END_DATE_TIME, ArgumentList.optional()"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .addArgument(DateTimeArgument.newBuilder(ARGUMENT_END_DATE_TIME, o -\u003e this.end \u003d o)),"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            OPTION_REMIND_DATE_TIME, ArgumentList.optional()"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .addArgument(DateTimeArgument.newBuilder(ARGUMENT_REMIND_DATE_TIME, o -\u003e this.remind \u003d o)),"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            OPTION_TAGS, ArgumentList.optional()"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .setVariableArguments(StringVariableArguments.newBuilder(ARGUMENT_TAGS, o -\u003e this.tags \u003d o))"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        );"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    ModelManager getModel() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return model;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    List\u003cInteger\u003e getIndexes() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this.indexes;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    String getDescription() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    DateTime getStart() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this.start;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    DateTime getEnd() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this.end;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    DateTime getRemind() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this.remind;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    List\u003cString\u003e getTags() {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this.tags;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    Command commandBuild() {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return new EditEventCommand(this);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 1,
      "WeomuCat": 100
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/EditTaskCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_EDIT_TASK_SUCCESS;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_TASK_INDEX;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.Collection;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import seedu.address.model.DateTime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import seedu.address.model.tasks.TaskSource;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import seedu.address.ui.UserOutput;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": " * Represents a Command that edits TaskSources in the Model."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "public class EditTaskCommand extends Command {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    private final ModelManager model;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    private final List\u003cInteger\u003e indexes;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final DateTime due;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    private final List\u003cString\u003e tags;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    EditTaskCommand(EditTaskCommandBuilder builder) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        this.model \u003d builder.getModel();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        this.indexes \u003d Objects.requireNonNull(builder.getIndexes());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        this.description \u003d builder.getDescription();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.due \u003d builder.getDueDate();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        this.tags \u003d builder.getTags();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public static CommandBuilder newBuilder(ModelManager model) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        return new EditTaskCommandBuilder(model).init();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public UserOutput execute() throws CommandException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        List\u003cTaskSource\u003e list \u003d model.getTaskList();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        List\u003cTaskSource\u003e toEdit \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        for (Integer index : indexes) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                toEdit.add(list.get(index));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                throw new CommandException(String.format(MESSAGE_INVALID_TASK_INDEX, index + 1));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        // Replace field if it is not null."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        for (TaskSource task : toEdit) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            String description;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            if (this.description \u003d\u003d null) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                description \u003d task.getDescription();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                description \u003d this.description;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            DateTime due;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            if (this.due \u003d\u003d null) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                due \u003d task.getDueDate();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                due \u003d this.due;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            Collection\u003cString\u003e tags;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            if (this.tags \u003d\u003d null) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                tags \u003d task.getTags();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                tags \u003d this.tags;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            TaskSource replacement \u003d TaskSource.newBuilder(description)"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .setDueDate(due)"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .setTags(tags)"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            model.replaceTask(task, replacement);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return new UserOutput(String.format(MESSAGE_EDIT_TASK_SUCCESS, toEdit.stream()"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            .map(TaskSource::getDescription)"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            .collect(Collectors.joining(\", \"))));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bruceskellator": 66,
      "WeomuCat": 22
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/EditTaskCommandBuilder.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import seedu.address.logic.commands.arguments.DateTimeArgument;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import seedu.address.logic.commands.arguments.IndexVariableArguments;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import seedu.address.logic.commands.arguments.StringArgument;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import seedu.address.logic.commands.arguments.StringVariableArguments;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import seedu.address.logic.commands.arguments.list.ArgumentList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import seedu.address.logic.commands.arguments.list.OptionalArgumentList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import seedu.address.logic.commands.arguments.list.RequiredArgumentList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import seedu.address.model.DateTime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": " * Represents a CommandBuilder responsible for creating {@link EditTaskCommand}."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "class EditTaskCommandBuilder extends CommandBuilder {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public static final String OPTION_DESCRIPTION \u003d \"--description\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static final String OPTION_DUE_DATE_DATE_TIME \u003d \"--due\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public static final String OPTION_TAGS \u003d \"--tag\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    private static final String ARGUMENT_INDEXES \u003d \"INDEXES\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    private static final String ARGUMENT_DESCRIPTION \u003d \"DESCRIPTION\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    private static final String ARGUMENT_DUE_DATE_DATE_TIME \u003d \"DUE_DATE_DATE_TIME\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    private static final String ARGUMENT_TAGS \u003d \"TAGS\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    private final ModelManager model;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    private List\u003cInteger\u003e indexes;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private DateTime due;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    private List\u003cString\u003e tags;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    EditTaskCommandBuilder(ModelManager model) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        this.model \u003d model;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    RequiredArgumentList defineCommandArguments() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        return ArgumentList.required()"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                .setVariableArguments(IndexVariableArguments.newBuilder(ARGUMENT_INDEXES, o -\u003e this.indexes \u003d o));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    Map\u003cString, OptionalArgumentList\u003e defineCommandOptions() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        return Map.of("
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                OPTION_DESCRIPTION, ArgumentList.optional()"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                        .addArgument(StringArgument.newBuilder(ARGUMENT_DESCRIPTION, o -\u003e this.description \u003d o)),"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                OPTION_DUE_DATE_DATE_TIME, ArgumentList.optional()"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                        .addArgument(DateTimeArgument.newBuilder(ARGUMENT_DUE_DATE_DATE_TIME, o -\u003e this.due \u003d o)),"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                OPTION_TAGS, ArgumentList.optional()"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                        .setVariableArguments(StringVariableArguments.newBuilder(ARGUMENT_TAGS, o -\u003e this.tags \u003d o))"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        );"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    ModelManager getModel() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        return model;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    List\u003cInteger\u003e getIndexes() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        return this.indexes;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    String getDescription() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    DateTime getDueDate() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this.due;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    List\u003cString\u003e getTags() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        return this.tags;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    Command commandBuild() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        return new EditTaskCommand(this);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bruceskellator": 79,
      "WeomuCat": 4
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/ExitCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_EXIT_SUCCESS;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.list.OptionalArgumentList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.list.RequiredArgumentList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.ui.UserOutput;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents a Command which exits Horo."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final long EXIT_DURATION \u003d 1000;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    ExitCommand() {}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static CommandBuilder newBuilder() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return new ExitCommandBuilder().init();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public UserOutput execute() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        new Thread(() -\u003e {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                Thread.sleep(EXIT_DURATION);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                Platform.exit();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            } catch (InterruptedException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }).start();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return new UserOutput(MESSAGE_EXIT_SUCCESS);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents a CommandBuilder responsible for creating {@link ExitCommand}."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "class ExitCommandBuilder extends CommandBuilder {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    RequiredArgumentList defineCommandArguments() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    Map\u003cString, OptionalArgumentList\u003e defineCommandOptions() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    Command commandBuild() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return new ExitCommand();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 45,
      "-": 13
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/ExportIcsCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_EXPORT_ICS_SUCCESS;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import seedu.address.ics.IcsException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import seedu.address.ics.IcsExporter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import seedu.address.ui.UserOutput;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": " * Represents a Command which exports Events stored in Horo into an Ics file."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "public class ExportIcsCommand extends Command {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    private static final Path DEFAULT_DIRECTORY \u003d Paths.get(\"\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    private final String filepath;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    private final ModelManager model;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    ExportIcsCommand(ExportIcsCommandBuilder builder) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        this.model \u003d builder.getModel();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        this.filepath \u003d getFilePath(builder);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    private String getFilePath(ExportIcsCommandBuilder builder) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        String directory \u003d builder.getOptionDirectory();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        String filename \u003d IcsExporter.getExportFileName();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        if (directory !\u003d null) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            return Paths.get(directory).resolve(filename).toString();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            return DEFAULT_DIRECTORY.resolve(filename).toString();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    public static CommandBuilder newBuilder(ModelManager model) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        return new ExportIcsCommandBuilder(model).init();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    public UserOutput execute() throws CommandException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            IcsExporter icsExporter \u003d new IcsExporter(model);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            icsExporter.export(filepath);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            return new UserOutput(String.format(MESSAGE_EXPORT_ICS_SUCCESS, filepath));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        } catch (IcsException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            throw new CommandException(e.getMessage());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcusteh1238": 52
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/ExportIcsCommandBuilder.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import seedu.address.logic.commands.arguments.StringArgument;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.list.ArgumentList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.list.OptionalArgumentList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.list.RequiredArgumentList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": " * Represents a CommandBuilder responsible for creating {@link ExportIcsCommand}."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "public class ExportIcsCommandBuilder extends CommandBuilder {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    private static final String OPTION_DIRECTORY \u003d \"--directory\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    private static final String ARGUMENT_DIRECTORY \u003d \"DIRECTORY\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    private final ModelManager model;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private String optionDirectory;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    ExportIcsCommandBuilder(ModelManager model) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        this.model \u003d model;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    ModelManager getModel() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        return model;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    String getOptionDirectory() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this.optionDirectory;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    RequiredArgumentList defineCommandArguments() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    Map\u003cString, OptionalArgumentList\u003e defineCommandOptions() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return Map.of(OPTION_DIRECTORY, ArgumentList.optional()"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .addArgument(StringArgument.newBuilder(ARGUMENT_DIRECTORY, o -\u003e this.optionDirectory \u003d o)));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    Command commandBuild() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        return new ExportIcsCommand(this);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcusteh1238": 39,
      "WeomuCat": 11
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/ImportIcsCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_IMPORT_ICS_SUCCESS;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import seedu.address.ics.IcsException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import seedu.address.ics.IcsParser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import seedu.address.model.events.EventSource;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import seedu.address.model.tasks.TaskSource;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import seedu.address.ui.UserOutput;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": " * Represents a Command which imports Events stored in an Ics file into Horo."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "public class ImportIcsCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    private final ModelManager model;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    private final String filepath;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    public ImportIcsCommand(ImportIcsCommandBuilder builder) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        this.model \u003d builder.getModel();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        this.filepath \u003d builder.getFilepath();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    public static CommandBuilder newBuilder(ModelManager model) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        return new ImportIcsCommandBuilder(model).init();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    public UserOutput execute() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            IcsParser icsParser \u003d IcsParser.getParser(filepath);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            EventSource[] events \u003d icsParser.parseEvents();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            TaskSource[] tasks \u003d icsParser.parseTasks();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            model.addEvents(events);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            model.addTasks(tasks);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            return new UserOutput(String.format(MESSAGE_IMPORT_ICS_SUCCESS, filepath));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        } catch (IcsException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "            return new UserOutput(e.getMessage());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcusteh1238": 43
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/ImportIcsCommandBuilder.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import seedu.address.logic.commands.arguments.StringArgument;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.list.ArgumentList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.list.OptionalArgumentList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.list.RequiredArgumentList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": " * Represents a CommandBuilder responsible for creating {@link ImportIcsCommand}."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "public class ImportIcsCommandBuilder extends CommandBuilder {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    private static final String ARGUMENT_FILEPATH \u003d \"FILEPATH\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    private final ModelManager model;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private String filepath;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    ImportIcsCommandBuilder(ModelManager model) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        this.model \u003d model;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    ModelManager getModel() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        return model;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    String getFilepath() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this.filepath;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    RequiredArgumentList defineCommandArguments() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return ArgumentList.required()"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .addArgument(StringArgument.newBuilder(ARGUMENT_FILEPATH, o -\u003e this.filepath \u003d o));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    Map\u003cString, OptionalArgumentList\u003e defineCommandOptions() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    Command commandBuild() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        return new ImportIcsCommand(this);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcusteh1238": 36,
      "WeomuCat": 12
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/ListViewCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_LIST_VIEW_SUCCESS;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.logic.UiManager;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.UserOutput;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * Represents a Command which adds an EventSource to the Model."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "public class ListViewCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private final UiManager uiManager;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    ListViewCommand(ListViewCommandBuilder builder) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        uiManager \u003d Objects.requireNonNull(builder.getUiManager());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public static CommandBuilder newBuilder(UiManager uiManager) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return new ListViewCommandBuilder(uiManager).init();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public UserOutput execute() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        uiManager.viewList();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return new UserOutput(String.format(MESSAGE_LIST_VIEW_SUCCESS));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 30
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/ListViewCommandBuilder.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.logic.UiManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.logic.commands.arguments.list.OptionalArgumentList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.logic.commands.arguments.list.RequiredArgumentList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * Represents a CommandBuilder responsible for creating {@link ListViewCommand}."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "class ListViewCommandBuilder extends CommandBuilder {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private UiManager uiManager;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    ListViewCommandBuilder(UiManager uiManager) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.uiManager \u003d uiManager;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    RequiredArgumentList defineCommandArguments() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    Map\u003cString, OptionalArgumentList\u003e defineCommandOptions() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    UiManager getUiManager() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return uiManager;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    Command commandBuild() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return new ListViewCommand(this);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 38
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/LogViewCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_LOG_VIEW_SUCCESS;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.logic.UiManager;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.UserOutput;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * Represents a Command which adds an EventSource to the Model."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "public class LogViewCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private final UiManager uiManager;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    LogViewCommand(LogViewCommandBuilder builder) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        uiManager \u003d Objects.requireNonNull(builder.getUiManager());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public static CommandBuilder newBuilder(UiManager uiManager) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return new LogViewCommandBuilder(uiManager).init();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public UserOutput execute() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        uiManager.viewLog();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return new UserOutput(String.format(MESSAGE_LOG_VIEW_SUCCESS));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 30
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/LogViewCommandBuilder.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.logic.UiManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.logic.commands.arguments.list.OptionalArgumentList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.logic.commands.arguments.list.RequiredArgumentList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * Represents a CommandBuilder responsible for creating {@link LogViewCommand}."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "class LogViewCommandBuilder extends CommandBuilder {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private UiManager uiManager;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    LogViewCommandBuilder(UiManager uiManager) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.uiManager \u003d uiManager;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    RequiredArgumentList defineCommandArguments() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    Map\u003cString, OptionalArgumentList\u003e defineCommandOptions() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    UiManager getUiManager() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return uiManager;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    Command commandBuild() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return new LogViewCommand(this);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 38
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/MonthViewCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_MONTH_VIEW_SUCCESS;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.logic.UiManager;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.CalendarDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.UserOutput;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * Represents a Command which adds an EventSource to the Model."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "public class MonthViewCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private final CalendarDate calendarDate;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private final UiManager uiManager;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    MonthViewCommand(MonthViewCommandBuilder builder) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        calendarDate \u003d Objects.requireNonNull(builder.getStart());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        uiManager \u003d Objects.requireNonNull(builder.getUiManager());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public static CommandBuilder newBuilder(UiManager uiManager) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return new MonthViewCommandBuilder(uiManager).init();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public UserOutput execute() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        uiManager.viewMonth(calendarDate);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return new UserOutput(String.format(MESSAGE_MONTH_VIEW_SUCCESS,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                calendarDate.getEnglishMonth() + \" \" + calendarDate.getYear()));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 34
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/MonthViewCommandBuilder.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.logic.UiManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.logic.commands.arguments.MonthYearArgument;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.logic.commands.arguments.list.ArgumentList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.logic.commands.arguments.list.OptionalArgumentList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.logic.commands.arguments.list.RequiredArgumentList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.CalendarDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * Represents a CommandBuilder responsible for creating {@link AddEventCommand}."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "class MonthViewCommandBuilder extends CommandBuilder {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private static final String ARGUMENT_MONTH \u003d \"MONTH_YEAR\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private CalendarDate start;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private UiManager uiManager;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    MonthViewCommandBuilder(UiManager uiManager) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.uiManager \u003d uiManager;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    RequiredArgumentList defineCommandArguments() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return ArgumentList.required()"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                .addArgument(MonthYearArgument.newBuilder(ARGUMENT_MONTH, o -\u003e this.start \u003d o));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    Map\u003cString, OptionalArgumentList\u003e defineCommandOptions() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    UiManager getUiManager() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return uiManager;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    CalendarDate getStart() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return this.start;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    Command commandBuild() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return new MonthViewCommand(this);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 49
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/NotificationOffCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_NOTIFICATION_OFF;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.logic.NotificationManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.ui.UserOutput;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": " * Represents a Command that switches notifications off."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "public class NotificationOffCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    private final NotificationManager manager;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    NotificationOffCommand (NotificationOffCommandBuilder builder) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        this.manager \u003d builder.getManager();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public static CommandBuilder newBuilder(NotificationManager manager) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        return new NotificationOffCommandBuilder(manager).init();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public UserOutput execute() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        manager.switchOffNotifications();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        return new UserOutput(MESSAGE_NOTIFICATION_OFF);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 28
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/NotificationOffCommandBuilder.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.logic.NotificationManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.list.OptionalArgumentList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.list.RequiredArgumentList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": " * Represents a CommandBuilder responsible for creating {@link NotificationOffCommand}."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "public class NotificationOffCommandBuilder extends CommandBuilder {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    private final NotificationManager manager;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    NotificationOffCommandBuilder(NotificationManager manager) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        this.manager \u003d manager;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    NotificationManager getManager() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        return manager;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    RequiredArgumentList defineCommandArguments() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    Map\u003cString, OptionalArgumentList\u003e defineCommandOptions() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    Command commandBuild() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        return new NotificationOffCommand(this);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 31,
      "WeomuCat": 6
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/NotificationOnCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_NOTIFICATION_ON;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.logic.NotificationManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.ui.UserOutput;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": " * Represents a command that switches notifications on."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "public class NotificationOnCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    private final NotificationManager manager;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    NotificationOnCommand (NotificationOnCommandBuilder builder) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        this.manager \u003d builder.getManager();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public static CommandBuilder newBuilder(NotificationManager manager) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        return new NotificationOnCommandBuilder(manager).init();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public UserOutput execute() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        manager.switchOnNotifications();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        return new UserOutput(MESSAGE_NOTIFICATION_ON);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 28
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/NotificationOnCommandBuilder.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.logic.NotificationManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.list.OptionalArgumentList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.list.RequiredArgumentList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": " * Represents a CommandBuilder responsible for creating {@link NotificationOnCommand}."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "public class NotificationOnCommandBuilder extends CommandBuilder {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    private final NotificationManager manager;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    NotificationOnCommandBuilder(NotificationManager manager) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        this.manager \u003d manager;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    NotificationManager getManager() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        return manager;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    RequiredArgumentList defineCommandArguments() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    Map\u003cString, OptionalArgumentList\u003e defineCommandOptions() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    Command commandBuild() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        return new NotificationOnCommand(this);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 31,
      "WeomuCat": 6
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/RedoCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_REDO_SUCCESS;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.UndoRedoManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import seedu.address.ui.UserOutput;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": " * Represents a Command which adds an EventSource to the Model."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "public class RedoCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final UndoRedoManager manager;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    RedoCommand(RedoCommandBuilder builder) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.manager \u003d builder.getManager();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static CommandBuilder newBuilder(UndoRedoManager manager) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return new RedoCommandBuilder(manager).init();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public UserOutput execute() throws CommandException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        manager.redo();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        return new UserOutput(MESSAGE_REDO_SUCCESS);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bruceskellator": 22,
      "WeomuCat": 7
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/RedoCommandBuilder.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.UndoRedoManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.list.OptionalArgumentList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.list.RequiredArgumentList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": " * Represents a CommandBuilder responsible for creating {@link AddEventCommand}."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "class RedoCommandBuilder extends CommandBuilder {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final UndoRedoManager manager;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    RedoCommandBuilder(UndoRedoManager manager) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.manager \u003d manager;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    RequiredArgumentList defineCommandArguments() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    Map\u003cString, OptionalArgumentList\u003e defineCommandOptions() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    UndoRedoManager getManager() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return manager;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    Command commandBuild() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        return new RedoCommand(this);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bruceskellator": 26,
      "WeomuCat": 12
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/UndoCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_UNDO_SUCCESS;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.UndoRedoManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import seedu.address.ui.UserOutput;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": " * Represents a Command which adds an EventSource to the Model."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "public class UndoCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final UndoRedoManager manager;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    UndoCommand(UndoCommandBuilder builder) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.manager \u003d builder.getManager();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static CommandBuilder newBuilder(UndoRedoManager manager) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return new UndoCommandBuilder(manager).init();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public UserOutput execute() throws CommandException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        manager.undo();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        return new UserOutput(MESSAGE_UNDO_SUCCESS);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bruceskellator": 22,
      "WeomuCat": 7
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/UndoCommandBuilder.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.UndoRedoManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.list.OptionalArgumentList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.list.RequiredArgumentList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": " * Represents a CommandBuilder responsible for creating {@link AddEventCommand}."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "class UndoCommandBuilder extends CommandBuilder {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final UndoRedoManager manager;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    UndoCommandBuilder(UndoRedoManager manager) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.manager \u003d manager;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    RequiredArgumentList defineCommandArguments() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    Map\u003cString, OptionalArgumentList\u003e defineCommandOptions() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    UndoRedoManager getManager() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return manager;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    Command commandBuild() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        return new UndoCommand(this);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bruceskellator": 26,
      "WeomuCat": 12
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/WeekViewCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_WEEK_VIEW_SUCCESS;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.logic.UiManager;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.CalendarDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.UserOutput;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * Represents a Command which adds an EventSource to the Model."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "public class WeekViewCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private final CalendarDate calendarDate;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private final UiManager uiManager;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    WeekViewCommand(WeekViewCommandBuilder builder) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        calendarDate \u003d Objects.requireNonNull(builder.getStart());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        uiManager \u003d Objects.requireNonNull(builder.getUiManager());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public static CommandBuilder newBuilder(UiManager uiManager) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return new WeekViewCommandBuilder(uiManager).init();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public UserOutput execute() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        uiManager.viewWeek(calendarDate);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return new UserOutput(String.format(MESSAGE_WEEK_VIEW_SUCCESS, calendarDate.toString()));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 33
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/WeekViewCommandBuilder.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.logic.UiManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.logic.commands.arguments.DayMonthYearArgument;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.logic.commands.arguments.list.ArgumentList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.logic.commands.arguments.list.OptionalArgumentList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.logic.commands.arguments.list.RequiredArgumentList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.CalendarDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * Represents a CommandBuilder responsible for creating {@link AddEventCommand}."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "class WeekViewCommandBuilder extends CommandBuilder {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final String ARGUMENT_START_DATE_TIME \u003d \"DATE\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private CalendarDate start;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private UiManager uiManager;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    WeekViewCommandBuilder(UiManager uiManager) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.uiManager \u003d uiManager;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    RequiredArgumentList defineCommandArguments() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return ArgumentList.required()"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                .addArgument(DayMonthYearArgument.newBuilder(ARGUMENT_START_DATE_TIME, o -\u003e this.start \u003d o));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    Map\u003cString, OptionalArgumentList\u003e defineCommandOptions() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    UiManager getUiManager() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return uiManager;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    CalendarDate getStart() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return this.start;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    Command commandBuild() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return new WeekViewCommand(this);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 48,
      "WeomuCat": 1
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/arguments/Argument.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.commands.arguments;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_REQUIRED_COMMAND_ARGUMENT;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.function.Consumer;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.exceptions.ArgumentException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents an argument in an Option."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * It always has a defined type, and user input entered into this argument will be parsed to the defined type."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * @param \u003cT\u003e the type of this argument"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public abstract class Argument\u003cT\u003e {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private T value;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private String userInput;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final Consumer\u003cT\u003e promise;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    Argument(ArgumentBuilder\u003cT\u003e builder) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.description \u003d builder.getDescription();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.promise \u003d builder.getPromise();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Accepts user input."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @param userInput the user input"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @return this instance"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public Argument\u003cT\u003e accept(String userInput) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        Objects.requireNonNull(userInput);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.userInput \u003d userInput;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Builds the argument value, checks if user input is valid and parses it into the defined type."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Passes the built value to a user defined promise."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @param required if the argument is required to have a value"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @return the built value"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @throws ArgumentException if the argument is required but user input is null"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @throws ParseException if the user input is invalid"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public T build(boolean required) throws ArgumentException, ParseException {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        if (this.userInput \u003d\u003d null) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            if (required) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                throw new ArgumentException(String.format(MESSAGE_REQUIRED_COMMAND_ARGUMENT, this.description));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            this.value \u003d this.parse(userInput);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        promise.accept(this.value);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this.value;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    abstract T parse(String userInput) throws ParseException;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 61
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/arguments/ArgumentBuilder.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.commands.arguments;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.function.Consumer;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents an object that builds arguments."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * @param \u003cT\u003e the type of the argument to build"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public abstract class ArgumentBuilder\u003cT\u003e {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final Consumer\u003cT\u003e promise;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    ArgumentBuilder(String description, Consumer\u003cT\u003e promise) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.promise \u003d promise;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Builds the argument."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @return the built argument"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public Argument\u003cT\u003e build() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return argumentBuild();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    abstract Argument\u003cT\u003e argumentBuild();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    String getDescription() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    Consumer\u003cT\u003e getPromise() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return promise;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 36
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/arguments/DateTimeArgument.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.commands.arguments;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.function.Consumer;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.model.DateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents a command argument of type DateTime."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class DateTimeArgument extends Argument\u003cDateTime\u003e {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    DateTimeArgument(ArgumentBuilder\u003cDateTime\u003e builder) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        super(builder);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static DateTimeArgumentBuilder newBuilder(String description, Consumer\u003cDateTime\u003e promise) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return new DateTimeArgumentBuilder(description, promise);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    DateTime parse(String userInput) throws ParseException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return DateTime.fromDateTimeString(userInput);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 1,
      "Kyzure": 1,
      "WeomuCat": 23
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/arguments/DateTimeArgumentBuilder.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.commands.arguments;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.function.Consumer;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.model.DateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents an ArgumentBuilder responsible for building {@link DateTimeArgument}"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class DateTimeArgumentBuilder extends ArgumentBuilder\u003cDateTime\u003e {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    DateTimeArgumentBuilder(String description, Consumer\u003cDateTime\u003e promise) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        super(description, promise);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    Argument\u003cDateTime\u003e argumentBuild() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return new DateTimeArgument(this);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 1,
      "WeomuCat": 19
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/arguments/DayMonthYearArgument.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package seedu.address.logic.commands.arguments;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.util.function.Consumer;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.CalendarDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * Represents a command argument of type DateTime."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "public class DayMonthYearArgument extends Argument\u003cCalendarDate\u003e {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    DayMonthYearArgument(ArgumentBuilder\u003cCalendarDate\u003e builder) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        super(builder);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public static DayMonthYearArgumentBuilder newBuilder(String description, Consumer\u003cCalendarDate\u003e promise) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return new DayMonthYearArgumentBuilder(description, promise);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    CalendarDate parse(String userInput) throws ParseException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return CalendarDate.fromDayMonthYearString(userInput);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 25
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/arguments/DayMonthYearArgumentBuilder.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package seedu.address.logic.commands.arguments;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.util.function.Consumer;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.CalendarDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * Represents an ArgumentBuilder responsible for building {@link DateTimeArgument}"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "public class DayMonthYearArgumentBuilder extends ArgumentBuilder\u003cCalendarDate\u003e {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    DayMonthYearArgumentBuilder(String description, Consumer\u003cCalendarDate\u003e promise) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        super(description, promise);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    Argument\u003cCalendarDate\u003e argumentBuild() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return new DayMonthYearArgument(this);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 20
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/arguments/IndexVariableArguments.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.commands.arguments;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.function.Consumer;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.parser.IndexParser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents a variable argument of Indexes."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class IndexVariableArguments extends VariableArguments\u003cInteger\u003e {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    IndexVariableArguments(VariableArgumentsBuilder\u003cInteger\u003e builder) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        super(builder);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static IndexVariableArgumentsBuilder newBuilder(String description, Consumer\u003cList\u003cInteger\u003e\u003e promise) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return new IndexVariableArgumentsBuilder(description, promise);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    Integer parse(String userInput) throws ParseException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return new IndexParser().parse(userInput);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 26
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/arguments/IndexVariableArgumentsBuilder.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.commands.arguments;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.function.Consumer;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents a VariableArgumentsBuilder responsible for building {@link IndexVariableArguments}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class IndexVariableArgumentsBuilder extends VariableArgumentsBuilder\u003cInteger\u003e {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    IndexVariableArgumentsBuilder(String description, Consumer\u003cList\u003cInteger\u003e\u003e promise) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        super(description, promise);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    VariableArguments\u003cInteger\u003e argumentBuild() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return new IndexVariableArguments(this);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 19
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/arguments/MonthYearArgument.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package seedu.address.logic.commands.arguments;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.util.function.Consumer;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.CalendarDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * Represents a command argument of type CalendarDate with Month and Year only."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "public class MonthYearArgument extends Argument\u003cCalendarDate\u003e {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    MonthYearArgument(ArgumentBuilder\u003cCalendarDate\u003e builder) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        super(builder);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public static MonthYearArgumentBuilder newBuilder(String description, Consumer\u003cCalendarDate\u003e promise) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return new MonthYearArgumentBuilder(description, promise);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    CalendarDate parse(String userInput) throws ParseException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return CalendarDate.fromMonthYearString(userInput);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 25
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/arguments/MonthYearArgumentBuilder.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package seedu.address.logic.commands.arguments;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.util.function.Consumer;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.CalendarDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * Represents an ArgumentBuilder responsible for building {@link MonthYearArgument}"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "public class MonthYearArgumentBuilder extends ArgumentBuilder\u003cCalendarDate\u003e {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    MonthYearArgumentBuilder(String description, Consumer\u003cCalendarDate\u003e promise) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        super(description, promise);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    Argument\u003cCalendarDate\u003e argumentBuild() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return new MonthYearArgument(this);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 20
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/arguments/StringArgument.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.commands.arguments;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.function.Consumer;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents a command argument of type String."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class StringArgument extends Argument\u003cString\u003e {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    StringArgument(ArgumentBuilder\u003cString\u003e builder) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        super(builder);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static StringArgumentBuilder newBuilder(String description, Consumer\u003cString\u003e promise) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return new StringArgumentBuilder(description, promise);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    String parse(String userInput) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return userInput;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 22
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/arguments/StringArgumentBuilder.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.commands.arguments;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.function.Consumer;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents an ArgumentBuilder responsible for building {@link StringArgument}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class StringArgumentBuilder extends ArgumentBuilder\u003cString\u003e {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    StringArgumentBuilder(String description, Consumer\u003cString\u003e promise) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        super(description, promise);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    Argument\u003cString\u003e argumentBuild() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return new StringArgument(this);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 18
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/arguments/StringVariableArguments.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.commands.arguments;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.function.Consumer;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents a variable argument of Strings."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class StringVariableArguments extends VariableArguments\u003cString\u003e {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    StringVariableArguments(VariableArgumentsBuilder\u003cString\u003e builder) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        super(builder);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static StringVariableArgumentsBuilder newBuilder(String description, Consumer\u003cList\u003cString\u003e\u003e promise) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return new StringVariableArgumentsBuilder(description, promise);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    String parse(String userInput) throws ParseException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return userInput;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 25
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/arguments/StringVariableArgumentsBuilder.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.commands.arguments;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.function.Consumer;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents a ArgumentBuilder responsible for building {@link StringVariableArguments}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class StringVariableArgumentsBuilder extends VariableArgumentsBuilder\u003cString\u003e {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    StringVariableArgumentsBuilder(String description, Consumer\u003cList\u003cString\u003e\u003e promise) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        super(description, promise);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    VariableArguments\u003cString\u003e argumentBuild() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return new StringVariableArguments(this);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 19
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/arguments/VariableArguments.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.commands.arguments;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.function.Consumer;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents a variable argument of a Command."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * A variable argument can take in 0..* arguments, and it always has a defined argument type."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * User input entered into this argument will be parsed to the defined argument type."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * @param \u003cT\u003e the type of this variable argument"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public abstract class VariableArguments\u003cT\u003e {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final List\u003cT\u003e values;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final List\u003cString\u003e userInput;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final Consumer\u003cList\u003cT\u003e\u003e promise;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    VariableArguments(VariableArgumentsBuilder\u003cT\u003e builder) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.values \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.userInput \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.description \u003d builder.getDescription();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.promise \u003d builder.getPromise();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Accepts user input."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @param userInput the user input"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @return this instance"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public VariableArguments\u003cT\u003e accept(String userInput) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        Objects.requireNonNull(userInput);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.userInput.add(userInput);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Builds the variable arguments by parsing user input from accept()."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Passes the built values to a user defined promise."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @return the built variable arguments values"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @throws ParseException if the user input is invalid"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public List\u003cT\u003e build() throws ParseException {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        for (String input : this.userInput) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            this.values.add(this.parse(input));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.promise.accept(this.values);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this.values;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    abstract T parse(String userInput) throws ParseException;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    List\u003cT\u003e getValues() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this.values;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 61
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/arguments/VariableArgumentsBuilder.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.commands.arguments;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.function.Consumer;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents an object that builds variable arguments."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * @param \u003cT\u003e the type of variable arguments to build"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public abstract class VariableArgumentsBuilder\u003cT\u003e {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final Consumer\u003cList\u003cT\u003e\u003e promise;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private VariableArguments\u003cT\u003e argument;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    VariableArgumentsBuilder(String description, Consumer\u003cList\u003cT\u003e\u003e promise) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.promise \u003d promise;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public List\u003cT\u003e getValues() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this.argument.getValues();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Builds the variable arguments."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @return the built variable arguments"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public VariableArguments\u003cT\u003e build() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.argument \u003d argumentBuild();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this.argument;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    abstract VariableArguments\u003cT\u003e argumentBuild();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    String getDescription() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    Consumer\u003cList\u003cT\u003e\u003e getPromise() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return promise;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 44
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/arguments/list/ArgumentList.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.commands.arguments.list;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.Argument;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.VariableArguments;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.exceptions.ArgumentException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents a list of arguments in a Command."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * It can contain 0..* arguments, and can contain 0..1 variable arguments."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class ArgumentList {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    // Determines whether or not the arguments in this list is required."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private boolean required;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private int argumentIndex;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final List\u003cArgument\u003e arguments;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final VariableArguments variableArguments;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    ArgumentList(ArgumentListBuilder builder) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.required \u003d builder.isRequired();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.arguments \u003d builder.getArguments();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.variableArguments \u003d builder.getVariableArguments();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static OptionalArgumentList optional() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return new OptionalArgumentList();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static RequiredArgumentList required() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return new RequiredArgumentList();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Accepts user input and passes it to the next argument for parsing."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @param argument the user input"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public void acceptArgument(String argument) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        if (this.argumentIndex \u003c this.arguments.size()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            this.arguments.get(this.argumentIndex).accept(argument);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            this.argumentIndex++;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        } else if (this.variableArguments !\u003d null) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            this.variableArguments.accept(argument);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Builds all arguments."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @throws ArgumentException if any argument is required but null"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @throws ParseException if any user input is invalid"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public void build() throws ArgumentException, ParseException {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        for (Argument argument : this.arguments) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            argument.build(this.required);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        if (this.variableArguments !\u003d null) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            this.variableArguments.build();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public void setRequired() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.required \u003d true;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 68
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/arguments/list/ArgumentListBuilder.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.commands.arguments.list;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.Argument;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.ArgumentBuilder;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.VariableArguments;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.VariableArgumentsBuilder;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents an object that builds {@link ArgumentList}."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public abstract class ArgumentListBuilder {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    // Determines whether or not the arguments in this list is required."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final boolean required;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final List\u003cArgument\u003e arguments;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private VariableArguments variableArguments;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    ArgumentListBuilder(boolean required) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.required \u003d required;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.arguments \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Adds an argument to this option."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @param argument the argument"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @return this instance"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public ArgumentListBuilder addArgument(ArgumentBuilder argument) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.arguments.add(argument.build());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public ArgumentListBuilder setVariableArguments(VariableArgumentsBuilder variableArguments) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.variableArguments \u003d variableArguments.build();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    boolean isRequired() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return required;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    List\u003cArgument\u003e getArguments() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return arguments;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    VariableArguments getVariableArguments() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return variableArguments;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public ArgumentList build() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return new ArgumentList(this);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 56
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/arguments/list/OptionalArgumentList.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.commands.arguments.list;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.ArgumentBuilder;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.VariableArgumentsBuilder;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * An OptionalArgumentList is a builder that creates an {@link ArgumentList}."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * It\u0027s arguments are always optional."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class OptionalArgumentList extends ArgumentListBuilder {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    OptionalArgumentList() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        super(false);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public OptionalArgumentList addArgument(ArgumentBuilder argument) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        super.addArgument(argument);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public OptionalArgumentList setVariableArguments(VariableArgumentsBuilder variableArguments) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        super.setVariableArguments(variableArguments);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 27
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/arguments/list/RequiredArgumentList.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.commands.arguments.list;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.ArgumentBuilder;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.arguments.VariableArgumentsBuilder;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * A RequiredArgumentList is a builder that creates an {@link ArgumentList}."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * It\u0027s arguments are always required."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class RequiredArgumentList extends ArgumentListBuilder {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    RequiredArgumentList() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        super(true);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public RequiredArgumentList addArgument(ArgumentBuilder argument) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        super.addArgument(argument);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public RequiredArgumentList setVariableArguments(VariableArgumentsBuilder variableArguments) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        super.setVariableArguments(variableArguments);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 26
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/exceptions/ArgumentException.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.commands.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents an exception thrown when creating a command argument."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class ArgumentException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public ArgumentException(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 10
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/listeners/CommandInputListener.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.commands.listeners;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents a listener that will be notified with new command input."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Command input flows from user interface -\u003e business logic."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public interface CommandInputListener {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void onCommandInput(String input);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 10
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/composers/InstantComposer.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.composers;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.time.Instant;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents a Composer that can compose an {@link Instant} into a String."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class InstantComposer {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final DateTimeFormatter composer;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public InstantComposer(DateTimeFormatter composer) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.composer \u003d composer;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public String compose(Instant instant) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this.composer.format(instant);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 20
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/notification/NotificationChecker.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "package seedu.address.logic.notification;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.model.DateTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.model.events.EventSource;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.tasks.TaskSource;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.ui.systemtray.PopupNotification;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": " * A class checks through lists of Events and Tasks to generate notifications to be posted"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "public class NotificationChecker {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private ModelManager model;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public NotificationChecker(ModelManager model) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        requireAllNonNull(model);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.model \u003d model;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public ArrayList\u003cPopupNotification\u003e getListOfPopupNotifications() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        ArrayList\u003cPopupNotification\u003e returnValue \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        for (EventSource eventSource : model.getEventList()) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            if (eventSource.notificationTimeMatchesCurrentTime()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                String name \u003d eventSource.getDescription();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                DateTime eventDateTime \u003d eventSource.getStartDateTime();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                returnValue.add(new PopupNotification(name, eventDateTime.toString()));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        for (TaskSource taskSource : model.getTaskList()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            DateTime taskDueDate \u003d taskSource.getDueDate();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            if (taskDueDate !\u003d null \u0026\u0026 taskDueDate.equalsPrecisionMinute(DateTime.now())) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                String name \u003d taskSource.getDescription();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                returnValue.add(new PopupNotification(name, taskDueDate.toString()));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        return returnValue;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 32,
      "WeomuCat": 15
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/notification/NotificationCheckingThread.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "package seedu.address.logic.notification;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import java.time.Instant;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import java.time.temporal.ChronoUnit;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.ui.systemtray.PopupListener;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.ui.systemtray.PopupNotification;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": " * A thread that handles checking for notifications and notifying the appropriate listeners"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "public class NotificationCheckingThread extends Thread {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    private static final Logger logger \u003d LogsCenter.getLogger(NotificationCheckingThread.class);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    private static final long millisecondsInAMinute \u003d 60000;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    private boolean notificationsOn \u003d true;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    private ArrayList\u003cPopupListener\u003e popupListeners \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private NotificationChecker notificationChecker;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public NotificationCheckingThread(NotificationChecker notificationChecker) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.notificationChecker \u003d notificationChecker;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public void addPopupListener(PopupListener popupListener) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        popupListeners.add(popupListener);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public void switchOffNotifications() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        notificationsOn \u003d false;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public void switchOnNotifications() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        notificationsOn \u003d true;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public boolean getNotificationsOnStatus() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        return notificationsOn;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            notificationCheckingLoop();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        } catch (InterruptedException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            logger.info(\"NotificationManagingThread successfully interrupted.\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     * The main loop of the program."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     * @throws InterruptedException If this thread is interrupted."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    private void notificationCheckingLoop() throws InterruptedException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            if (notificationsOn) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                checkAndPostNotifications();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                Thread.sleep(findMillisecondsToNextMinute());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     * Finds the notifications that require need to be posted, and notifies the relevant listeners."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    private void checkAndPostNotifications() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        ArrayList\u003cPopupNotification\u003e notifications \u003d notificationChecker.getListOfPopupNotifications();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        for (PopupNotification pn : notifications) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            for (PopupListener popupListener : popupListeners) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                popupListener.notify(pn);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     * Finds the number of milliseconds until the next minute. This is to account for the user not opening the program"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     * exactly on the minute."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     * @return the number of milliseconds until the next minute."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    private static long findMillisecondsToNextMinute() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        Instant currentInstant \u003d Instant.now();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        Instant nextMinute \u003d Instant.now().plusMillis(millisecondsInAMinute).truncatedTo(ChronoUnit.MINUTES);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        return currentInstant.until(nextMinute, ChronoUnit.MILLIS);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 88,
      "WeomuCat": 3
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/CalendarDateParser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_CALENDAR_DATE;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.time.YearMonth;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.CalendarDate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.DateTime;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * Represents a {@link Parser} that can parse user input into a {@link DateTime} object."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "public class CalendarDateParser implements Parser\u003cCalendarDate\u003e {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private String pattern;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public CalendarDateParser(String pattern) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.pattern \u003d pattern;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public CalendarDate parse(String userInput) throws ParseException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            if (pattern.equals(CalendarDate.DAY_MONTH_YEAR_PATTERN)) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(pattern);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                LocalDate localDate \u003d LocalDate.from(dateTimeFormatter.parse(userInput));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                return new CalendarDate(localDate);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(pattern);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                YearMonth yearMonth \u003d YearMonth.from(dateTimeFormatter.parse(userInput));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                // Here we do not need the day, hence returning an arbitrary day of the month."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                return new CalendarDate(yearMonth.atEndOfMonth());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            throw new ParseException(String.format(MESSAGE_INVALID_CALENDAR_DATE, pattern));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 42
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/CommandKeywordParser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.function.Supplier;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.CommandBuilder;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents a parser that can derive command keywords, and return the appropriate {@link CommandBuilder}."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class CommandKeywordParser implements Parser\u003cCommandBuilder\u003e {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final HashMap\u003cString, Supplier\u003cCommandBuilder\u003e\u003e commandKeywordMap;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public CommandKeywordParser() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.commandKeywordMap \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public void addCommand(String keyword, Supplier\u003cCommandBuilder\u003e command) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.commandKeywordMap.put(keyword, command);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public CommandBuilder parse(String userInput) throws ParseException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        if (!commandKeywordMap.containsKey(userInput)) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return commandKeywordMap.get(userInput).get();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 33
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/CommandParser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.LinkedHashMap;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.CommandBuilder;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents a parser that can parse user input into a command."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Example user input: command_keyword [argument] [arguments...] [--option] [option_argument]"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class CommandParser implements Parser\u003cCommand\u003e {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final CommandKeywordParser keywordParser;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private CommandBuilder commandBuilder;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public CommandParser(CommandKeywordParser keywordParser) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.keywordParser \u003d keywordParser;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public Command parse(String userInput) throws ParseException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        State state1 \u003d new State();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        State state2 \u003d new State();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        State state3 \u003d new State();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        State state4 \u003d new State();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        state1.addPattern(\"\\\\s*\", matches -\u003e state2);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        state2.addPattern(\"[^\\\\s]+\", matches -\u003e {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            this.commandBuilder \u003d this.keywordParser.parse(matches.get(0));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            return state3;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        });"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        state3.addPattern(\"\\\\s+\", matches -\u003e state4);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        state4.addPattern(\"\\\"(.*?)\\\"\", matches -\u003e {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            this.commandBuilder.acceptSentence(matches.get(1));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            return state3;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        });"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        state4.addPattern(\"\u0027(.*?)\u0027\", matches -\u003e {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            this.commandBuilder.acceptSentence(matches.get(1));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            return state3;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        });"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        state4.addPattern(\"[^\\\\s]+\", matches -\u003e {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            this.commandBuilder.acceptSentence(matches.get(0));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            return state3;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        });"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        HashSet\u003cState\u003e exitStates \u003d new HashSet\u003c\u003e();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        exitStates.add(state3);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        exitStates.add(state4);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        State state \u003d state1;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        while (state !\u003d null) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            // No more user input."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            if (userInput.equals(\"\")) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                // Exit if current state is an exitState."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                if (exitStates.contains(state)) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    throw new ParseException(MESSAGE_INVALID_COMMAND_FORMAT);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            StateResult result \u003d state.apply(userInput);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            assert (result !\u003d null);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            state \u003d result.next;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            userInput \u003d userInput.substring(result.matchLength);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            return this.commandBuilder.build();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            throw new ParseException(e.getMessage());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Represents a function that State uses."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Returns the next state to transition to."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private interface StateFunction {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        State apply(List\u003cString\u003e matches) throws ParseException;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Represents one state of a finite state machine for this parser."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private class State {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        private Map\u003cPattern, StateFunction\u003e patterns;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        private State() {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            this.patterns \u003d new LinkedHashMap\u003c\u003e();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        private void addPattern(String pattern, StateFunction function) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            patterns.put(Pattern.compile(\"^(\" + pattern + \")\"), function);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "         * Gives input to this state and get the next state to transition to."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "         * @param userInput the user input"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "         * @return a StateResult"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "         * @throws ParseException if an exception is thrown in StateFunction for this pattern"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "         */"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        private StateResult apply(String userInput) throws ParseException {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            for (Map.Entry\u003cPattern, StateFunction\u003e entry : this.patterns.entrySet()) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                Pattern pattern \u003d entry.getKey();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                StateFunction function \u003d entry.getValue();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                Matcher matcher \u003d pattern.matcher(userInput);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                if (matcher.find()) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    List\u003cString\u003e matches \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    // Add group matches"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    for (int i \u003d 1; i \u003c\u003d matcher.groupCount(); i++) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                        matches.add(matcher.group(i));"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    State next \u003d function.apply(matches);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    int matchLength \u003d matches.get(0).length();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    return new StateResult(next, matchLength);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            // Should not reach this. If reached, the state machine is configured wrongly."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Represents the result of State.apply()."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private class StateResult {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        private State next;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        private int matchLength;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        private StateResult(State next, int matchLength) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            this.next \u003d next;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            this.matchLength \u003d matchLength;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 152
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/DateTimeParser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_DATE_TIME;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import static seedu.address.model.DateTime.USER_DATE_TIME_PATTERN;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.time.Instant;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.model.DateTime;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents a {@link Parser} that can parse user input into a {@link DateTime} object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class DateTimeParser implements Parser\u003cDateTime\u003e {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final DateTimeFormatter parser;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public DateTimeParser(DateTimeFormatter parser) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.parser \u003d parser;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public DateTime parse(String userInput) throws ParseException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            Instant instant \u003d Instant.from(this.parser.parse(userInput));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            return DateTime.newBuilder(instant).build();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            throw new ParseException(String.format(MESSAGE_INVALID_DATE_TIME, USER_DATE_TIME_PATTERN));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 2,
      "WeomuCat": 31
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/IndexParser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_INDEX;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents a parser that can parse user input into an Index (Integer)."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class IndexParser implements Parser\u003cInteger\u003e {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public Integer parse(String userInput) throws ParseException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            return Integer.parseInt(userInput);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            throw new ParseException(MESSAGE_INVALID_INDEX);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 20
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/Parser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents a Parser that is able to parse user input into an object of type {@code T}."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public interface Parser\u003cT\u003e {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Parses {@code userInput} into an object of type {@code T} and returns it."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws ParseException if {@code userInput} does not conform the expected format"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    T parse(String userInput) throws ParseException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 3,
      "-": 12
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/storage/exceptions/StorageIoException.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.storage.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Signals that an IOException occurred in Storage."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class StorageIoException extends RuntimeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 7
    }
  },
  {
    "path": "src/main/java/seedu/address/model/CalendarDate.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package seedu.address.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.text.DateFormatSymbols;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.time.YearMonth;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.logic.parser.CalendarDateParser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * Represents the date without a time, mainly for the UI system."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "public class CalendarDate {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public static final String DAY_MONTH_YEAR_PATTERN \u003d \"dd/MM/yyyy\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public static final String MONTH_YEAR_PATTERN \u003d \"MM/yyyy\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private static final CalendarDateParser DAY_MONTH_YEAR_PARSER \u003d"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            new CalendarDateParser(DAY_MONTH_YEAR_PATTERN);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private static final CalendarDateParser MONTH_YEAR_PARSER \u003d"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            new CalendarDateParser(MONTH_YEAR_PATTERN);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private final LocalDate localDate;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public CalendarDate(LocalDate localDate) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.localDate \u003d localDate;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public static CalendarDate fromDayMonthYearString(String string) throws ParseException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return DAY_MONTH_YEAR_PARSER.parse(string);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public static CalendarDate fromMonthYearString(String string) throws ParseException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return MONTH_YEAR_PARSER.parse(string);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public static CalendarDate now() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return new CalendarDate(LocalDate.now());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public Integer getDay() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return localDate.getDayOfMonth();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public Integer getMonth() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return localDate.getMonthValue();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public Integer getYear() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return localDate.getYear();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Returns the English name of the Month."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @return English name of the Month."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public String getEnglishMonth() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        String monthStr \u003d new DateFormatSymbols().getMonths()[getMonth() - 1].toLowerCase();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return monthStr.substring(0, 1).toUpperCase() + monthStr.substring(1);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Returns the day of the week."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @return The day of the week."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public Integer getWeekIndex() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return localDate.getDayOfWeek().getValue();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Returns a new CalendarDate of the previous day."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @return A new CalendarDate of the previous day."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public CalendarDate previousDay() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        LocalDate previousLocalDate \u003d localDate.minusDays(1);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return new CalendarDate(previousLocalDate);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Returns a new CalendarDate of the next day."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @return A new CalendarDate of the next day."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public CalendarDate nextDay() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        LocalDate previousLocalDate \u003d localDate.plusDays(1);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return new CalendarDate(previousLocalDate);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Returns a new CalendarDate of the current day plus the given days."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param days The number of days to add."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @return A new CalendarDate of the next days."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public CalendarDate nextDays(Integer days) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        LocalDate previousLocalDate \u003d localDate.plusDays(days);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return new CalendarDate(previousLocalDate);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Returns a new CalendarDate of the current day minus the given days."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param days The number of days to minus off."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @return A new CalendarDate of the previous days."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public CalendarDate previousDays(Integer days) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        LocalDate previousLocalDate \u003d localDate.minusDays(days);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return new CalendarDate(previousLocalDate);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public CalendarDate firstDayOfTheMonth() {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return new CalendarDate(localDate.withDayOfMonth(1));"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public Integer lengthOfMonth() {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return YearMonth.of(getYear(), getMonth()).lengthOfMonth();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public boolean sameDate(Integer day, Integer month, Integer year) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return getDay().equals(day) \u0026\u0026 getMonth().equals(month) \u0026\u0026 getYear().equals(year);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public boolean sameMonthYear(Integer month, Integer year) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return getMonth().equals(month) \u0026\u0026 getYear().equals(year);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        if (obj \u003d\u003d this) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        if (obj instanceof CalendarDate) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            CalendarDate calendarDate \u003d (CalendarDate) obj;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            return sameDate(calendarDate.getDay(), calendarDate.getMonth(), calendarDate.getYear());"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return getDay() + \"/\" + getMonth() + \"/\" + getYear();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 148
    }
  },
  {
    "path": "src/main/java/seedu/address/model/DateTime.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "package seedu.address.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.text.DateFormatSymbols;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.time.DayOfWeek;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "import java.time.Duration;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.time.Instant;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.time.YearMonth;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.time.ZoneId;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.time.format.TextStyle;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import java.time.temporal.ChronoUnit;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.util.Locale;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonIgnore;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonProperty;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import com.fasterxml.jackson.databind.annotation.JsonDeserialize;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.composers.InstantComposer;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.parser.DateTimeParser;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents a date and time."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Internally stored as seconds from epoch, without any timezone information."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "@JsonDeserialize(builder \u003d DateTimeBuilder.class)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class DateTime implements Comparable\u003cDateTime\u003e {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static final String USER_DATE_TIME_PATTERN \u003d \"dd/MM/yyyy HH:mm\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private static final ZoneId TIME_ZONE \u003d ZoneId.systemDefault();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    // Parsers"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private static final DateTimeParser DATE_TIME_PARSER \u003d"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            new DateTimeParser(DateTimeFormatter.ofPattern(USER_DATE_TIME_PATTERN)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    .withZone(TIME_ZONE));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    // Composers"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private static final InstantComposer DATE_TIME_COMPOSER \u003d"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            new InstantComposer(DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\")"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    .withZone(TIME_ZONE));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private static final InstantComposer DAY_COMPOSER \u003d"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            new InstantComposer(DateTimeFormatter.ofPattern(\"dd\")"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    .withZone(TIME_ZONE));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private static final InstantComposer MONTH_COMPOSER \u003d"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            new InstantComposer(DateTimeFormatter.ofPattern(\"MM\")"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    .withZone(TIME_ZONE));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private static final InstantComposer YEAR_COMPOSER \u003d"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            new InstantComposer(DateTimeFormatter.ofPattern(\"yyyy\")"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    .withZone(TIME_ZONE));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private static final InstantComposer HOUR_COMPOSER \u003d"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            new InstantComposer(DateTimeFormatter.ofPattern(\"HH\")"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    .withZone(TIME_ZONE));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private static final InstantComposer MINUTE_COMPOSER \u003d"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            new InstantComposer(DateTimeFormatter.ofPattern(\"mm\")"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    .withZone(TIME_ZONE));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final DateTimeFormatter ICS_FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyyMMdd\u0027T\u0027HHmmss\u0027Z\u0027\")"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .withZone(ZoneId.of(\"UTC\"));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final DateTimeParser ICS_PARSER \u003d new DateTimeParser(ICS_FORMATTER);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final InstantComposer ICS_COMPOSER \u003d new InstantComposer(ICS_FORMATTER);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final Instant instant;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    DateTime(Instant instant) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.instant \u003d instant;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public DateTime(LocalDate localDate) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        // No need to care about time"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.instant \u003d localDate.atStartOfDay(TIME_ZONE).toInstant();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public DateTime(YearMonth yearMonth) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        // No need to care about day or time. Only month and year."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.instant \u003d yearMonth.atEndOfMonth().atStartOfDay(TIME_ZONE).toInstant();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static DateTimeBuilder newBuilder(Instant instant) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return new DateTimeBuilder(instant);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static DateTimeBuilder newBuilder(long epoch) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return new DateTimeBuilder(epoch);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Creates a new instance of DateTime according to the clock."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     *"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @return A new instance of DateTime according to the clock."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static DateTime now() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return new DateTime(Instant.now());"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static DateTime fromIcsString(String string) throws ParseException {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return ICS_PARSER.parse(string);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public static DateTime fromDateTimeString(String string) throws ParseException {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return DATE_TIME_PARSER.parse(string);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @JsonIgnore"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public Integer getYear() {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return Integer.valueOf(YEAR_COMPOSER.compose(this.instant));"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @JsonIgnore"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public Integer getMonth() {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return Integer.valueOf(MONTH_COMPOSER.compose(this.instant));"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @JsonIgnore"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public Integer getWeek() {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        LocalDate localDate \u003d LocalDate.ofInstant(instant, TIME_ZONE);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return localDate.getDayOfWeek().getValue();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @JsonIgnore"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public Integer getDay() {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return Integer.valueOf(DAY_COMPOSER.compose(this.instant));"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @JsonIgnore"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public Integer getHour() {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return Integer.valueOf(HOUR_COMPOSER.compose(this.instant));"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @JsonIgnore"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public Integer getMinute() {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return Integer.valueOf(MINUTE_COMPOSER.compose(this.instant));"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @JsonIgnore"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public String getHourString() {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return HOUR_COMPOSER.compose(this.instant);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @JsonIgnore"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public String getMinuteString() {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return MINUTE_COMPOSER.compose(this.instant);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @JsonIgnore"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public String getEnglishWeekDay() {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        DayOfWeek dayOfWeek \u003d instant.atZone(TIME_ZONE).getDayOfWeek();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return dayOfWeek.getDisplayName(TextStyle.SHORT, Locale.US);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @JsonProperty(\"epoch\")"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public long toEpochSeconds() {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this.instant.getEpochSecond();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public Instant toInstant() {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this.instant;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public String toIcsString() {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return ICS_COMPOSER.compose(this.instant);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * Adds a Duration to the current DateTime object to create a new DateTime object representing the"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * Instant of which the Duration has passed."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * @param duration The Duration object to be added to the DateTime object."
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     * @return A DateTime object where the duration has passed."
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "     */"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    public DateTime addDuration(Duration duration) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        Instant nextInstant \u003d (Instant) duration.addTo(this.instant);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "        return new DateTime(nextInstant);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": "    }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "marcusteh1238"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Returns the date and time in readable english for the user."
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @return The date and time in readable english for the user."
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public String toEnglishDateTime() {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        // TODO: Move to toString()"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        String monthStr \u003d new DateFormatSymbols().getMonths()[getMonth() - 1].toLowerCase();"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        monthStr \u003d monthStr.substring(0, 1).toUpperCase() + monthStr.substring(1);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return getDay() + \" \" + monthStr + \" \" + getYear() + \" \" + getHourString() + \":\" + getMinuteString();"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return DATE_TIME_COMPOSER.compose(this.instant);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public int compareTo(DateTime o) {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this.instant.compareTo(o.instant);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public boolean equals(Object object) {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        if (object instanceof DateTime) {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            DateTime d \u003d (DateTime) object;"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            return this.instant.equals(d.instant);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     * Checks if two instances of DateTime are equal up to the current minute."
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     * @param other The DateTime to be compared to"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     * @return \u003ccode\u003e true \u003c/code\u003e only if both this instance and the other instance of DateTime are equal"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     *     up to the current minute, but not any more precise than that."
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public boolean equalsPrecisionMinute(DateTime other) {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this.instant.truncatedTo(ChronoUnit.MINUTES)"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .equals(other.instant.truncatedTo(ChronoUnit.MINUTES));"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 13,
      "Kyzure": 92,
      "marcusteh1238": 12,
      "WeomuCat": 102
    }
  },
  {
    "path": "src/main/java/seedu/address/model/DateTimeBuilder.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.time.Instant;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonCreator;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonProperty;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents a Builder responsible for creating {@link DateTime}."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "@JsonPOJOBuilder"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class DateTimeBuilder {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final Instant instant;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    DateTimeBuilder(Instant instant) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.instant \u003d instant;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @JsonCreator"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    DateTimeBuilder(@JsonProperty(\"epoch\") long epoch) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.instant \u003d Instant.ofEpochSecond(epoch);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public DateTime build() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return new DateTime(this.instant);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 29
    }
  },
  {
    "path": "src/main/java/seedu/address/model/ModelLists.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.events.EventSource;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.tasks.TaskSource;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents a snapshot of the ModelManager\u0027s lists."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class ModelLists {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final List\u003cEventSource\u003e events;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final List\u003cTaskSource\u003e tasks;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public ModelLists(List\u003cEventSource\u003e events, List\u003cTaskSource\u003e tasks) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.events \u003d Objects.requireNonNull(events);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.tasks \u003d Objects.requireNonNull(tasks);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public List\u003cEventSource\u003e getEvents() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return events;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public List\u003cTaskSource\u003e getTasks() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 29
    }
  },
  {
    "path": "src/main/java/seedu/address/model/ModelManager.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.function.Predicate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.events.EventSource;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.listeners.EventListListener;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.listeners.ModelListListener;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.listeners.ModelResetListener;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import seedu.address.model.listeners.TaskListListener;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import seedu.address.model.tasks.TaskSource;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents the in-memory model of Horo."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class ModelManager implements ModelResetListener {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final NotNullList\u003cEventSource\u003e eventList;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    private final NotNullList\u003cTaskSource\u003e taskList;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final List\u003cEventListListener\u003e eventListListeners;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    private final List\u003cTaskListListener\u003e taskListListeners;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final List\u003cModelListListener\u003e modelListListeners;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Creates a ModelManager."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public ModelManager() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.eventList \u003d new NotNullList\u003c\u003e();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        this.taskList \u003d new NotNullList\u003c\u003e();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.eventListListeners \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        this.taskListListeners \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.modelListListeners \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public void addEventListListener(EventListListener listener) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.eventListListeners.add(listener);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public void addTaskListListener(TaskListListener listener) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        this.taskListListeners.add(listener);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public void addModelListListener(ModelListListener listener) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.modelListListeners.add(listener);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /* Events */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Adds EventSource(s) to this model\u0027s eventList."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @param events the EventSource(s) to add"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public void addEvents(EventSource... events) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        for (EventSource e : events) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            // Create a deep-copy of each addition."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            this.eventList.add(new EventSource(e));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        notifyEventListListeners();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        notifyModelListListeners();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public boolean containsEvent(EventSource event) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this.eventList.contains(event);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Removes an EventSource from this model."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     *"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @param event the EventSource to remove."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public void removeEvent(EventSource event) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.eventList.remove(event);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        notifyEventListListeners();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        notifyModelListListeners();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Replaces an EventSource in this model with another EventSource."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     *"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @param event       the EventSource to replace"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @param replacement the replacement"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public void replaceEvent(EventSource event, EventSource replacement) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        // Create a deep-copy of the replacement."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.eventList.replace(event, new EventSource(replacement));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        notifyEventListListeners();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        notifyModelListListeners();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Returns an unmodifiable, deep copy of this model\u0027s EventList."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     *"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @return a copy of the EventList"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public List\u003cEventSource\u003e getEventList() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        List\u003cEventSource\u003e result \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        for (EventSource event : this.eventList) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            // Create a deep-copy of each EventSource."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            result.add(new EventSource(event));"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        // Return an unmodifiable list."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return Collections.unmodifiableList(result);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    /* Tasks */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     * Adds TaskSource(s) to this model\u0027s taskList."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     *"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     * @param tasks the TaskSource(s) to add"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public void addTasks(TaskSource... tasks) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        for (TaskSource t : tasks) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            // Create a deep-copy of each addition."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            this.taskList.add(new TaskSource(t));"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        notifyTaskListListeners();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        notifyModelListListeners();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public boolean containsTask(TaskSource task) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        return this.taskList.contains(task);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     * Removes an TaskSource from this model."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     *"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     * @param task the TaskSource to remove."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     */"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public void removeTask(TaskSource task) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        this.taskList.remove(task);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        notifyTaskListListeners();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        notifyModelListListeners();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     * Replaces a TaskSource in this model with another TaskSource."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     *"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     * @param task        the TaskSource to replace"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     * @param replacement the replacement"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     */"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public void replaceTask(TaskSource task, TaskSource replacement) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        // Create a deep-copy of the replacement."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        this.taskList.replace(task, new TaskSource(replacement));"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        notifyTaskListListeners();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        notifyModelListListeners();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     * Returns an unmodifiable, deep copy of this model\u0027s TaskList."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     *"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     * @return a copy of the TaskList"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     */"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public List\u003cTaskSource\u003e getTaskList() {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        List\u003cTaskSource\u003e result \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        for (TaskSource task : this.taskList) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            // Create a deep-copy of each TaskSource."
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            result.add(new TaskSource(task));"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        // Return an unmodifiable list."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        return Collections.unmodifiableList(result);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Returns an unmodifiable, deep copy of this model\u0027s EventList and TaskList."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     *"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @return a ModelLists"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public ModelLists getModelList() {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return new ModelLists(this.getEventList(), this.getTaskList());"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Notify all listeners whenever the EventList is changed."
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     */"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private void notifyEventListListeners(Predicate\u003cEventListListener\u003e predicate) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.eventListListeners.stream()"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .filter(predicate)"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .forEach(listener -\u003e listener.onEventListChange(this.getEventList()));"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private void notifyEventListListeners() {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        notifyEventListListeners(listener -\u003e true);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     * Notify all listeners whenever the TaskList is changed."
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private void notifyTaskListListeners(Predicate\u003cTaskListListener\u003e predicate) {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.taskListListeners.stream()"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .filter(predicate)"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .forEach(listener -\u003e listener.onTaskListChange(this.getTaskList()));"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    private void notifyTaskListListeners() {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        notifyTaskListListeners(listener -\u003e true);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Notify all listeners whenever either the EventList or TaskList is changed."
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private void notifyModelListListeners(Predicate\u003cModelListListener\u003e predicate) {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.modelListListeners.stream()"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .filter(predicate)"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            .forEach(listener -\u003e listener.onModelListChange(this.getModelList()));"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private void notifyModelListListeners() {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        notifyModelListListeners(listener -\u003e true);"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public void onModelReset(ModelLists state, Object caller) {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.eventList.reset(state.getEvents());"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.taskList.reset(state.getTasks());"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        Reset the Models and notify all ModelListeners, except the caller."
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        Example: UndoRedoManager resets the model, so no need to notify UndoRedoManager"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        that the model changed."
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "         */"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        notifyEventListListeners(listener -\u003e listener !\u003d caller);"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        notifyTaskListListeners(listener -\u003e listener !\u003d caller);"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        notifyModelListListeners(listener -\u003e listener !\u003d caller);"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 1,
      "bruceskellator": 60,
      "WeomuCat": 112,
      "-": 60
    }
  },
  {
    "path": "src/main/java/seedu/address/model/NotNullList.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.Iterator;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.events.exceptions.EventNotFoundException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents a list of non-null values."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * A null pointer exception will be thrown if a null value is added to this list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class NotNullList\u003cE\u003e implements Iterable\u003cE\u003e {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final List\u003cE\u003e list;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public NotNullList() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Adds an element to this list."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @param e the element to add"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public void add(E e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        requireNonNull(e);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.list.add(e);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Check if an element is contained in this list."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @param e the element to check"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @return whether or not the element is contained in this list"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public boolean contains(E e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        requireNonNull(e);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return list.contains(e);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Removes an element from this list."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @param e the element to remove"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public void remove(E e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        requireNonNull(e);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        if (!list.remove(e)) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            throw new EventNotFoundException();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Replace an element in this list with another element."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @param e the element to replace"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @param r the replacement element"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public void replace(E e, E r) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        requireAllNonNull(e, r);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        int i \u003d list.indexOf(e);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        if (i \u003d\u003d -1) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            throw new EventNotFoundException();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        list.set(i, r);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Clears this list and adds elements from a given list."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @param list the list of elements to re-add"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public void reset(List\u003cE\u003e list) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        requireNonNull(list);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.list.clear();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        for (E e : list) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            this.add(e);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public boolean equals(Object object) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        if (object instanceof NotNullList) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            NotNullList e \u003d (NotNullList) object;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            return Objects.equals(this.list, e.list);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public Iterator\u003cE\u003e iterator() {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this.list.iterator();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 96
    }
  },
  {
    "path": "src/main/java/seedu/address/model/events/EventDateComparator.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package seedu.address.model.events;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.util.Comparator;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * Represents a Comparator to compare the events by their date, followed by their name in lexicographic order."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "public class EventDateComparator implements Comparator\u003cEventSource\u003e {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public int compare(EventSource event, EventSource otherEvent) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        if (event.getStartDateTime().compareTo(otherEvent.getStartDateTime()) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            return event.getDescription().compareTo(otherEvent.getDescription());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            return event.getStartDateTime().compareTo(otherEvent.getStartDateTime());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 18
    }
  },
  {
    "path": "src/main/java/seedu/address/model/events/EventSource.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.model.events;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonProperty;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.model.DateTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents an EventSource in Horo."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * It is immutable."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class EventSource {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    // Required"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final DateTime start;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    // Optional"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final DateTime end;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final Set\u003cString\u003e tags;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    private final DateTime remind;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Creates an EventSource from an EventSourceBuilder."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * All fields must be non null."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    EventSource(EventSourceBuilder builder) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.description \u003d builder.getDescription();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.start \u003d builder.getStart();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.end \u003d builder.getEnd();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.tags \u003d builder.getTags();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        this.remind \u003d builder.getRemind();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Copy constructor."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Creates a deep-copy of an EventSource."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @param eventSource the eventSource to deep-copy."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public EventSource(EventSource eventSource) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.description \u003d eventSource.description;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.start \u003d eventSource.start;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.end \u003d eventSource.end;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.tags \u003d eventSource.tags;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        this.remind \u003d eventSource.remind;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static EventSourceBuilder newBuilder(String description, DateTime start) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return new EventSourceBuilder(description, start);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Checks if a particular instance EventSource should have its notification posted now."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e if the EventSource\u0027s notification timing matches the current notification timing."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public boolean notificationTimeMatchesCurrentTime() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        if (remind !\u003d null) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            return remind.equalsPrecisionMinute(DateTime.now());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            return start.equalsPrecisionMinute(DateTime.now());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @JsonProperty(\"description\")"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @JsonProperty(\"start\")"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public DateTime getStartDateTime() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this.start;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @JsonProperty(\"end\")"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public DateTime getEndDateTime() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this.end;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @JsonProperty(\"remind\")"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public DateTime getRemindDateTime() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this.remind;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @JsonProperty(\"tags\")"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public Set\u003cString\u003e getTags() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this.tags;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public boolean equals(Object object) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        if (object instanceof EventSource) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            EventSource e \u003d (EventSource) object;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            return Objects.equals(this.description, e.description)"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                \u0026\u0026 Objects.equals(this.start, e.start)"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                \u0026\u0026 Objects.equals(this.end, e.end)"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                \u0026\u0026 Objects.equals(this.remind, e.remind)"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                \u0026\u0026 Objects.equals(this.tags, e.tags);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 9,
      "bruceskellator": 5,
      "WeomuCat": 90
    }
  },
  {
    "path": "src/main/java/seedu/address/model/events/EventSourceBuilder.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.model.events;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.Collection;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonCreator;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonProperty;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.model.DateTime;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents a Builder responsible for creating {@link EventSource}."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class EventSourceBuilder {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    // Required"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final DateTime start;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    // Optional"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private DateTime end;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private Set\u003cString\u003e tags;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    private DateTime remind;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    EventSourceBuilder(String description, DateTime start) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.description \u003d Objects.requireNonNull(description);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.start \u003d Objects.requireNonNull(start);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @JsonCreator"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private EventSourceBuilder(@JsonProperty(\"description\") String description,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                               @JsonProperty(\"start\") DateTime start,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                               @JsonProperty(\"end\") DateTime end,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                               @JsonProperty(\"remind\") DateTime remind,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                               @JsonProperty(\"tags\") Set\u003cString\u003e tags) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.start \u003d start;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.end \u003d end;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.remind \u003d remind;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.tags \u003d tags;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public EventSourceBuilder setEnd(DateTime end) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.end \u003d end;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public EventSourceBuilder setTags(Collection\u003cString\u003e tags) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.tags \u003d new HashSet\u003c\u003e(tags);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public EventSourceBuilder setRemind(DateTime remind) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        this.remind \u003d remind;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public EventSource build() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return new EventSource(this);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    String getDescription() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    DateTime getStart() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return start;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    DateTime getEnd() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return end;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    Set\u003cString\u003e getTags() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return tags;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    DateTime getRemind() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        return remind;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 12,
      "WeomuCat": 71
    }
  },
  {
    "path": "src/main/java/seedu/address/model/events/exceptions/EventNotFoundException.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.model.events.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Signals that the operation is unable to find the specified event."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class EventNotFoundException extends RuntimeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 7
    }
  },
  {
    "path": "src/main/java/seedu/address/model/listeners/EventListListener.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.model.listeners;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.events.EventSource;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents a listener that will be notified whenever the EventList in ModelManager changes."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public interface EventListListener {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void onEventListChange(List\u003cEventSource\u003e events);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 13
    }
  },
  {
    "path": "src/main/java/seedu/address/model/listeners/ModelListListener.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.model.listeners;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.ModelLists;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents a listener that will be notified whenever the EventList or TaskList in ModelManager changes."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public interface ModelListListener {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void onModelListChange(ModelLists lists);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 11
    }
  },
  {
    "path": "src/main/java/seedu/address/model/listeners/ModelResetListener.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.model.listeners;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.ModelLists;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents a listener that will be notified whenever the Model needs to be reset."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public interface ModelResetListener {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void onModelReset(ModelLists state, Object caller);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 11
    }
  },
  {
    "path": "src/main/java/seedu/address/model/listeners/TaskListListener.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "package seedu.address.model.listeners;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import seedu.address.model.tasks.TaskSource;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": " * Represents a listener that will be notified whenever the TaskList in ModelManager changes."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "public interface TaskListListener {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void onTaskListChange(List\u003cTaskSource\u003e tasks);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "bruceskellator": 13,
      "WeomuCat": 1
    }
  },
  {
    "path": "src/main/java/seedu/address/model/tasks/TaskDateComparator.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package seedu.address.model.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.util.Comparator;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * Represents a Comparator to compare the events by their date, followed by their name in lexicographic order."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "public class TaskDateComparator implements Comparator\u003cTaskSource\u003e {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public int compare(TaskSource task, TaskSource otherTask) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        // If both have are done."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        if (task.isDone() \u003d\u003d otherTask.isDone()) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            if (task.getDueDate() \u003d\u003d null \u0026\u0026 otherTask.getDueDate() \u003d\u003d null) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                // If both don\u0027t have due date."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                return task.getDescription().compareTo(otherTask.getDescription());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            } else if (task.getDueDate() \u003d\u003d null \u0026\u0026 otherTask.getDueDate() !\u003d null) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                return 1;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            } else if (task.getDueDate() !\u003d null \u0026\u0026 otherTask.getDueDate() \u003d\u003d null) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                return -1;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                if (task.getDueDate().equals(otherTask.getDueDate())) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    return task.getDescription().compareTo(otherTask.getDescription());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    return task.getDueDate().compareTo(otherTask.getDueDate());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            return Boolean.compare(task.isDone(), otherTask.isDone());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 33
    }
  },
  {
    "path": "src/main/java/seedu/address/model/tasks/TaskSource.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "package seedu.address.model.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonProperty;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.model.DateTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": " * Represents a TaskSource in Horo."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": " * It is immutable."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "public class TaskSource {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    // Required"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    // Optional"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final DateTime due;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    // private final Duration expectedDuration;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    private final Set\u003cString\u003e tags;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final boolean isDone;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    TaskSource(TaskSourceBuilder taskSourceBuilder) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        this.description \u003d taskSourceBuilder.getDescription();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.isDone \u003d taskSourceBuilder.isDone();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.due \u003d taskSourceBuilder.getDueDate();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        this.tags \u003d taskSourceBuilder.getTags();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     * Copy constructor."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     * Creates a deep-copy of an TaskSource."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     * @param taskSource the taskSource to deep-copy."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public TaskSource(TaskSource taskSource) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        this.description \u003d taskSource.description;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.due \u003d taskSource.due;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.isDone \u003d taskSource.isDone;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        this.tags \u003d taskSource.tags;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static TaskSourceBuilder newBuilder(String description) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return new TaskSourceBuilder(description);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public boolean equals(Object object) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        if (object instanceof TaskSource) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            TaskSource t \u003d (TaskSource) object;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            return Objects.equals(this.description, t.description)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    \u0026\u0026 Objects.equals(this.due, t.due)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    \u0026\u0026 this.isDone \u003d\u003d t.isDone"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                    \u0026\u0026 Objects.equals(this.tags, t.tags);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @JsonProperty(\"description\")"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @JsonProperty(\"due\")"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public DateTime getDueDate() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this.due;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @JsonProperty(\"done\")"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @JsonProperty(\"tags\")"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public Set\u003cString\u003e getTags() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        return tags;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    TODO: implement the following method:"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public String toIcsString"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 42,
      "bruceskellator": 23,
      "WeomuCat": 19
    }
  },
  {
    "path": "src/main/java/seedu/address/model/tasks/TaskSourceBuilder.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "package seedu.address.model.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import java.util.Collection;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonCreator;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonProperty;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.model.DateTime;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": " * Represents a Builder responsible for creating {@link TaskSource}."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "public class TaskSourceBuilder {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    // Required"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    // Optional"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private DateTime due;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    // private Duration expectedDuration;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    private Set\u003cString\u003e tags;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    TaskSourceBuilder(String description) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        this.description \u003d Objects.requireNonNull(description);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @JsonCreator"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private TaskSourceBuilder(@JsonProperty(\"description\") String description,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                               @JsonProperty(\"due\") DateTime due,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                               @JsonProperty(\"tags\") Set\u003cString\u003e tags,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                               @JsonProperty(\"done\") boolean isDone) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.due \u003d due;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.tags \u003d tags;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public TaskSourceBuilder setDueDate(DateTime due) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.due \u003d due;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public TaskSourceBuilder setDone(boolean done) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        isDone \u003d done;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public TaskSourceBuilder setTags(Collection\u003cString\u003e tags) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        this.tags \u003d new HashSet\u003c\u003e(tags);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public TaskSource build() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        return new TaskSource(this);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    String getDescription() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    DateTime getDueDate() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return due;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    boolean isDone() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    Set\u003cString\u003e getTags() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        return tags;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 46,
      "WeomuCat": 31
    }
  },
  {
    "path": "src/main/java/seedu/address/model/tasks/exceptions/TaskNotFoundException.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "package seedu.address.model.tasks.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": " * Signals that the operation is unable to find the specified task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "public class TaskNotFoundException extends RuntimeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 7
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/ColorTheme.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * Represents the color themes that happen during success of the commands or failure of a command."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "public enum ColorTheme {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    SUCCESS, FAILURE, WELCOME;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 8
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/CommandBox.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.function.Consumer;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": " * The UI component that is responsible for receiving user command inputs."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public class CommandBox extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String ERROR_STYLE_CLASS \u003d \"error\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String FXML \u003d \"CommandBox.fxml\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final Consumer\u003cString\u003e onCommandInput;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    private TextField commandTextField;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public CommandBox(Consumer\u003cString\u003e onCommandInput) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.onCommandInput \u003d onCommandInput;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        // calls #setStyleToDefault() whenever there is a change to the text of the command box."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "     * Handles the Enter button pressed event."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    private void handleCommandEntered() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        onCommandInput.accept(commandTextField.getText());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        commandTextField.setText(\"\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets the command box style to use the default style."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    private void setStyleToDefault() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets the command box style to indicate a failed command."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    private void setStyleToIndicateCommandFailure() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        if (styleClass.contains(ERROR_STYLE_CLASS)) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        styleClass.add(ERROR_STYLE_CLASS);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 6,
      "-": 52
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/MainWindow.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.function.Consumer;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.animation.KeyFrame;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.animation.Timeline;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.animation.TranslateTransition;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.beans.value.ChangeListener;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.beans.value.ObservableValue;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.concurrent.Task;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.concurrent.WorkerStateEvent;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.event.EventHandler;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.geometry.Rectangle2D;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.layout.GridPane;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.StackPane;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.stage.Screen;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.util.Duration;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.CalendarDate;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.events.EventSource;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import seedu.address.model.tasks.TaskSource;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.panel.calendar.CalendarPanel;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.panel.list.ListPanel;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.panel.log.LogPanel;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": " * The Main Window. Provides the basic application layout containing"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": " * a menu bar and space where other JavaFX elements can be placed."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "public class MainWindow extends UiPart\u003cStage\u003e {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public static final Integer TIMING \u003d 20;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String FXML \u003d \"MainWindow.fxml\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private static final String WELCOME_MESSAGE \u003d \"Welcome to Horo\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Logger logger \u003d LogsCenter.getLogger(getClass());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    private Stage primaryStage;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private Consumer\u003cString\u003e onCommandInput;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    // Independent Ui parts residing in this Ui container"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private ListPanel listPanel;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private CalendarPanel calendarPanel;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private LogPanel logPanel;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private CommandBox commandBox;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private StackPane popUpPanel;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    private StackPane commandBoxPlaceholder;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private StackPane viewPlaceholder;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    private StackPane statusbarPlaceholder;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private GridPane gridManager;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private Label viewTitle;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public MainWindow(Stage primaryStage, Consumer\u003cString\u003e onCommandInput) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        super(FXML, primaryStage);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        // Set dependencies"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        this.primaryStage \u003d primaryStage;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.onCommandInput \u003d onCommandInput;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        setWindowDefaultSize(new GuiSettings());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    public Stage getPrimaryStage() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        return primaryStage;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public void show() {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        primaryStage.show();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "     * Fills up all the placeholders of this window."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public void fillInnerParts() {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        calendarPanel \u003d new CalendarPanel();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        listPanel \u003d new ListPanel();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        logPanel \u003d new LogPanel();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        commandBox \u003d new CommandBox(this.onCommandInput);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        viewPlaceholder.getChildren().add(calendarPanel.getRoot());"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        viewPlaceholder.getChildren().add(listPanel.getRoot());"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        viewPlaceholder.getChildren().add(logPanel.getRoot());"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        calendarPanel.getRoot().setVisible(true);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        listPanel.getRoot().setVisible(false);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        logPanel.getRoot().setVisible(false);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        viewTitle.setText(\"Calendar\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        editInnerParts();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Edits the size of the nodes based on the user\u0027s screen size."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private void editInnerParts() {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        Rectangle2D primaryScreenBounds \u003d Screen.getPrimary().getVisualBounds();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        double screenHeight \u003d primaryScreenBounds.getHeight();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        double screenWidth \u003d primaryScreenBounds.getWidth();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        viewPlaceholder.setPrefWidth(screenWidth);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        viewPlaceholder.setPrefHeight(screenHeight);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        // Set the stage width and height"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        primaryStage.setMaxWidth(screenWidth);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        primaryStage.setMaxHeight(screenHeight);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        addResizingListeners();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        welcomeMessage();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        delayResize();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets the default size based on {@code guiSettings}."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "    private void setWindowDefaultSize(GuiSettings guiSettings) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "        primaryStage.setHeight(guiSettings.getWindowHeight());"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "        primaryStage.setWidth(guiSettings.getWindowWidth());"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "        if (guiSettings.getWindowCoordinates() !\u003d null) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "            primaryStage.setX(guiSettings.getWindowCoordinates().getX());"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "            primaryStage.setY(guiSettings.getWindowCoordinates().getY());"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Changes the View Panel to show the Calendar Panel."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public void viewCalendar() {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        calendarPanel.getRoot().setVisible(true);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        listPanel.getRoot().setVisible(false);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        logPanel.getRoot().setVisible(false);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        viewTitle.setText(\"Calendar\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Changes the View Panel to show the Calendar Panel of a certain date in the timeline."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param calendarDate The given date."
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public void viewDay(CalendarDate calendarDate) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        calendarPanel.changeToDayView(calendarDate);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        viewCalendar();"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Changes the View Panel to show the Calendar Panel of a certain week in the timeline."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param calendarDate The given date of the week."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public void viewWeek(CalendarDate calendarDate) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        calendarPanel.changeToWeekView(calendarDate);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        viewCalendar();"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Changes the View Panel to show the Calendar Panel of a certain month."
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param calendarDate The Calendar\u0027s date."
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public void viewMonth(CalendarDate calendarDate) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        calendarPanel.changeToMonthView(calendarDate);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        viewCalendar();"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Changes the View Panel to show the List Panel."
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public void viewList() {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        calendarPanel.getRoot().setVisible(false);"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        listPanel.getRoot().setVisible(true);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        logPanel.getRoot().setVisible(false);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        viewTitle.setText(\"List\");"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Changes the View Panel to show the Log Panel."
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public void viewLog() {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        calendarPanel.getRoot().setVisible(false);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        listPanel.getRoot().setVisible(false);"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        logPanel.getRoot().setVisible(true);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        viewTitle.setText(\"Log\");"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Creates a pop-up of the output using the same LogBox in the LogPanel and animates it."
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private void createPopUpBox(String feedbackToUser, String color) {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        requireNonNull(feedbackToUser);"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        popUpPanel.getChildren().clear();"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        PopUpBox popUpBox \u003d new PopUpBox(feedbackToUser, color);"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        Region popUpBoxRoot \u003d popUpBox.getRoot();"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        Timeline popUpAnimation \u003d new Timeline("
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                new KeyFrame(Duration.seconds(0), event -\u003e {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    popUpPanel.getChildren().add(popUpBoxRoot);"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    popUpBoxRoot.setTranslateY(popUpBoxRoot.getTranslateY() - 40);"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    TranslateTransition translateTransition \u003d"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                            new TranslateTransition(Duration.seconds(1), popUpBoxRoot);"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    double initialPos \u003d popUpBoxRoot.getTranslateY();"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    translateTransition.setFromY(initialPos);"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    translateTransition.setToY(initialPos + 40);"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    translateTransition.setCycleCount(1);"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    translateTransition.setAutoReverse(true);"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    translateTransition.setDuration(new Duration(250));"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    translateTransition.play();"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                }),"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                new KeyFrame(Duration.seconds(3), event -\u003e {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    TranslateTransition translateTransition \u003d"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                            new TranslateTransition(Duration.seconds(1), popUpBoxRoot);"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    double initialPos \u003d popUpBoxRoot.getTranslateY();"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    translateTransition.setFromY(initialPos);"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    translateTransition.setToY(initialPos - 40);"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    translateTransition.setCycleCount(1);"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    translateTransition.setAutoReverse(true);"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    translateTransition.setDuration(new Duration(250));"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    translateTransition.play();"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                }),"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                new KeyFrame(Duration.seconds(4), event -\u003e {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    popUpPanel.getChildren().remove(popUpBoxRoot);"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                })"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        );"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        popUpAnimation.setCycleCount(1);"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        popUpAnimation.play();"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Creates a color scheme from the a list of the constant color values in the CSS file."
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param color The color of the object."
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @return The color in a String value that is used in the CSS file."
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private String getColor(ColorTheme color) {"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        switch(color) {"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        case SUCCESS:"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            return \"-logBoxColor\";"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        case FAILURE:"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            return \"-errorColor\";"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        case WELCOME:"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            return \"-welcomeColor\";"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            // Not suppose to happen;"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            return \"-logBoxColor\";"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Changes of the calendar screen of the calendar"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public void changeCalendarScreenDate(CalendarDate calendarDate) {"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        calendarPanel.changeCalendarScreenDate(calendarDate);"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        viewCalendar();"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Adds Listeners that re-sizes the calendar panel when the width has been changed."
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private void addResizingListeners() {"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        primaryStage.widthProperty().addListener(new ChangeListener\u003cNumber\u003e() {"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            @Override"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            public void changed(ObservableValue\u003c? extends Number\u003e observableValue,"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                                Number oldSceneWidth,"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                                Number newSceneWidth) {"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                delayResize();"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        });"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Re-sizes the CalendarPanel after a certain delay."
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @see CalendarPanel"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private void delayResize() {"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        Task\u003cVoid\u003e sleeper \u003d new Task\u003cVoid\u003e() {"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            @Override"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            protected Void call() throws Exception {"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    Thread.sleep(TIMING);"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                } catch (InterruptedException e) {"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    throw new Exception(e.getMessage());"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                }"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                return null;"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        };"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        sleeper.setOnSucceeded(new EventHandler\u003cWorkerStateEvent\u003e() {"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            @Override"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            public void handle(WorkerStateEvent event) {"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                calendarPanel.resizeCalendarPanel();"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            }"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        });"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        new Thread(sleeper).start();"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Prints the welcome message."
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private void welcomeMessage() {"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        onUserOutput(new UserOutput(WELCOME_MESSAGE), ColorTheme.WELCOME);"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Changes the UI based on the new and changed event list."
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param events The given event list."
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public void onEventListChange(List\u003cEventSource\u003e events, HashMap\u003cInteger, Integer\u003e eventHash) {"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.listPanel.onEventListChange(events, eventHash);"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Changes the UI based on the new and changed task list."
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param tasks The given task list."
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public void onTaskListChange(List\u003cTaskSource\u003e tasks, HashMap\u003cInteger, Integer\u003e taskHash) {"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.listPanel.onTaskListChange(tasks, taskHash);"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Changes the UI based on the new and changed model lists."
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param events The given event list."
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param tasks The given task list."
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public void onModelListChange(List\u003cEventSource\u003e events, List\u003cTaskSource\u003e tasks) {"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.calendarPanel.onModelListChange(events, tasks);"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Creates a log box as well as popup box to display to the user the output."
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param output The given output to be displayed to the user."
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param results The color theme which decides whether the command is a success or failure."
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public void onUserOutput(UserOutput output, ColorTheme results) {"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        String color \u003d getColor(results);"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.logPanel.createLogBox(output.toString(), color);"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        createPopUpBox(output.toString(), color);"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 255,
      "bruceskellator": 1,
      "WeomuCat": 8,
      "-": 100
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/PopUpBox.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * An UI component that displays the feedback to the user."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class PopUpBox extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final String FXML \u003d \"PopUpBox.fxml\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private Label popUp;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Constructor for PopUpBox. Has almost the same features as LogBox"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public PopUpBox(String feedbackToUser, String color) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        popUp.setText(feedbackToUser);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        popUp.setStyle(\"-fx-background-color: \" + color);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 25
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/UserOutput.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents the output from business logic, to be displayed to the user."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class UserOutput {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private final String output;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public UserOutput(String output) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.output \u003d requireNonNull(output);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        return this.output;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 20
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/card/Card.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package seedu.address.ui.card;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.UiPart;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * Represents a Card to show an event or task."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "public abstract class Card extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Constructor for the Card."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param fxml The FXML of the EventCard or TaskCard."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public Card(String fxml) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        super(fxml);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 17
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/card/CardHolder.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package seedu.address.ui.card;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.UiPart;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * An UI component that displays information of a {@code Event}."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "public class CardHolder extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private static final String FXML \u003d \"CardHolder.fxml\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private VBox timeBox;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Constructor for the EventCardHolder."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public CardHolder() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public void addCard(Card card) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.timeBox.getChildren().add(card.getRoot());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public void removeCards() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.timeBox.getChildren().clear();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public Double getHeight() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return timeBox.getHeight();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 37
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/card/CardTag.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package seedu.address.ui.card;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.UiPart;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * Represents a tag of a card"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "public class CardTag extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private static final String FXML \u003d \"CardTag.fxml\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private Label cardTag;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public CardTag(String tag) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        cardTag.setText(tag);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Change the color - used for tasks - both undone and done."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param color The given color."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public void changeColor(String color) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        cardTag.setStyle(\"-fx-background-color: \" + color);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 31
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/card/EventCard.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package seedu.address.ui.card;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.layout.StackPane;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.events.EventSource;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * An UI component that displays information of a {@code Event}."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "public class EventCard extends Card {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private static final String FXML \u003d \"EventCard.fxml\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private VBox eventDetails;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private Label eventName;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private Label eventStartDate;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private Label eventEndDate;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private StackPane eventEndDateBase;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private Label eventRemindDate;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private StackPane eventRemindDateBase;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private StackPane eventTagsBase;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private HBox eventTags;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private Label eventIndex;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private StackPane eventIndexBase;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Constructor for the EventCard, which displays the information of a particular event."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * This is used for ListPanel."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param event The given event."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public EventCard(EventSource event, Integer index) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        eventName.setText(event.getDescription());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        eventStartDate.setText(\"Start Date: \" + event.getStartDateTime().toEnglishDateTime());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        eventIndex.setText(\"[\" + index + \"]\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        addOptions(event);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Constructor for the EventCard, which displays the information of a particular event."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * This is used for CalendarPanel."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param event The given event."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public EventCard(EventSource event) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        eventName.setText(event.getDescription());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        eventStartDate.setText(\"Start Date: \" + event.getStartDateTime().toEnglishDateTime());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        eventIndexBase.getChildren().remove(eventIndex);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        addOptions(event);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Removes the optional part of the event card if it does not exists."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param event The given event."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private void addOptions(EventSource event) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        // End Date Option"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        if (event.getEndDateTime() !\u003d null) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            eventEndDate.setText(\"End Date: \" + event.getEndDateTime().toEnglishDateTime());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            eventDetails.getChildren().remove(eventEndDateBase);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        // Remind Date Option"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        if (event.getRemindDateTime() !\u003d null) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            eventRemindDate.setText(\"Remind Date: \" + event.getRemindDateTime().toEnglishDateTime());"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            eventDetails.getChildren().remove(eventRemindDateBase);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        // Tags Option"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        if (event.getTags() !\u003d null) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            Set\u003cString\u003e tags \u003d event.getTags();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            for (String tag : tags) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                CardTag cardTag \u003d new CardTag(tag);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                eventTags.getChildren().add(cardTag.getRoot());"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            eventDetails.getChildren().remove(eventTagsBase);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        // Others"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        eventName.setMinHeight(Region.USE_PREF_SIZE);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 102,
      "-": 15
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/card/TaskCard.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package seedu.address.ui.card;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.layout.StackPane;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.tasks.TaskSource;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * An UI component that displays information of a {@code Event}."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "public class TaskCard extends Card {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private static final String FXML \u003d \"TaskCard.fxml\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private StackPane taskCardBase;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private VBox taskDetails;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private Label taskName;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private StackPane taskDueDateBase;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private Label taskDueDate;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private StackPane taskTagsBase;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private HBox taskTags;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private Label taskIndex;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private StackPane taskIndexBase;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Constructor for the TaskCard, which displays the information of a particular task."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * This is used for ListPanel."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param task The given task."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public TaskCard(TaskSource task, Integer index) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        taskName.setText(task.getDescription());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        taskIndex.setText(\"[\" + index + \"]\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        addOptions(task);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Constructor for the TaskCard, which displays the information of a particular task."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * This is used for CalendarPanel."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param task The given task."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public TaskCard(TaskSource task) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        taskName.setText(task.getDescription());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        taskIndexBase.getChildren().remove(taskIndex);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        addOptions(task);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Removes the non-existant options from the task card of the given task."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param task The given task."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private void addOptions(TaskSource task) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        // Due Date"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        if (task.getDueDate() !\u003d null) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            taskDueDate.setText(task.getDueDate().toEnglishDateTime());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            taskDetails.getChildren().remove(taskDueDateBase);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        // Tags"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        if (task.getTags() !\u003d null) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            Set\u003cString\u003e tags \u003d task.getTags();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            for (String tag : tags) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                CardTag cardTag \u003d new CardTag(tag);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                if (task.isDone()) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    cardTag.changeColor(\"-taskDoneTagColor\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    cardTag.changeColor(\"-taskTagColor\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                taskTags.getChildren().add(cardTag.getRoot());"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            taskDetails.getChildren().remove(taskTagsBase);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        // Color"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        if (task.isDone()) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            taskCardBase.setStyle(\"-fx-background-color: -taskDoneCardColor;\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        taskName.setMinHeight(Region.USE_PREF_SIZE);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 112
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/card/UpcomingEventCard.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package seedu.address.ui.card;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.events.EventSource;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.UiPart;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * An UI component that displays information of a {@code Event}."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "public class UpcomingEventCard extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public static final Integer UPCOMING_CARD_HEIGHT \u003d 39;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private static final String FXML \u003d \"UpcomingEventCard.fxml\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private Label upcomingEventName;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private Label upcomingWeekDay;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private Label upcomingDay;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Constructor for the EventCard, which displays the information of a particular event."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param event The given event."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public UpcomingEventCard(EventSource event) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        upcomingEventName.setText(event.getDescription());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        upcomingWeekDay.setText(event.getStartDateTime().getEnglishWeekDay());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        upcomingDay.setText(String.valueOf(event.getStartDateTime().getDay()));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        upcomingEventName.setMinHeight(Region.USE_PREF_SIZE);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 39
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/card/UpcomingTaskCard.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package seedu.address.ui.card;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.tasks.TaskSource;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.UiPart;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * An UI component that displays information of a {@code Event}."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "public class UpcomingTaskCard extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private static final String FXML \u003d \"UpcomingTaskCard.fxml\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private Label upcomingTaskName;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private Label upcomingWeekDay;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private Label upcomingDay;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Constructor for the UpcomingTaskCard, which displays the information of a particular task."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param task The given event."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public UpcomingTaskCard(TaskSource task) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        upcomingTaskName.setText(task.getDescription());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        upcomingWeekDay.setText(task.getDueDate().getEnglishWeekDay());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        upcomingDay.setText(String.valueOf(task.getDueDate().getDay()));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        upcomingTaskName.setMinHeight(Region.USE_PREF_SIZE);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 38
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/listeners/UserOutputListener.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.ui.listeners;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.ui.ColorTheme;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.ui.UserOutput;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * Represents a listener that will be notified with new user output."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * User output flows from business logic -\u003e user interface."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public interface UserOutputListener {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void onUserOutput(UserOutput output, ColorTheme results);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 13
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/panel/calendar/CalendarGridDay.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package seedu.address.ui.panel.calendar;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.effect.ColorAdjust;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.layout.StackPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.shape.Circle;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.CalendarDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.UiPart;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * An UI component that displays the day on the calendar."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "public class CalendarGridDay extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private static final float BASE_SATURATION \u003d 0.25f;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private static final float MAX_SATURATION \u003d 0.75f;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private static final int MAX_EVENT \u003d 10;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private static final String FXML \u003d \"CalendarGridDay.fxml\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private CalendarDate calendarDate;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private Integer totalEvents;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private StackPane calendarGridDayBase;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private Circle calendarDayCircle;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private Label calendarDay;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public CalendarGridDay(CalendarDate calendarDate, Integer totalEvents) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.calendarDate \u003d calendarDate;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.totalEvents \u003d totalEvents;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        calendarDay.setText(calendarDate.getDay().toString());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        colorChange();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Increases the total number of Events and changes the color accordingly."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public void addAnEvent() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.totalEvents++;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        if (!CalendarDate.now().equals(calendarDate)) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            colorChange();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public void setCurrentDate() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        Circle circle \u003d new Circle();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        circle.setRadius(14);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        circle.setStyle(\"-fx-fill: \" + \"-currentDateColor\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        calendarGridDayBase.getChildren().add(0, circle);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Reduces the opacity as the given Calendar Screen is of a different month."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public void reduceOpacity() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        calendarDay.setStyle(\"-fx-opacity: \" + 0.25);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Adjusts the color of the circle to indicate how many events are there on that day."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private void colorChange() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        ColorAdjust colorAdjust \u003d new ColorAdjust();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        if (this.totalEvents \u003d\u003d 0) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            calendarDayCircle.setStyle(\"-fx-opacity: \" + 0);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            calendarDayCircle.setEffect(colorAdjust);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            calendarDayCircle.setStyle(\"-fx-opacity: \" + 0.5);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            colorAdjust.setSaturation(getSaturationValue(this.totalEvents));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            calendarDayCircle.setEffect(colorAdjust);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Returns a float value of a saturation by the number of given events against a threshold value."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param events The total number of events of the current day."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @return Returns a float value of a saturation by the number of given events against a threshold value."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private float getSaturationValue(float events) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return (events / MAX_EVENT) * (MAX_SATURATION - BASE_SATURATION) + BASE_SATURATION;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 93
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/panel/calendar/CalendarPanel.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package seedu.address.ui.panel.calendar;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.util.LinkedList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.util.Queue;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.layout.StackPane;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.CalendarDate;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.events.EventSource;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.tasks.TaskSource;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.UiPart;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * An Ui that represents a Panel that contains all the components to make a calendar view. This includes"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * a Timeline, Calendar, and the Details of an event."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "public class CalendarPanel extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private static final String FXML \u003d \"CalendarPanel.fxml\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private CalendarScreen calendarScreen;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private TimelineView timelineView;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private UpcomingView upcomingView;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private CalendarDate calendarDate;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private List\u003cObject\u003e eventTaskList;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private StackPane timelinePlaceholder;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private VBox calendarScreenPlaceholder;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private StackPane upcomingViewPlaceholder;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Constructor for CalendarPanel. Contains the 3 main viewing points for the calendar panel."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * The points are calendar screen view, timeline view and details view."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @see TimelineView"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @see CalendarScreen"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @see UpcomingView"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public CalendarPanel() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.calendarDate \u003d CalendarDate.now();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.eventTaskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.calendarScreen \u003d new CalendarScreen(this.calendarDate);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.timelineView \u003d new TimelineDayView(this.calendarDate, eventTaskList);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.upcomingView \u003d new UpcomingView(eventTaskList);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        timelinePlaceholder.getChildren().add(this.timelineView.getRoot()); // Left"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        calendarScreenPlaceholder.getChildren().add(this.calendarScreen.getRoot()); // Top Right"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        upcomingViewPlaceholder.getChildren().add(this.upcomingView.getRoot()); // Bottom Right"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Changes the CalendarScreen date only with a given CalendarDate."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param calendarDate The given date."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public void changeCalendarScreenDate(CalendarDate calendarDate) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        calendarScreenPlaceholder.getChildren().clear();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        calendarScreen \u003d new CalendarScreen(calendarDate);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        calendarScreenPlaceholder.getChildren().add(calendarScreen.getRoot());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        calendarScreen.onChange(eventTaskList);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Re-sizes the TimelineView."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public void resizeCalendarPanel() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        timelineView.resizeTimelineView();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        upcomingView.resizeUpcomingView(eventTaskList);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Changes to TimelineDayView with a given CalendarDate."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param calendarDate The given date."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public void changeToDayView(CalendarDate calendarDate) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        changeCalendarScreenDate(calendarDate);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        timelinePlaceholder.getChildren().clear();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        timelineView \u003d new TimelineDayView(calendarDate, eventTaskList);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        timelinePlaceholder.getChildren().add(timelineView.getRoot());"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Changes to TimelineWeekView with a given CalendarDate."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param calendarDate The given date."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public void changeToWeekView(CalendarDate calendarDate) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        changeCalendarScreenDate(calendarDate);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        timelinePlaceholder.getChildren().clear();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.timelineView \u003d new TimelineWeekView(calendarDate, eventTaskList);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        timelinePlaceholder.getChildren().add(timelineView.getRoot());"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Changes to TimelineDayView with a given CalendarDate."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param calendarDate The given date."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public void changeToMonthView(CalendarDate calendarDate) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        changeCalendarScreenDate(calendarDate);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        timelinePlaceholder.getChildren().clear();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.timelineView \u003d new TimelineMonthView(calendarDate, eventTaskList);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        timelinePlaceholder.getChildren().add(timelineView.getRoot());"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Changes the UI according to the given Lists."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param events The given event lists."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param tasks The given task list."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public void onModelListChange(List\u003cEventSource\u003e events, List\u003cTaskSource\u003e tasks) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        eventTaskList \u003d combineList(events, tasks);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.timelineView.onChange(eventTaskList);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.calendarScreen.onChange(eventTaskList);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.upcomingView.onChange(eventTaskList);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Returns a combined copy of list for event list and task list into an Object list to be used."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param events Represents the event list."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param tasks Represents the task list."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @return A combined copy of list for event list and task list into an Object list to be used."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private List\u003cObject\u003e combineList(List\u003cEventSource\u003e events, List\u003cTaskSource\u003e tasks) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        List\u003cObject\u003e eventTaskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        Queue\u003cEventSource\u003e tempEvents \u003d new LinkedList\u003c\u003e();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        tempEvents.addAll(events);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        Queue\u003cTaskSource\u003e tempTasks \u003d new LinkedList\u003c\u003e();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        tempTasks.addAll(tasks);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        // Events and Tasks are already sorted, so we need to zip them."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        while (!tempEvents.isEmpty() || !tempTasks.isEmpty()) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            if (tempEvents.isEmpty()) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                eventTaskList.addAll(tempTasks);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            if (tempTasks.isEmpty()) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                eventTaskList.addAll(tempEvents);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            EventSource event \u003d tempEvents.peek();"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            TaskSource task \u003d tempTasks.peek();"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            if (task.isDone() || task.getDueDate() \u003d\u003d null) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                tempTasks.poll();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            int dateCompare \u003d event.getStartDateTime().compareTo(task.getDueDate());"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            if (dateCompare \u003d\u003d 0) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                if (event.getDescription().compareTo(task.getDescription()) \u003c\u003d 0) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    eventTaskList.add(tempEvents.poll());"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    eventTaskList.add(tempTasks.poll());"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            } else if (dateCompare \u003c 0) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                eventTaskList.add(tempEvents.poll());"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                eventTaskList.add(tempTasks.poll());"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return eventTaskList;"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 183
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/panel/calendar/CalendarScreen.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package seedu.address.ui.panel.calendar;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.layout.GridPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.layout.StackPane;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.CalendarDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.DateTime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.events.EventSource;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.tasks.TaskSource;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.UiPart;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * An Ui that represents an actual calendar of a month."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "public class CalendarScreen extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private static final String FXML \u003d \"CalendarScreen.fxml\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private CalendarDate calendarDate;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private ArrayList\u003cCalendarGridDay\u003e dayIndexList;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private GridPane calendarGrid;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private Label monthYearTitle;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private StackPane details;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Constructor for CalendarScreen that adds a month and year to form the calendar."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param calendarDate Represents a date of the calendar."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public CalendarScreen(CalendarDate calendarDate) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.calendarDate \u003d calendarDate.firstDayOfTheMonth();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.dayIndexList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.monthYearTitle.setText(calendarDate.getEnglishMonth() + \" \" + calendarDate.getYear());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        resetCalendar();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        setCurrentDate();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Fills the index of the calendar and resets when needed to."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private void resetCalendar() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        Integer weekIndex \u003d calendarDate.getWeekIndex();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        CalendarDate currentDate \u003d calendarDate.previousDays(weekIndex - 1);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        // Week represents the row."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        for (int week \u003d 0; week \u003c 6; week++) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            // Day represents the column."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            for (int day \u003d 0; day \u003c 7; day++) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                CalendarGridDay calendarGridDay \u003d new CalendarGridDay(currentDate, 0);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                if (!calendarDate.sameMonthYear(currentDate.getMonth(), currentDate.getYear())) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    calendarGridDay.reduceOpacity();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    dayIndexList.add(calendarGridDay);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                calendarGrid.add(calendarGridDay.getRoot(), day, week);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                currentDate \u003d currentDate.nextDay();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Changes the color scheme for each day of the calendar screen."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param eventTaskList The list of events and list."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public void onChange(List\u003cObject\u003e eventTaskList) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        changeColor(eventTaskList);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Changes the color of the current month to indicate the color of the event by adding"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * events to the given CalendarGridDay."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param eventTaskList The given list of events and tasks."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @see CalendarGridDay"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private void changeColor(List\u003cObject\u003e eventTaskList) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        // We do not want to change the color of next and previous month."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        for (Object source :eventTaskList) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            if (source instanceof EventSource) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                EventSource event \u003d (EventSource) source;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                DateTime eventDateTime \u003d event.getStartDateTime();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                if (calendarDate.sameMonthYear(eventDateTime.getMonth(), eventDateTime.getYear())) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    Integer day \u003d eventDateTime.getDay();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    dayIndexList.get(day - 1).addAnEvent();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            } else if (source instanceof TaskSource) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                TaskSource task \u003d (TaskSource) source;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                DateTime taskDateTime \u003d task.getDueDate();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                if (taskDateTime \u003d\u003d null) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                if (calendarDate.sameMonthYear(taskDateTime.getMonth(), taskDateTime.getYear())) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    Integer day \u003d taskDateTime.getDay();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    dayIndexList.get(day - 1).addAnEvent();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private void setCurrentDate() {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        CalendarDate currentDate \u003d CalendarDate.now();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        if (currentDate.sameMonthYear(calendarDate.getMonth(), calendarDate.getYear())) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            dayIndexList.get(currentDate.getDay() - 1).setCurrentDate();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 117,
      "WeomuCat": 4
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/panel/calendar/TimelineDayView.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package seedu.address.ui.panel.calendar;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.layout.RowConstraints;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.CalendarDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.DateTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.events.EventSource;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.tasks.TaskSource;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.card.CardHolder;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.card.EventCard;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.card.TaskCard;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * An UI component that displays the feedback to the user."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "public class TimelineDayView extends TimelineView {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private static final String FXML \u003d \"TimelineDayView.fxml\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private CalendarDate calendarDate;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Constructor for TimelineDayView for a particular day."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param calendarDate Represents the given or current date."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param eventTaskList Represents the current list of events and task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public TimelineDayView(CalendarDate calendarDate, List\u003cObject\u003e eventTaskList) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.calendarDate \u003d calendarDate;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        setTotalRows(24);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        setTimelineTitle(\"Timeline: \""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                + calendarDate.getDay() + \" \""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                + calendarDate.getEnglishMonth() + \" \""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                + calendarDate.getYear());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        addGrids();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        addLabels(getLabels());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        addEventCardHolders();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        onChange(eventTaskList);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Returns an array of String containing the times of a Day."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @return Returns an array of String containing the times of a Day."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private String[] getLabels() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        String[] labels \u003d new String[24];"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        for (int time \u003d 0; time \u003c 10; time++) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            labels[time] \u003d \"0\" + time + \":00\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        for (int time \u003d 10; time \u003c 24; time++) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            labels[time] \u003d time + \":00\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return labels;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    void addEventCard(EventSource event) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        Integer eventHour \u003d event.getStartDateTime().getHour();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        EventCard eventCard \u003d new EventCard(event);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        CardHolder eventCardHolder \u003d getCardHolder().get(eventHour);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        eventCardHolder.addCard(eventCard);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        // Set Constraints for the grid pane"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        RowConstraints rowConstraints \u003d getTimelineGrid().getRowConstraints().get(eventHour);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        updateSizeDelay(rowConstraints, eventCardHolder);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    void addTaskCard(TaskSource task) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        Integer taskHour \u003d task.getDueDate().getHour();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        TaskCard taskCard \u003d new TaskCard(task);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        CardHolder cardHolder \u003d getCardHolder().get(taskHour);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        cardHolder.addCard(taskCard);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        // Set Constraints for the grid pane"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        RowConstraints rowConstraints \u003d getTimelineGrid().getRowConstraints().get(taskHour);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        updateSizeDelay(rowConstraints, cardHolder);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    boolean isWithinTimeline(EventSource event) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        DateTime eventDateTime \u003d event.getStartDateTime();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return calendarDate.sameDate(eventDateTime.getDay(), eventDateTime.getMonth(), eventDateTime.getYear());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    boolean isWithinTimeline(TaskSource task) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        DateTime taskDueDate \u003d task.getDueDate();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return calendarDate.sameDate(taskDueDate.getDay(), taskDueDate.getMonth(), taskDueDate.getYear());"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 99
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/panel/calendar/TimelineLabel.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package seedu.address.ui.panel.calendar;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.UiPart;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * An UI that represents the details for an event."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "public class TimelineLabel extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private static final String FXML \u003d \"TimelineLabel.fxml\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private Label timelineLabel;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public TimelineLabel(String label) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.timelineLabel.setText(label);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 23
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/panel/calendar/TimelineMonthView.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package seedu.address.ui.panel.calendar;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.layout.RowConstraints;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.CalendarDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.DateTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.events.EventSource;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.tasks.TaskSource;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.card.CardHolder;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.card.EventCard;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.card.TaskCard;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * An UI component that displays the feedback to the user."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "public class TimelineMonthView extends TimelineView {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private static final String FXML \u003d \"TimelineMonthView.fxml\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private CalendarDate calendarDate;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Constructor for TimelineMonthView for a particular month."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param calendarDate Represents the given date."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param eventTaskList Represents the current list of events and tasks."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public TimelineMonthView(CalendarDate calendarDate, List\u003cObject\u003e eventTaskList) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.calendarDate \u003d calendarDate;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        setTotalRows(calendarDate.lengthOfMonth());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        setTimelineTitle(\"Timeline: \" + calendarDate.getEnglishMonth() + \" \" + calendarDate.getYear());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        addGrids();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        addLabels(getLabels());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        addEventCardHolders();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        onChange(eventTaskList);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Returns an array of String containing values of the Month."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @return Returns an array of String containing values of the Month."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private String[] getLabels() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        String[] labels \u003d new String[getTotalRows()];"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        for (Integer day \u003d 0; day \u003c getTotalRows(); day++) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            labels[day] \u003d String.valueOf(day + 1);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return labels;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    void addEventCard(EventSource event) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        // Gets the event Hour"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        Integer eventDay \u003d event.getStartDateTime().getDay();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        EventCard eventCard \u003d new EventCard(event);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        CardHolder eventCardHolder \u003d getCardHolder().get(eventDay - 1);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        eventCardHolder.addCard(eventCard);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        // Set Constraints for the grid pane"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        RowConstraints rowConstraints \u003d getTimelineGrid().getRowConstraints().get(eventDay - 1);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        updateSizeDelay(rowConstraints, eventCardHolder);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    void addTaskCard(TaskSource task) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        // Gets the event Hour"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        Integer taskDay \u003d task.getDueDate().getDay();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        TaskCard taskCard \u003d new TaskCard(task);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        CardHolder eventCardHolder \u003d getCardHolder().get(taskDay - 1);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        eventCardHolder.addCard(taskCard);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        // Set Constraints for the grid pane"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        RowConstraints rowConstraints \u003d getTimelineGrid().getRowConstraints().get(taskDay - 1);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        updateSizeDelay(rowConstraints, eventCardHolder);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    boolean isWithinTimeline(EventSource event) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        DateTime eventDateTime \u003d event.getStartDateTime();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return calendarDate.sameMonthYear(eventDateTime.getMonth(), eventDateTime.getYear());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    boolean isWithinTimeline(TaskSource task) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        DateTime taskDueDate \u003d task.getDueDate();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return calendarDate.sameMonthYear(taskDueDate.getMonth(), taskDueDate.getYear());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 94
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/panel/calendar/TimelineView.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package seedu.address.ui.panel.calendar;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.concurrent.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.concurrent.WorkerStateEvent;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.event.EventHandler;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.geometry.VPos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.layout.GridPane;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.layout.RowConstraints;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.events.EventSource;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.tasks.TaskSource;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.MainWindow;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.UiPart;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.card.CardHolder;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.card.EventCard;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * Represents an abstract class for the different timelines placed in the CalendarPanel."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * Currently there are 3 types of timeline - day, week and month."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * @see TimelineDayView"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * @see TimelineWeekView"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * @see TimelineMonthView"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "public abstract class TimelineView extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private static final Integer SPACING \u003d 62;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private ArrayList\u003cCardHolder\u003e cardHolders;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private Integer totalRows;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private Label timelineTitle;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private GridPane timelineGrid;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    TimelineView(String fxml) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        super(fxml);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Initializes the timeline by adding cardholders to hold the EventCards."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @see CardHolder ;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    void addEventCardHolders() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.cardHolders \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        for (int row \u003d 0; row \u003c totalRows; row++) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            CardHolder eventCardHolder \u003d new CardHolder();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            cardHolders.add(eventCardHolder);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            timelineGrid.add(eventCardHolder.getRoot(), 1, row);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Re-sizes the timeline view panel by setting all the RowConstraints sizes to be the same"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * height as the it\u0027s EventCardHolders, with an additional spacing."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @see RowConstraints"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    void resizeTimelineView() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        for (int row \u003d 0; row \u003c totalRows; row++) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            CardHolder eventCardHolder \u003d cardHolders.get(row);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            RowConstraints rowConstraints \u003d timelineGrid.getRowConstraints().get(row);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            rowConstraints.setPrefHeight(eventCardHolder.getHeight() + SPACING);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Updates the current row\u0027s constraints height after a certain delay so to obtain the"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * updated height of the EventCardHolder."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param rowConstraints The current row constraints."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param eventCardHolder The current EventCardHolder to obtain the height."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    void updateSizeDelay(RowConstraints rowConstraints, CardHolder eventCardHolder) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        Task\u003cVoid\u003e sleeper \u003d new Task\u003cVoid\u003e() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            @Override"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            protected Void call() throws Exception {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    Thread.sleep(MainWindow.TIMING);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                } catch (InterruptedException e) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    throw new Exception(e.getMessage());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                return null;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        };"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        sleeper.setOnSucceeded(new EventHandler\u003cWorkerStateEvent\u003e() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            @Override"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            public void handle(WorkerStateEvent event) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                rowConstraints.setPrefHeight(eventCardHolder.getHeight() + SPACING);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        });"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        new Thread(sleeper).start();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Adds an array of labels into the Grid Pane."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param labels The labels to be added into the Grid Pane."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    void addLabels(String ...labels) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        int row \u003d 0;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        for (String label : labels) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            TimelineLabel timelineLabel \u003d new TimelineLabel(label);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            timelineGrid.add(timelineLabel.getRoot(), 0, row);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            row++;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Adds a set of RowConstraints into the Grid Pane."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @see RowConstraints"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    void addGrids() {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        for (int row \u003d 0; row \u003c totalRows; row++) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            RowConstraints rowConstraints \u003d new RowConstraints();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            rowConstraints.setValignment(VPos.TOP);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            rowConstraints.setPrefHeight(100);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            rowConstraints.setMinHeight(100);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            timelineGrid.getRowConstraints().add(rowConstraints);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Changes the timeline by resetting it with the new list of events."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param eventTaskList The given event list containing all the events and tasks."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    void onChange(List\u003cObject\u003e eventTaskList) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        resetTimeline();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        for (Object source : eventTaskList) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            if (source instanceof EventSource) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                EventSource event \u003d (EventSource) source;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                if (isWithinTimeline(event)) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    addEventCard(event);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            } else if (source instanceof TaskSource) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                TaskSource task \u003d (TaskSource) source;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                if (task.getDueDate() \u003d\u003d null) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                if (isWithinTimeline(task)) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    addTaskCard(task);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Resets the timeline by removing all of the EventCardHolders\u0027 EventCard."
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private void resetTimeline() {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        for (int row \u003d 0; row \u003c totalRows; row++) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            // Reset RowConstraints"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            RowConstraints rowConstraints \u003d timelineGrid.getRowConstraints().get(row);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            rowConstraints.setPrefHeight(0);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            // Reset EventCards for each hour"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            cardHolders.get(row).removeCards();"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Creates an EventCard and adds it to the current timeline."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param event The given event."
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @see EventCard"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    abstract void addEventCard(EventSource event);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    abstract void addTaskCard(TaskSource task);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Returns a boolean that checks if the given date of the event is within the particular timeline."
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param event The given event."
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @return a boolean that checks if the given date of the event is within the particular timeline."
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    abstract boolean isWithinTimeline(EventSource event);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    abstract boolean isWithinTimeline(TaskSource task);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    // Getters"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    ArrayList\u003cCardHolder\u003e getCardHolder() {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return this.cardHolders;"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    GridPane getTimelineGrid() {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return this.timelineGrid;"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    Integer getTotalRows() {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return this.totalRows;"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    // Setters"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    void setTotalRows(int totalRows) {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.totalRows \u003d totalRows;"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    void setTimelineTitle(String timelineTitle) {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.timelineTitle.setText(timelineTitle);"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 211,
      "WeomuCat": 3
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/panel/calendar/TimelineWeekView.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package seedu.address.ui.panel.calendar;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.text.DateFormatSymbols;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.layout.RowConstraints;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.CalendarDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.DateTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.events.EventSource;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.tasks.TaskSource;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.card.CardHolder;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.card.EventCard;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.card.TaskCard;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * An UI component that displays the feedback to the user."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "public class TimelineWeekView extends TimelineView {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private static final String FXML \u003d \"TimelineWeekView.fxml\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private CalendarDate[] daysInWeek;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private CalendarDate calendarDate;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Constructor for TimelineWeekView for a particular week."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param calendarDate Represents the calendarDate given by the user."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param eventTaskList Represents the current list of events and tasks."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public TimelineWeekView(CalendarDate calendarDate,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                            List\u003cObject\u003e eventTaskList) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.calendarDate \u003d calendarDate;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        setTotalRows(7);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        setTimelineTitle(\"Timeline: \""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                + getEnglishWeekDate(getWeek(calendarDate), calendarDate.getMonth(), calendarDate.getYear()));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.daysInWeek \u003d addWeek();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        addGrids();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        addLabels(getLabels());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        addEventCardHolders();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        onChange(eventTaskList);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Returns an array of String containing values of the week."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @return Returns an array of String containing values of the week."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private String[] getLabels() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return new String[] {\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"};"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Returns an array of CalendarDate representing the list of days in the same week as the given day."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @return An array of CalendarDate representing the list of days in the same week as the given day."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private CalendarDate[] addWeek() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        CalendarDate[] calendarDates \u003d new CalendarDate[7];"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        int weekIndex \u003d calendarDate.getWeekIndex();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        while (weekIndex \u003e 1) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            calendarDate \u003d calendarDate.previousDay();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            weekIndex--;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        for (int i \u003d 0; i \u003c calendarDates.length; i++) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            calendarDates[i] \u003d calendarDate;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            calendarDate \u003d calendarDate.nextDay();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return calendarDates;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private Integer getWeek(CalendarDate calendarDate) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        CalendarDate currentDate \u003d calendarDate.firstDayOfTheMonth();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        Integer weekIndex \u003d currentDate.getWeekIndex();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        currentDate \u003d currentDate.previousDays(weekIndex - 1);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        for (int week \u003d 0; week \u003c 6; week++) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            for (int day \u003d 0; day \u003c 7; day++) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                if (calendarDate.equals(currentDate)) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    return week + 1;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                currentDate \u003d currentDate.nextDay();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        // Not suppose to reach here."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private String getEnglishWeekDate(Integer week, Integer month, Integer year) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        String monthStr \u003d new DateFormatSymbols().getMonths()[month - 1].toLowerCase();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        monthStr \u003d monthStr.substring(0, 1).toUpperCase() + monthStr.substring(1);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return \"Week \" + week + \" of \" + monthStr + \" \" + year;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    void addEventCard(EventSource event) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        // Creates and add the event card"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        int eventIndex \u003d event.getStartDateTime().getWeek();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        EventCard eventCard \u003d new EventCard(event);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        CardHolder eventCardHolder \u003d getCardHolder().get(eventIndex - 1);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        eventCardHolder.addCard(eventCard);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        // Set Constraints for the grid pane"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        RowConstraints rowConstraints \u003d getTimelineGrid().getRowConstraints().get(eventIndex - 1);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        updateSizeDelay(rowConstraints, eventCardHolder);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    void addTaskCard(TaskSource task) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        // Creates and add the event card"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        int taskIndex \u003d task.getDueDate().getWeek();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        TaskCard taskCard \u003d new TaskCard(task);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        CardHolder eventCardHolder \u003d getCardHolder().get(taskIndex - 1);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        eventCardHolder.addCard(taskCard);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        // Set Constraints for the grid pane"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        RowConstraints rowConstraints \u003d getTimelineGrid().getRowConstraints().get(taskIndex - 1);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        updateSizeDelay(rowConstraints, eventCardHolder);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    boolean isWithinTimeline(EventSource event) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        DateTime eventDate \u003d event.getStartDateTime();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        for (CalendarDate calendarDate : daysInWeek) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            // Same day"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            if (calendarDate.sameDate("
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    eventDate.getDay(),"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    eventDate.getMonth(),"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    eventDate.getYear())) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    boolean isWithinTimeline(TaskSource task) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        DateTime taskDueDate \u003d task.getDueDate();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        for (CalendarDate calendarDate : daysInWeek) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            // Same day"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            if (calendarDate.sameDate("
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    taskDueDate.getDay(),"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    taskDueDate.getMonth(),"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    taskDueDate.getYear())) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 156
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/panel/calendar/UpcomingView.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package seedu.address.ui.panel.calendar;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.layout.GridPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.CalendarDate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.DateTime;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.events.EventSource;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.tasks.TaskSource;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.UiPart;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.card.UpcomingEventCard;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.card.UpcomingTaskCard;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * An UI that represents the upcoming event or task displayed to the user."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "public class UpcomingView extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private static final String FXML \u003d \"UpcomingView.fxml\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private CalendarDate currentDate;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private Integer totalDisplays;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private GridPane upcomingViewBase;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private Label upcomingViewTitle;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private VBox upcomingList;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public UpcomingView(List\u003cObject\u003e eventTaskList) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        currentDate \u003d CalendarDate.now();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        upcomingViewTitle.setText(\"Upcoming in \" + currentDate.getEnglishMonth());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        resizeUpcomingView(eventTaskList);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Updates the upcoming list to hold up to a certain amount of events or task."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param eventTaskList The given list of tasks and events."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public void onChange(List\u003cObject\u003e eventTaskList) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        int index \u003d 0;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        upcomingList.getChildren().clear();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        for (Object source : eventTaskList) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            if (index \u003e\u003d totalDisplays) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            if (source instanceof EventSource) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                EventSource event \u003d (EventSource) source;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                DateTime eventDate \u003d event.getStartDateTime();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                if (currentDate.sameMonthYear(eventDate.getMonth(), eventDate.getYear())) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    UpcomingEventCard eventCard \u003d new UpcomingEventCard(event);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    upcomingList.getChildren().add(eventCard.getRoot());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    index++;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            } else if (source instanceof TaskSource) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                TaskSource task \u003d (TaskSource) source;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                DateTime taskDate \u003d task.getDueDate();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                if (taskDate !\u003d null \u0026\u0026 currentDate.sameMonthYear(taskDate.getMonth(), taskDate.getYear())) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    UpcomingTaskCard taskCard \u003d new UpcomingTaskCard(task);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    upcomingList.getChildren().add(taskCard.getRoot());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    index++;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Re-sizes the upcoming to fit the amount of displays of the UpcomingEventCard."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param eventTaskList The list of events and tasks to change the upcoming view."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public void resizeUpcomingView(List\u003cObject\u003e eventTaskList) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        totalDisplays \u003d (int) (upcomingViewBase.getHeight() / UpcomingEventCard.UPCOMING_CARD_HEIGHT) - 2;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        onChange(eventTaskList);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 87,
      "WeomuCat": 1
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/panel/list/EventListPanel.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package seedu.address.ui.panel.list;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.events.EventSource;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.UiPart;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.card.EventCard;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * Represents the Event List to display the events."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "public class EventListPanel extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private static final String FXML \u003d \"EventListPanel.fxml\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private VBox eventList;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public EventListPanel() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Changes the Event List Panel according to the given List of Events."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param events The given List of Events."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public void onEventListChange(List\u003cEventSource\u003e events, HashMap\u003cInteger, Integer\u003e eventHash) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.eventList.getChildren().clear();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        int index \u003d 0;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        for (EventSource event : events) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            EventCard eventCard \u003d new EventCard(event, eventHash.get(index));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            eventList.getChildren().add(eventCard.getRoot());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 42
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/panel/list/ListPanel.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.ui.panel.list;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.layout.GridPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.layout.StackPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.events.EventSource;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.tasks.TaskSource;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.ui.UiPart;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * An Ui that stores the logged feedback from the program to the user."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "public class ListPanel extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final String FXML \u003d \"ListPanel.fxml\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private EventListPanel eventListPanel;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private TaskListPanel taskListPanel;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private GridPane listPanelGrid;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private StackPane eventListPlaceholder;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private StackPane taskListPlaceholder;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Constructor for ListPanel"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public ListPanel() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        eventListPanel \u003d new EventListPanel();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        taskListPanel \u003d new TaskListPanel();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        eventListPlaceholder.getChildren().add(eventListPanel.getRoot());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        taskListPlaceholder.getChildren().add(taskListPanel.getRoot());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public void onEventListChange(List\u003cEventSource\u003e events, HashMap\u003cInteger, Integer\u003e eventHash) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        eventListPanel.onEventListChange(events, eventHash);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public void onTaskListChange(List\u003cTaskSource\u003e tasks, HashMap\u003cInteger, Integer\u003e taskHash) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        taskListPanel.onTaskListChange(tasks, taskHash);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 25,
      "WeomuCat": 29
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/panel/list/TaskListPanel.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "package seedu.address.ui.panel.list;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.model.tasks.TaskSource;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.UiPart;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import seedu.address.ui.card.TaskCard;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * Represents the a Task List to be displayed to the user."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "public class TaskListPanel extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private static final String FXML \u003d \"TaskListPanel.fxml\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private VBox taskList;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public TaskListPanel() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Changes the Event List Panel according to the given List of Tasks."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param tasks The given List of Tasks."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public void onTaskListChange(List\u003cTaskSource\u003e tasks, HashMap\u003cInteger, Integer\u003e taskHash) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        this.taskList.getChildren().clear();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        int index \u003d 0;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        for (TaskSource task : tasks) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            TaskCard taskCard \u003d new TaskCard(task, taskHash.get(index));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            taskList.getChildren().add(taskCard.getRoot());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 43
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/panel/log/LogBox.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.ui.panel.log;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.ui.UiPart;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * An UI component that displays the feedback to the user."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class LogBox extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final String FXML \u003d \"LogBox.fxml\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private Label box;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Constructor for LogBox. It is a dialog box that contains the feedback from the program to the user."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * @param feedbackToUser The feedback from the program to the user."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public LogBox(String feedbackToUser, String color) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        box.setText(feedbackToUser);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        box.setStyle(\"-fx-background-color: \" + color);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 27
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/panel/log/LogPanel.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.ui.panel.log;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.ui.UiPart;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " * An Ui that stores the logged feedback from the program to the user."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "public class LogPanel extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private static final String FXML \u003d \"LogPanel.fxml\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private VBox boxLog;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    private ScrollPane scrollLog;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Constructor for the LogPanel. Sets the size of the LogPanel to the user\u0027s screen size."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    public LogPanel() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * Creates an instance of LogBox."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     * @param feedbackToUser To provide the Log Box the feedback to the user."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public void createLogBox(String feedbackToUser, String color) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        requireNonNull(feedbackToUser);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        LogBox logBox \u003d new LogBox(feedbackToUser, color);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        boxLog.getChildren().add(logBox.getRoot());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 37,
      "WeomuCat": 5
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/systemtray/NotificationClickActionListener.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.ui.systemtray;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import java.awt.event.ActionEvent;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import java.awt.event.ActionListener;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": " * The Listener responding to a Notification being clicked."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "public class NotificationClickActionListener implements ActionListener {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final Logger logger \u003d LogsCenter.getLogger(SystemTrayCommunicator.class);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     * This Listener\u0027s reaction to an ActionEvent it is listening to being called."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     *     Specifically for this class, this is called whenever a notification is clicked on."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     * @param e The ActionEvent that this Listener is listening to."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public void actionPerformed(ActionEvent e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "         This is currently undefined behaviour for the current milestone."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "         In the future, as things get more developed, this should be replaced with opening up the app."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "         */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        logger.info(\"Notification Clicked\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 26,
      "WeomuCat": 3
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/systemtray/PopupListener.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.ui.systemtray;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " * A listener for new popups to be posted"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "public class PopupListener {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static SystemTrayCommunicator systemTrayCommunicator;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public PopupListener(SystemTrayCommunicator systemTrayCommunicator) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.systemTrayCommunicator \u003d systemTrayCommunicator;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public void notify(PopupNotification popupNotification) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        systemTrayCommunicator.postNewNotification(popupNotification.name, popupNotification.description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 16
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/systemtray/PopupNotification.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.ui.systemtray;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": " * Represents a notification to be posted to the system tray."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "public class PopupNotification {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public final String name;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public final String description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "     * Creates a new PopupNotification with the appropriate name and description."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     * @param name The name to show up when the notification is posted"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     * @param description The description to accompany the name when the notification is posted"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public PopupNotification (String name, String description) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        requireAllNonNull(name, description);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        if (obj instanceof PopupNotification) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            PopupNotification other \u003d (PopupNotification) obj;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            return Objects.equals(this.name, other.name)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                    \u0026\u0026 Objects.equals(this.description, other.description);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 31,
      "WeomuCat": 4
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/systemtray/SystemTrayCommunicator.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.ui.systemtray;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import java.awt.AWTException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import java.awt.Image;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import java.awt.MenuItem;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import java.awt.PopupMenu;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import java.awt.SystemTray;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import java.awt.Toolkit;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import java.awt.TrayIcon;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import java.awt.TrayIcon.MessageType;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.MainApp;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": " * Controls interactions between the main program and the System Tray."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "public class SystemTrayCommunicator {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final Logger logger \u003d LogsCenter.getLogger(SystemTrayCommunicator.class);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    private static final String TRAY_ICON_NAME \u003d \"Horo\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    private static final String TRAY_ICON_IMAGE_PATH \u003d \"/images/system_tray_icon.png\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    private static final String NOTIFICATIONS_ON_TOOLTIP \u003d \"Notifications switched on\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    private static final String NOTIFICATIONS_OFF_TOOLTIP \u003d \"Notifications switched off\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    private static TrayIcon trayIcon;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    private static boolean systemTrayIsSupported;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    private boolean notificationsSwitchedOn \u003d true;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public SystemTrayCommunicator() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        this.initialise();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     * Sets up the System Tray app, if applicable."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private void initialise() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        systemTrayIsSupported \u003d SystemTray.isSupported();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        if (systemTrayIsSupported) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            logger.info(\"System tray is supported.\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            SystemTray tray \u003d SystemTray.getSystemTray();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            trayIcon \u003d getTrayIcon();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            resetToolTipMessage();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                tray.add(trayIcon);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            } catch (AWTException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                logger.warning(e.toString());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            logger.info(\"System tray is not supported.\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     * Posts a new notification to the System Tray."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     * @param name The name of the notification."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     * @param description The description of the notification."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public void postNewNotification(String name, String description) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        if (systemTrayIsSupported) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            trayIcon.displayMessage(name, description, MessageType.INFO);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     * Tells the System Tray Communicator that notifications are switched off."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public void switchOnNotifications() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        // This is purely a cosmetic change"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        notificationsSwitchedOn \u003d true;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        resetToolTipMessage();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     * Tells the SystemTrayCommunicator that notifications are switched off."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    public void switchOffNotifications() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        // This is purely a cosmetic change"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        notificationsSwitchedOn \u003d false;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        resetToolTipMessage();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     * Changes the tooltip message based on whether notifications are switched on or off."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    private void resetToolTipMessage() {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        if (notificationsSwitchedOn) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            trayIcon.setToolTip(NOTIFICATIONS_ON_TOOLTIP);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            trayIcon.setToolTip(NOTIFICATIONS_OFF_TOOLTIP);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     * Creates a new icon on the System Tray, and returns its reference."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     * @return The reference to a new System Tray icon."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    private static TrayIcon getTrayIcon() {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        TrayIcon trayIcon \u003d new TrayIcon(getImage(), TRAY_ICON_NAME, getPopupMenu());"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        trayIcon.addActionListener(getNotificationClickActionListener());"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        return trayIcon;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     * Locates and returns the image to be used as the Tray Icon."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     * @return the image to be used as the Tray Icon."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    private static Image getImage() {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        return Toolkit.getDefaultToolkit().getImage(MainApp.class.getResource(TRAY_ICON_IMAGE_PATH));"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     * Creates and returns the PopupMenu designed for this app."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     * @return The PopupMenu designed for the System Tray app."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    private static PopupMenu getPopupMenu() {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        PopupMenu popup \u003d new PopupMenu();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        // Create pop-up menu items"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        MenuItem aboutItem \u003d new MenuItem(\"Hi this is Horo.\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        // Add created items to the pop-up menu"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        popup.add(aboutItem);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        return popup;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     * Creates and returns an instance of the ClickActionListener used for this app."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     *     The listener will be called whenever the user clicks on a notification."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     * @return An instance of the ClickActionListener used for this app."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    private static NotificationClickActionListener getNotificationClickActionListener() {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        return new NotificationClickActionListener();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 140,
      "WeomuCat": 7
    }
  },
  {
    "path": "src/main/resources/view/Calendar.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.ColumnConstraints?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.GridPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.RowConstraints?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.StackPane?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003cVBox fx:id\u003d\"calendarBase\" style\u003d\"-fx-background-radius: 8;\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003cStackPane minHeight\u003d\"50.0\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003cchildren\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cLabel fx:id\u003d\"monthYearTitle\" text\u003d\"\\$month\" textFill\u003d\"WHITE\"\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003cfont\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cFont size\u003d\"14.0\" /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/font\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003c/Label\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003c/children\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003cStackPane\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003cchildren\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cGridPane minHeight\u003d\"25.0\"\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003ccolumnConstraints\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cColumnConstraints halignment\u003d\"CENTER\" hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"50.0\" minWidth\u003d\"50.0\" prefWidth\u003d\"50.0\" /\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cColumnConstraints halignment\u003d\"CENTER\" hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"50.0\" minWidth\u003d\"50.0\" prefWidth\u003d\"50.0\" /\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cColumnConstraints halignment\u003d\"CENTER\" hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"50.0\" minWidth\u003d\"50.0\" prefWidth\u003d\"50.0\" /\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cColumnConstraints halignment\u003d\"CENTER\" hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"50.0\" minWidth\u003d\"50.0\" prefWidth\u003d\"50.0\" /\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cColumnConstraints halignment\u003d\"CENTER\" hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"50.0\" minWidth\u003d\"50.0\" prefWidth\u003d\"50.0\" /\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cColumnConstraints halignment\u003d\"CENTER\" hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"50.0\" minWidth\u003d\"50.0\" prefWidth\u003d\"50.0\" /\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cColumnConstraints halignment\u003d\"CENTER\" hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"50.0\" minWidth\u003d\"50.0\" prefWidth\u003d\"50.0\" /\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/columnConstraints\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003crowConstraints\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cRowConstraints maxHeight\u003d\"50.0\" minHeight\u003d\"50.0\" prefHeight\u003d\"50.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/rowConstraints\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003cchildren\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cLabel fx:id\u003d\"monday\" contentDisplay\u003d\"CENTER\" text\u003d\"M\" textAlignment\u003d\"CENTER\" textFill\u003d\"WHITE\" /\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cLabel fx:id\u003d\"tuesday\" contentDisplay\u003d\"CENTER\" text\u003d\"T\" textAlignment\u003d\"CENTER\" textFill\u003d\"WHITE\" GridPane.columnIndex\u003d\"1\" /\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cLabel fx:id\u003d\"wednesday\" contentDisplay\u003d\"CENTER\" text\u003d\"W\" textAlignment\u003d\"CENTER\" textFill\u003d\"WHITE\" GridPane.columnIndex\u003d\"2\" /\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cLabel fx:id\u003d\"thursday\" contentDisplay\u003d\"CENTER\" text\u003d\"T\" textAlignment\u003d\"CENTER\" textFill\u003d\"WHITE\" GridPane.columnIndex\u003d\"3\" /\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cLabel fx:id\u003d\"friday\" contentDisplay\u003d\"CENTER\" text\u003d\"F\" textAlignment\u003d\"CENTER\" textFill\u003d\"WHITE\" GridPane.columnIndex\u003d\"4\" /\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cLabel fx:id\u003d\"saturday\" contentDisplay\u003d\"CENTER\" text\u003d\"S\" textAlignment\u003d\"CENTER\" textFill\u003d\"WHITE\" GridPane.columnIndex\u003d\"5\" /\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cLabel fx:id\u003d\"sunday\" contentDisplay\u003d\"CENTER\" text\u003d\"S\" textAlignment\u003d\"CENTER\" textFill\u003d\"WHITE\" GridPane.columnIndex\u003d\"6\" /\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/children\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003c/GridPane\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003c/children\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003cStackPane\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003cchildren\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cGridPane fx:id\u003d\"calendarGrid\" alignment\u003d\"CENTER\"\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003ccolumnConstraints\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cColumnConstraints halignment\u003d\"CENTER\" hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"50.0\" minWidth\u003d\"50.0\" prefWidth\u003d\"50.0\" /\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cColumnConstraints halignment\u003d\"CENTER\" hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"50.0\" minWidth\u003d\"50.0\" prefWidth\u003d\"50.0\" /\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cColumnConstraints halignment\u003d\"CENTER\" hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"50.0\" minWidth\u003d\"50.0\" prefWidth\u003d\"50.0\" /\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cColumnConstraints halignment\u003d\"CENTER\" hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"50.0\" minWidth\u003d\"50.0\" prefWidth\u003d\"50.0\" /\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cColumnConstraints halignment\u003d\"CENTER\" hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"50.0\" minWidth\u003d\"50.0\" prefWidth\u003d\"50.0\" /\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cColumnConstraints halignment\u003d\"CENTER\" hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"50.0\" minWidth\u003d\"50.0\" prefWidth\u003d\"50.0\" /\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cColumnConstraints halignment\u003d\"CENTER\" hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"50.0\" minWidth\u003d\"50.0\" prefWidth\u003d\"50.0\" /\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/columnConstraints\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003crowConstraints\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cRowConstraints maxHeight\u003d\"50.0\" minHeight\u003d\"50.0\" prefHeight\u003d\"50.0\" valignment\u003d\"CENTER\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cRowConstraints maxHeight\u003d\"50.0\" minHeight\u003d\"50.0\" prefHeight\u003d\"50.0\" valignment\u003d\"CENTER\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cRowConstraints maxHeight\u003d\"50.0\" minHeight\u003d\"50.0\" prefHeight\u003d\"50.0\" valignment\u003d\"CENTER\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cRowConstraints maxHeight\u003d\"50.0\" minHeight\u003d\"50.0\" prefHeight\u003d\"50.0\" valignment\u003d\"CENTER\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cRowConstraints maxHeight\u003d\"50.0\" minHeight\u003d\"50.0\" prefHeight\u003d\"50.0\" valignment\u003d\"CENTER\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cRowConstraints maxHeight\u003d\"50.0\" minHeight\u003d\"50.0\" prefHeight\u003d\"50.0\" valignment\u003d\"CENTER\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/rowConstraints\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003cStackPane.margin\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cInsets top\u003d\"20.0\" /\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/StackPane.margin\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003c/GridPane\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003c/children\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c/VBox\u003e"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 77
    }
  },
  {
    "path": "src/main/resources/view/CalendarGridDay.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.StackPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.shape.Circle?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003cStackPane fx:id\u003d\"calendarGridDayBase\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003cCircle fx:id\u003d\"calendarDayCircle\" fill\u003d\"#ff7777\" radius\u003d\"14.0\" stroke\u003d\"#ffffff00\" strokeType\u003d\"INSIDE\" /\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003cLabel fx:id\u003d\"calendarDay\" alignment\u003d\"CENTER\" contentDisplay\u003d\"CENTER\" text\u003d\"\\$\" textAlignment\u003d\"CENTER\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c/StackPane\u003e"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 12
    }
  },
  {
    "path": "src/main/resources/view/CalendarPanel.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.ColumnConstraints?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.GridPane?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.RowConstraints?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.StackPane?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003cVBox xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003cGridPane fx:id\u003d\"calendarPanelGrid\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        \u003ccolumnConstraints\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "          \u003cColumnConstraints /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "          \u003cColumnConstraints fillWidth\u003d\"false\" hgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        \u003c/columnConstraints\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        \u003crowConstraints\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "          \u003cRowConstraints /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "          \u003cRowConstraints vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        \u003c/rowConstraints\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003cchildren\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cStackPane fx:id\u003d\"timelinePlaceholder\" alignment\u003d\"TOP_LEFT\" prefWidth\u003d\"20.0\" GridPane.halignment\u003d\"LEFT\" GridPane.hgrow\u003d\"ALWAYS\" GridPane.rowSpan\u003d\"2\" GridPane.valignment\u003d\"TOP\" GridPane.vgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003cGridPane.margin\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cInsets right\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/GridPane.margin\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cStackPane alignment\u003d\"CENTER_RIGHT\" prefHeight\u003d\"150.0\" prefWidth\u003d\"200.0\" GridPane.columnIndex\u003d\"1\"\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003cchildren\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cVBox fx:id\u003d\"calendarScreenPlaceholder\" alignment\u003d\"CENTER_RIGHT\" fillWidth\u003d\"false\" /\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/children\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003cGridPane.margin\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cInsets /\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/GridPane.margin\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cStackPane fx:id\u003d\"upcomingViewPlaceholder\" alignment\u003d\"CENTER_RIGHT\" prefHeight\u003d\"150.0\" prefWidth\u003d\"200.0\" GridPane.columnIndex\u003d\"1\" GridPane.rowIndex\u003d\"1\"\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003cGridPane.margin\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cInsets top\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/GridPane.margin\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003c/children\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003c/GridPane\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c/VBox\u003e"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 43
    }
  },
  {
    "path": "src/main/resources/view/CalendarScreen.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.ColumnConstraints?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.GridPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.RowConstraints?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.StackPane?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003cVBox fx:id\u003d\"calendarBase\" style\u003d\"-fx-background-radius: 8;\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003cStackPane minHeight\u003d\"35.0\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003cchildren\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cLabel fx:id\u003d\"monthYearTitle\" text\u003d\"\\$month\" textFill\u003d\"WHITE\" underline\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003cfont\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cFont size\u003d\"14.0\" /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/font\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003c/Label\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003c/children\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003cStackPane\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003cchildren\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cGridPane minHeight\u003d\"25.0\"\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003ccolumnConstraints\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cColumnConstraints halignment\u003d\"CENTER\" hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"50.0\" minWidth\u003d\"50.0\" prefWidth\u003d\"50.0\" /\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cColumnConstraints halignment\u003d\"CENTER\" hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"50.0\" minWidth\u003d\"50.0\" prefWidth\u003d\"50.0\" /\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cColumnConstraints halignment\u003d\"CENTER\" hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"50.0\" minWidth\u003d\"50.0\" prefWidth\u003d\"50.0\" /\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cColumnConstraints halignment\u003d\"CENTER\" hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"50.0\" minWidth\u003d\"50.0\" prefWidth\u003d\"50.0\" /\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cColumnConstraints halignment\u003d\"CENTER\" hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"50.0\" minWidth\u003d\"50.0\" prefWidth\u003d\"50.0\" /\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cColumnConstraints halignment\u003d\"CENTER\" hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"50.0\" minWidth\u003d\"50.0\" prefWidth\u003d\"50.0\" /\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cColumnConstraints halignment\u003d\"CENTER\" hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"50.0\" minWidth\u003d\"50.0\" prefWidth\u003d\"50.0\" /\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/columnConstraints\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003crowConstraints\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cRowConstraints maxHeight\u003d\"50.0\" minHeight\u003d\"50.0\" prefHeight\u003d\"50.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/rowConstraints\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003cchildren\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cLabel fx:id\u003d\"monday\" contentDisplay\u003d\"CENTER\" text\u003d\"M\" textAlignment\u003d\"CENTER\" textFill\u003d\"WHITE\" /\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cLabel fx:id\u003d\"tuesday\" contentDisplay\u003d\"CENTER\" text\u003d\"T\" textAlignment\u003d\"CENTER\" textFill\u003d\"WHITE\" GridPane.columnIndex\u003d\"1\" /\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cLabel fx:id\u003d\"wednesday\" contentDisplay\u003d\"CENTER\" text\u003d\"W\" textAlignment\u003d\"CENTER\" textFill\u003d\"WHITE\" GridPane.columnIndex\u003d\"2\" /\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cLabel fx:id\u003d\"thursday\" contentDisplay\u003d\"CENTER\" text\u003d\"T\" textAlignment\u003d\"CENTER\" textFill\u003d\"WHITE\" GridPane.columnIndex\u003d\"3\" /\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cLabel fx:id\u003d\"friday\" contentDisplay\u003d\"CENTER\" text\u003d\"F\" textAlignment\u003d\"CENTER\" textFill\u003d\"WHITE\" GridPane.columnIndex\u003d\"4\" /\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cLabel fx:id\u003d\"saturday\" contentDisplay\u003d\"CENTER\" text\u003d\"S\" textAlignment\u003d\"CENTER\" textFill\u003d\"WHITE\" GridPane.columnIndex\u003d\"5\" /\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cLabel fx:id\u003d\"sunday\" contentDisplay\u003d\"CENTER\" text\u003d\"S\" textAlignment\u003d\"CENTER\" textFill\u003d\"WHITE\" GridPane.columnIndex\u003d\"6\" /\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/children\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003c/GridPane\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003c/children\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003cStackPane\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003cchildren\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cGridPane fx:id\u003d\"calendarGrid\" alignment\u003d\"CENTER\"\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003ccolumnConstraints\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cColumnConstraints halignment\u003d\"CENTER\" hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"50.0\" minWidth\u003d\"50.0\" prefWidth\u003d\"50.0\" /\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cColumnConstraints halignment\u003d\"CENTER\" hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"50.0\" minWidth\u003d\"50.0\" prefWidth\u003d\"50.0\" /\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cColumnConstraints halignment\u003d\"CENTER\" hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"50.0\" minWidth\u003d\"50.0\" prefWidth\u003d\"50.0\" /\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cColumnConstraints halignment\u003d\"CENTER\" hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"50.0\" minWidth\u003d\"50.0\" prefWidth\u003d\"50.0\" /\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cColumnConstraints halignment\u003d\"CENTER\" hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"50.0\" minWidth\u003d\"50.0\" prefWidth\u003d\"50.0\" /\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cColumnConstraints halignment\u003d\"CENTER\" hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"50.0\" minWidth\u003d\"50.0\" prefWidth\u003d\"50.0\" /\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cColumnConstraints halignment\u003d\"CENTER\" hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"50.0\" minWidth\u003d\"50.0\" prefWidth\u003d\"50.0\" /\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/columnConstraints\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003crowConstraints\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cRowConstraints maxHeight\u003d\"50.0\" minHeight\u003d\"50.0\" prefHeight\u003d\"50.0\" valignment\u003d\"CENTER\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cRowConstraints maxHeight\u003d\"50.0\" minHeight\u003d\"50.0\" prefHeight\u003d\"50.0\" valignment\u003d\"CENTER\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cRowConstraints maxHeight\u003d\"50.0\" minHeight\u003d\"50.0\" prefHeight\u003d\"50.0\" valignment\u003d\"CENTER\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cRowConstraints maxHeight\u003d\"50.0\" minHeight\u003d\"50.0\" prefHeight\u003d\"50.0\" valignment\u003d\"CENTER\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cRowConstraints maxHeight\u003d\"50.0\" minHeight\u003d\"50.0\" prefHeight\u003d\"50.0\" valignment\u003d\"CENTER\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cRowConstraints maxHeight\u003d\"50.0\" minHeight\u003d\"50.0\" prefHeight\u003d\"50.0\" valignment\u003d\"CENTER\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/rowConstraints\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003cStackPane.margin\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cInsets top\u003d\"20.0\" /\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/StackPane.margin\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003c/GridPane\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003c/children\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c/VBox\u003e"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 77
    }
  },
  {
    "path": "src/main/resources/view/CardHolder.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.StackPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003cStackPane fx:id\u003d\"eventCardHolderBase\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003cVBox\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cStackPane fx:id\u003d\"line0\" alignment\u003d\"CENTER_LEFT\" maxHeight\u003d\"1.5\" minHeight\u003d\"1.5\" prefHeight\u003d\"1.5\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cInsets left\u003d\"10.0\" right\u003d\"20.0\" top\u003d\"45.0\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/VBox.margin\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cStackPane\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003cchildren\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cVBox fx:id\u003d\"timeBox\" spacing\u003d\"2.0\"\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                     \u003cStackPane.margin\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        \u003cInsets /\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                     \u003c/StackPane.margin\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003c/VBox\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/children\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cInsets left\u003d\"10.0\" right\u003d\"20.0\" top\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/VBox.margin\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003c/children\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003c/VBox\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c/StackPane\u003e"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 31
    }
  },
  {
    "path": "src/main/resources/view/CardTag.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003cLabel fx:id\u003d\"cardTag\" text\u003d\"Tag\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "   \u003cpadding\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003cInsets bottom\u003d\"4.0\" left\u003d\"4.0\" right\u003d\"4.0\" top\u003d\"4.0\" /\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "   \u003c/padding\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c/Label\u003e"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 11
    }
  },
  {
    "path": "src/main/resources/view/CommandBox.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.StackPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003cStackPane maxHeight\u003d\"50.0\" minHeight\u003d\"50.0\" prefHeight\u003d\"50.0\" style\u003d\"-fx-background-color: #262626; -fx-background-radius: 8;\" styleClass\u003d\"stack-pane\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "  \u003cTextField fx:id\u003d\"commandTextField\" maxHeight\u003d\"50.0\" minHeight\u003d\"50.0\" onAction\u003d\"#handleCommandEntered\" prefHeight\u003d\"50.0\" promptText\u003d\"Enter command here...\" /\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/StackPane\u003e"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 2,
      "-": 6
    }
  },
  {
    "path": "src/main/resources/view/DarkTheme.css",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/** Constants **/"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "@font-face {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    font-family: Roboto Regular;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    src: url(\"Roboto-Regular.ttf\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "@font-face {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    font-family: Roboto Thin;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    src: url(\"Roboto-Thin.ttf\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "@font-face {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    font-family: Roboto Medium;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    src: url(\"Roboto-Medium.ttf\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "@font-face {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    font-family: Roboto Medium;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    src: url(\"Roboto-MediumItalic.ttf\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ".root {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    /** Colors **/"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -backgroundColor: #121212;  /** Default Dark **/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -surfaceColor: #1E1E1E;     /** Lighter Dark **/"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -topColor: #383838;         /** Lightest Dark **/"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -primaryColor: #262833;     /** Dark tinted blue **/"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -logBoxColor: #4ACFAC;      /** Light Green **/"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -errorColor: #CF6679;       /** Red Error **/"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -lineColor: #FF7597;        /** Some Redish Pink **/"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -calendarDayColor: #607080; /** Light Purple Blue Box **/"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -welcomeColor: #7FC9FD;     /** Light Sky Blue **/"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -eventCardColor: #FFAF5F;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -taskCardColor: #b5e6d4;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -taskDoneCardColor: #e4fac3;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -currentDateColor: #0D6B54;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -eventTagColor: #7FC9FD;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -taskTagColor: #E6BEB5;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -taskDoneTagColor: #99FFC0;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -secondaryColor: #FFFFFF;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ".background {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-background-color: #121212;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    background-color: #121212;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ".label {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-family: \"Roboto Regular\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-text-fill: -secondaryColor;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-opacity: 0.9;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ".text-field {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-size: 12pt;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-family: \"Roboto Regular\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "/*"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": " * Metro style Push Button"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": " * Author: Pedro Duque Vieira"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": " * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ".button {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-padding: 5 22 5 22;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-color: #e2e2e2;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-width: 2;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-radius: 0;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: #1d1d1d;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-family: \"Roboto Regular\", Helvetica, Arial, sans-serif;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-size: 11pt;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-text-fill: #d8d8d8;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-insets: 0 0 0 0, 0, 1, 2;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ".button:hover {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: #3a3a3a;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ".button:pressed, .button:default:hover:pressed {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "  -fx-background-color: secondaryColor;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "  -fx-text-fill: #1d1d1d;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ".button:focused {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-border-color: -secondaryColor, -secondaryColor;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-width: 1, 1;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-style: solid, segments(1, 1);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-radius: 0, 0;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-insets: 1 1 1 1, 0;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ".button:disabled, .button:default:disabled {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-opacity: 0.4;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: #1d1d1d;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-text-fill: -secondaryColor;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ".button:default {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: -fx-focus-color;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-text-fill: #ffffff;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ".button:default:hover {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: derive(-fx-focus-color, 30%);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ".scroll-bar {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: derive(#1d1d1d, 20%);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ".scroll-bar .thumb {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: derive(#1d1d1d, 50%);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-insets: 3;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ".scroll-bar .increment-button, .scroll-bar .decrement-button {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: transparent;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-padding: 0 0 0 0;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-shape: \" \";"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-padding: 1 8 1 8;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": ".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-padding: 8 1 8 1;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "#cardPane {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: transparent;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-width: 0;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "#commandTypeLabel {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-size: 11px;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-text-fill: #F70D1A;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "#commandTextField {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-background-color: transparent #1F1F1F;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-insets: 0;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-background-radius: 12;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-insets: 0;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-width: 1;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-family: -regularFont;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-size: 13pt;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-text-fill: -secondaryColor;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/** For Main Window **/"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#viewTitlePane {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-background-color: -surfaceColor;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#viewTitle {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-family: \"Roboto Medium\";"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-size: 24px;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-style: italic;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#popUp {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-family: \"Roboto Light\";"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-size: 12pt;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-text-fill: -primaryColor;"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-background-color: -logBoxColor;"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-background-radius: 8;"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#gridManager {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-background-color: -backgroundColor;"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/** For LogPanel **/"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#logPanelBase, #scrollLog, #boxLog {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-background-color: -surfaceColor;"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-base: -surfaceColor;"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#logPanelBase, #scrollLog {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-background-radius: 8;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#scrollLog .corner {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-background-color: transparent;"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#box {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-family: \"Roboto Regular\";"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-size: 11pt;"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-text-fill: -primaryColor;"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-background-color: -logBoxColor;"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-background-radius: 8;"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-background-insets: 0-10;"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/** For CalendarPanel **/"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#calendarDay {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-family: \"Roboto Medium\";"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-size: 11pt;"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-text-fill: -secondaryColor;"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#calendarDayCircle {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-opacity: 0;"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-fill: -calendarDayColor;"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#calendarBase {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-background-color: -surfaceColor;"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#monday, #tuesday, #wednesday, #thursday, #friday, #saturday, #sunday {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-family: \"Roboto Medium\";"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-size: 11pt;"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#monthYearTitle, #timelineTitle, #upcomingViewTitle {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-family: \"Roboto Medium\";"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-size: 13pt;"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/** For Timeline **/"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#timelineBase, #timelineScrollPane, #timelineBox {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-background-color: -surfaceColor;"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#timelineBase, #timelineScrollPane {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-background-radius: 8;"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#detailsBase {"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-background-color: -backgroundColor;"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#timelineGrid {"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-background-color: -surfaceColor;"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#line0, #line1, #line2, #line3, #line4, #line5,"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#line6, #line7, #line8, #line9, #line10, #line11,"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#line12, #line13, #line14, #line15, #line16, #line17,"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#line18, #line19, #line20, #line21, #line22, #line23 {"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-background-color: -lineColor;"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-opacity: 0.6;"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/** For Upcoming View **/"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#upcomingViewBase {"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-background-color: -surfaceColor;"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-background-radius: 8;"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/** For List Panel **/"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#listPanelBase, #listPanelGrid {"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-backgroundColor: -transparent;"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#eventListPlaceholder, #taskListPlaceholder {"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-background-color: -surfaceColor;"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-background-radius: 8;"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#eventList, #taskList, #eventScrollPane, #taskScrollPane {"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-background-color: -surfaceColor;"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#eventListTitle, #taskListTitle {"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-family: \"Roboto Medium\";"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-text-fill: -secondaryColor;"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-size: 14pt;"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/** For Event Card **/"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#eventCardBase {"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-background-color: -eventCardColor;"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-background-radius: 8;"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-effect: dropshadow(three-pass-box, -backgroundColor, 8, 0.5, 0, 0);"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#eventName {"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-family: \"Roboto Medium\";"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-text-fill: -primaryColor;"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-size: 14pt;"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#eventStartDate, #eventEndDate, #eventRemindDate {"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-family: \"Roboto Regular\";"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-text-fill: -primaryColor;"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-size: 10pt;"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#eventIndex {"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-family: \"Roboto Medium\";"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-text-fill: -primaryColor;"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-size: 10pt;"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/** For Task Card **/"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#taskCardBase {"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-background-color: -taskCardColor;"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-background-radius: 8;"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-effect: dropshadow(three-pass-box, -backgroundColor, 8, 0.5, 0, 0);"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#taskName {"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-family: \"Roboto Medium\";"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-text-fill: -primaryColor;"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-size: 14pt;"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#taskDueDate {"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-family: \"Roboto Regular\";"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-text-fill: -primaryColor;"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-size: 10pt;"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#taskIndex {"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-family: \"Roboto Medium\";"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-text-fill: -primaryColor;"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-size: 10pt;"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/** For CardTag **/"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#cardTag {"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-background-color: -eventTagColor;"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-background-radius: 8;"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-family: \"Roboto Regular\";"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-text-fill: -primaryColor;"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-size: 10pt;"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/** For Upcoming Event Card **/"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#upcomingEventBase {"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-background-color: -eventCardColor;"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-background-radius: 8;"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-effect: dropshadow(three-pass-box, -backgroundColor, 8, 0.5, 0, 0);"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#upcomingWeekDay {"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-family: \"Roboto Light\";"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-text-fill: -secondaryColor;"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-size: 10pt;"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#upcomingDay {"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-family: \"Roboto Medium\";"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-text-fill: -secondaryColor;"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-size: 14pt;"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#upcomingEventName {"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-family: \"Roboto Light\";"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-text-fill: -primaryColor;"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-size: 13pt;"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "/** For Upcoming Task Card **/"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#upcomingTaskBase {"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-background-color: -taskCardColor;"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-background-radius: 8;"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-effect: dropshadow(three-pass-box, -backgroundColor, 8, 0.5, 0, 0);"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#upcomingWeekDay {"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-family: \"Roboto Light\";"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-text-fill: -secondaryColor;"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-size: 10pt;"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#upcomingDay {"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-family: \"Roboto Medium\";"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-text-fill: -secondaryColor;"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-size: 14pt;"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "#upcomingTaskName {"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-family: \"Roboto Light\";"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-text-fill: -primaryColor;"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-font-size: 13pt;"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 196,
      "-": 189
    }
  },
  {
    "path": "src/main/resources/view/EventCard.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.StackPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003cStackPane fx:id\u003d\"eventCardBase\" alignment\u003d\"TOP_LEFT\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003cVBox fx:id\u003d\"eventDetails\" style\u003d\"-fx-background-color: transparent;\" StackPane.alignment\u003d\"CENTER_LEFT\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003cchildren\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cStackPane fx:id\u003d\"eventIndexBase\" alignment\u003d\"TOP_LEFT\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003cchildren\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cLabel fx:id\u003d\"eventName\" text\u003d\"eventName\" wrapText\u003d\"true\" StackPane.alignment\u003d\"CENTER_LEFT\"\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                     \u003cStackPane.margin\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        \u003cInsets left\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                     \u003c/StackPane.margin\u003e\u003c/Label\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cLabel fx:id\u003d\"eventIndex\" alignment\u003d\"TOP_RIGHT\" text\u003d\"eventIndex\" wrapText\u003d\"true\" StackPane.alignment\u003d\"TOP_RIGHT\"\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                     \u003cStackPane.margin\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        \u003cInsets right\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                     \u003c/StackPane.margin\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003c/Label\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/children\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cInsets /\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/VBox.margin\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cStackPane fx:id\u003d\"eventStartDateBase\" alignment\u003d\"TOP_LEFT\"\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003cchildren\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cLabel fx:id\u003d\"eventStartDate\" text\u003d\"startDate\" wrapText\u003d\"true\" StackPane.alignment\u003d\"CENTER_LEFT\"\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                     \u003cStackPane.margin\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        \u003cInsets left\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                     \u003c/StackPane.margin\u003e\u003c/Label\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/children\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cInsets /\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/VBox.margin\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cStackPane fx:id\u003d\"eventEndDateBase\" alignment\u003d\"TOP_LEFT\"\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003cchildren\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cLabel fx:id\u003d\"eventEndDate\" text\u003d\"endDate\" wrapText\u003d\"true\" StackPane.alignment\u003d\"CENTER_LEFT\"\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                     \u003cStackPane.margin\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        \u003cInsets left\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                     \u003c/StackPane.margin\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003c/Label\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/children\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cInsets /\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/VBox.margin\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cStackPane fx:id\u003d\"eventRemindDateBase\" alignment\u003d\"TOP_LEFT\"\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003cchildren\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cLabel fx:id\u003d\"eventRemindDate\" text\u003d\"remindDate\" wrapText\u003d\"true\" StackPane.alignment\u003d\"CENTER_LEFT\"\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                     \u003cStackPane.margin\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        \u003cInsets left\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                     \u003c/StackPane.margin\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003c/Label\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/children\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cInsets /\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/VBox.margin\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cStackPane fx:id\u003d\"eventTagsBase\" alignment\u003d\"TOP_LEFT\"\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cInsets /\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/VBox.margin\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003cchildren\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cHBox fx:id\u003d\"eventTags\" spacing\u003d\"5.0\" StackPane.alignment\u003d\"CENTER_LEFT\"\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                     \u003cStackPane.margin\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        \u003cInsets left\u003d\"12.0\" /\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                     \u003c/StackPane.margin\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003c/HBox\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/children\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003c/children\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003cStackPane.margin\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cInsets bottom\u003d\"5.0\" top\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003c/StackPane.margin\u003e"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003c/VBox\u003e"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "   \u003copaqueInsets\u003e"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003cInsets /\u003e"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "   \u003c/opaqueInsets\u003e"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c/StackPane\u003e"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 85
    }
  },
  {
    "path": "src/main/resources/view/EventListCard.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.ColumnConstraints?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.FlowPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.GridPane?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.RowConstraints?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        \u003ccolumnConstraints\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        \u003c/columnConstraints\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        \u003cVBox alignment\u003d\"CENTER_LEFT\" GridPane.columnIndex\u003d\"0\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cpadding\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003c/padding\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003c/HBox\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cFlowPane fx:id\u003d\"tags\" /\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cLabel fx:id\u003d\"dateTime\" styleClass\u003d\"cell_small_label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        \u003c/VBox\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        \u003crowConstraints\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cRowConstraints /\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        \u003c/rowConstraints\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    \u003c/GridPane\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c/HBox\u003e"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 31
    }
  },
  {
    "path": "src/main/resources/view/EventListPanel.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.StackPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003cVBox style\u003d\"-fx-background-color: transparent;\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003cStackPane style\u003d\"-fx-background-color: transparent;\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003cchildren\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cLabel fx:id\u003d\"eventListTitle\" text\u003d\"Event List\" textAlignment\u003d\"CENTER\" StackPane.alignment\u003d\"TOP_CENTER\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003cfont\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cFont size\u003d\"14.0\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/font\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003c/Label\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003c/children\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003cStackPane\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003cchildren\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cScrollPane fx:id\u003d\"eventScrollPane\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\"\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003ccontent\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cVBox fx:id\u003d\"eventList\" prefHeight\u003d\"1000.0\" spacing\u003d\"2.0\"\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                     \u003cpadding\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                     \u003c/padding\u003e\u003c/VBox\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/content\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003c/children\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/VBox\u003e"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 29,
      "-": 5
    }
  },
  {
    "path": "src/main/resources/view/Extensions.css",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ".error {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-text-fill: #d06651 !important; /* The error class should always override the default text-fill style */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ".list-cell:empty {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    /* Empty cells will not have alternating colours */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    -fx-background: #2E2E2E;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ".tag-selector {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-width: 1;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-color: white;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-radius: 3;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-radius: 3;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ".tooltip-text {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-text-fill: white;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 1,
      "-": 19
    }
  },
  {
    "path": "src/main/resources/view/ListPanel.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.ColumnConstraints?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.GridPane?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.RowConstraints?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.StackPane?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003cVBox fx:id\u003d\"listPanelBase\" style\u003d\"-fx-background-color: transparent;\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003cGridPane fx:id\u003d\"listPanelGrid\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        \u003ccolumnConstraints\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "          \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "          \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        \u003c/columnConstraints\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        \u003crowConstraints\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "          \u003cRowConstraints prefHeight\u003d\"1000.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        \u003c/rowConstraints\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003cchildren\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cStackPane fx:id\u003d\"eventListPlaceholder\" prefHeight\u003d\"150.0\" prefWidth\u003d\"200.0\"\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003copaqueInsets\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cInsets /\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/opaqueInsets\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003cGridPane.margin\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cInsets right\u003d\"8.0\" /\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/GridPane.margin\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cStackPane fx:id\u003d\"taskListPlaceholder\" prefHeight\u003d\"150.0\" prefWidth\u003d\"200.0\" GridPane.columnIndex\u003d\"1\"\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003copaqueInsets\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cInsets /\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/opaqueInsets\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003cGridPane.margin\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cInsets left\u003d\"8.0\" /\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/GridPane.margin\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003c/children\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003c/GridPane\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c/VBox\u003e"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 40
    }
  },
  {
    "path": "src/main/resources/view/LogBox.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003cjavafx.scene.layout.HBox fx:id\u003d\"logBoxBase\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      \u003cLabel fx:id\u003d\"box\" alignment\u003d\"TOP_LEFT\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" text\u003d\"Label\" textFill\u003d\"WHITE\" wrapText\u003d\"true\" HBox.hgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "         \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            \u003cInsets left\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "         \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "         \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "         \u003c/padding\u003e\u003c/Label\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   \u003cpadding\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "      \u003cInsets bottom\u003d\"10.0\" top\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "   \u003c/padding\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "\u003c/javafx.scene.layout.HBox\u003e"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 20
    }
  },
  {
    "path": "src/main/resources/view/LogPanel.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003cVBox fx:id\u003d\"logPanelBase\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003cScrollPane fx:id\u003d\"scrollLog\" fitToWidth\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003ccontent\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cVBox fx:id\u003d\"boxLog\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003cpadding\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cInsets left\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/padding\u003e\u003c/VBox\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003c/content\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c/VBox\u003e"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 18
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import java.net.URL?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.Scene?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.image.Image?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.ColumnConstraints?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.GridPane?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.RowConstraints?\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.StackPane?\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.stage.Stage?\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003cfx:root minHeight\u003d\"700.0\" minWidth\u003d\"1000.0\" title\u003d\"Address App\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cicons\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/icons\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cscene\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cScene\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cstylesheets\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003cURL value\u003d\"@DarkTheme.css\" /\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003cURL value\u003d\"@Extensions.css\" /\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/stylesheets\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cVBox fx:id\u003d\"vBoxPane\"\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                \u003cGridPane fx:id\u003d\"gridManager\"\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    \u003ccolumnConstraints\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    \u003c/columnConstraints\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    \u003crowConstraints\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        \u003cRowConstraints vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        \u003cRowConstraints vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        \u003cRowConstraints vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        \u003cRowConstraints vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        \u003cRowConstraints vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    \u003c/rowConstraints\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    \u003cchildren\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        \u003cStackPane fx:id\u003d\"viewTitlePane\" layoutX\u003d\"10.0\" layoutY\u003d\"43.0\" GridPane.rowIndex\u003d\"1\"\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                            \u003cchildren\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                                \u003cLabel fx:id\u003d\"viewTitle\" text\u003d\"View\" textAlignment\u003d\"CENTER\" textFill\u003d\"WHITE\" StackPane.alignment\u003d\"CENTER\"\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                                    \u003cfont\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                                        \u003cFont name\u003d\"Segoe UI Light\" size\u003d\"24.0\" /\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                                    \u003c/font\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                                    \u003cStackPane.margin\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                                        \u003cInsets /\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                                    \u003c/StackPane.margin\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                           \u003cpadding\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                              \u003cInsets bottom\u003d\"5.0\" top\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                           \u003c/padding\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                                \u003c/Label\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                            \u003c/children\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                     \u003cGridPane.margin\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        \u003cInsets bottom\u003d\"8.0\" /\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                     \u003c/GridPane.margin\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        \u003cStackPane fx:id\u003d\"viewPlaceholder\" alignment\u003d\"BOTTOM_LEFT\" GridPane.halignment\u003d\"LEFT\" GridPane.rowIndex\u003d\"2\" GridPane.valignment\u003d\"CENTER\"\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                            \u003cpadding\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                                \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                            \u003c/padding\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" alignment\u003d\"CENTER_LEFT\" GridPane.rowIndex\u003d\"3\"\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                            \u003cpadding\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                                \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                            \u003c/padding\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cStackPane fx:id\u003d\"popUpPanel\" minHeight\u003d\"-Infinity\" prefHeight\u003d\"25.0\" GridPane.vgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                     \u003copaqueInsets\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        \u003cInsets /\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                     \u003c/opaqueInsets\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                     \u003cGridPane.margin\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        \u003cInsets top\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                     \u003c/GridPane.margin\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    \u003c/children\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                \u003c/GridPane\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/VBox\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/Scene\u003e"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/scene\u003e"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 58,
      "-": 22
    }
  },
  {
    "path": "src/main/resources/view/PopUpBox.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003cLabel fx:id\u003d\"popUp\" text\u003d\"Label\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "   \u003cpadding\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "   \u003c/padding\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c/Label\u003e"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 10
    }
  },
  {
    "path": "src/main/resources/view/TaskCard.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.StackPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003cStackPane fx:id\u003d\"taskCardBase\" alignment\u003d\"TOP_LEFT\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        \u003cVBox fx:id\u003d\"taskDetails\" style\u003d\"-fx-background-color: transparent;\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cchildren\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                \u003cStackPane fx:id\u003d\"taskIndexBase\" alignment\u003d\"TOP_LEFT\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    \u003cchildren\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        \u003cLabel fx:id\u003d\"taskName\" text\u003d\"taskName\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                            \u003cStackPane.margin\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                                \u003cInsets left\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                            \u003c/StackPane.margin\u003e\u003c/Label\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cLabel fx:id\u003d\"taskIndex\" alignment\u003d\"TOP_RIGHT\" text\u003d\"taskIndex\" wrapText\u003d\"true\" StackPane.alignment\u003d\"TOP_RIGHT\"\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                     \u003cStackPane.margin\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        \u003cInsets right\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                     \u003c/StackPane.margin\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003c/Label\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    \u003c/children\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        \u003cInsets /\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    \u003c/VBox.margin\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                \u003cStackPane fx:id\u003d\"taskDueDateBase\" alignment\u003d\"TOP_LEFT\"\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    \u003cchildren\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        \u003cLabel fx:id\u003d\"taskDueDate\" text\u003d\"taskDate\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                            \u003cStackPane.margin\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                                \u003cInsets left\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                            \u003c/StackPane.margin\u003e\u003c/Label\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    \u003c/children\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        \u003cInsets /\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    \u003c/VBox.margin\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cStackPane fx:id\u003d\"taskTagsBase\" alignment\u003d\"TOP_LEFT\"\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003cchildren\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cHBox fx:id\u003d\"taskTags\" spacing\u003d\"5.0\" StackPane.alignment\u003d\"CENTER_LEFT\"\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                     \u003cStackPane.margin\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        \u003cInsets left\u003d\"12.0\" /\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                     \u003c/StackPane.margin\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003c/HBox\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/children\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003c/children\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003cStackPane.margin\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cInsets bottom\u003d\"5.0\" top\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003c/StackPane.margin\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        \u003c/VBox\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    \u003copaqueInsets\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        \u003cInsets /\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    \u003c/opaqueInsets\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c/StackPane\u003e"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 58
    }
  },
  {
    "path": "src/main/resources/view/TaskListPanel.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.StackPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003cVBox style\u003d\"-fx-background-color: transparent;\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003cStackPane style\u003d\"-fx-background-color: transparent;\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003cchildren\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cLabel fx:id\u003d\"taskListTitle\" text\u003d\"Task List\" textAlignment\u003d\"CENTER\" StackPane.alignment\u003d\"TOP_CENTER\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003cfont\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cFont size\u003d\"14.0\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/font\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003c/Label\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003c/children\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003cStackPane\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003cchildren\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cScrollPane fx:id\u003d\"taskScrollPane\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\"\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003ccontent\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cVBox fx:id\u003d\"taskList\" prefHeight\u003d\"1000.0\" spacing\u003d\"2.0\"\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                     \u003cpadding\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                     \u003c/padding\u003e\u003c/VBox\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/content\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003c/children\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c/VBox\u003e"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 34
    }
  },
  {
    "path": "src/main/resources/view/TimelineDayView.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.ColumnConstraints?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.GridPane?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.StackPane?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003cVBox fx:id\u003d\"timelineBase\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003cStackPane\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003cchildren\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cLabel fx:id\u003d\"timelineTitle\" alignment\u003d\"CENTER\" contentDisplay\u003d\"CENTER\" text\u003d\"Timeline\" underline\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003cStackPane.margin\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cInsets top\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/StackPane.margin\u003e\u003c/Label\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003c/children\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cInsets /\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003c/VBox.margin\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003cScrollPane fx:id\u003d\"timelineScrollPane\" fitToWidth\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003ccontent\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cGridPane fx:id\u003d\"timelineGrid\"\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "              \u003ccolumnConstraints\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                \u003cColumnConstraints hgrow\u003d\"NEVER\" maxWidth\u003d\"100.0\" minWidth\u003d\"80.0\" prefWidth\u003d\"80.0\" /\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                \u003cColumnConstraints hgrow\u003d\"ALWAYS\" /\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "              \u003c/columnConstraints\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003c/GridPane\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003c/content\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cInsets /\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003c/VBox.margin\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c/VBox\u003e"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 38
    }
  },
  {
    "path": "src/main/resources/view/TimelineLabel.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.StackPane?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003cStackPane alignment\u003d\"TOP_LEFT\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003cLabel fx:id\u003d\"timelineLabel\" alignment\u003d\"TOP_LEFT\" text\u003d\"00:00\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003cpadding\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cInsets bottom\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003c/padding\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003c/Label\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "   \u003cpadding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"20.0\" top\u003d\"35.0\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "   \u003c/padding\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c/StackPane\u003e"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 18
    }
  },
  {
    "path": "src/main/resources/view/TimelineMonthView.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.ColumnConstraints?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.GridPane?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.StackPane?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003cVBox fx:id\u003d\"timelineBase\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        \u003cStackPane\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cchildren\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                \u003cLabel fx:id\u003d\"timelineTitle\" alignment\u003d\"CENTER\" contentDisplay\u003d\"CENTER\" text\u003d\"Timeline\" underline\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003cStackPane.margin\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cInsets top\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/StackPane.margin\u003e\u003c/Label\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003c/children\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                \u003cInsets /\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003c/VBox.margin\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"timelineScrollPane\" fitToWidth\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                \u003cGridPane fx:id\u003d\"timelineGrid\" alignment\u003d\"CENTER_LEFT\"\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    \u003ccolumnConstraints\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        \u003cColumnConstraints hgrow\u003d\"NEVER\" maxWidth\u003d\"60.0\" minWidth\u003d\"60.0\" prefWidth\u003d\"60.0\" /\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        \u003cColumnConstraints hgrow\u003d\"ALWAYS\" /\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    \u003c/columnConstraints\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                \u003c/GridPane\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                \u003cInsets /\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003c/VBox.margin\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c/VBox\u003e"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 38
    }
  },
  {
    "path": "src/main/resources/view/TimelineWeekView.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.ColumnConstraints?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.GridPane?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.StackPane?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003cVBox fx:id\u003d\"timelineBase\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        \u003cStackPane\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cchildren\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                \u003cLabel fx:id\u003d\"timelineTitle\" alignment\u003d\"CENTER\" contentDisplay\u003d\"CENTER\" text\u003d\"Timeline\" underline\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003cStackPane.margin\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cInsets top\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/StackPane.margin\u003e\u003c/Label\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003c/children\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                \u003cInsets /\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003c/VBox.margin\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"timelineScrollPane\" fitToWidth\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                \u003cGridPane fx:id\u003d\"timelineGrid\" alignment\u003d\"CENTER_LEFT\"\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    \u003ccolumnConstraints\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        \u003cColumnConstraints hgrow\u003d\"NEVER\" maxWidth\u003d\"120.0\" minWidth\u003d\"100.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        \u003cColumnConstraints hgrow\u003d\"ALWAYS\" /\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    \u003c/columnConstraints\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                \u003c/GridPane\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                \u003cInsets /\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003c/VBox.margin\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c/VBox\u003e"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 38
    }
  },
  {
    "path": "src/main/resources/view/UpcomingEventCard.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.ColumnConstraints?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.GridPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.RowConstraints?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.StackPane?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003cStackPane fx:id\u003d\"upcomingEventCardBase\" alignment\u003d\"TOP_LEFT\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003cGridPane\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        \u003ccolumnConstraints\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "          \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"-Infinity\" prefWidth\u003d\"50.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "          \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        \u003c/columnConstraints\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        \u003crowConstraints\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "          \u003cRowConstraints vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "          \u003cRowConstraints vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        \u003c/rowConstraints\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003cchildren\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                \u003cStackPane alignment\u003d\"TOP_CENTER\"\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    \u003cchildren\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        \u003cLabel fx:id\u003d\"upcomingWeekDay\" alignment\u003d\"CENTER\" text\u003d\"weekDay\" /\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    \u003c/children\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003cGridPane.margin\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cInsets /\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/GridPane.margin\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003cpadding\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cInsets right\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/padding\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cStackPane alignment\u003d\"TOP_CENTER\" GridPane.rowIndex\u003d\"1\"\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003cchildren\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cLabel fx:id\u003d\"upcomingDay\" alignment\u003d\"CENTER\" text\u003d\"day\" textAlignment\u003d\"CENTER\" /\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/children\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003cpadding\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cInsets right\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/padding\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                \u003cStackPane fx:id\u003d\"upcomingEventBase\" alignment\u003d\"CENTER_LEFT\" GridPane.columnIndex\u003d\"1\" GridPane.rowSpan\u003d\"2\"\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    \u003cchildren\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        \u003cLabel fx:id\u003d\"upcomingEventName\" text\u003d\"eventName\"\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                            \u003cStackPane.margin\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                                \u003cInsets left\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                            \u003c/StackPane.margin\u003e\u003c/Label\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    \u003c/children\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003cGridPane.margin\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cInsets /\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/GridPane.margin\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003cpadding\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cInsets right\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/padding\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003c/children\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003c/GridPane\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    \u003copaqueInsets\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        \u003cInsets /\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    \u003c/opaqueInsets\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c/StackPane\u003e"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 61
    }
  },
  {
    "path": "src/main/resources/view/UpcomingTaskCard.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.ColumnConstraints?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.GridPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.RowConstraints?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.StackPane?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003cStackPane fx:id\u003d\"upcomingTaskCardBase\" alignment\u003d\"TOP_LEFT\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        \u003cGridPane\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003ccolumnConstraints\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"-Infinity\" prefWidth\u003d\"50.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003c/columnConstraints\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003crowConstraints\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                \u003cRowConstraints vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                \u003cRowConstraints vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003c/rowConstraints\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cchildren\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                \u003cStackPane alignment\u003d\"TOP_CENTER\"\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    \u003cchildren\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        \u003cLabel fx:id\u003d\"upcomingWeekDay\" alignment\u003d\"CENTER\" text\u003d\"weekDay\" /\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    \u003c/children\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    \u003cGridPane.margin\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        \u003cInsets /\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    \u003c/GridPane.margin\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    \u003cpadding\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        \u003cInsets right\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    \u003c/padding\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                \u003cStackPane alignment\u003d\"TOP_CENTER\" GridPane.rowIndex\u003d\"1\"\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    \u003cchildren\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        \u003cLabel fx:id\u003d\"upcomingDay\" alignment\u003d\"CENTER\" text\u003d\"day\" textAlignment\u003d\"CENTER\" /\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    \u003c/children\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    \u003cpadding\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        \u003cInsets right\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    \u003c/padding\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                \u003cStackPane fx:id\u003d\"upcomingTaskBase\" alignment\u003d\"CENTER_LEFT\" GridPane.columnIndex\u003d\"1\" GridPane.rowSpan\u003d\"2\"\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    \u003cchildren\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        \u003cLabel fx:id\u003d\"upcomingTaskName\" text\u003d\"taskName\"\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                            \u003cStackPane.margin\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                                \u003cInsets left\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                            \u003c/StackPane.margin\u003e\u003c/Label\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    \u003c/children\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    \u003cGridPane.margin\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        \u003cInsets /\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    \u003c/GridPane.margin\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    \u003cpadding\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                        \u003cInsets right\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                    \u003c/padding\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003c/children\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        \u003c/GridPane\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    \u003copaqueInsets\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "        \u003cInsets /\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    \u003c/opaqueInsets\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c/StackPane\u003e"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 61
    }
  },
  {
    "path": "src/main/resources/view/UpcomingView.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.ColumnConstraints?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.GridPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.RowConstraints?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.StackPane?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kyzure"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003cGridPane fx:id\u003d\"upcomingViewBase\" alignment\u003d\"TOP_CENTER\" maxWidth\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefWidth\u003d\"350.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "  \u003ccolumnConstraints\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "  \u003c/columnConstraints\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "  \u003crowConstraints\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    \u003cRowConstraints valignment\u003d\"TOP\" vgrow\u003d\"NEVER\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "    \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" valignment\u003d\"TOP\" vgrow\u003d\"ALWAYS\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "  \u003c/rowConstraints\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003cStackPane prefWidth\u003d\"350.0\"\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003cchildren\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cLabel fx:id\u003d\"upcomingViewTitle\" alignment\u003d\"TOP_CENTER\" text\u003d\"Upcoming\" underline\u003d\"true\" StackPane.alignment\u003d\"TOP_CENTER\"\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003cStackPane.margin\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cInsets top\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/StackPane.margin\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003c/Label\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003c/children\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003cStackPane fx:id\u003d\"upcomingPanel\" alignment\u003d\"TOP_CENTER\" GridPane.rowIndex\u003d\"1\"\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003cchildren\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cVBox fx:id\u003d\"upcomingList\" prefHeight\u003d\"200.0\" prefWidth\u003d\"100.0\" spacing\u003d\"5.0\" StackPane.alignment\u003d\"TOP_CENTER\"\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003cStackPane.margin\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "                  \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "               \u003c/StackPane.margin\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003c/VBox\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003c/children\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003cGridPane.margin\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "            \u003cInsets top\u003d\"8.0\" /\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "         \u003c/GridPane.margin\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "      \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kyzure"
        },
        "content": "\u003c/GridPane\u003e"
      }
    ],
    "authorContributionMap": {
      "Kyzure": 42
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/AddEventCommandTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static seedu.address.logic.commands.AddEventCommandBuilder.OPTION_END_DATE_TIME;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static seedu.address.logic.commands.AddEventCommandBuilder.OPTION_REMIND_DATE_TIME;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static seedu.address.logic.commands.AddEventCommandBuilder.OPTION_TAGS;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "class AddEventCommandTest {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void build_fullCommand_success() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String description \u003d \"description\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String start \u003d \"11/11/1111 11:00\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String end \u003d \"11/11/1111 12:00\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String remind \u003d \"11/11/1111 08:00\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String[] tags \u003d new String[]{\"a\", \"b\", \"c\"};"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertDoesNotThrow(() -\u003e {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            AddEventCommand.newBuilder(null)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .acceptSentence(description)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .acceptSentence(start)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .acceptSentence(OPTION_END_DATE_TIME)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .acceptSentence(end)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .acceptSentence(OPTION_REMIND_DATE_TIME)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .acceptSentence(remind)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .acceptSentence(OPTION_TAGS)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .acceptSentence(tags[0])"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .acceptSentence(tags[1])"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .acceptSentence(tags[2])"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        });"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void execute_requiredCommand_success() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String description \u003d \"description\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String start \u003d \"11/11/1111 11:00\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertDoesNotThrow(() -\u003e {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            // TODO: Create stub"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            ModelManager model \u003d new ModelManager();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            assertEquals(model.getEventList().size(), 0);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            Command command \u003d AddEventCommand.newBuilder(model)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .acceptSentence(description)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .acceptSentence(start)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            // TODO: Equality test"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            command.execute();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            assertEquals(model.getEventList().size(), 1);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        });"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 58
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/DeleteEventCommandTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static seedu.address.logic.commands.DeleteEventCommandBuilder.OPTION_TAGS;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.model.DateTime;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.events.EventSource;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "class DeleteEventCommandTest {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void build_fullCommand_success() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String[] indexes \u003d new String[]{\"0\", \"1\", \"2\"};"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String[] tags \u003d new String[]{\"a\", \"b\", \"c\"};"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertDoesNotThrow(() -\u003e {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            DeleteEventCommand.newBuilder(null)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .acceptSentence(indexes[0])"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .acceptSentence(indexes[1])"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .acceptSentence(indexes[2])"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .acceptSentence(OPTION_TAGS)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .acceptSentence(tags[0])"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .acceptSentence(tags[1])"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .acceptSentence(tags[2])"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        });"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void execute_emptyCommand_failure() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertThrows(CommandException.class, () -\u003e {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            ModelManager model \u003d new ModelManager();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            assertEquals(model.getEventList().size(), 0);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            Command command \u003d DeleteEventCommand.newBuilder(model)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            command.execute();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            assertEquals(model.getEventList().size(), 0);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        });"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void execute_deleteOne_success() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String index \u003d \"1\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertDoesNotThrow(() -\u003e {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            ModelManager model \u003d new ModelManager();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            model.addEvents("
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                EventSource.newBuilder(\"a\", DateTime.now()).build(),"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                EventSource.newBuilder(\"b\", DateTime.now()).build(),"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                EventSource.newBuilder(\"c\", DateTime.now()).build());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            assertEquals(model.getEventList().size(), 3);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            Command command \u003d DeleteEventCommand.newBuilder(model)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .acceptSentence(index)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            command.execute();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            assertEquals(model.getEventList().size(), 2);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        });"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void execute_deleteOneInvalidIndex_failed() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String[] indexes \u003d new String[]{\"-1\", \"0\", \"1\"};"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        for (String index : indexes) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            assertThrows(CommandException.class, () -\u003e {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                ModelManager model \u003d new ModelManager();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                assertEquals(model.getEventList().size(), 0);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                Command command \u003d DeleteEventCommand.newBuilder(model)"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    .acceptSentence(index)"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    .build();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                command.execute();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            });"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void execute_deleteMultiple_success() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String[] indexes \u003d new String[]{\"1\", \"2\", \"3\"};"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertDoesNotThrow(() -\u003e {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            ModelManager model \u003d new ModelManager();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            model.addEvents("
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                EventSource.newBuilder(\"a\", DateTime.now()).build(),"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                EventSource.newBuilder(\"b\", DateTime.now()).build(),"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                EventSource.newBuilder(\"c\", DateTime.now()).build(),"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                EventSource.newBuilder(\"d\", DateTime.now()).build(),"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                EventSource.newBuilder(\"e\", DateTime.now()).build()"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            );"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            assertEquals(model.getEventList().size(), 5);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            Command command \u003d DeleteEventCommand.newBuilder(model)"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .acceptSentence(indexes[0])"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .acceptSentence(indexes[1])"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .acceptSentence(indexes[2])"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            command.execute();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            assertEquals(model.getEventList().size(), 2);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        });"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void execute_deleteMultipleInvalidIndexes_failed() {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String[] indexes \u003d new String[]{\"0\", \"1\", \"2\"};"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertThrows(CommandException.class, () -\u003e {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            ModelManager model \u003d new ModelManager();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            model.addEvents("
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                EventSource.newBuilder(\"a\", DateTime.now()).build(),"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                EventSource.newBuilder(\"b\", DateTime.now()).build()"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            );"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            assertEquals(model.getEventList().size(), 2);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            Command command \u003d DeleteEventCommand.newBuilder(model)"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .acceptSentence(indexes[0])"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .acceptSentence(indexes[1])"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .acceptSentence(indexes[2])"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            command.execute();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        });"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 2,
      "WeomuCat": 128
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/EditEventCommandTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static seedu.address.logic.commands.EditEventCommandBuilder.OPTION_DESCRIPTION;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static seedu.address.logic.commands.EditEventCommandBuilder.OPTION_END_DATE_TIME;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static seedu.address.logic.commands.EditEventCommandBuilder.OPTION_REMIND_DATE_TIME;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static seedu.address.logic.commands.EditEventCommandBuilder.OPTION_START_DATE_TIME;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static seedu.address.logic.commands.EditEventCommandBuilder.OPTION_TAGS;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.model.DateTime;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.model.events.EventSource;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "class EditEventCommandTest {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void build_fullCommand_success() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String[] indexes \u003d new String[]{\"1\", \"2\", \"3\"};"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String description \u003d \"description\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String start \u003d \"11/11/1111 11:00\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String end \u003d \"11/11/1111 12:00\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String remind \u003d \"11/11/1111 08:00\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String[] tags \u003d new String[]{\"a\", \"b\", \"c\"};"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertDoesNotThrow(() -\u003e {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            EditEventCommand.newBuilder(null)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .acceptSentence(indexes[0])"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .acceptSentence(indexes[1])"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .acceptSentence(indexes[2])"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .acceptSentence(OPTION_DESCRIPTION)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .acceptSentence(description)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .acceptSentence(OPTION_START_DATE_TIME)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .acceptSentence(start)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .acceptSentence(OPTION_END_DATE_TIME)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .acceptSentence(end)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .acceptSentence(OPTION_REMIND_DATE_TIME)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .acceptSentence(remind)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .acceptSentence(OPTION_TAGS)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .acceptSentence(tags[0])"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .acceptSentence(tags[1])"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .acceptSentence(tags[2])"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        });"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void execute_requiredCommand_success() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String[] indexes \u003d new String[]{\"1\", \"2\", \"3\"};"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertThrows(CommandException.class, () -\u003e {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            ModelManager model \u003d new ModelManager();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            model.addEvents("
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                EventSource.newBuilder(\"a\", DateTime.now()).build(),"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                EventSource.newBuilder(\"b\", DateTime.now()).build(),"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                EventSource.newBuilder(\"c\", DateTime.now()).build()"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            );"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            Command command \u003d EditEventCommand.newBuilder(model)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .acceptSentence(indexes[0])"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .acceptSentence(indexes[1])"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .acceptSentence(indexes[2])"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            assertEquals(model.getEventList().size(), 3);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            // TODO: Equality test"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            command.execute();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            assertEquals(model.getEventList().size(), 3);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        });"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void execute_editOneInvalidIndex_failed() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String[] indexes \u003d new String[]{\"-1\", \"0\", \"1\"};"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        for (String index : indexes) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            assertThrows(CommandException.class, () -\u003e {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                ModelManager model \u003d new ModelManager();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                assertEquals(model.getEventList().size(), 0);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                Command command \u003d EditEventCommand.newBuilder(model)"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    .acceptSentence(index)"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    .build();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                command.execute();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            });"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void execute_editMultipleInvalidIndex_failed() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String[] indexes \u003d new String[]{\"1\", \"2\", \"3\"};"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertThrows(CommandException.class, () -\u003e {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            ModelManager model \u003d new ModelManager();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            model.addEvents("
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                EventSource.newBuilder(\"a\", DateTime.now()).build(),"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                EventSource.newBuilder(\"b\", DateTime.now()).build()"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            );"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            assertEquals(model.getEventList().size(), 2);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            Command command \u003d EditEventCommand.newBuilder(model)"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .acceptSentence(indexes[0])"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .acceptSentence(indexes[1])"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .acceptSentence(indexes[2])"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            command.execute();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        });"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 2,
      "WeomuCat": 111
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/arguments/ArgumentTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.commands.arguments;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.exceptions.ArgumentException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "class ArgumentTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void build_acceptNull_failure() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e new ArgumentMock().accept(null));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void build_optionalArgument_success() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertDoesNotThrow(() -\u003e new ArgumentMock().build(false));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void build_acceptOptionalArgument_success() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String[] arguments \u003d { \"\", \" \", \"a\" };"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        for (String arg : arguments) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            assertDoesNotThrow(() -\u003e {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                new ArgumentMock()"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    .accept(arg)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    .build(false);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            });"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void build_requiredArgument_failure() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertThrows(ArgumentException.class, () -\u003e new ArgumentMock().build(true));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void build_acceptRequiredArgument_success() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String[] arguments \u003d { \"\", \" \", \"a\" };"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        for (String test : arguments) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            assertDoesNotThrow(() -\u003e {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                new ArgumentMock()"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    .accept(test)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                    .build(true);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            });"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static class ArgumentMock extends Argument\u003cObject\u003e {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        ArgumentMock() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            super(new ArgumentBuilderStub());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        Object parse(String userInput) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            // should not be called when argument is optional."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            Objects.requireNonNull(userInput);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static class ArgumentBuilderStub extends ArgumentBuilder\u003cObject\u003e {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        ArgumentBuilderStub() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            super(\"\", o -\u003e {});"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        Argument\u003cObject\u003e argumentBuild() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            return new ArgumentMock();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 78
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/arguments/VariableArgumentsTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.commands.arguments;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "class VariableArgumentsTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void build_acceptNull_failure() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e new VariableArgumentsMock().accept(null));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void build_noArguments_success() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertDoesNotThrow(() -\u003e new VariableArgumentsMock().build());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void build_multipleArguments_success() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String[] arguments \u003d { \"\", \" \", \"a\" };"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertDoesNotThrow(() -\u003e {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            new VariableArgumentsMock()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .accept(arguments[0])"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .accept(arguments[1])"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .accept(arguments[2])"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        });"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static class VariableArgumentsMock extends VariableArguments\u003cObject\u003e {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        VariableArgumentsMock() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            super(new VariableArgumentsBuilderStub());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        Object parse(String userInput) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static class VariableArgumentsBuilderStub extends VariableArgumentsBuilder\u003cObject\u003e {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        VariableArgumentsBuilderStub() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            super(\"\", o -\u003e {});"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        VariableArguments\u003cObject\u003e argumentBuild() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            return new VariableArgumentsMock();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 55
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/notification/NotificationCheckerTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "package seedu.address.logic.notification;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.model.DateTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.model.events.EventSource;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.ui.systemtray.PopupNotification;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "public class NotificationCheckerTest {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    void constructor_inputNull_shouldThrowError() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertThrows(NullPointerException.class, ("
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            ) -\u003e new NotificationChecker(null));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    void getListOfNotifications_inputEmptyList_returnEmptyList() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        ModelManager model \u003d new ModelManager();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        NotificationChecker notificationChecker \u003d new NotificationChecker(model);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        ArrayList\u003cPopupNotification\u003e popupNotificationList \u003d notificationChecker.getListOfPopupNotifications();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertEquals(0, popupNotificationList.size());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    void getListOfNotifications_inputMatchingEventSource_returnSizeTwoList() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        ModelManager model \u003d new ModelManager();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        NotificationChecker notificationChecker \u003d new NotificationChecker(model);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        EventSource es1 \u003d EventSource.newBuilder(\"Test1\", DateTime.now()).build();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        EventSource es2 \u003d EventSource.newBuilder(\"Test2\", DateTime.now()).build();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        model.addEvents(es1, es2);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        ArrayList\u003cPopupNotification\u003e popupNotificationList \u003d notificationChecker.getListOfPopupNotifications();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertEquals(2, popupNotificationList.size());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    void getListOfNotifications_inputMatchingEventSource_returnMatchingEventSource() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        ModelManager model \u003d new ModelManager();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        NotificationChecker notificationChecker \u003d new NotificationChecker(model);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        EventSource es1 \u003d EventSource.newBuilder(\"Test1\", DateTime.now()).build();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        EventSource es2 \u003d EventSource.newBuilder(\"Test2\", DateTime.now()).build();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        model.addEvents(es1, es2);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        ArrayList\u003cPopupNotification\u003e popupNotificationList \u003d notificationChecker.getListOfPopupNotifications();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertEquals(new PopupNotification(es1.getDescription(),"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                es2.getStartDateTime().toString()), popupNotificationList.get(0));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertEquals(new PopupNotification(es2.getDescription(),"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                es2.getStartDateTime().toString()), popupNotificationList.get(1));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 62
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/notification/NotificationCheckingThreadTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "package seedu.address.logic.notification;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "public class NotificationCheckingThreadTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    void whileRunningThread_requestInterrupt_shouldExitByThrowingInterruptedException() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertDoesNotThrow(("
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        ) -\u003e {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            NotificationCheckingThread nct \u003d"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                    new NotificationCheckingThread(new NotificationChecker(new ModelManager()));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            nct.setDaemon(true);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            nct.start();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            nct.interrupt();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        });"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    void setNotificationsOff_checkNotificationsSwitchedOffSuccessfully_valueAsExpected() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        NotificationCheckingThread nct \u003d"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                new NotificationCheckingThread(new NotificationChecker(new ModelManager()));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        nct.switchOffNotifications();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertFalse(nct.getNotificationsOnStatus());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    void setNotificationsOn_checkNotificationsSwitchedOnSuccessfully_valueAsExpected() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        NotificationCheckingThread nct \u003d"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "                new NotificationCheckingThread(new NotificationChecker(new ModelManager()));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        nct.switchOffNotifications();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        nct.switchOnNotifications();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertTrue(nct.getNotificationsOnStatus());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 43
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/parser/CommandParserTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import org.junit.jupiter.api.BeforeAll;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.AddEventCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.DeleteEventCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.commands.EditEventCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "class CommandParserTest {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final String COMMAND_ADD_EVENT \u003d \"add_event\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final String COMMAND_DELETE_EVENT \u003d \"delete_event\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final String COMMAND_EDIT_EVENT \u003d \"edit_event\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static CommandParser commandParser;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @BeforeAll"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    static void setUp() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        CommandKeywordParser keywordParser \u003d new CommandKeywordParser();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        keywordParser.addCommand(COMMAND_ADD_EVENT, () -\u003e AddEventCommand.newBuilder(null));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        keywordParser.addCommand(COMMAND_DELETE_EVENT, () -\u003e DeleteEventCommand.newBuilder(null));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        keywordParser.addCommand(COMMAND_EDIT_EVENT, () -\u003e EditEventCommand.newBuilder(null));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        commandParser \u003d new CommandParser(keywordParser);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void parse_invalidInputFormat_failure() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String[] tests \u003d { \"\", \" \" };"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        for (String test : tests) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            assertThrows(ParseException.class, () -\u003e commandParser.parse(test));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void parse_addEventCommand_success() throws ParseException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String test \u003d \"add_event \u0027Celebrate Rori Birthday\u0027 \u002718/08/2019 16:00\u0027\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertTrue(commandParser.parse(test) instanceof AddEventCommand);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void parse_deleteEventCommand_success() throws ParseException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String test \u003d \"delete_event 1 2 3\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertTrue(commandParser.parse(test) instanceof DeleteEventCommand);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void parse_editEventCommand_success() throws ParseException {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String test \u003d \"edit_event 1 2 3\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertTrue(commandParser.parse(test) instanceof EditEventCommand);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 56
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/parser/CommandParserTestUtil.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " * Contains helper methods for testing command parsers."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class CommandParserTestUtil {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "     * equals to {@code expectedCommand}."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    public static void assertParseSuccess(Parser\u003c? extends Command\u003e parser, String userInput, Command expectedCommand) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "            Command command \u003d parser.parse(userInput);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "            assertEquals(expectedCommand, command);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (ParseException pe) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new IllegalArgumentException(\"Invalid userInput.\", pe);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "     * equals to {@code expectedMessage}."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void assertParseFailure(Parser parser, String userInput, String expectedMessage) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "            parser.parse(userInput);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"The expected ParseException was not thrown.\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (ParseException pe) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "            assertEquals(expectedMessage, pe.getMessage());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeomuCat": 1,
      "-": 37
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/parser/DateTimeParserTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import static seedu.address.model.DateTime.USER_DATE_TIME_PATTERN;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.time.ZoneId;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "class DateTimeParserTest {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    private static final DateTimeParser PARSER \u003d"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        new DateTimeParser(DateTimeFormatter.ofPattern(USER_DATE_TIME_PATTERN)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        .withZone(ZoneId.systemDefault()));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void parse_invalidDateTime_failure() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String[] tests \u003d { \"\", \" \", \"a\", \"101010 1010\", \"9/9/9 9:00\", \"13/13/1313 13:13\" };"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        for (String test : tests) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            assertThrows(ParseException.class, () -\u003e PARSER.parse(test));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void parse_validDateTime_success() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        String[] tests \u003d { \"12/12/1212 12:12\", \"01/01/0001 00:00\", \"31/12/9999 23:59\" };"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        for (String test : tests) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "            assertDoesNotThrow(() -\u003e PARSER.parse(test));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 1,
      "WeomuCat": 34
    }
  },
  {
    "path": "src/test/java/seedu/address/model/tasks/TaskSourceBuilderTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "package seedu.address.model.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertNull;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import org.junit.jupiter.api.Assertions;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "public class TaskSourceBuilderTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    void constructor_descriptionNullAsArgument_shouldThrowException() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        Assertions.assertThrows(NullPointerException.class, ("
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        ) -\u003e new TaskSourceBuilder(null));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    void constructor_descriptionStoredProperly_valueAsExpected() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        String description \u003d \"Test\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        TaskSourceBuilder tsb \u003d new TaskSourceBuilder(description);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertEquals(tsb.getDescription(), description);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    void constructor_dueDateStoredProperly_valueAsExpected() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        TaskSourceBuilder tsb \u003d new TaskSourceBuilder(\"test\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertNull(tsb.getDueDate());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "    void constructor_isDoneStoredProperly_valueAsExpected() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        TaskSourceBuilder tsb \u003d new TaskSourceBuilder(\"test\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertFalse(tsb.isDone());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 27,
      "WeomuCat": 9
    }
  },
  {
    "path": "src/test/java/seedu/address/model/tasks/TaskSourceTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "package seedu.address.model.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "public class TaskSourceTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    void equality_useSameTaskSourceBuilder_valueAsExpected() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        TaskSourceBuilder tsb \u003d new TaskSourceBuilder(\"test\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        TaskSource t1 \u003d new TaskSource(tsb);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        TaskSource t2 \u003d new TaskSource(tsb);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertEquals(t1, t2);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    void newBuilderCorrectness_useSameArgumentParameters_valueAsExpected() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        String description \u003d \"test\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        TaskSourceBuilder tsb1 \u003d new TaskSourceBuilder(description);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        TaskSourceBuilder tsb2 \u003d TaskSource.newBuilder(description);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertEquals(tsb1.getDescription(), tsb2.getDescription());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertEquals(tsb1.getDueDate(), tsb2.getDueDate());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeomuCat"
        },
        "content": "        assertEquals(tsb1.isDone(), tsb2.isDone());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertEquals(tsb1.getTags(), tsb2.getTags());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 24,
      "WeomuCat": 4
    }
  },
  {
    "path": "src/test/java/seedu/address/ui/systemtray/PopupNotificationTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "package seedu.address.ui.systemtray;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "public class PopupNotificationTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    void constructor_inputNull_shouldThrowError() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertThrows(NullPointerException.class, ("
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            ) -\u003e new PopupNotification(\"testName\", null));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertThrows(NullPointerException.class, ("
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "            ) -\u003e new PopupNotification(null, \"testDescription\"));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    void equality_inputSameParameters_equalityCheckShouldPass() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        PopupNotification pn1 \u003d new PopupNotification(\"testName\", \"testDescrp\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        PopupNotification pn2 \u003d new PopupNotification(\"testName\", \"testDescrp\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertEquals(pn1, pn2);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    void equality_compareToObjectOfDifferentClass_shouldReturnFalse() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        PopupNotification pn \u003d new PopupNotification(\"testName\", \"testDescrp\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        String string \u003d \"Test String\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertFalse(pn.equals(string));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    void equality_compareSameClassDifferentParameters_shouldReturnFalse() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        PopupNotification pn1 \u003d new PopupNotification(\"testName1\", \"testDescrp1\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        PopupNotification pn2 \u003d new PopupNotification(\"testName2\", \"testDescrp2\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertFalse(pn1.equals(pn2));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        PopupNotification pn3 \u003d new PopupNotification(\"testName1\", \"testDescrp1\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        PopupNotification pn4 \u003d new PopupNotification(\"testName1\", \"testDescrp2\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertFalse(pn3.equals(pn4));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        PopupNotification pn5 \u003d new PopupNotification(\"testName1\", \"testDescrp1\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        PopupNotification pn6 \u003d new PopupNotification(\"testName2\", \"testDescrp1\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "        assertFalse(pn5.equals(pn6));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ChengGeng97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengGeng97": 48
    }
  }
]
