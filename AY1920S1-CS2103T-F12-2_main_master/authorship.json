[
  {
    "path": "README.adoc",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ":notitle:"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "++++"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "\u003ch1 align\u003d\"center\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "  \u003cbr\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "  \u003ca href\u003d\"https://roc.ms/visitapp\"\u003e\u003cimg src\u003d\"https://github.com/AY1920S1-CS2103T-F12-2/main/raw/master/docs/images/icons/LogoTitle.png\" alt\u003d\"VISIT\" width\u003d\"400\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "  \u003cbr\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "  VISIT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "  \u003cbr\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "\u003c/h1\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "\u003ch4 align\u003d\"center\"\u003eA Patient Tracking Application for Doctors On-The-Go.\u003c/h4\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "\u003cp align\u003d\"center\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "  \u003ca href\u003d\"https://travis-ci.org/AY1920S1-CS2103T-F12-2/main\"\u003e\u003cimg src\u003d\"https://travis-ci.org/AY1920S1-CS2103T-F12-2/main.svg?branch\u003dmaster\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "  \u003ca href\u003d\u0027https://coveralls.io/github/AY1920S1-CS2103T-F12-2/main?branch\u003dmaster\u0027\u003e\u003cimg src\u003d\u0027https://coveralls.io/repos/github/AY1920S1-CS2103T-F12-2/main/badge.svg?branch\u003dmaster\u0027 alt\u003d\u0027Coverage Status\u0027 /\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "\u003c/p\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "\u003cp align\u003d\"center\"\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "  \u003ca href\u003d\"#key-features\"\u003eKey Features\u003c/a\u003e ‚Ä¢"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "  \u003ca href\u003d\"#how-to-use\"\u003eHow To Use\u003c/a\u003e ‚Ä¢"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "  \u003ca href\u003d\"#download\"\u003eDownload\u003c/a\u003e ‚Ä¢"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "  \u003ca href\u003d\"#site-map\"\u003eSite Map\u003c/a\u003e ‚Ä¢"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "  \u003ca href\u003d\"#acknowledgements\"\u003eAcknowledgements\u003c/a\u003e ‚Ä¢"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "  \u003ca href\u003d\"#license\"\u003eLicense\u003c/a\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "\u003c/p\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "\u003cp align\u003d\"center\"\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "\u003cimg src\u003d\"https://github.com/AY1920S1-CS2103T-F12-2/main/raw/master/docs/images/Ui.png\" alt\u003d\"Ui.png\" width\u003d\"900\"\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "\u003c/p\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "++++"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "\u003d\u003d Key Features"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "* Completely CLI-Friendly üíª"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "** Prefer the keyboard? VISIT is made to be entirely operable just using your keyboard!"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "* Patient Profiling üë™"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "** Keep all the key patient details like names, addresses and contact information of your patients easily accessible."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "* Visit Tracking üè†"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "** Keep track of the history of past visits by the same patient to provide holistic and personalized healthcare."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "* Reminder System üìÜ"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "** Can\u0027t remember when your next appointment is? VISIT reminds you when your next consultation is."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "* Alias / Macro command support"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "* Tagging and Search functionality"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "* Save patient information as a text file"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "* Cross platform"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "** Windows, macOS and Linux ready."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "\u003d\u003d How To Use"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "To run this application, you\u0027ll need  https://www.oracle.com/technetwork/java/javase/downloads/jdk11-downloads-5066655.html[Java 11] installed on your computer. +"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "Run the program then, try typing the following commands:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "[source, sh]"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "----"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "# Adds a Patient with details"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "$ add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "# Adds a visitation report"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "$ addVisit n/Betsy Crowe t/12/12/12 e/Betsy@example.com"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "# Find all patients matched to the query \u0027John\u0027, \u0027Tim\u0027 or \u0027Betsy\u0027"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "$ find John Tim Betsy"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "# Show the full profile of the patient at position 1"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "$ profile 1"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "----"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "For other commands, check out our User Guide at link:https://github.com/AY1920S1-CS2103T-F12-2/main/blob/master/docs/UserGuide.adoc[here]!"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "\u003d\u003d Download"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "You can https://github.com/AY1920S1-CS2103T-F12-2/main/releases[download] the latest installable version of VISIT for Windows, macOS and Linux."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Site Map"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "* link:https://github.com/AY1920S1-CS2103T-F12-2/main/blob/master/docs/AboutUs.adoc[About Us]"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "* link:https://github.com/AY1920S1-CS2103T-F12-2/main/blob/master/docs/ContactUs.adoc[Contact Us]"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "* link:https://github.com/AY1920S1-CS2103T-F12-2/main/blob/master/docs/UserGuide.adoc[User Guide]"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "* link:https://github.com/AY1920S1-CS2103T-F12-2/main/blob/master/docs/DeveloperGuide.adoc[Developer Guide]"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Acknowledgements"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gachia"
        },
        "content": "* This application is built upon AddressBook-Level3 Project created by SE-EDU initiative at https://se-education.org"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "* Libraries used:"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "- https://openjfx.io/[JavaFX]"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "- https://github.com/FasterXML/jackson[Jackson]"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "- https://github.com/junit-team/junit5[JUnit5]"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "\u003d\u003d License"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "link:LICENSE[MIT]"
      }
    ],
    "authorContributionMap": {
      "Q-gabe": 72,
      "ReignOfComputer": 7,
      "-": 12,
      "gachia": 1
    }
  },
  {
    "path": "build.gradle",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "// Gradle Configuration File"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "// For more details take a look at the Java Quickstart chapter in the Gradle"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "// user guide available at http://gradle.org/docs/5.2.1/userguide/tutorial_java_projects.html"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import org.gradle.api.tasks.testing.logging.TestLogEvent"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027jacoco\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.kt3k.coveralls\u0027 version \u00272.4.0\u0027"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027org.asciidoctor.convert\u0027 version \u00271.5.6\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "// Specifies the entry point of the application"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "mainClassName \u003d \u0027seedu.address.Main\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "sourceCompatibility \u003d JavaVersion.VERSION_11"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "targetCompatibility \u003d JavaVersion.VERSION_11"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.1\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "jacocoTestReport {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    reports {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        xml.enabled false"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        csv.enabled false"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        html.destination file(\"${buildDir}/jacocoHtml\")"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    String jUnitVersion \u003d \u00275.4.0\u0027"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveName \u003d \u0027addressbook.jar\u0027"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    destinationDir \u003d file(\"${buildDir}/jar/\")"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "task coverage(type: JacocoReport) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    classDirectories.from files(sourceSets.main.output)"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    executionData.from files(jacocoTestReport.executionData)"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    afterEvaluate {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        classDirectories.from files(classDirectories.files.collect {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        })"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    reports {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        html.enabled \u003d true"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        xml.enabled \u003d true"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "coveralls {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    sourceDirs \u003d sourceSets.main.allSource.srcDirs.absolutePath"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    jacocoReportPath \u003d \"${buildDir}/reports/jacoco/coverage/coverage.xml\""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "tasks.coveralls {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    dependsOn coverage"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    onlyIf { System.env.\u0027CI\u0027 }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        events TestLogEvent.FAILED, TestLogEvent.SKIPPED"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        // Prints the currently running test\u0027s name in the CI\u0027s build log,"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        // so that we can check if tests are being silently skipped or"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        // stalling the build."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        if (System.env.\u0027CI\u0027) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "            events \u003c\u003c TestLogEvent.STARTED"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "    jacoco {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        destinationFile \u003d new File(\"${buildDir}/jacoco/test.exec\")"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "asciidoctor {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "    backends \u0027html5\u0027"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "    sourceDir \u0027docs\u0027"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "    outputDir \"${buildDir}/docs\""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "    options \u003d ["
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        template_dirs: [file(\"${sourceDir}/templates\")],"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "    ]"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "    attributes \u003d ["
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "        linkcss: true,"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "        stylesheet: \u0027gh-pages.css\u0027,"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "        \u0027source-highlighter\u0027: \u0027coderay\u0027,"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "        icons: \u0027font\u0027,"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        experimental: true,"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "        sectlinks: true,"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "        idprefix: \u0027\u0027,  // for compatibility with GitHub preview"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "        idseparator: \u0027-\u0027,"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "        \u0027site-root\u0027: \"${sourceDir}\",  // must be the same as sourceDir, do not modify"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "        \u0027site-name\u0027: \u0027VISIT\u0027,"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "        \u0027site-githuburl\u0027: \u0027https://github.com/AY1920S1-CS2103T-F12-2/main\u0027,"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "        \u0027untitled-label\u0027: \u0027VISIT by Team UnityUnreal\u0027"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "    ]"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "    options[\u0027template_dirs\u0027].each {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "        inputs.files fileTree(it)"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "// Copies stylesheets into the directory containing generated HTML files as"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "// Asciidoctor does not copy linked CSS files to the output directory when rendering."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "// This is needed for linked stylesheets and embedded stylesheets which import other files."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "task copyStylesheets(type: Copy) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "    from \"${asciidoctor.sourceDir}/stylesheets\""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "    into \"${asciidoctor.outputDir}/html5/stylesheets\""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "asciidoctor.dependsOn copyStylesheets"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "defaultTasks \u0027clean\u0027, \u0027test\u0027, \u0027coverage\u0027, \u0027asciidoctor\u0027"
      }
    ],
    "authorContributionMap": {
      "Q-gabe": 3,
      "-": 152
    }
  },
  {
    "path": "docs/AboutUs.adoc",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d About Us"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ":site-section: AboutUs"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ":relfileprefix: team/"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ":imagesDir: images"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ":stylesDir: stylesheets"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "VISIT is an Address Book application for Doctors to plan their visits to patients. Doctors can have granular control over each visit, log each diagnosis, schedule follow-up with patients, and keep track of their appointments."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "We are Team https://github.com/AY1920S1-CS2103T-F12-2[UnrealUnity] based in the http://www.comp.nus.edu.sg[School of Computing, National University of Singapore]."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Project Team"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "\u003d\u003d\u003d Chattoraj Ayush"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "image::ayushchatto.png[width\u003d\"150\", align\u003d\"left\"]"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "{empty}[https://github.com/AyushChatto[github]] [\u003c\u003cAyushChatto#, portfolio\u003e\u003e]"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "Role: Project Advisor / Consultant"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "\u0027\u0027\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "\u003d\u003d\u003d Jason Chee"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "image::reignofcomputer.png[width\u003d\"150\", align\u003d\"left\"]"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "{empty}[https://www.reignofcomputer.com/[homepage]] [http://github.com/reignofcomputer[github]] [\u003c\u003creignofcomputer#, portfolio\u003e\u003e]"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "Role: Team Lead / Managing Director +"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "Responsibilities: Project Manager, Developer, Legal \u0026 Compliance, Security, In charge of `Reminder-Follow-Up` Component"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "\u0027\u0027\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "\u003d\u003d\u003d Gabriel Chia"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "image::gachia.png[width\u003d\"150\", align\u003d\"left\"]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "{empty}[http://github.com/gachia[github]] [\u003c\u003cgabrielchia#, portfolio\u003e\u003e]"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "Role: Developer +"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "Responsibilities: UI, Documentation, Concept Artist"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "\u0027\u0027\u0027"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "\u003d\u003d\u003d Jerrold Tan"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "image::wingedevil.png[width\u003d\"150\", align\u003d\"left\"]"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "{empty}[http://github.com/Wingedevil[github]] [\u003c\u003cjerroldtan#, portfolio\u003e\u003e]"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "Role: Developer +"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "Responsibilities: Git Expert, In charge of ‚ÄòAlias‚Äô Component"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "\u0027\u0027\u0027"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "\u003d\u003d\u003d Zheng Shi Qiao"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "image::sqwq.png[width\u003d\"150\", align\u003d\"left\"]"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "{empty}[http://github.com/SQwQ[github]] [\u003c\u003cSQwQ#, portfolio\u003e\u003e]"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "Role: Developer +"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "Responsibilities: IntelliJ Expert, Documentation, In charge of `Visit` Component"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "\u0027\u0027\u0027"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "\u003d\u003d\u003d Gabriel Ong"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "image::q-gabe.png[width\u003d\"150\", align\u003d\"left\"]"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "{empty}[https://q-gabe.me[homepage]] [http://github.com/q-gabe[github]] [\u003c\u003cq-gabe#, portfolio\u003e\u003e]"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "Role: Developer / Tester +"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "Responsibilities: Integration, Documentation, In charge of `ProfileView` Component"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "\u0027\u0027\u0027"
      }
    ],
    "authorContributionMap": {
      "Q-gabe": 31,
      "-": 33
    }
  },
  {
    "path": "docs/ContactUs.adoc",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d Contact Us"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ":site-section: ContactUs"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ":stylesDir: stylesheets"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "* *Bug Reports \u0026 Suggestions*: If you notice any bugs or have any suggestions on how we can improve, please post on our https://github.com/AY1920S1-CS2103T-F12-2/main/issues[issue tracker]."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "* *Contributing* : We welcome pull requests. Follow the process described https://github.com/oss-generic/process[here]."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "* *Email us* : You can also reach us at `visit [at] roc.ms`."
      }
    ],
    "authorContributionMap": {
      "Q-gabe": 3,
      "-": 4
    }
  },
  {
    "path": "docs/DevOps.adoc",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "\u003d VISIT - Dev Ops"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ":site-section: DeveloperGuide"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ":toc:"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ":toc-title:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ":toc-placement: preamble"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ":sectnums:"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ":imagesDir: images"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ":stylesDir: stylesheets"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ":xrefstyle: full"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "ifdef::env-github[]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ":tip-caption: :bulb:"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ":note-caption: :information_source:"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ":warning-caption: :warning:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "endif::[]"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ":repoURL: https://github.com/AY1920S1-CS2103T-F12-2/main/tree/master"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Build Automation"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "See \u003c\u003cUsingGradle#, UsingGradle.adoc\u003e\u003e to learn how to use Gradle for build automation."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Continuous Integration"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "We use https://travis-ci.org/[Travis CI] and https://www.appveyor.com/[AppVeyor] to perform _Continuous Integration_ on our projects. See \u003c\u003cUsingTravis#, UsingTravis.adoc\u003e\u003e and \u003c\u003cUsingAppVeyor#, UsingAppVeyor.adoc\u003e\u003e for more details."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Coverage Reporting"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "We use https://coveralls.io/[Coveralls] to track the code coverage of our projects. See \u003c\u003cUsingCoveralls#, UsingCoveralls.adoc\u003e\u003e for more details."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Documentation Previews"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "When a pull request has changes to asciidoc files, you can use https://www.netlify.com/[Netlify] to see a preview of how the HTML version of those asciidoc files will look like when the pull request is merged. See \u003c\u003cUsingNetlify#, UsingNetlify.adoc\u003e\u003e for more details."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Making a Release"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "Here are the steps to create a new release."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ".  Update the version number in link:{repoURL}/src/main/java/seedu/address/MainApp.java[`MainApp.java`]."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ".  Generate a JAR file \u003c\u003cUsingGradle#creating-the-jar-file, using Gradle\u003e\u003e."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ".  Tag the repo with the version number. e.g. `v0.1`"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ".  https://help.github.com/articles/creating-releases/[Create a new release using GitHub] and upload the JAR file you created."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Managing Dependencies"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "A project often depends on third-party libraries. For example, Address Book depends on the https://github.com/FasterXML/jackson[Jackson library] for JSON parsing. Managing these _dependencies_ can be automated using Gradle. For example, Gradle can download the dependencies automatically, which is better than these alternatives:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "[loweralpha]"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ". Include those libraries in the repo (this bloats the repo size)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ". Require developers to download those libraries manually (this creates extra work for developers)"
      }
    ],
    "authorContributionMap": {
      "Q-gabe": 2,
      "-": 46
    }
  },
  {
    "path": "docs/DeveloperGuide.adoc",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "\u003d VISIT - Developer Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ":site-section: DeveloperGuide"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ":toc:"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ":toc-title:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ":toc-placement: preamble"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ":sectnums:"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ":imagesDir: images"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ":stylesDir: stylesheets"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ":xrefstyle: full"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "ifdef::env-github[]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ":tip-caption: :bulb:"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ":note-caption: :information_source:"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ":warning-caption: :warning:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "endif::[]"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ":repoURL: https://github.com/AY1920S1-CS2103T-F12-2/main"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "By: `Team UnrealUnity`  \tSince: `Sep 2019`  \tLicence: `MIT`"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Setting up"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "Refer to the guide \u003c\u003cSettingUp#, here\u003e\u003e."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Design"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "[[Design-Architecture]]"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Architecture"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ".Architecture Diagram"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "image::ArchitectureDiagram.png[]"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "The *_Architecture Diagram_* given above explains the high-level design of the App. Given below is a quick overview of each component."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "[TIP]"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "The `.puml` files used to create diagrams in this document can be found in the link:{repoURL}/tree/master/docs/diagrams/[diagrams] folder."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "Refer to the \u003c\u003cUsingPlantUml#, Using PlantUML guide\u003e\u003e to learn how to create and edit diagrams."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "`Main` has two classes called link:{repoURL}/tree/master/src/main/java/seedu/address/Main.java[`Main`] and link:{repoURL}/tree/master/src/main/java/seedu/address/MainApp.java[`MainApp`]. It is responsible for,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "* At app launch: Initializes the components in the correct sequence, and connects them up with each other."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "* At shut down: Shuts down the components and invokes cleanup method where necessary."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c\u003cDesign-Commons,*`Commons`*\u003e\u003e represents a collection of classes used by multiple other components."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "The following class plays an important role at the architecture level:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "* `LogsCenter` : Used by many classes to write log messages to the App\u0027s log file."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "The rest of the App consists of four components."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "* \u003c\u003cDesign-Ui,*`UI`*\u003e\u003e: The UI of the App."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "* \u003c\u003cDesign-Logic,*`Logic`*\u003e\u003e: The command executor."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "* \u003c\u003cDesign-Model,*`Model`*\u003e\u003e: Holds the data of the App in-memory."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "* \u003c\u003cDesign-Storage,*`Storage`*\u003e\u003e: Reads data from, and writes data to, the hard disk."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "Each of the four components"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "* Defines its _API_ in an `interface` with the same name as the Component."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "* Exposes its functionality using a `{Component Name}Manager` class."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "For example, the `Logic` component (see the class diagram given below) defines it\u0027s API in the `Logic.java` interface and exposes its functionality using the `LogicManager.java` class."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ".Class Diagram of the Logic Component"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "image::LogicClassDiagram.png[]"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d How the architecture components interact with each other"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "The _Sequence Diagram_ below shows how the components interact with each other for the scenario where the user issues the command `delete 1`."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ".Component interactions for `delete 1` command"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "image::ArchitectureSequenceDiagram.png[]"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "The sections below give more details of each component."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "[[Design-Ui]]"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d UI component"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ".Structure of the UI Component"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "image::UiClassDiagram.png[]"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "*API* : link:{repoURL}/tree/master/src/main/java/seedu/address/ui/Ui.java[`Ui.java`]"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "The `UI` component uses JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the link:{repoURL}/tree/master/src/main/java/seedu/address/ui/MainWindow.java[`MainWindow`] is specified in link:{repoURL}/tree/master/src/main/resources/view/MainWindow.fxml[`MainWindow.fxml`]"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "The `UI` component,"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "* Executes user commands using the `Logic` component."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "* Listens for changes to `Model` data so that the UI can be updated with the modified data."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "[[Design-Logic]]"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Logic component"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "[[fig-LogicClassDiagram]]"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ".Structure of the Logic Component"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "image::LogicClassDiagram.png[]"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "*API* :"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "link:{repoURL}/tree/master/src/main/java/seedu/address/logic/Logic.java[`Logic.java`]"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ".  `Logic` uses the `AddressBookParser` class to parse the user command."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": ".  This results in a `Command` object which is executed by the `LogicManager`."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ".  The command execution can affect the `Model` (e.g. adding a person)."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ".  The result of the command execution is encapsulated as a `CommandResult` object which is passed back to the `Ui`."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ".  In addition, the `CommandResult` object can also instruct the `Ui` to perform certain actions, such as displaying help to the user."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "Given below is the Sequence Diagram for interactions within the `Logic` component for the `execute(\"delete 1\")` API call."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ".Interactions Inside the Logic Component for the `delete 1` Command"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "image::DeleteSequenceDiagram.png[]"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "NOTE: The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "[[Design-Model]]"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Model component"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ".Structure of the Model Component"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "image::ModelClassDiagram.png[]"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "*API* : link:{repoURL}/tree/master/src/main/java/seedu/address/model/Model.java[`Model.java`]"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "The `Model`,"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "* stores a `UserPref` object that represents the user\u0027s preferences."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "* stores the Address Book data."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "* exposes an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "* does not depend on any of the other three components."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "As a more OOP model, we can store a `Tag` list in `Address Book`, which `Person` can reference. This would allow `Address Book` to only require one `Tag` object per unique `Tag`, instead of each `Person` needing their own `Tag` object. An example of how such a model may look like is given below. +"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": " +"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "image:BetterModelClassDiagram.png[]"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "[[Design-Storage]]"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Storage component"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": ".Structure of the Storage Component"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "image::StorageClassDiagram.png[]"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "*API* : link:{repoURL}/tree/master/src/main/java/seedu/address/storage/Storage.java[`Storage.java`]"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "The `Storage` component,"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "* can save `UserPref` objects in json format and read it back."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "* can save the Address Book data in json format and read it back."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "[[Design-Commons]]"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Common classes"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "Classes used by multiple components are in the `seedu.addressbook.commons` package."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Implementation"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "This section describes some noteworthy details on how certain features are implemented."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "[[aliasImplementation]]"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "// tag::alias[]"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "\u003d\u003d\u003d Alias feature"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "\u003d\u003d\u003d\u003d Implementation"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "The alias mechanism is facilitated by `AliasTable`."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "It is contained within `UserPrefs` and can be serialized together with the rest of the members in `UserPrefs`."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "Additionally, it implements the following operations:"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "* `AliasTable#applyAlias(commandText)` -- Applies the longest stored aliases to the supplied command."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "* `AliasTable#addAlias(alias, aliasTo)` -- Adds a new alias to the alias table."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "* `AliasTable#removeAlias(alias)` -- Removes a existing alias from the alias table."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "These operations are exposed in the `Model` interface as `Model#applyAlias(commandText)`, `Model#addAlias(alias, aliasTo)` and `Model#removeAlias(alias)` respectively."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "The following sequence diagram shows how adding an alias works:"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "image::AddAliasSequenceDiagram.png[]"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "The check for and illegal alias consists of creating a new `AddressBookParser` and parsing the given alias into it, which is not shown in this diagram."
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "The `unalias` command does the opposite -- it calls `Model#removeAlias(alias)` instead which calls `Model#UserPref(alias)` and `AliasTable#removeAlias(alias)`"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "The following sequence diagram shows how applying alias works:"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "image::ApplyAliasSequenceDiagram.png[]"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "This is a generalized diagram which depicts what happens between `execute(commandText)` and `LogicManager#parseCommand(alias)`. This process is not shown in other sequence diagrams."
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "The following activity diagram shows how applying alias picks which alias to apply:"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "image::ApplyAliasActivityDiagram.png[]"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "An unfortunate side effect to matching the longest matching macro increases the time complexity of this operation to O(n) from O(1) if we used wholesale matching instead."
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "// end::alias[]"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "[[followupImplementation]]"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "// tag::followup[]"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "\u003d\u003d\u003d Follow-up and Reminders feature"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "\u003d\u003d\u003d\u003d Implementation"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "Both mechanisms are facilitated by the `Reminder` class."
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "It implements the following operations:"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "* `Reminder#addReminder(reminder)` -- Adds a new reminder."
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "* `Reminder#getReminders()` -- Retrieves the reminders for output."
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "These operations are exposed in the `Model` interface as `Model#addReminder(reminder)` and `Model#getReminders()` respectively."
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "The following sequence diagram shows how adding a follow-up or reminder works:"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "image::AddReminderSequenceDiagram.png[]"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "// end::followup[]"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "[[profileImplementation]]"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "// tag::profile[]"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "\u003d\u003d\u003d Profile feature"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "\u003d\u003d\u003d\u003d Implementation"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "The profile feature allows the user to be able to see the full details of the patient as well as all relevant visit information (See \u003c\u003cvisitImplementation, Visit Implementation\u003e\u003e) from a single panel. Attributes of the patient is extracted from the `Person` instance, including the `Name`, `Address`, `Phone`, `Email`, `Tags` and `VisitList`, which can be easily extended following the implementation detailed below. The patient profile feature is facilitated by `ProfileWindow`, which is instanced and instantly hidden (`hide()`) upon the instancing of `MainWindow` on VISIT\u0027s start up. +"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": " +"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "Given below is a simple example usage scenario demonstrate how Profile feature behaves and interacts with the other components."
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "Step 1. The user executes `profile 3` command view the profile of the 3rd person shown in VISIT\u0027s current list. It extracts the `Person` instance from the filtered Person list from the current `model` and returns a `CommandResult` with the `Person` instance as an attribute. `MainWindow#executeCommand()` is called and the check for `CommandResult#isShowProfile()` passes, calling `ProfileWindow#setup()` which populates the hidden Profile Window with the attributes of the `Person` instance before `MainWindow#handleProfilePanel()` is called to show the Profile Window."
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "image::Profile0.png[]"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "_{Show activity diagram of opening profile window}_"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "Step 2. After viewing the relevant information, the user presses the \u0027esc\u0027 key which closes the form. This causes an event handler in `ProfileWindow` which listens for a `KeyEvent.KEY_RELEASED` event where the event code equates to `KeyCode.ESCAPE` (\u0027esc\u0027 key) to trigger, which hides the profile window."
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "image::Profile1.png[]"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "_{Show activity diagram of closing profile window}_"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "The user is able to close the `ProfileWindow` form by clicking the \u0027x\u0027 on the top right of the form as well."
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "This sequence diagram summarizes what happens when a user executes the Profile Command:"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "image::ProfileSequenceDiagram.png[]"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "_{Show extended sequence diagram of opening and closing profile window}_"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "\u003d\u003d\u003d\u003d Design Considerations"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d Aspect: How Profile shows the information from the patient"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "* **Alternative 1 (current choice):** Does not create an explicit `Profile` instance."
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "** Pros: Easy to implement, more straight forward (Just show data without the need to store what is essentially a clone of a `Person` instance)."
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "** Cons: May cause dependency issues as this increases coupling, with relation to the Profile and Patient class. Foreseeably, this may cause issues especially when patient attributes are to be added or removed."
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "* **Alternative 2:** Create an explicit `Profile` instance every call."
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "** Pros: Decreases coupling by cutting down on the direct calls to the `Person` instance."
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "** Cons: We must ensure that the `Profile` instance generated is correct every time."
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "// end::profile[]"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "////"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "// tag::undoredo[]"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d [Proposed] Undo/Redo feature"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d Proposed Implementation"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "The undo/redo mechanism is facilitated by `VersionedAddressBook`."
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`."
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "Additionally, it implements the following operations:"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "* `VersionedAddressBook#commit()` -- Saves the current address book state in its history."
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "* `VersionedAddressBook#undo()` -- Restores the previous address book state from its history."
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "* `VersionedAddressBook#redo()` -- Restores a previously undone address book state from its history."
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively."
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "Given below is an example usage scenario and how the undo/redo mechanism behaves at each step."
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state."
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "image::UndoRedoState0.png[]"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state."
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "image::UndoRedoState1.png[]"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "Step 3. The user executes `add n/David ...` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`."
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "image::UndoRedoState2.png[]"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`."
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state."
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "image::UndoRedoState3.png[]"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "If the `currentStatePointer` is at index 0, pointing to the initial address book state, then there are no previous address book states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the undo."
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "The following sequence diagram shows how the undo operation works:"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "image::UndoSequenceDiagram.png[]"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "NOTE: The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram."
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "The `redo` command does the opposite -- it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state."
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": "If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone address book states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo."
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": "Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged."
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": "image::UndoRedoState4.png[]"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": "Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. We designed it this way because it no longer makes sense to redo the `add n/David ...` command. This is the behavior that most modern desktop applications follow."
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": "image::UndoRedoState5.png[]"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "The following activity diagram summarizes what happens when a user executes a new command:"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": "image::CommitActivityDiagram.png[]"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d Design Considerations"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d Aspect: How undo \u0026 redo executes"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": "* **Alternative 1 (current choice):** Saves the entire address book."
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "** Pros: Easy to implement."
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": "** Cons: May have performance issues in terms of memory usage."
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": "* **Alternative 2:** Individual command knows how to undo/redo by itself."
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": "** Pros: Will use less memory (e.g. for `delete`, just save the person being deleted)."
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": "** Cons: We must ensure that the implementation of each individual command are correct."
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d Aspect: Data structure to support the undo/redo commands"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": "* **Alternative 1 (current choice):** Use a list to store the history of address book states."
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": "** Pros: Easy for new Computer Science student undergraduates to understand, who are likely to be the new incoming developers of our project."
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": "** Cons: Logic is duplicated twice. For example, when a new command is executed, we must remember to update both `HistoryManager` and `VersionedAddressBook`."
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": "* **Alternative 2:** Use `HistoryManager` for undo/redo"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": "** Pros: We do not need to maintain a separate list, and just reuse what is already in the codebase."
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": "** Cons: Requires dealing with commands that have already been undone: We must remember to skip these commands. Violates Single Responsibility Principle and Separation of Concerns as `HistoryManager` now needs to do two different things."
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": "// end::undoredo[]"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": "// tag::dataencryption[]"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d [Proposed] Data Encryption"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": "_{Explain here how the data encryption feature will be implemented}_"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": "// end::dataencryption[]"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "////"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "[[visitImplementation]]"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "// tag::visitationreport[]"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "\u003d\u003d\u003d Visitation Report feature"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "\u003d\u003d\u003d\u003d Implementation"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "The Visitation Report feature allows the user to `add`, `delete` and `edit` a `VisitReport` such that for every housecall, information like the prescription and diagnosis can be stored. Every `Person` has a `VisitList` attribute and each `VisitList` object contains an arraylist of `VisitReport` objects. The feature is facillitated by `VisitRecordWindow` which creates a form for the user to key in the details of the report, `VisitListPanel` which creates an indexed pop up list of visit reports for the user to check the index of the report they want to edit/delete and `SaveVisitCommand` which saves the users input from the form. The following operations are also implemented:"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "* `VisitList#addRecord()` -- Adds new `VisitReport` object to stored arraylist"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "* `VisitList#editRecord()` -- Replaces `VisitReport` object at given index in arraylist with given `VisitReport`"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "* `VisitList#deleteRecord()` -- Deletes `VisitReport` by index from stored arraylist"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "The class diagram below shows the new additions to the Person class."
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "image::VisitClass0.png[]"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "Given below is an example usage scenario and how every component of the Visitation Report feature behaves at each step."
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "Step 1. The user executes `addvisit 5 v/12/12/2019` command to add a visit report to the visitlist of the 5th person in the address book. This returns a  `CommandResult` which has the attribute `date` set as String `12/12/2019`. `MainWindow#executeCommand()` is called and the check for `CommandResult#isAddVisit()` passes, calling  `VisitRecordWindow#setReportInfo()` to pass the `index` of the person, the `date`, and a `Logic` object to initialize the respective attributes in the `VisitRecordWindow` class. `MainWindow#handleShowVisitForm()` is then called to display a pop up form for the user to fill in."
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "image::AddVisit0.png[]"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "If the user executes `addvisit 5` instead, the `date` attribute of the `CommandResult` will be set as the current date and the rest of the flow remains the same."
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "Step 2. The user fills in the form and presses `f2` on the keyboard or clicks the `submit` button to save the report. This calls `VisitRecordWindow#saveReport()` which will create a new `SaveVisitCommand` and executes it, updating the `VisitList` of the person via `Model#setPerson()`."
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "Step 3. The user decides to edit the report and executes the `editvisit 1 i/1` command.`MainWindow#executeCommand()` is called and the check for `CommandResult#isEditVisit()` passes, calling  `VisitRecordWindow#setOldReportInfo()` which initializes the respective attributes of `VisitRecordWindow` and populate the form with the content of the `VisitReport` from  `CommandResult#getOldReport()` .`MainWindow#handleShowVisitForm()` is then called to display a pop up form for the user to fill in."
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "image::EditVisit0.png[]"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "If the user executes `editvisit 1` instead, a `CommandResult` with a `ObservableList\u003cVisitReport\u003e` object will be returned. `MainWindow#executeCommand()` runs and the check for `CommandResult#isEditVisit()` fails while the check for `CommandResult#isShowVisitList()` passes, calling `VisitListPanel#setup()` which populates the `VisitListPanel` with the contents of the `ObservableList\u003cVisitReport\u003e` object from `CommandResult#getObservableVisitList()`.`MainWindow#handleShowVisitList()` is then called to display a pop up list showing an indexed list of all visitation records of the person."
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "Step 4. The user edits the form and presses `f2` on the keyboard or clicks the `submit` button to save the changes. The same mechanism mentioned in `Step 2` is used to update the contents of the edited visit report."
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "The sequence diagram below shows how Step 3 and Step 4 works."
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "image::EditVisit1.png[]"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "Step 5. The user then decides that the report was beyond salvaging and decides to delete it. Executing the command `deletevisit 1 d/1`, `VisitList#deleteRecord()` deletes the entry from the arraylist and `Model#setPerson()` updates the person with the new `VisitList`. The `CommandResult#isShowVisitList()` check in  `MainWindow#executeCommand()` passes and a pop up list showing an indexed list of all visitation records of the person is displayed."
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "image::DeleteVisit0.png[]"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "If the user executes `deletevisit 1` instead, the index value will be set to `-1` and the `VisitList#deleteRecord()` block would be skipped, but the rest of the flow remains the same."
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "\u003d\u003d\u003d\u003d Design Considerations"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d Aspect: How SaveVisitCommand/DeleteVisitCommand executes"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "* Creates a new `Person` object each time and using `Model#setPerson()` to replace the original person for every change in `VisitList `"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "** Pros: Easy to implement and reuses existing code."
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "** Cons: May have performance issues in terms of memory usage."
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d Aspect: Data structure to support the addvisit/deletevisit/editvisit commands"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "*  Use a arraylist to store the `VisitReport` objects in `VisitList` object"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "** Pros: Fast retrieval by index."
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "** Cons: Need to handle index out of bound errors."
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "// end::visitationreport[]"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "[[uiImplementation]]"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "//tag::guiredesign[]"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "gachia"
        },
        "content": "\u003d\u003d\u003d [Proposed] GUI Redesign"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "gachia"
        },
        "content": "The GUI Redesign is done to include the new features made for the VISIT application, as well as improve the overall"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "gachia"
        },
        "content": "user experience with a easily readable interface that displays every important information in a glance."
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "gachia"
        },
        "content": ""
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "gachia"
        },
        "content": "\u003d\u003d\u003d\u003d Current Implementation"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "gachia"
        },
        "content": "The current redesign of the GUI includes the addition of:"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "gachia"
        },
        "content": ""
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "gachia"
        },
        "content": "* the `ReminderPanel` to display upcoming appointments"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "gachia"
        },
        "content": "* the `VisitRecordWindow` form for the user to enter the required information (as mentioned in Visitation Report feature)"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "gachia"
        },
        "content": "* the `ProfileWindow` to display the full profile information of a patient."
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "gachia"
        },
        "content": ""
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "gachia"
        },
        "content": "In addition to these, VISIT\u0027s CSS theme is updated to fit current standards of GUI design,"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "gachia"
        },
        "content": "with a more pronounced color palette and a clearer font."
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "gachia"
        },
        "content": ""
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "gachia"
        },
        "content": "The following is the updated class diagram of the Ui Component from these changes:"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "gachia"
        },
        "content": ""
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "gachia"
        },
        "content": "image::UiRedesignClassDiagram.png[]"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "gachia"
        },
        "content": ""
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "gachia"
        },
        "content": "1. The MainWindow has been updated to include the ReminderPanel"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "gachia"
        },
        "content": "2. Two new Windows, VisitRecordWindow and ProfileWindow, are in use in addition to the MainWindow"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "gachia"
        },
        "content": ""
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "gachia"
        },
        "content": "\u003d\u003d\u003d\u003d Future Implementation"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "gachia"
        },
        "content": ""
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "gachia"
        },
        "content": "\u003cto be added\u003e"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "gachia"
        },
        "content": ""
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "//end::guiredesign[]"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "[[logImplementation]]"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Logging"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "-"
        },
        "content": "We are using `java.util.logging` package for logging. The `LogsCenter` class is used to manage the logging levels and logging destinations."
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "-"
        },
        "content": "* The logging level can be controlled using the `logLevel` setting in the configuration file (See \u003c\u003cImplementation-Configuration\u003e\u003e)"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "-"
        },
        "content": "* The `Logger` for a class can be obtained using `LogsCenter.getLogger(Class)` which will log messages according to the specified logging level"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "-"
        },
        "content": "* Currently log messages are output through: `Console` and to a `.log` file."
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "-"
        },
        "content": "*Logging Levels*"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "-"
        },
        "content": "* `SEVERE` : Critical problem detected which may possibly cause the termination of the application"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "-"
        },
        "content": "* `WARNING` : Can continue, but with caution"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "-"
        },
        "content": "* `INFO` : Information showing the noteworthy actions by the App"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "-"
        },
        "content": "* `FINE` : Details that is not usually noteworthy but may be useful in debugging e.g. print the actual list instead of just its size"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "-"
        },
        "content": "[[Implementation-Configuration]]"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Configuration"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "-"
        },
        "content": "Certain properties of the application can be controlled (e.g user prefs file location, logging level) through the configuration file (default: `config.json`)."
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Documentation"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "-"
        },
        "content": "Refer to the guide \u003c\u003cDocumentation#, here\u003e\u003e."
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Testing"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "-"
        },
        "content": "Refer to the guide \u003c\u003cTesting#, here\u003e\u003e."
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Dev Ops"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "-"
        },
        "content": "Refer to the guide \u003c\u003cDevOps#, here\u003e\u003e."
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "-"
        },
        "content": "[appendix]"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Product Scope"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "-"
        },
        "content": "*Target user profile*:"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "* has a need to manage a significant number of patients and their information"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "-"
        },
        "content": "* prefer desktop apps over other types"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "-"
        },
        "content": "* can type fast"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "-"
        },
        "content": "* prefers typing over mouse input"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "-"
        },
        "content": "* is reasonably comfortable using CLI apps"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "-"
        },
        "content": "*Value proposition*: manage contacts faster than a typical mouse/GUI driven app"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "-"
        },
        "content": "[appendix]"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d User Stories"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "-"
        },
        "content": "Priorities: High (must have) - `* * \\*`, Medium (nice to have) - `* \\*`, Low (unlikely to have) - `*`"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "-"
        },
        "content": "[width\u003d\"59%\",cols\u003d\"22%,\u003c23%,\u003c25%,\u003c30%\",options\u003d\"header\",]"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "-"
        },
        "content": "|\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "-"
        },
        "content": "|Priority |As a ... |I want to ... |So that I can..."
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "-"
        },
        "content": "|`* * *` |new user |see usage instructions |refer to instructions when I forget how to use the App"
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "|`* * *` |user |add a new patient |organize a patient\u0027s relevant information"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "|`* * *` |user |delete a patient |remove patient entries that I no longer need"
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "|`* * *` |user |view the full profile of a patient by searching for his/her name |see all details regarding a patient easily at a glance"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "|`* * *` |user |record down details of each \u003c\u003cvisitation,visitation\u003e\u003e |keep track of the patients situation"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "|`* * *` |user |set follow-up reminders |check in on my patients after some time or when their medication runs out"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "|`* * *` |user |have daily reminders of important deadlines |keep track of appointments and visitations easily"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "|`* * *` |user |see list of reminders |keep track of what I need to keep track"
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "|`* * *` |user |have \u003c\u003cuser-defined-macros,user-defined macros\u003e\u003e |streamline my diagnosis documentation"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "|`* *` |user |generate a text file detailing my patient\u0027s profile and visits |maintain a archive of patient profiles before deleting them"
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "|`*` |user |hide \u003c\u003cprivate-contact-detail,private contact details\u003e\u003e by default |minimize chance of someone else seeing them by accident"
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "-"
        },
        "content": "|`*` |user with many persons in the address book |sort persons by name |locate a person easily"
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "-"
        },
        "content": "|\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "{*TODO* : Please update user stories if any new enhancements have been planned / made in your implementation. *DELETE WHEN DONE*}"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "-"
        },
        "content": "[appendix]"
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Use Cases"
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "-"
        },
        "content": "(For all use cases below, the *System* is the `AddressBook` and the *Actor* is the `user`, unless specified otherwise)"
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "-"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Use case: Delete person"
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "-"
        },
        "content": "*MSS*"
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "-"
        },
        "content": "1.  User requests to list persons"
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "-"
        },
        "content": "2.  AddressBook shows a list of persons"
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "-"
        },
        "content": "3.  User requests to delete a specific person in the list"
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "-"
        },
        "content": "4.  AddressBook deletes the person"
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "-"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "-"
        },
        "content": "*Extensions*"
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "-"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "-"
        },
        "content": "* 2a. The list is empty."
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "-"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "-"
        },
        "content": "* 3a. The given index is invalid."
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "-"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "-"
        },
        "content": "** 3a1. AddressBook shows an error message."
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "-"
        },
        "content": "Use case resumes at step 2."
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "\u003d\u003d\u003d Use case: View patient profile"
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "*MSS*"
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "1.  User requests to list persons"
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "2.  AddressBook shows a list of persons"
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "3.  User requests to view patient profile by name/index"
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "4.  AddressBook shows patient profile"
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "+"
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "*Extensions*"
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "* 2a. The list is empty."
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "+"
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "* 3. The given name/index is invalid."
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "+"
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "** 3a. AddressBook shows an error message."
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "+"
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "Use case resumes at step 2."
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "* 4. The profile is empty."
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "+"
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "\u003d\u003d\u003d Use case: Record visitation details"
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "*MSS*"
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "* Precondition: User can see list of persons"
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "1.  User requests to add new visitation record for a specific patient in the list"
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "2.  AddressBook adds new visitation record for chosen patient"
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "+"
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "*Extensions*"
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "* 1a. The given index is invalid."
      },
      {
        "lineNumber": 594,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "+"
      },
      {
        "lineNumber": 595,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 596,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "** 1a1. AddressBook shows an error message."
      },
      {
        "lineNumber": 597,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "+"
      },
      {
        "lineNumber": 598,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "Use case resumes at step 1."
      },
      {
        "lineNumber": 599,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 600,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 601,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "\u003d\u003d\u003d Use case: Edit visitation record"
      },
      {
        "lineNumber": 602,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 603,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "*MSS*"
      },
      {
        "lineNumber": 604,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 605,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "* Precondition: User can see list of persons"
      },
      {
        "lineNumber": 606,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "1.  User requests to edit visitation record for specific patient by patient index"
      },
      {
        "lineNumber": 607,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "2.  AddressBook shows pop-up form for user to edit visitation record"
      },
      {
        "lineNumber": 608,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "3.  User saves edit"
      },
      {
        "lineNumber": 609,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "4.  AddressBook saves edit"
      },
      {
        "lineNumber": 610,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "+"
      },
      {
        "lineNumber": 611,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 612,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 613,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "*Extensions*"
      },
      {
        "lineNumber": 614,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 615,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 616,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "* 1a. The user does not provide a record index"
      },
      {
        "lineNumber": 617,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "+"
      },
      {
        "lineNumber": 618,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 619,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "** 1a1. AddressBook shows an indexed list of visitation records"
      },
      {
        "lineNumber": 620,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "+"
      },
      {
        "lineNumber": 621,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "Use case resumes at step 1."
      },
      {
        "lineNumber": 622,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 623,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 624,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 625,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "\u003d\u003d\u003d Use case: Delete visitation record"
      },
      {
        "lineNumber": 626,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 627,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "*MSS*"
      },
      {
        "lineNumber": 628,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 629,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "* Precondition: User can see list of persons"
      },
      {
        "lineNumber": 630,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "1.  User requests to delete visitation record for specific patient by index"
      },
      {
        "lineNumber": 631,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "2.  AddressBook deletes visitation record"
      },
      {
        "lineNumber": 632,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 633,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "+"
      },
      {
        "lineNumber": 634,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 635,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 636,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "*Extensions*"
      },
      {
        "lineNumber": 637,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 638,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 639,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "* 1a. The user does not provide a record index"
      },
      {
        "lineNumber": 640,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "+"
      },
      {
        "lineNumber": 641,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 642,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "** 1a1. AddressBook shows an indexed list of visitation records"
      },
      {
        "lineNumber": 643,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "Use case resumes at step 1."
      },
      {
        "lineNumber": 644,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 645,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 646,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 647,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "\u003d\u003d\u003d Use case: Save user-defined macros"
      },
      {
        "lineNumber": 648,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 649,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "*MSS*"
      },
      {
        "lineNumber": 650,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 651,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "1.  User requests to save user-defined macros"
      },
      {
        "lineNumber": 652,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "2.  AddressBook saves user-defined macros"
      },
      {
        "lineNumber": 653,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 654,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "+"
      },
      {
        "lineNumber": 655,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 656,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 657,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "*Extensions*"
      },
      {
        "lineNumber": 658,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 659,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 660,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "* 1a. The content of the macro is empty."
      },
      {
        "lineNumber": 661,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "+"
      },
      {
        "lineNumber": 662,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 663,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "** 1a1. AddressBook shows an error message."
      },
      {
        "lineNumber": 664,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "+"
      },
      {
        "lineNumber": 665,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "Use case resumes at step 1."
      },
      {
        "lineNumber": 666,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 667,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 668,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "* 1b. The shortcut of the macro is illegal."
      },
      {
        "lineNumber": 669,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "+"
      },
      {
        "lineNumber": 670,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 671,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "** 1b1. AddressBook shows an error message."
      },
      {
        "lineNumber": 672,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "+"
      },
      {
        "lineNumber": 673,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "Use case resumes at step 1."
      },
      {
        "lineNumber": 674,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 675,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 676,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "\u003d\u003d\u003d Use case: Invoke user-defined macros"
      },
      {
        "lineNumber": 677,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 678,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "*MSS*"
      },
      {
        "lineNumber": 679,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 680,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "1.  User requests to invoke user-defined macros"
      },
      {
        "lineNumber": 681,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "2.  AddressBook outputs user-defined data"
      },
      {
        "lineNumber": 682,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 683,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "+"
      },
      {
        "lineNumber": 684,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 685,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 686,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 687,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "\u003d\u003d\u003d Use case: Delete user-defined macros"
      },
      {
        "lineNumber": 688,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 689,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "*MSS*"
      },
      {
        "lineNumber": 690,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 691,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "1.  User requests to remove user-defined macros"
      },
      {
        "lineNumber": 692,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "2.  AddressBook removes user-defined macro"
      },
      {
        "lineNumber": 693,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 694,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "+"
      },
      {
        "lineNumber": 695,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 696,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 697,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "*Extensions*"
      },
      {
        "lineNumber": 698,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 699,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 700,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "* 1a. The content of the macro name is empty."
      },
      {
        "lineNumber": 701,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "+"
      },
      {
        "lineNumber": 702,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 703,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "** 1a1. AddressBook shows an error message."
      },
      {
        "lineNumber": 704,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "+"
      },
      {
        "lineNumber": 705,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "Use case resumes at step 1."
      },
      {
        "lineNumber": 706,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 707,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 708,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "* 1b. There exists no such macro."
      },
      {
        "lineNumber": 709,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "+"
      },
      {
        "lineNumber": 710,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 711,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "** 1b1. AddressBook shows an error message."
      },
      {
        "lineNumber": 712,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "+"
      },
      {
        "lineNumber": 713,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "Use case resumes at step 1."
      },
      {
        "lineNumber": 714,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 715,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 716,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "\u003d\u003d\u003d Use case: View follow-up reminders"
      },
      {
        "lineNumber": 717,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 718,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "*MSS*"
      },
      {
        "lineNumber": 719,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 720,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "1.  User starts up AddressBook"
      },
      {
        "lineNumber": 721,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "2.  Follow-up reminders for the day are displayed"
      },
      {
        "lineNumber": 722,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 723,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "+"
      },
      {
        "lineNumber": 724,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 725,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 726,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "*Extensions*"
      },
      {
        "lineNumber": 727,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 728,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 729,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "* 2. No reminders are scheduled for the day"
      },
      {
        "lineNumber": 730,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "+"
      },
      {
        "lineNumber": 731,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 732,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "** 2a. AddressBook shows no reminder message"
      },
      {
        "lineNumber": 733,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "+"
      },
      {
        "lineNumber": 734,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 735,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 736,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 737,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "\u003d\u003d\u003d Use case: View reminders"
      },
      {
        "lineNumber": 738,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 739,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "*MSS*"
      },
      {
        "lineNumber": 740,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 741,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "1.  User starts up AddressBook"
      },
      {
        "lineNumber": 742,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "2.  Reminders are displayed"
      },
      {
        "lineNumber": 743,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 744,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "+"
      },
      {
        "lineNumber": 745,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 746,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 747,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "*Extensions*"
      },
      {
        "lineNumber": 748,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 749,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 750,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "* 2. No reminders are set to show"
      },
      {
        "lineNumber": 751,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "+"
      },
      {
        "lineNumber": 752,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 753,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "** 2a. AddressBook shows no reminder message"
      },
      {
        "lineNumber": 754,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "+"
      },
      {
        "lineNumber": 755,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 756,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 757,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 758,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "\u003d\u003d\u003d Use case: Open Message of the Day"
      },
      {
        "lineNumber": 759,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 760,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "*MSS*"
      },
      {
        "lineNumber": 761,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 762,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "1. User requests to open Message of the Day"
      },
      {
        "lineNumber": 763,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "2. Message of the Day prompt opens with Follow-Up and Reminders details"
      },
      {
        "lineNumber": 764,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 765,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "+"
      },
      {
        "lineNumber": 766,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 767,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 768,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "*Extensions*"
      },
      {
        "lineNumber": 769,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 770,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 771,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "* 2. No follow-up or reminders active"
      },
      {
        "lineNumber": 772,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "+"
      },
      {
        "lineNumber": 773,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 774,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "** 2a. Message of the Day window shows no active follow-up or reminders"
      },
      {
        "lineNumber": 775,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "+"
      },
      {
        "lineNumber": 776,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 777,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 778,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "{*TODO* : Please add use cases if your component is not featured here yet. If unsure, just put to be safe. *DELETE WHEN DONE*}"
      },
      {
        "lineNumber": 779,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 780,
        "author": {
          "gitId": "-"
        },
        "content": "[appendix]"
      },
      {
        "lineNumber": 781,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Non Functional Requirements"
      },
      {
        "lineNumber": 782,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 783,
        "author": {
          "gitId": "-"
        },
        "content": ".  Should work on any \u003c\u003cmainstream-os,mainstream OS\u003e\u003e as long as it has Java `11` or above installed."
      },
      {
        "lineNumber": 784,
        "author": {
          "gitId": "-"
        },
        "content": ".  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage."
      },
      {
        "lineNumber": 785,
        "author": {
          "gitId": "-"
        },
        "content": ".  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse."
      },
      {
        "lineNumber": 786,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 787,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 788,
        "author": {
          "gitId": "-"
        },
        "content": "[appendix]"
      },
      {
        "lineNumber": 789,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Glossary"
      },
      {
        "lineNumber": 790,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 791,
        "author": {
          "gitId": "-"
        },
        "content": "[[mainstream-os]] Mainstream OS::"
      },
      {
        "lineNumber": 792,
        "author": {
          "gitId": "-"
        },
        "content": "Windows, Linux, Unix, OS-X"
      },
      {
        "lineNumber": 793,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 794,
        "author": {
          "gitId": "-"
        },
        "content": "[[private-contact-detail]] Private contact detail::"
      },
      {
        "lineNumber": 795,
        "author": {
          "gitId": "-"
        },
        "content": "A contact detail that is not meant to be shared with others"
      },
      {
        "lineNumber": 796,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 797,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "[[user-defined-macros]] User-defined macros::"
      },
      {
        "lineNumber": 798,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "User-defined shortcuts for large chunks of commonly used text for diagnosis"
      },
      {
        "lineNumber": 799,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 800,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "[[visitation]] Visitation::"
      },
      {
        "lineNumber": 801,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "A housecall or appointment with the patient"
      },
      {
        "lineNumber": 802,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 803,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "{*TODO* : Please add terms if any that your commands use here. If unsure, just put to be safe. *DELETE WHEN DONE*}"
      },
      {
        "lineNumber": 804,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 805,
        "author": {
          "gitId": "-"
        },
        "content": "[appendix]"
      },
      {
        "lineNumber": 806,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Instructions for Manual Testing"
      },
      {
        "lineNumber": 807,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 808,
        "author": {
          "gitId": "-"
        },
        "content": "Given below are instructions to test the app manually."
      },
      {
        "lineNumber": 809,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 810,
        "author": {
          "gitId": "-"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 811,
        "author": {
          "gitId": "-"
        },
        "content": "These instructions only provide a starting point for testers to work on; testers are expected to do more _exploratory_ testing."
      },
      {
        "lineNumber": 812,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 813,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Launch and Shutdown"
      },
      {
        "lineNumber": 814,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 815,
        "author": {
          "gitId": "-"
        },
        "content": ". Initial launch"
      },
      {
        "lineNumber": 816,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 817,
        "author": {
          "gitId": "-"
        },
        "content": ".. Download the jar file and copy into an empty folder"
      },
      {
        "lineNumber": 818,
        "author": {
          "gitId": "-"
        },
        "content": ".. Double-click the jar file +"
      },
      {
        "lineNumber": 819,
        "author": {
          "gitId": "-"
        },
        "content": "   Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum."
      },
      {
        "lineNumber": 820,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 821,
        "author": {
          "gitId": "-"
        },
        "content": ". Saving window preferences"
      },
      {
        "lineNumber": 822,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 823,
        "author": {
          "gitId": "-"
        },
        "content": ".. Resize the window to an optimum size. Move the window to a different location. Close the window."
      },
      {
        "lineNumber": 824,
        "author": {
          "gitId": "-"
        },
        "content": ".. Re-launch the app by double-clicking the jar file. +"
      },
      {
        "lineNumber": 825,
        "author": {
          "gitId": "-"
        },
        "content": "   Expected: The most recent window size and location is retained."
      },
      {
        "lineNumber": 826,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 827,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Deleting a person"
      },
      {
        "lineNumber": 828,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 829,
        "author": {
          "gitId": "-"
        },
        "content": ". Deleting a person while all persons are listed"
      },
      {
        "lineNumber": 830,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 831,
        "author": {
          "gitId": "-"
        },
        "content": ".. Prerequisites: List all persons using the `list` command. Multiple persons in the list."
      },
      {
        "lineNumber": 832,
        "author": {
          "gitId": "-"
        },
        "content": ".. Test case: `delete 1` +"
      },
      {
        "lineNumber": 833,
        "author": {
          "gitId": "-"
        },
        "content": "   Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated."
      },
      {
        "lineNumber": 834,
        "author": {
          "gitId": "-"
        },
        "content": ".. Test case: `delete 0` +"
      },
      {
        "lineNumber": 835,
        "author": {
          "gitId": "-"
        },
        "content": "   Expected: No person is deleted. Error details shown in the status message. Status bar remains the same."
      },
      {
        "lineNumber": 836,
        "author": {
          "gitId": "-"
        },
        "content": ".. Other incorrect delete commands to try: `delete`, `delete x` (where x is larger than the list size) _{give more}_ +"
      },
      {
        "lineNumber": 837,
        "author": {
          "gitId": "-"
        },
        "content": "   Expected: Similar to previous."
      },
      {
        "lineNumber": 838,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 839,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Saving data"
      },
      {
        "lineNumber": 840,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 841,
        "author": {
          "gitId": "-"
        },
        "content": ". Dealing with missing/corrupted data files"
      },
      {
        "lineNumber": 842,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 843,
        "author": {
          "gitId": "-"
        },
        "content": ".. _{explain how to simulate a missing/corrupted file and the expected behavior}_"
      },
      {
        "lineNumber": 844,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 845,
        "author": {
          "gitId": "-"
        },
        "content": "_{ more test cases ... }_"
      },
      {
        "lineNumber": 846,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 847,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "{*TODO* : You can be generic about it because it is probably unrealistic to list out all your tests here. Just follow suit with these examples. *DELETE WHEN DONE*}"
      }
    ],
    "authorContributionMap": {
      "Q-gabe": 76,
      "ReignOfComputer": 224,
      "Wingedevil": 56,
      "-": 393,
      "SQwQ": 73,
      "gachia": 25
    }
  },
  {
    "path": "docs/Documentation.adoc",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "\u003d VISIT - Documentation"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ":site-section: DeveloperGuide"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ":toc:"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ":toc-title:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ":toc-placement: preamble"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ":sectnums:"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ":imagesDir: images"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ":stylesDir: stylesheets"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ":xrefstyle: full"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "ifdef::env-github[]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ":tip-caption: :bulb:"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ":note-caption: :information_source:"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ":warning-caption: :warning:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "endif::[]"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ":repoURL: https://github.com/AY1920S1-CS2103T-F12-2/main"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Introduction"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "We use asciidoc for writing documentation."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "We chose asciidoc over Markdown because asciidoc, although a bit more complex than Markdown, provides more flexibility in formatting."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Editing Documentation"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "See \u003c\u003cUsingGradle#rendering-asciidoc-files, UsingGradle.adoc\u003e\u003e to learn how to render `.adoc` files locally to preview the end result of your edits."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "Alternatively, you can download the AsciiDoc plugin for IntelliJ, which allows you to preview the changes you have made to your `.adoc` files in real-time."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Editing Diagrams"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "See \u003c\u003cUsingPlantUml#, UsingPlantUml.adoc\u003e\u003e to find out how to create and update the UML diagrams in the developer guide."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Publishing Documentation"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "See \u003c\u003cUsingTravis#deploying-github-pages, UsingTravis.adoc\u003e\u003e to learn how to deploy GitHub Pages using Travis."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Converting Documentation to PDF format"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "We use https://www.google.com/chrome/browser/desktop/[Google Chrome] for converting documentation to PDF format, as Chrome\u0027s PDF engine preserves hyperlinks used in webpages."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "Here are the steps to convert the project documentation files to PDF format."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ".  Follow the instructions in \u003c\u003cUsingGradle#rendering-asciidoc-files, UsingGradle.adoc\u003e\u003e to convert the AsciiDoc files in the `docs/` directory to HTML format."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ".  Go to your generated HTML files in the `build/docs` folder, right click on them and select `Open with` -\u003e `Google Chrome`."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ".  Within Chrome, click on the `Print` option in Chrome\u0027s menu."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ".  Set the destination to `Save as PDF`, then click `Save` to save a copy of the file in PDF format. For best results, use the settings indicated in the screenshot below."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ".Saving documentation as PDF files in Chrome"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "image::chrome_save_as_pdf.png[width\u003d\"300\"]"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "[[Docs-SiteWideDocSettings]]"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Site-wide Documentation Settings"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "The link:{repoURL}/tree/master/build.gradle[`build.gradle`] file specifies some project-specific https://asciidoctor.org/docs/user-manual/#attributes[asciidoc attributes] which affects how all documentation files within this project are rendered."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "[TIP]"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "Attributes left unset in the `build.gradle` file will use their *default value*, if any."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "[cols\u003d\"1,2a,1\", options\u003d\"header\"]"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ".List of site-wide attributes"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "|Attribute name |Description |Default value"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "|`site-name`"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "|The name of the website."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "If set, the name will be displayed near the top of the page."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "|_not set_"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "|`site-githuburl`"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "|URL to the site\u0027s repository on https://github.com[GitHub]."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "Setting this will add a \"View on GitHub\" link in the navigation bar."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "|_not set_"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "[[Docs-PerFileDocSettings]]"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Per-file Documentation Settings"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "Each `.adoc` file may also specify some file-specific https://asciidoctor.org/docs/user-manual/#attributes[asciidoc attributes] which affects how the file is rendered."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "Asciidoctor\u0027s https://asciidoctor.org/docs/user-manual/#builtin-attributes[built-in attributes] may be specified and used as well."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "[TIP]"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "Attributes left unset in `.adoc` files will use their *default value*, if any."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "[cols\u003d\"1,2a,1\", options\u003d\"header\"]"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ".List of per-file attributes, excluding Asciidoctor\u0027s built-in attributes"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "|Attribute name |Description |Default value"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "|`site-section`"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "|Site section that the document belongs to."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "This will cause the associated item in the navigation bar to be highlighted."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "One of: `UserGuide`, `DeveloperGuide`, ``LearningOutcomes``{asterisk}, `AboutUs`, `ContactUs`"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "_{asterisk} Official SE-EDU projects only_"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "|_not set_"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "|`no-site-header`"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "|Set this attribute to remove the site navigation bar."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "|_not set_"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Site Template"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "The files in link:{repoURL}/tree/master/docs/stylesheets[`docs/stylesheets`] are the https://developer.mozilla.org/en-US/docs/Web/CSS[CSS stylesheets] of the site."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "You can modify them to change some properties of the site\u0027s design."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "The files in link:{repoURL}/tree/master/docs/templates[`docs/templates`] controls the rendering of `.adoc` files into HTML5."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "These template files are written in a mixture of https://www.ruby-lang.org[Ruby] and http://slim-lang.com[Slim]."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "[WARNING]"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "Modifying the template files in link:{repoURL}/tree/master/docs/templates[`docs/templates`] requires some knowledge and experience with Ruby and Asciidoctor\u0027s API."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "You should only modify them if you need greater control over the site\u0027s layout than what stylesheets can provide."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d"
      }
    ],
    "authorContributionMap": {
      "Q-gabe": 6,
      "-": 111
    }
  },
  {
    "path": "docs/SettingUp.adoc",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "\u003d VISIT - Setting Up"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ":site-section: DeveloperGuide"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ":toc:"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ":toc-title:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ":toc-placement: preamble"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ":sectnums:"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ":imagesDir: images"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ":stylesDir: stylesheets"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ":xrefstyle: full"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "ifdef::env-github[]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ":tip-caption: :bulb:"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ":note-caption: :information_source:"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ":warning-caption: :warning:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "endif::[]"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ":repoURL: https://github.com/AY1920S1-CS2103T-F12-2/main/tree/master"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Prerequisites"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ". *JDK `11`* or above"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ". *IntelliJ* IDE"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "IntelliJ by default has Gradle and JavaFx plugins installed. +"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "Do not disable them. If you have disabled them, go to `File` \u003e `Settings` \u003e `Plugins` to re-enable them."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Setting up the project in your computer"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ". Fork this repo, and clone the fork to your computer"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ". Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ". Set up the correct JDK version for Gradle"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ".. Click `Configure` \u003e `Project Defaults` \u003e `Project Structure`"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ".. Click `New...` and find the directory of the JDK"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ". Click `Import Project`"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ". Locate the `build.gradle` file and select it. Click `OK`"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ". Click `Open as Project`"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ". Click `OK` to accept the default settings."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Verifying the setup"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ". Run the `seedu.address.Main` and try a few commands"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ". \u003c\u003cTesting#,Run the tests\u003e\u003e to ensure they all pass."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Configurations to do before writing code"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Configuring the coding style"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "This project follows https://github.com/oss-generic/process/blob/master/docs/CodingStandards.adoc[oss-generic coding standards]. IntelliJ\u0027s default style is mostly compliant with ours but it uses a different import order from ours. To rectify,"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ". Go to `File` \u003e `Settings...` (Windows/Linux), or `IntelliJ IDEA` \u003e `Preferences...` (macOS)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ". Select `Editor` \u003e `Code Style` \u003e `Java`"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ". Click on the `Imports` tab to set the order"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "* For `Class count to use import with \u0027\\*\u0027` and `Names count to use static import with \u0027*\u0027`: Set to `999` to prevent IntelliJ from contracting the import statements"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "* For `Import Layout`: The order is `import static all other imports`, `import java.\\*`, `import javax.*`, `import org.\\*`, `import com.*`, `import all other imports`. Add a `\u003cblank line\u003e` between each `import`"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "Optionally, you can follow the \u003c\u003cUsingCheckstyle#, UsingCheckstyle.adoc\u003e\u003e document to configure Intellij to check style-compliance as you write code."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Updating documentation to match your fork"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "After forking the repo, the documentation will still have the UnityUnreal branding and refer to the `AY1920S1-CS2103T-F12-2/main` repo."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "If you plan to develop this fork as a separate product (i.e. instead of contributing to `AY1920S1-CS2103T-F12-2/main`), you should do the following:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ". Configure the \u003c\u003cDocumentation#Docs-SiteWideDocSettings, site-wide documentation settings\u003e\u003e in link:{repoURL}/build.gradle[`build.gradle`], such as the `site-name`, to suit your own project."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ". Replace the URL in the attribute `repoURL` in link:{repoURL}/docs/DeveloperGuide.adoc[`DeveloperGuide.adoc`] and link:{repoURL}/docs/UserGuide.adoc[`UserGuide.adoc`] with the URL of your fork."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Setting up CI"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "Set up Travis to perform Continuous Integration (CI) for your fork. See \u003c\u003cUsingTravis#, UsingTravis.adoc\u003e\u003e to learn how to set it up."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "After setting up Travis, you can optionally set up coverage reporting for your team fork (see \u003c\u003cUsingCoveralls#, UsingCoveralls.adoc\u003e\u003e)."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "Coverage reporting could be useful for a team repository that hosts the final version but it is not that useful for your personal fork."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "Optionally, you can set up AppVeyor as a second CI (see \u003c\u003cUsingAppVeyor#, UsingAppVeyor.adoc\u003e\u003e)."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "Having both Travis and AppVeyor ensures your App works on both Unix-based platforms and Windows-based platforms (Travis is Unix-based and AppVeyor is Windows-based)"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Getting started with coding"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "When you are ready to start coding, we recommend that you get some sense of the overall design by reading about \u003c\u003cDeveloperGuide#Design-Architecture, AddressBook\u0027s architecture\u003e\u003e."
      }
    ],
    "authorContributionMap": {
      "Q-gabe": 4,
      "-": 80
    }
  },
  {
    "path": "docs/Testing.adoc",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "\u003d VISIT - Testing"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ":site-section: DeveloperGuide"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ":toc:"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ":toc-title:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ":toc-placement: preamble"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ":sectnums:"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ":imagesDir: images"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ":stylesDir: stylesheets"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ":xrefstyle: full"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "ifdef::env-github[]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ":tip-caption: :bulb:"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ":note-caption: :information_source:"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ":warning-caption: :warning:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "endif::[]"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ":repoURL: https://github.com/AY1920S1-CS2103T-F12-2/main/tree/master"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Running Tests"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "There are two ways to run tests."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "*Method 1: Using IntelliJ JUnit test runner*"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "* To run all tests, right-click on the `src/test/java` folder and choose `Run \u0027All Tests\u0027`"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "* To run a subset of tests, you can right-click on a test package, test class, or a test and choose `Run \u0027ABC\u0027`"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "*Method 2: Using Gradle*"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "* Open a console and run the command `gradlew clean test` (Mac/Linux: `./gradlew clean test`)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "See \u003c\u003cUsingGradle#, UsingGradle.adoc\u003e\u003e for more info on how to run tests using Gradle."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Types of tests"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "We have three types of tests:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ".  _Unit tests_ targeting the lowest level methods/classes. +"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "e.g. `seedu.address.commons.StringUtilTest`"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ".  _Integration tests_ that are checking the integration of multiple code units (those code units are assumed to be working). +"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "e.g. `seedu.address.storage.StorageManagerTest`"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ".  Hybrids of unit and integration tests. These test are checking multiple code units as well as how the are connected together. +"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "e.g. `seedu.address.logic.LogicManagerTest`"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Troubleshooting Testing"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "**Problem: Keyboard and mouse movements are not simulated on macOS Mojave, resulting in GUI Tests failure.**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "* Reason: From macOS Mojave onwards, applications without `Accessibility` permission cannot simulate certain keyboard and mouse movements."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "* Solution: Open `System Preferences`, click `Security and Privacy` -\u003e `Privacy` -\u003e `Accessibility`, and check the box beside `Intellij IDEA`."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ".`Accessibility` permission is granted to `IntelliJ IDEA`"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "image::testfx-idea-accessibility-permissions.png[width\u003d\"600\"]"
      }
    ],
    "authorContributionMap": {
      "Q-gabe": 2,
      "-": 50
    }
  },
  {
    "path": "docs/UserGuide.adoc",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "\u003d VISIT - User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ":site-section: UserGuide"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ":toc:"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ":toclevels: 3"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ":toc-title:"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ":toc-placement: preamble"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ":sectnums:"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ":imagesDir: images"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ":stylesDir: stylesheets"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ":xrefstyle: full"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ":experimental:"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "ifdef::env-github[]"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ":tip-caption: :bulb:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ":note-caption: :information_source:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ":warning-caption: :exclamation:"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "endif::[]"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ":repoURL: https://github.com/AY1920S1-CS2103T-F12-2/main"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "By: `Team UnrealUnity`      Since: `Sep 2019`      Licence: `MIT`"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Introduction"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "*VISIT* is a *desktop address book application* for Doctors to *plan their visits* and *manage their patient information*. Most notably, VISIT is *optimized for Doctors who prefer to use a Command Line Interface* (CLI) while still having a pleasant Graphical User Interface (GUI). If your typing speed is sufficiently quick, VISIT can *greatly increase your efficiency* in managing your patient profiles and appointments. Interested in spending less time resolving logistical hiccups and more time doing your job? Jump to the \u003c\u003cQuick Start\u003e\u003e to get started. Enjoy!"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Quick Start"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ".  Ensure you have Java `11` or above installed in your Computer."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ".  Download the latest `VISITapp.jar` link:{repoURL}/releases[here]."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ".  Copy the file to the folder you want to use as the home folder for VISIT."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ".  Double-click the file to start the app. The GUI should appear in a few seconds."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "image::Ui.png[width\u003d\"790\"]"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ".  Type the command in the command box and press kbd:[Enter] to execute it. +"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "e.g. typing *`help`* and pressing kbd:[Enter] will open the help window."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ".  Some example commands you can try:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "* *`list`* : lists all patients"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "* **`add`**`n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01` : adds a patient named `John Doe` to VISIT\u0027s address book."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "* **`delete`**`3` : deletes the 3rd contact shown in the current list"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "* *`exit`* : exits the app"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ".  Refer to \u003c\u003cFeatures\u003e\u003e for details of each command."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "[[Features]]"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Features"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "*Command Format*"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "* All commands listed are *case-insensitive*."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "* Words in `UPPER_CASE` represent the parameters to be specified. +"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "* Items in square brackets are *optional*. +"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/cough` or as `n/John Doe`."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "* Items with `‚Ä¶`‚Äã after them can be used optionally or multiple times. +"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "e.g. `[t/TAG]...` can be used as `{nbsp}` (i.e. 0 times), `t/cancer`, `t/pneumonia t/h1n1` etc."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "* Parameters can be in any order if suffixes like \"n/\" or \"p/\" are specified. +"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "\u003d\u003d\u003d *Application Commands*"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "\u003d\u003d\u003d\u003d Viewing help : `help`"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "Shows a list of available user commands. +"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `help`"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "\u003d\u003d\u003d\u003d Exiting the program : `exit`"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "Exits the program. +"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "Format: `exit`"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "\u003d\u003d\u003d *Viewing and Managing Patients*"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "VISIT can store all the patient information for doctors to have them easily accessible. The following commands enable doctors to be able to add patients and their relevant particulars to be tracked by VISIT, and also view a list of patients that have been entered."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "\u003d\u003d\u003d\u003d Listing all patients : `list`"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "Shows a list of all patients in the address book. +"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "Format: `list`"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "\u003d\u003d\u003d\u003d Adding a patient : `add`"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "Adds a patient to VISIT\u0027s address book. +"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]...`"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "[TIP]"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "A patient can have any number of tags (including 0)"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "*Examples*:"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "* `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01`"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "* `add n/Betsy Crowe t/cold e/betsycrowe@example.com a/Changi Hospital p/1234567 t/pneumonia`"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "\u003d\u003d\u003d\u003d Editing a patient\u0027s particulars : `edit`"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "Edits an existing patient in the address book. +"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]...`"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "* Edits the patient at the specified `INDEX`. The index refers to the index number shown in the displayed patient list. The index *must be a positive integer* 1, 2, 3, ..."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "* At least one of the optional fields must be provided."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "* Existing values will be updated to the input values."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "* When editing tags, the existing tags of the patient will be removed i.e adding of tags is not cumulative."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "* You can remove all the patient\u0027s tags by typing `t/` without specifying any tags after it."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "*Examples*:"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "* `edit 1 p/91234567 e/johndoe@example.com` +"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "Edits the phone number and email address of the 1st patient to be `91234567` and `johndoe@example.com` respectively."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "* `edit 2 n/Betsy Crower t/` +"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "Edits the name of the 2nd patient to be `Betsy Crower` and clears all existing tags."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "\u003d\u003d\u003d\u003d Locating patient by name : `find`"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "Finds patients whose names contain any of the given keywords. +"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `find KEYWORD [MORE_KEYWORDS]`"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "* The search is case insensitive. e.g `hans` will match `Hans`"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "* Only the name is searched."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "* Only full words will be matched e.g. `Han` will not match `Hans`"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "* Patients matching at least one keyword will be returned (i.e. `OR` search). e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "*Examples*:"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "* `find John` +"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "Returns `john` and `John Doe`"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "* `find Betsy Tim John` +"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "Returns any patient having names `Betsy`, `Tim`, or `John`"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "// tag::delete[]"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "\u003d\u003d\u003d\u003d Deleting a patient : `delete`"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "Deletes the specified patient from the address book. +"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `delete INDEX`"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "* Deletes the patient at the specified `INDEX`."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "* The index refers to the index number shown in the displayed patient list."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "* The index *must be a positive integer* 1, 2, 3, ..."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "*Examples*:"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "* `list` +"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "`delete 2` +"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "Deletes the 2nd patient in the address book."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "* `find Betsy` +"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "`delete 1` +"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "Deletes the 1st patient in the results of the `find` command."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "// end::delete[]"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "\u003d\u003d\u003d\u003d Clearing all patient data : `clear`"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "Clears all entries from the address book. +"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `clear`"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "\u003d\u003d\u003d Setting shorthand commands: `alias`"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "Set an alias for a command to do shorthand. +"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "Format: `alias l/[SHORTHAND] v/[COMMAND]`"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "* `alias l/ls v/list` +"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "Typing `ls` now works equivalently as `list`."
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "* `alias l/h v/help` +"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "Typing `h` now works equivalently as `help`."
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "\u003d\u003d\u003d Deleting shorthand commands: `unalias`"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "Delete a existing alias. +"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "Format: `unalias [SHORTHAND]`"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "* `unalias ls` +"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "Typing `ls` is no longer equivalent to `list`."
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "\u003d\u003d\u003d Showing all existing aliases: `showalias`"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "Show all existing aliases. +"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "Format: `showalias`"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "* `showalias` +"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "Shows all the existing aliases."
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Clearing all entries : `clear`"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "Clears all entries from the address book. +"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `clear`"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "\u003d\u003d\u003d Viewing Full Profile : `profile`"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "[WARNING]"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "Be careful when entering this, as this will erase all patient data from VISIT!"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "\u003d\u003d\u003d *Viewing and Managing Visits*"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "VISIT enables doctors to also track the visitations for each patient, allowing the specification of diagnosis, medications prescribed as well as other general comments per visit."
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "\u003d\u003d\u003d\u003d Viewing Full Profile : `profile`"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "Opens up a new pop-out panel showing the specified patient‚Äôs details (Name, Phone, Email, Address, Tags, Visitation reports). The panel can then be closed by pressing q to quit, or p to generate a text file of the profile. +"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "Format: `profile INDEX`"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "****"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "* Shows full profile for the patient at the specified INDEX."
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "* The index refers to the index number shown in the displayed patient list."
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "* The index must be a positive integer 1, 2, 3, ‚Ä¶"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "* The generated text file will overwrite the older text file if it exists."
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "****"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "*Examples*:"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "* `profile 2` +"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "Opens up a pop-up panel detailing the profile of the patient with the index of 2."
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "\u003d\u003d\u003d\u003d Adding a new visitation report for a patient : `addvisit`"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "Opens a pop-up panel that enables the specification of a new visitation report for a particular patient. +"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "Format: `addvisit INDEX [v/DATE]`"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "* Date must be in the \"dd/MM/yyyy\" format (i.e. `v/19/10/2019`)"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "[TIP]"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "If no date is specified, `addvisit` will default to the current local date of the computer."
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "*Examples*:"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "* `addvisit 1` +"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "Adds new visitation report for the patient at index 1, defaulting to the current date on the computer. A new panel allowing the specifications of the visitation to be entered."
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "* `addvisit 1 v/19/10/2019` +"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "Adds new visitation report dated 19th of October 2019, will be added for the patient at index 1. A new panel allowing the specifications of the visitation to be entered."
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "\u003d\u003d\u003d\u003d Editing the particulars of a visitation report : `editvisit`"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "Opens a pop-up panel that enables the editing of an existing visitation report of a particular patient. +"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "Format: `editvisit INDEX [i/REPORT INDEX]`"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "If no report index is specified, `editvisit INDEX` will open a panel showing the reports of that patient and the relevant indexes of the reports. To edit the visit, simply re-enter the command with the desired report index."
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "*Examples*:"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "* `editvisit 1` +"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "A panel will appear showing the list of visits for the patient at index 1 along with the relevant report indexes."
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "* `editvisit 1 i/1` +"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "A panel will appear to allow for the amendment of the 1st visitation report of the person at index 1."
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "\u003d\u003d\u003d\u003d Deleting a visitation report : `deletevisit`"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "Deletes the specified visitation report. +"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "Format: `deletevisit INDEX [d/REPORT INDEX]`"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "If no report index is specified, `deletevisit INDEX` will open a panel showing the reports of that patient and their relevant indexes of the reports. To delete the visit, simply re-enter the command with the desired report index."
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "*Examples*:"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "* `deletevisit 1` +"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "A panel will appear showing the list of visits for the patient at index 1 along with the relevant report indexes."
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "* `deletevisit 1 d/1` +"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "The 1st visitation report of the person at index 1 will be deleted."
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "\u003d\u003d\u003d *Follow-Ups and Reminders*"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "VISIT also enables doctors to keep abreast and up-to-date on any events or deadlines as VISIT can be customized to remind them of any follow-up appointments or other timed reminders."
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "\u003d\u003d\u003d\u003d Adding a follow-up reminder with patient : `followup`"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "Adds a follow-up reminder for a particular patient, which will generate a prompt after a set number of days when VISIT is run. +"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "Format: `followup INDEX [d/DAYS]`"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "[TIP]"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "The follow-up entry will by default generate the prompt in 7 days if not specified."
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "*Examples*:"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "* `followup 9 d/10` +"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "Creates a follow-up entry on patient with index 9 for 10 days later."
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "\u003d\u003d\u003d\u003d Creating a generic reminder : `reminder`"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "Creates a new reminder to show up when the program is launched. +"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "Format: `reminder TEXT [d/DAYS]`"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "[TIP]"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "The reminder entry will by default generate the prompt in 7 days if not specified."
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "*Examples*:"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "* `reminder Two Point Hospital closed d/7` +"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "Creates a reminder ‚ÄúTwo Point Hospital closed‚Äù that will display at launch for the next 7 days."
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "\u003d\u003d\u003d\u003d Show Message of the Day box : `show`"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "Shows a pop-up containing the message of the day text. +"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "Format: `show`"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "\u003d\u003d\u003d *Optimization for Command-Line Interface (CLI) Users*"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "VISIT being an application optimized for doctors who are comfortable with CLI, has support for features such as aliasing for commands to enable command entries which are often used to be stored and used quickly and easily."
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "\u003d\u003d\u003d\u003d Setting a shorthand command / alias : `alias`"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "Set an alias for a command to enable faster command entry for a customized input. +"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "Format: `alias l/SHORTHAND v/COMMAND`"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "*Examples*:"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "* `alias l/ls v/list` +"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "Typing `ls` now works equivalently as typing `list`."
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "* `alias l/show all patients v/list` +"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "Typing `show all patients` now works equivalently as typing `list`."
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "\u003d\u003d\u003d\u003d Deleting a shorthand commands / alias : `deletealias`"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "Delete an existing alias. +"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "Format: `deletealias SHORTHAND`"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "*Examples*:"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "* `deletealias ls` +"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "Typing `ls` will no longer be equivalent to typing `list`."
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "\u003d\u003d\u003d *Saving the data*"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "VISIT\u0027s address book data are saved in the hard disk automatically after any command that changes the data. +"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": "There is no need to save manually."
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "\u003d\u003d\u003d *Upcoming Features*"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "The following features are intended for a later release of VISIT that will further expand on the managing power doctors will be able to execute using the application."
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "\u003d\u003d\u003d\u003d Inventory System `[Coming in v2.0]`"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "gachia"
        },
        "content": ""
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "gachia"
        },
        "content": "VISIT v2.0 will include an inventory system for doctors to manage and organise their medical stores."
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "gachia"
        },
        "content": "Doctors will be able to generate the list of medication in their stock and assign them to patients using the app"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "gachia"
        },
        "content": ", which automatically deducts from that list. +"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "gachia"
        },
        "content": "Warnings of low stocks are also an intended feature."
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "gachia"
        },
        "content": ""
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "\u003d\u003d\u003d\u003d Printing of Medical Certificates `[Coming in v2.0]`"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "gachia"
        },
        "content": ""
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "gachia"
        },
        "content": "In v2.0, VISIT will allow doctors to easily print an official Medical Certificate with a single command."
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "gachia"
        },
        "content": ""
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "\u003d\u003d\u003d\u003d Microsoft Azure Integration `[Coming in v2.0]`"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "gachia"
        },
        "content": ""
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "gachia"
        },
        "content": "Microsoft Azure is a popular Cloud Computing platform that allows for data analysis, remote deployment and user"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "gachia"
        },
        "content": "authentication resources. We plan to leverage this power in VISIT v2.0 so that doctors may securely access"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "gachia"
        },
        "content": "VISIT from any location, truly bringing VISIT on-the-go."
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d FAQ"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "*Q*: _How do I transfer my saved patient and visit data to another Computer?_ +"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "*A*: Install VISIT in the other computer, run it once, typing  `exit` to exit the application. Next, overwrite the generated `data` folder created with the `data` folder of your previous installation folder for VISIT."
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "*Q*: _How do I transfer my shorthand command data to another Computer?_ +"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "*A*: Install VISIT in the other computer and copy the `preferences.json` file from the previous installation folder for VISIT into the installation folder on the new computer."
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Command Summary"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "\u003d\u003d\u003d *Application Commands*"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "* *Viewing help* : `help`"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "* *Exiting the program* : `exit`"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "\u003d\u003d\u003d *Viewing and Managing Patients*"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "* *Listing all patients* : `list`"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "* *Adding a patient* : `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]‚Ä¶‚Äã` +"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "e.g. `add n/Betsy Crowe t/cold e/betsycrowe@example.com a/Changi Hospital p/1234567 t/pneumonia`"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "* *Editing a patient‚Äôs particulars* : `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]‚Ä¶` +"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "e.g. `edit 2 n/Betsy Crower t/`"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "* *Locating patient by name* : `find KEYWORD [MORE_KEYWORDS]` +"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "e.g. `find Betsy Tim John`"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "* *Deleting a patient* : `delete INDEX` +"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "e.g. `delete 2`"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "* *Clearing all patient data* : `clear`"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "\u003d\u003d\u003d *Viewing and Managing Visits*"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "* *Viewing Full Profile* : `profile INDEX` +"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "e.g. `profile 1`"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "* *Adding a new visitation report for a patient* : `addvisit INDEX [v/DATE]` +"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "e.g. `addvisit 1 v/19/10/2019`"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "* *Editing the particulars of a visitation report* : `editvisit INDEX [i/REPORT INDEX]` +"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "e.g. `editvisit 1 i/1`"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "* *Deleting a visitation report* : `deletevisit INDEX [d/REPORT INDEX]` +"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "e.g. `deletevisit 1 d/1`"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "\u003d\u003d\u003d *Follow-Ups and Reminders*"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "* *Adding a follow-up reminder with patient* : `followup INDEX [d/DAYS]` +"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "e.g. `followup 9 d/10`"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "* *Creating a generic reminder* : `reminder TEXT [d/DAYS]` +"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "e.g. `reminder Two Point Hospital closed d/7`"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "* *Show Message of the Day* : `show`"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "\u003d\u003d\u003d *Optimization for Command-Line Interface (CLI) Users*"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "* *Setting a shorthand command / alias* : `alias l/SHORTHAND v/COMMAND` +"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "e.g. `alias l/show all patients v/list`"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "* *Deleting a shorthand commands / alias* : `deletealias SHORTHAND` +"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "e.g. `deletealias show all patients`"
      }
    ],
    "authorContributionMap": {
      "Q-gabe": 200,
      "ReignOfComputer": 28,
      "Wingedevil": 35,
      "-": 122,
      "SQwQ": 14,
      "gachia": 13
    }
  },
  {
    "path": "docs/UsingAppVeyor.adoc",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d AppVeyor"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ":site-section: DeveloperGuide"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ":imagesDir: images"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ":stylesDir: stylesheets"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "ifdef::env-github[]"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ":note-caption: :information_source:"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "endif::[]"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "This document was originally written for _AddressBook Level 4_ and hence its screenshots refer to `addressbook-level4`."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "For use with _VISIT_, wherever `addressbook-level4` is used in the screenshots, you should use *`main`*."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "https://www.appveyor.com/[AppVeyor] is a _Continuous Integration_ platform for GitHub projects. It runs its builds on Windows virtual machines."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "AppVeyor can run the project\u0027s tests automatically whenever new code is pushed to the repo. This ensures that existing functionality and features have not been broken on Windows by the changes."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "The current AppVeyor setup runs `gradlew.bat test` whenever someone pushes code to the repo."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "If you would like to customize your AppVeyor build further, you can learn more about AppVeyor from the https://www.appveyor.com/docs/[AppVeyor Documentation]."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Setting up AppVeyor"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ".  Fork the repo to your own organization."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ".  Go to https://ci.appveyor.com/, and under `Login`, click on `GitHub` to login with your GitHub account. Enter your GitHub account details if needed."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "image:appveyor/login.png[Click on GitHub in the login page]"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ".  After logging in, you will be brought to your projects dashboard. Click on `NEW PROJECT`."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "image:appveyor/add-project-1.png[Click on \"NEW PROJECT\" in the projects dashboard]"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ".  You will be brought to the `Select repository` page. Select `GitHub`."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "* On your first usage of AppVeyor, you will need to give AppVeyor authorization to your GitHub account. Click on `Authorize GitHub`."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "image:appveyor/add-project-2.png[Click on Authorize GitHub]"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "* This will bring you to a GitHub page that manages the access of third-party applications to your repositories."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "Depending on whether you are the owner of the repository, you can either"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "grant access:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "image:grant_access.png[Grant Access]"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "Or request access:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "image:request_access.png[Request Access]"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ".  AppVeyor will then list the repositories you have access to in your GitHub account. Find the repository you want to set AppVeyor up on, and then click `ADD`."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "image:appveyor/add-project-3.png[Click \"Add\" on the repository you want to set AppVeyor up on]"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ".  AppVeyor will then be activated on that repository. To see the CI in action, push a commit to any branch!"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "* Go to the repository and see the pushed commit. There should be an icon which will link you to the AppVeyor build:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "image:appveyor/ci-pending.png[Commit build]"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "* As the build is run on a remote machine, we can only examine the logs it produces:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "image:appveyor/ci-log.png[AppVeyor build]"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ".  Update the link to the \"build status\" badge at the top of `README.adoc` to point to the AppVeyor build status of your own repo."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "* To find your build status badge URL, first go to your project settings by clicking on the \"Settings\" icon:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "image:appveyor/project-settings-1.png[Click on project settings]"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "* Then go to the `Badges` section of your project settings by clicking on it:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "image:appveyor/project-settings-2.png[Click on \"Badges\"]"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "* As AppVeyor does not provide asciidoc code for the badge, we will have to create our own. Start by copying the markdown code provided:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "image:appveyor/project-settings-3.png[Copy the markdown code]"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "The markdown code should be in this format:"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "----"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "[![Build status](\u003clink to image\u003e)](\u003clink to project\u003e)"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "----"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "Convert it to the asciidoc format as follows:"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "----"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "\u003clink to project\u003e[image:\u003clink to image\u003e[Build status]]"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "----"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "The asciidoc code should look similar to:"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "----"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "https://ci.appveyor.com/project/damithc/addressbook-level3[image:https://ci.appveyor.com/api/projects/status/3boko2x2vr5cc3w2?svg\u003dtrue[Build status]]"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "----"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "Copy and paste the asciidoc code to your `README.adoc` file."
      }
    ],
    "authorContributionMap": {
      "Q-gabe": 1,
      "-": 93
    }
  },
  {
    "path": "docs/UsingCheckstyle.adoc",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d Using Checkstyle-IDEA"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ":site-section: DeveloperGuide"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ":imagesDir: images"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ":stylesDir: stylesheets"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ":experimental:"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "ifdef::env-github[]"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ":tip-caption: :bulb:"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ":note-caption: :information_source:"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "endif::[]"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "This document was originally written for _AddressBook Level 4_ and hence its screenshots refer to `addressbook-level4`."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "For use with _VISIT_, wherever `addressbook-level4` is used in the screenshots, you should use *`main`*."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Configuring Checkstyle-IDEA"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ". Install the Checkstyle-IDEA plugin by going to `File` \u003e `Settings` (Windows/Linux), or `IntelliJ IDEA` \u003e `Preferences...` (macOS). +"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "Select `Plugins`, press `Browse Repository`, and find the plugin. +"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "Restart the IDE to complete the installation."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ". Click `File` \u003e `Settings...` \u003e `Other Settings` \u003e `Checkstyle`"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ". Set `Scan Scope`  to `Only Java sources (including tests)`, so that the plugin will run checkstyle for our test source codes as well"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ". Ensure that the `Checkstyle version` is set to `8.1`. This is the same version that we are using inside Gradle, so that you won\u0027t get any errors due to version incompatibility"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": " * If `Checkstyle version` is not set to `8.1`, set it to version `8.1` and click `Apply`"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "image::checkstyle-idea-scan-scope.png[width\u003d\"500\"]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ". Click the plus sign under `Configuration File`"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ". Enter an arbitrary description e.g. addressbook"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ". Select `Use a local Checkstyle file`"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ". Use the checkstyle configuration file found at `config/checkstyle/checkstyle.xml`"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ". Click `Next` \u003e `Finish`"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ". Mark `Active` for the newly imported check configuration"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "image::checkstyle-idea-configuration.png[width\u003d\"700\"]"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ". Click `OK`"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Troubleshooting Checkstyle-IDEA"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "**Problem: When importing `checkstyle.xml`, Checkstyle-IDEA plugin complains that `The Checkstyle rules file could not be parsed. ... The file has been blacklisted for 60s.`**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "* Reason: `checkstyle.xml` is written for a particular version, but the plugin was not configured to the correct version."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "* Solution: Ensure that you have selected the correct `Checkstyle version` that matches the version in `build.gradle` and have clicked `Apply`, as `checkstyle.xml` is written for Gradle\u0027s checkstyle."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "**Problem: After setting up `checkstyle.xml`, Checkstyle-IDEA plugin does not seem to highlight the errors / real-time scanning seems broken.**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "* Reason: The plugin may not immediately run after setting it up."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "* Solution: Restart the IDE."
      }
    ],
    "authorContributionMap": {
      "Q-gabe": 1,
      "-": 47
    }
  },
  {
    "path": "docs/UsingCoveralls.adoc",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d Using Coveralls"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ":site-section: DeveloperGuide"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ":imagesDir: images"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ":stylesDir: stylesheets"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "ifdef::env-github[]"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ":note-caption: :information_source:"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "endif::[]"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "This document was originally written for _AddressBook Level 4_ and hence its screenshots refer to `addressbook-level4`."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "For use with _VISIT_, wherever `addressbook-level4` is used in the screenshots, you should use *`main`*."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "https://coveralls.io/[Coveralls] is a web service that tracks code coverage over time for GitHub projects."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "Coveralls requires Travis CI to be set up beforehand as Travis sends the coverage report from the latest build to Coveralls."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "If you have not set up Travis CI, see \u003c\u003cUsingTravis#, UsingTravis.adoc\u003e\u003e. Currently, Coveralls supports Travis CI but not AppVeyor."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Setting up Coveralls"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ".  Go to https://coveralls.io/ and click `SIGN IN`. Then click `GITHUB SIGN IN` and enter your GitHub account details if needed."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ".  After logging in, you will be brought to the `Your Repositories` page. On the site\u0027s navigation bar, click https://coveralls.io/repos/new[ADD REPOS]."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ".  Find the switch for the forked repository."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "* If the organization is not shown, click `GITHUB SETTINGS` as shown below:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "image:coveralls/github_settings.png[GitHub settings]"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "This should bring you to a GitHub page that manages the access of third-party applications. Depending on whether you are the owner of the repository, you can either grant access"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "image:grant_access.png[Grant Access]"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "or request access"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "image:request_access.png[Request Access]"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "to Coveralls so that it can access your repository."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "* If your repository cannot be found, click `SYNC REPOS`."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "image:coveralls/sync_repos.png[Sync repos]"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ".  Activate the switch."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "image:coveralls/flick_repository_switch.png[Activate the switch]"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ".  Update the link of the `Coverage Status` badge at the top of your \u003c\u003cREADME#, README.adoc\u003e\u003e to point to that of your own repo by replacing the outlined areas with `your-org-name/your-repo-name`."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "image:coveralls/coverage_asciidoc_code.png[Coverage Status Badge]"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ".  You can now see the coverage report for your project after each Travis build by clicking on the `Coverage Status` badge."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "image:coveralls/coverage_report.png[Coverage Report Summary]"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Disabling Coveralls Automatic Comments on Pull Requests"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "Coveralls automatically comments on the coverage status of the pull requests in GitHub. If it\u0027s a hindrance, you can disable it in the settings of your project in Coveralls:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ".  Click `Settings`."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ".  Uncheck the `LEAVE COMMENTS?` checkbox. Then click `SAVE CHANGES`."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "image:coveralls/disable_comments.png[Disable comments, width \u003d 942]"
      }
    ],
    "authorContributionMap": {
      "Q-gabe": 1,
      "-": 62
    }
  },
  {
    "path": "docs/UsingTravis.adoc",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d Travis CI"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ":site-section: DeveloperGuide"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ":imagesDir: images"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ":stylesDir: stylesheets"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "ifdef::env-github[]"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ":note-caption: :information_source:"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "endif::[]"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "This document was originally written for _AddressBook Level 4_ and hence its screenshots refer to `addressbook-level4`."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "For use with _VISIT_, wherever `addressbook-level4` is used in the screenshots, you should use *`main`*."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "https://travis-ci.org/[Travis CI] is a _Continuous Integration_ platform for GitHub projects."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "Travis CI can run the projects\u0027 tests automatically whenever new code is pushed to the repo. This ensures that existing functionality and features have not been broken by the changes."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "The current Travis CI set up performs the following things whenever someone push code to the repo:"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "* Runs the `./gradlew clean test coverage coveralls -i` command (see \u003c\u003cUsingGradle#, UsingGradle\u003e\u003e for more details on what this command means)."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "* Renders documentation from asciidoc to html and automatically publishes them using GitHub Pages."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "* Runs additional link:#repository-wide-checks[repository-wide checks]."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "If you would like to customise your travis build further, you can learn more about Travis from https://docs.travis-ci.com/[Travis CI Documentation]."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Setting up Travis CI"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ".  Fork the repo to your own organization."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ".  Go to https://travis-ci.org/ and click `Sign in with GitHub`, then enter your GitHub account details if needed."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "image:signing_in.png[Signing into Travis CI]"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ".  Head to the https://travis-ci.org/profile[Accounts] page, and find the switch for the forked repository."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "* If the organization is not shown, click `Review and add` as shown below:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "image:review_and_add.png[Review and add]"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "This should bring you to a GitHub page that manages the access of third-party applications. Depending on whether you are the owner of the repository, you can either grant access"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "image:grant_access.png[Grant Access]"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "or request access"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "image:request_access.png[Request Access]"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "to Travis CI so that it can access your commits and build your code."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "* If repository cannot be found, click `Sync account`"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ".  Activate the switch."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "image:flick_repository_switch.png[Activate the switch]"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ".  This repo comes with a link:../.travis.yml[`.travis.yml`] that tells Travis what to do. So there is no need for you to create one yourself."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ".  To see the CI in action, push a commit to the master branch!"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "* Go to the repository and see the pushed commit. There should be an icon which will link you to the Travis build."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "image:build_pending.png[Commit build]"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "* As the build is run on a provided remote machine, we can only examine the logs it produces:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "image:travis_build.png[Travis build]"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ".  If the build is successful, you should be able to check the coverage details of the tests at http://coveralls.io/[Coveralls]"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ".  Update the link to the \u0027build status\u0027 badge at the top of the `README.adoc` to point to the build status of your own repo."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Enabling auto-publishing of documentation"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ".  Ensure that you have followed the steps above to set up Travis CI."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ".  On GitHub, create a new user account and give this account collaborator and admin access to the repo. +"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "   Using this account, generate a personal access token https://github.com/settings/tokens/new[here]."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "Personal access tokens are like passwords so make sure you keep them secret! If the personal access token is leaked, please delete it and generate a new one."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "We use a new user account to generate the token for team projects to prevent team members from gaining access to other team members\u0027 repos. +"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "If you are the only one with write access to the repo, you can use your own account to generate the token."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "--"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "* Add a description for the token. (e.g. `Travis CI - deploy docs to gh-pages`)"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "* Check the `public_repo` checkbox."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "* Click `Generate Token` and copy your new personal access token."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "--"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "We will use this token to grant Travis access to the repo."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "image:generate_token.png[Generate token]"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ".  Head to the https://travis-ci.org/profile[Accounts] page, and find the switch for the forked repository."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "image:flick_repository_switch.png[Activate the switch]"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ".  Click on the settings button next to the switch. In the Environment Variables section, add a new environment variable with"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "--"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "* name: `GITHUB_TOKEN`"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "* value: personal access token copied in step 1"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "* Display value in build log: `OFF`"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "--"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "image:travis_add_token.png[Travis add token]"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "*Make sure you set `Display value in build log` to `OFF`.* +"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "Otherwise, other people will be able to see the personal access token and thus have access this repo. +"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "Similarly, make sure you *do not print `$GITHUB_TOKEN` to the logs* in Travis scripts as the logs are viewable by the public."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ".  Now, whenever there\u0027s a new commit to master branch, Travis will push the latest documentation to gh-pages branch."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "**To verify that it works,**"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ".  Trigger Travis to regenerate documentation. To do so, you need to push a new commit to the master branch of the fork. +"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "   Suggested change: Remove the codacy badge from `README`."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ".  Wait for Travis CI to finish running the build on your new commit."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ".  Go to the URL `\\https://\u003cyour-username-or-organization-name\u003e.github.io/main/`. You should see your `README` file displayed."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Repository-wide checks"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "In addition to running Gradle checks, we also configure Travis CI to run some repository-wide checks. Unlike the Gradle checks which only cover files used in the build process, these repository-wide checks cover _all_ files in the repository. They check for repository rules which are hard to enforce on development machines such as line ending requirements."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "These checks are implemented as POSIX shell scripts, and thus can only be run on POSIX-compliant operating systems such as macOS and Linux. To run all checks locally on these operating systems, execute the following in the repository root directory:"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "[source,shell]"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "----"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "./config/travis/run-checks.sh"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "----"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "Any warnings or errors will be printed out to the console."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Implementing new checks"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "Checks are implemented as executable `check-*` scripts within the `config/travis/` directory. The `run-checks.sh` script will automatically pick up and run files named as such."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "Check scripts should print out errors in the following format:"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "...."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "SEVERITY:FILENAME:LINE: MESSAGE"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "...."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "where `SEVERITY` is either `ERROR` or `WARN`, `FILENAME` is the path to the file relative to the current directory, `LINE` is the line of the file where the error occurred and `MESSAGE` is the message explaining the error."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "Check scripts must exit with a non-zero exit code if any errors occur."
      }
    ],
    "authorContributionMap": {
      "Q-gabe": 2,
      "-": 138
    }
  },
  {
    "path": "docs/diagrams/AddAliasSequenceDiagram.puml",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "@startuml"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "!include style.puml"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "box Logic LOGIC_COLOR_T1"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "participant \":LogicManager\" as LogicManager LOGIC_COLOR"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "participant \"a:AliasCommand\" as AliasCommand LOGIC_COLOR"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "end box"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "box Model MODEL_COLOR_T1"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "participant \":Model\" as Model MODEL_COLOR"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "participant \":UserPrefs\" as UserPrefs MODEL_COLOR"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "participant \"at:AliasTable\" as AliasTable MODEL_COLOR"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "end box"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "[-\u003e LogicManager : execute(alias)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "activate LogicManager"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "LogicManager -\u003e AddressBookParser : parseCommand(alias)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "activate AddressBookParser"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "create AliasCommand"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "AddressBookParser -\u003e AliasCommand"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "activate AliasCommand"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "opt illegal alias"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    AddressBookParser \u003c-- AliasCommand : throw CommandException"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    LogicManager \u003c-- AddressBookParser : throw CommandException"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    [\u003c- LogicManager : throw CommandException"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "end"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "AliasCommand --\u003e AddressBookParser"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "deactivate AliasCommand"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "AddressBookParser --\u003e LogicManager : a"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "deactivate AddressBookParser"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "LogicManager -\u003e AliasCommand : execute()"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "activate AliasCommand"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "AliasCommand -\u003e Model : addAlias(alias, aliasTo)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "activate Model"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "Model -\u003e UserPrefs : addAlias(alias, aliasTo)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "activate UserPrefs"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "UserPrefs -\u003e AliasTable :addAlias(alias, aliasTo)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "activate AliasTable"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "AliasTable --\u003e UserPrefs :at"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "deactivate AliasTable"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "UserPrefs --\u003e Model :"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "deactivate UserPrefs"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "Model --\u003e AliasCommand"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "deactivate Model"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "AliasCommand --\u003e LogicManager : result"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "deactivate AliasCommand"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "AliasCommand -[hidden]-\u003e LogicManager : result"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "destroy AliasCommand"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "[\u003c--LogicManager"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "deactivate LogicManager"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "@enduml"
      }
    ],
    "authorContributionMap": {
      "Wingedevil": 67
    }
  },
  {
    "path": "docs/diagrams/AddReminderSequenceDiagram.puml",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "@startuml"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "!include style.puml"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "box Logic LOGIC_COLOR_T1"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "participant \":LogicManager\" as LogicManager LOGIC_COLOR"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "participant \"a:ReminderCommand\" as ReminderCommand LOGIC_COLOR"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "end box"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "box Model MODEL_COLOR_T1"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "participant \":Model\" as Model MODEL_COLOR"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "participant \":UserPrefs\" as UserPrefs MODEL_COLOR"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "participant \"at:Reminder\" as Reminder MODEL_COLOR"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "end box"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "[-\u003e LogicManager : execute(reminder)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "activate LogicManager"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "LogicManager -\u003e AddressBookParser : parseCommand(reminder)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "activate AddressBookParser"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "create ReminderCommand"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "AddressBookParser -\u003e ReminderCommand"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "activate ReminderCommand"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "opt illegal reminder"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    AddressBookParser \u003c-- ReminderCommand : throw CommandException"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    LogicManager \u003c-- AddressBookParser : throw CommandException"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    [\u003c- LogicManager : throw CommandException"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "end"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "ReminderCommand --\u003e AddressBookParser"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "deactivate ReminderCommand"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "AddressBookParser --\u003e LogicManager : a"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "deactivate AddressBookParser"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "LogicManager -\u003e ReminderCommand : execute()"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "activate ReminderCommand"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "ReminderCommand -\u003e Model : addReminder(reminder)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "activate Model"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "Model -\u003e UserPrefs : addReminder(reminder)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "activate UserPrefs"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "UserPrefs -\u003e Reminder :addReminder(reminder)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "activate Reminder"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "Reminder --\u003e UserPrefs :at"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "deactivate Reminder"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "UserPrefs --\u003e Model :"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "deactivate UserPrefs"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "Model --\u003e ReminderCommand"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "deactivate Model"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "ReminderCommand --\u003e LogicManager : result"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "deactivate ReminderCommand"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "ReminderCommand -[hidden]-\u003e LogicManager : result"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "destroy ReminderCommand"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "@enduml"
      }
    ],
    "authorContributionMap": {
      "ReignOfComputer": 64
    }
  },
  {
    "path": "docs/diagrams/AddVisit0.puml",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "@startuml"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "!include style.puml"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "start"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ":User executes addvisit command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "\u0027Since the beta syntax does not support placing the condition outside the"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "\u0027diamond we place it as the true branch instead."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "if () then ([given date])"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    if () then ([valid date]);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    :date is set as input;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    else([else])"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        :shows error;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        stop"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    endif"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "else ([else])"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    :date is set as current date;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "endif"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ":shows pop-up form for user to fill in;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ":User saves changes;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ":VisitList is updated by invoking SaveVisitCommand;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "stop"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "@enduml"
      }
    ],
    "authorContributionMap": {
      "SQwQ": 25
    }
  },
  {
    "path": "docs/diagrams/ApplyAliasActivityDiagram.puml",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "@startuml"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "start"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ":User uses a macro/alias;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "repeat"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    if (matches alias) then ([true])"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        if (currentAlias \u003e previousAlias) then ([true])"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "            :Apply this alias instead;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        else ([else])"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        endif"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    else ([else])"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    endif"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "repeat while (more alias exists in table) is ([true])"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "-\u003e[no];"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "stop"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "@enduml"
      }
    ],
    "authorContributionMap": {
      "Wingedevil": 16
    }
  },
  {
    "path": "docs/diagrams/ApplyAliasSequenceDiagram.puml",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "@startuml"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "!include style.puml"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "box Logic LOGIC_COLOR_T1"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "participant \":LogicManager\" as LogicManager LOGIC_COLOR"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "participant \"c:Command\" as Command LOGIC_COLOR"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "end box"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "box Model MODEL_COLOR_T1"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "participant \":Model\" as Model MODEL_COLOR"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "participant \":UserPrefs\" as UserPrefs MODEL_COLOR"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "participant \"at:AliasTable\" as AliasTable MODEL_COLOR"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "end box"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "[-\u003e LogicManager : execute(commandText)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "activate LogicManager"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "LogicManager -\u003e Model : applyAlias(commandText)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "activate Model"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "Model -\u003e UserPrefs : applyAlias(commandText)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "activate UserPrefs"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "UserPrefs -\u003e AliasTable : applyAlias(commandText)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "activate AliasTable"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "AliasTable --\u003e UserPrefs : aliasedCommand"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "deactivate AliasTable"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "UserPrefs --\u003e Model : aliasedCommand"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "deactivate UserPrefs"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "Model --\u003e LogicManager : aliasedCommand"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "deactivate Model"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "LogicManager -\u003e AddressBookParser : parseCommand(alias)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "activate AddressBookParser"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "create Command"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "AddressBookParser -\u003e Command"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "activate Command"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "Command --\u003e AddressBookParser"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "deactivate Command"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "AddressBookParser --\u003e LogicManager : c"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "deactivate AddressBookParser"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "LogicManager -\u003e Command : execute()"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "activate Command"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "Command --\u003e LogicManager : result"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "deactivate Command"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "Command -[hidden]-\u003e LogicManager : result"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "destroy Command"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "[\u003c--LogicManager"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "deactivate LogicManager"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "@enduml"
      }
    ],
    "authorContributionMap": {
      "Wingedevil": 61
    }
  },
  {
    "path": "docs/diagrams/DeleteVisit0.puml",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "@startuml"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "!include style.puml"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "start"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ":User executes deletevisit command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "\u0027Since the beta syntax does not support placing the condition outside the"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "\u0027diamond we place it as the true branch instead."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "if () then ([report index given])"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    :Delete chosen report;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "else ([no report index given])"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "endif"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ":Show List of Visit Reports;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "stop"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "@enduml"
      }
    ],
    "authorContributionMap": {
      "SQwQ": 16
    }
  },
  {
    "path": "docs/diagrams/EditVisit0.puml",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "@startuml"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "start"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ":User executes editvisit command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "\u0027Since the beta syntax does not support placing the condition outside the"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "\u0027diamond we place it as the true branch instead."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "if () then ([given report index])"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    if () then ([valid index]);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        :shows pop-up form for user to fill in;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        :User saves changes;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        :VisitList is updated by invoking SaveVisitCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    else([else])"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        :shows error;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    endif"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "else ([no report index])"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    :Show indexed list of Visit Reports;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "endif"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "stop"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "@enduml"
      }
    ],
    "authorContributionMap": {
      "SQwQ": 21
    }
  },
  {
    "path": "docs/diagrams/EditVisit1.puml",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "@startuml"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "!include style.puml"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "box UI UI_COLOR_T1"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "participant \":MainWindow\" as MainWindow UI_COLOR"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "participant \":VisitRecordWindow\" as VisitRecordWindow UI_COLOR"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "end box"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "box Logic LOGIC_COLOR_T1"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "participant \":LogicManager\" as LogicManager LOGIC_COLOR"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "participant \"e:EditVisitCommand\" as EditCommand LOGIC_COLOR"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "participant \"s:SaveVisitCommand\" as SaveVisitCommand LOGIC_COLOR"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "end box"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "box Model MODEL_COLOR_T1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "participant \":Model\" as model MODEL_COLOR"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "end box"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "MainWindow -\u003e LogicManager : execute(editivisit)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "activate LogicManager"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "LogicManager -\u003e AddressBookParser : parseCommand(editivisit)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "activate AddressBookParser"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "create EditCommand"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "AddressBookParser -\u003e EditCommand"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "activate EditCommand"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "opt illegal person index"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    LogicManager \u003c-- AddressBookParser : throw ParseException"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    MainWindow \u003c-- LogicManager : throw ParseException"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    [\u003c-- MainWindow : throw ParseException"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "end"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "opt non integer report index"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    LogicManager \u003c-- AddressBookParser : throw ParseException"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    MainWindow \u003c-- LogicManager : throw ParseException"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    [\u003c-- MainWindow : throw ParseException"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "end"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "opt out of bound report index"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    AddressBookParser \u003c-- EditCommand : throw CommandException"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    LogicManager \u003c-- AddressBookParser : throw CommandException"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    MainWindow \u003c-- LogicManager : throw CommandException"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    [\u003c-- MainWindow : throw CommandException"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "end"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "EditCommand --\u003e AddressBookParser : e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "deactivate EditCommand"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "AddressBookParser --\u003e LogicManager : e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "deactivate AddressBookParser"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "LogicManager -\u003e EditCommand : execute()"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "activate EditCommand"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "EditCommand --\u003e LogicManager : result"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "deactivate EditCommand"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "EditCommand -[hidden]-\u003e LogicManager : result"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "destroy EditCommand"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "LogicManager --\u003e MainWindow : result"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "deactivate LogicManager"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "activate MainWindow"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "alt isShowList"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    [\u003c-MainWindow : display list of reports"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "else else"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    MainWindow -\u003e VisitRecordWindow : display form"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    activate VisitRecordWindow"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    VisitRecordWindow -\u003e SaveVisitCommand ** : user saves"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    activate SaveVisitCommand"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    SaveVisitCommand --\u003e VisitRecordWindow : s"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    deactivate SaveVisitCommand"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    VisitRecordWindow -\u003e LogicManager"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    activate LogicManager"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    LogicManager -\u003e SaveVisitCommand : execute(s)"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    activate SaveVisitCommand"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    SaveVisitCommand -\u003e model : saves changes"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    activate model"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    model --\u003e SaveVisitCommand"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    deactivate model"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    SaveVisitCommand --\u003e LogicManager : result"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    deactivate SaveVisitCommand"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    SaveVisitCommand -[hidden]-\u003e LogicManager : result"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    destroy SaveVisitCommand"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    LogicManager --\u003e VisitRecordWindow : result"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    deactivate LogicManager"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    VisitRecordWindow --\u003e MainWindow : result"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    deactivate VisitRecordWindow"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "end"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "@enduml"
      }
    ],
    "authorContributionMap": {
      "SQwQ": 94
    }
  },
  {
    "path": "docs/diagrams/UiRedesignClassDiagram.puml",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gachia"
        },
        "content": "@startuml"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gachia"
        },
        "content": "!include style.puml"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gachia"
        },
        "content": "skinparam arrowThickness 1.1"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gachia"
        },
        "content": "skinparam arrowColor UI_COLOR_T4"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gachia"
        },
        "content": "skinparam classBackgroundColor UI_COLOR"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gachia"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gachia"
        },
        "content": "package UI \u003c\u003cRectangle\u003e\u003e{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gachia"
        },
        "content": "Interface Ui \u003c\u003cInterface\u003e\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gachia"
        },
        "content": "Class \"{abstract}\\nUiPart\" as UiPart"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gachia"
        },
        "content": "Class UiManager"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gachia"
        },
        "content": "Class MainWindow"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gachia"
        },
        "content": "Class HelpWindow"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gachia"
        },
        "content": "Class VisitRecordWindow"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gachia"
        },
        "content": "Class ProfileWindow"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gachia"
        },
        "content": "Class ResultDisplay"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gachia"
        },
        "content": "Class PersonListPanel"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gachia"
        },
        "content": "Class ReminderPanel"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gachia"
        },
        "content": "Class VisitListPanel"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gachia"
        },
        "content": "Class PersonCard"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gachia"
        },
        "content": "Class VisitCard"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gachia"
        },
        "content": "Class ReminderCard"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gachia"
        },
        "content": "Class CommandBox"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gachia"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gachia"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gachia"
        },
        "content": "package Model \u003c\u003cRectangle\u003e\u003e {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gachia"
        },
        "content": "Class HiddenModel #FFFFFF"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gachia"
        },
        "content": "}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gachia"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gachia"
        },
        "content": "package Logic \u003c\u003cRectangle\u003e\u003e {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gachia"
        },
        "content": "Class HiddenLogic #FFFFFF"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gachia"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gachia"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gachia"
        },
        "content": "Class HiddenOutside #FFFFFF"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gachia"
        },
        "content": "HiddenOutside ..\u003e Ui"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gachia"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gachia"
        },
        "content": "UiManager .left.|\u003e Ui"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gachia"
        },
        "content": "UiManager -down-\u003e MainWindow"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gachia"
        },
        "content": "UiManager -down-\u003e VisitRecordWindow"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gachia"
        },
        "content": "UiManager -down-\u003e ProfileWindow"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gachia"
        },
        "content": "MainWindow --\u003e HelpWindow"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gachia"
        },
        "content": "MainWindow *-down-\u003e CommandBox"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gachia"
        },
        "content": "MainWindow *-down-\u003e ResultDisplay"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gachia"
        },
        "content": "MainWindow *-down-\u003e PersonListPanel"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gachia"
        },
        "content": "MainWindow *-down-\u003e ReminderPanel"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gachia"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gachia"
        },
        "content": "PersonListPanel -down-\u003e PersonCard"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gachia"
        },
        "content": "ReminderPanel -down-\u003e ReminderCard"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gachia"
        },
        "content": "VisitListPanel -down-\u003e VisitCard"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gachia"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gachia"
        },
        "content": "MainWindow -left-|\u003e UiPart"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gachia"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gachia"
        },
        "content": "ResultDisplay --|\u003e UiPart"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gachia"
        },
        "content": "CommandBox --|\u003e UiPart"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gachia"
        },
        "content": "PersonListPanel --|\u003e UiPart"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gachia"
        },
        "content": "PersonCard --|\u003e UiPart"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gachia"
        },
        "content": "HelpWindow -down-|\u003e UiPart"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gachia"
        },
        "content": "ReminderPanel -down-|\u003e UiPart"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gachia"
        },
        "content": "ReminderCard -down-|\u003e UiPart"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gachia"
        },
        "content": "VisitListPanel -down-|\u003e UiPart"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gachia"
        },
        "content": "VisitCard -down-|\u003e UiPart"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gachia"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gachia"
        },
        "content": "PersonCard ..\u003e Model"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gachia"
        },
        "content": "UiManager -right-\u003e Logic"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gachia"
        },
        "content": "MainWindow -left-\u003e Logic"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gachia"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gachia"
        },
        "content": "MainWindow -[hidden]left- VisitRecordWindow"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gachia"
        },
        "content": "VisitRecordWindow -[hidden]left- ProfileWindow"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gachia"
        },
        "content": "PersonListPanel -[hidden]left- HelpWindow"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gachia"
        },
        "content": "HelpWindow -[hidden]left- CommandBox"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gachia"
        },
        "content": "CommandBox -[hidden]left- ResultDisplay"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gachia"
        },
        "content": "ResultDisplay -[hidden]left- ReminderPanel"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gachia"
        },
        "content": "ReminderPanel -[hidden]left- VisitListPanel"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gachia"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gachia"
        },
        "content": "MainWindow -[hidden]-|\u003e UiPart"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gachia"
        },
        "content": "@enduml"
      }
    ],
    "authorContributionMap": {
      "gachia": 75
    }
  },
  {
    "path": "docs/diagrams/VisitClass0.puml",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "@startuml"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "!include style.puml"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "skinparam ClassFontColor #000000"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "skinparam ClassBorderColor #000000"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "class Person"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "class VisitList"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "class VisitReport"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "Person\"1\"*--\"1\"VisitList"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "VisitList\"1\"*--\"0..*\"VisitReport"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "@enduml"
      }
    ],
    "authorContributionMap": {
      "SQwQ": 15
    }
  },
  {
    "path": "docs/stylesheets/gh-pages.css",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@import url(https://fonts.googleapis.com/css?family\u003dMontserrat|Open+Sans);"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "@import \"asciidoctor.css\"; /* Default asciidoc style framework - important */"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "/* Custom block: details */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ".sidebarblock.details \u003e .content {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    border-left: .25rem solid rgba(0, 0, 0, 0.1);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ".sidebarblock.details \u003e .content {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    padding-left: .5rem"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ".sidebarblock.details {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    background-color: transparent;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    border: none;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    padding-bottom: 0;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    padding-top: 0;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "/* Overrides for asciidoctor.css */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "a {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    color: #0074c7;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "h1,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "#content h1 \u003e a.link,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "h2,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "h2 \u003e a.link,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "h3,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "h3 \u003e a.link,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "#toctitle,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "#toctitle \u003e a.link,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ".sidebarblock \u003e .content \u003e .title,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ".sidebarblock \u003e .content \u003e .title \u003e a.link,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "h4,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "h4 \u003e a.link,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "h5,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "h5 \u003e a.link,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "h6,"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "h6 \u003e a.link {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    color: #e46c0a;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ".subheader,"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ".admonitionblock td.content \u003e .title,"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ".audioblock \u003e .title,"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ".exampleblock \u003e .title,"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ".imageblock \u003e .title,"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ".listingblock \u003e .title,"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ".literalblock \u003e .title,"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ".stemblock \u003e .title,"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ".openblock \u003e .title,"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ".paragraph \u003e.title,"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ".quoteblock \u003e .title,"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "table.tableblock \u003e .title,"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ".verseblock \u003e .title,"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ".videoblock \u003e .title,"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ".dlist \u003e .title,"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ".olist \u003e .title,"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ".ulist \u003e .title,"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ".qlist \u003e .title,"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ".hdlist \u003e .title {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    color: rgb(197, 90, 17);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "@media screen {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    #footer {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        background-color: #f6f6f6;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        border-top: 1px #d2d2d2 solid;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        border-bottom: 1px #d2d2d2 solid;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        font-family: \"Open Sans\", \"DejaVu Sans\", sans-serif;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    #footer-text {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        color: #595959;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        line-height: 1;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "/* Utilities */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ".container {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    width: 100%;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    max-width: 62.5rem;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    margin-left: auto;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    margin-right: auto;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "/* Colors */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ".bg-light {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    background-color: #f8f9fa;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ".bg-lighter {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    background-color: #fbfbfb;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "/* Navbar */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ".navbar {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    display: flex;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    flex-wrap: nowrap;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    justify-content: center;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    font-family: \"Open Sans\", \"DejaVu Sans\", sans-serif;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    font-size: 1rem;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    padding: 0px 1rem;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": ".navbar-lg {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "    font-size: 1.3rem;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ".navbar-light {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "    border-bottom: 1px #d2d2d2 solid;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ".navbar a {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "    text-decoration: none;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": ".navbar-light a {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "    color: #595959;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": ".navbar-light a:hover,"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": ".navbar-light a:focus {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "    color: #000000;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": ".navbar a.active,"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": ".navbar a.active:hover,"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": ".navbar a.active:focus {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "    font-weight: bold;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": ".navbar-light a.active,"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": ".navbar-light a.active:hover,"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": ".navbar-light a.active:focus {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "    color: #000000;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": ".navbar-light .nav-link {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "    border-bottom: 2px transparent solid;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": ".navbar-light .nav-link.active {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "    border-bottom: 2px #e46c0a solid;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": ".navbar-lg .nav-link.active {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "    border-bottom: 0;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": ".navbar \u003e .container {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "    display: flex;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "    flex-wrap: wrap;"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "    justify-content: center;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": ".navbar-brand {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "    display: inline-block;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "    margin-right: 1rem;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "    padding: 0.8125rem 0rem;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "    padding-left: 0.9375rem;"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "    font-size: 1.25rem;"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": ".navbar-brand img {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "    height: 2.5rem;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "    margin: 0rem 0.4rem;"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "    padding: 0;"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "    vertical-align: middle;"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": ".navbar-lg .navbar-brand {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "    font-size: 1.7rem;"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": ".navbar-lg .navbar-brand img {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "    height: 2.3rem;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": ".navbar-nav {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "    display: flex;"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "    flex-wrap: wrap;"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "    flex-grow: 1;"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "    align-items: center;"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "    margin: 0px;"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "    padding: 0px;"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "    list-style: none;"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "    line-height: inherit;"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": ".nav-link {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "    display: block;"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "    margin: 0px;"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "    border: 0px;"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "    padding: 1rem 1rem;"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "/* Do not display site header on print mediums */"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "@media print {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "    #seedu-header {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "        display: none;"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "    #site-header {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "        display: none;"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Q-gabe": 1,
      "-": 213
    }
  },
  {
    "path": "docs/tutorials/AddRemark.adoc",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d Tutorial - Adding a new Command"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ":toc: macro"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ":site-section: DeveloperGuide"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ":imagesDir: ../images/add-visitList"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ":stylesDir: ../stylesheets"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ":xrefstyle: full"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "ifdef::env-github[]"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ":tip-caption: :bulb:"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ":note-caption: :information_source:"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ":warning-caption: :warning:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "endif::[]"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "toc::[]"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Introduction"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "In this tutorial, we\u0027ll walk you through the implementation of a new command -- `visitList`."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "The command should have the format of `visitList INDEX r/REMARK`."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "An example of the command is `visitList 2 r/Likes baseball`."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "We\u0027ll assume that you have already set up the development environment as outlined in the Developer\u0027s Guide."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "\u003d\u003d Create a new `visitList` command"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "Looking in the `logic.command` package, you will notice that each existing command have their own class."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "All the commands inherit from the abstract class `Command` which means that they must override `execute()`."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "Let\u0027s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "For now, let\u0027s keep `RemarkCommand` as simple as possible and print some output."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "We accomplish that by returning a `CommandResult` with an accompanying message."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ".RemarkCommand.java"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "[source, java]"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "----"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SQwQ"
        },
        "content": " * Changes the visitList of an existing person in the address book."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "public class RemarkCommand extends Command {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"visitList\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    public CommandResult execute(Model model) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return new CommandResult(\"Hello from visitList\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "----"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Hook `RemarkCommand` into the application"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `visitList` keyword."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "You can refer to the changes in this link:https://github.com/nus-cs2103-AY1920S1/addressbook-level3/commit/7d04e49e364dad661cd88f462f01923fba972d2c#diff-5338391f3f6fbb4022c44add6590b74f[diff]."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Run the application"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "Run `Main#main` and try out your new `RemarkCommand`."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "If everything went well, you should see something like this:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ".Output displayed"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "image::RemarkHello.png[]"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Change `RemarkCommand` to throw an exception"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "Let\u0027s change the command to throw an `CommandException` to accurately reflect that our command is still a work in progress."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ".The relationship between RemarkCommand and Command"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "image::CommandInterface.png[]"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "Following the convention in other commands, we add relevant messages as constants and use them."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ".RemarkCommand.java"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "[source, java]"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "----"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the visitList of the person identified \""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"by the index number used in the last person listing. \""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            + \"Existing visitList will be overwritten by the input.\\n\""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"Parameters: INDEX (must be a positive integer) \""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"r/ [REMARK]\\n\""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"Example: \" + COMMAND_WORD + \" 1 \""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"r/ Likes to swim.\";"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d \"Remark command not implemented yet\";"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    public CommandResult execute(Model model) throws CommandException {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "----"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Enhancing `RemarkCommand`"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "Let\u0027s change `RemarkCommand` to  parse input from the user."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Make the command accept parameters"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "While we are at it, let\u0027s change the error message to echo the values."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "[source, java]"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "----"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "//..."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "public class RemarkCommand extends Command {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "    //..."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Index index;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private final String visitList;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param index of the person in the filtered person list to edit the visitList"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param visitList of the person to be updated to"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public RemarkCommand(Index index, String visitList) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        requireAllNonNull(index, visitList);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        this.visitList \u003d visitList;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "    public CommandResult execute(Model model) throws CommandException {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        throw new CommandException(String.format(MESSAGE_ARGUMENTS, index.getOneBased(), visitList));"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "        // short circuit if same object"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "        // instanceof handles nulls"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!(other instanceof RemarkCommand)) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "        // state check"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "        RemarkCommand e \u003d (RemarkCommand) other;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "        return index.equals(e.index)"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                \u0026\u0026 visitList.equals(e.visitList);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "----"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "Your code should look something like link:https://github.com/nus-cs2103-AY1920S1/addressbook-level3/commit/83dd9e6b03d6b83199ceb6f3b66166483155abed#diff-34ace715a8a8d2e5a66e71289f017b47[this] after you are done."
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Parse user input"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "Now let\u0027s move on to writing a parser that will extract the index and visitList from the input provided by the user."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "Create a `RemarkCommandParser` class in the `seedu.address.logic.parser` package."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "The class must extend the `Parser` interface."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": ".The relationship between Parser and RemarkCommandParser"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "image::ParserInterface.png[]"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input."
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "Let\u0027s take a look at the JavaDoc provided for the function to understand what it does."
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "[source, java]"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": ".ArgumentTokenizer.java"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "----"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": " * Tokenizes an arguments string and returns an {@code ArgumentMultimap}"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": " * object that maps prefixes to their respective argument values. Only the"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": " * given prefixes will be recognized in the arguments string."
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": " *"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": " * @param argsString Arguments string of the form:"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": " * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": " * @param prefixes   Prefixes to tokenize the arguments string with"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": " * @return           ArgumentMultimap object that maps prefixes to their"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": " * arguments"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "----"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`."
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "Now let\u0027s find out what we need to do in order to obtain the Index and String that we need."
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "Let\u0027s look through `ArgumentMultimap` :"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "[source, java]"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": ".ArgumentMultimap.java"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "----"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": " * Returns the last value of {@code prefix}."
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "public Optional\u003cString\u003e getValue(Prefix prefix) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "    List\u003cString\u003e values \u003d getAllValues(prefix);"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "    return values.isEmpty() ? Optional.empty() :"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "        Optional.of(values.get(values.size() - 1));"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "----"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "This appears to be what we need to get a String of the visitList."
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "But what about the Index? Taking a quick peek at existing an `Command`..."
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "[source, java]"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": ".DeleteCommandParser.java"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "----"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "Index index \u003d ParserUtil.parseIndex(args);"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "return new DeleteCommand(index);"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "----"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "There appears to be another utility class that obtains an `Index` from the input provided by the user."
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "Now that we have the know-how to extract the data that we need from the user\u0027s input, we can create a new instance of `RemarkCommand`."
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "[source, java]"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": ".RemarkCommandParser.java"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "----"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "public RemarkCommand parse(String args) throws ParseException {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "    requireNonNull(args);"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "        PREFIX_REMARK);"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "    Index index;"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "    try {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "    } catch (IllegalValueException ive) {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "            RemarkCommand.MESSAGE_USAGE), ive);"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    String visitList \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    return new RemarkCommand(index, visitList);"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "----"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "NOTE: Don\u0027t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "If you are stuck, check out the sample link:https://github.com/nus-cs2103-AY1920S1/addressbook-level3/commit/efdcdf0e80cec9489f7b47e3f65824f4688ad8f7#diff-fc19ecee89c3732a62fbc8c840250508[here]."
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Add `Remark` to the model"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "Now that we have all the information that we need, let\u0027s lay the groundwork for some _persistent_ changes."
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "We achieve that by working with the `Person` model."
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person\u0027s name)."
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "That means we should add a `Remark` class so that we can use a `Remark` object to represent a visitList given to a person."
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Add a new `Remark` class"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "Create a new `Remark` in `seedu.address.model.person`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code."
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "A copy-paste and search-replace later, you should have something like link:https://github.com/nus-cs2103-AY1920S1/addressbook-level3/commit/b7a47c50c8e5f0430d343a23d2863446b6ce9298#diff-af2f075d24dfcd333876f0fbce321f25[this]."
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "Note how `Remark` has no constrains and thus does not require input validation."
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Make use of `Remark`"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "Let\u0027s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`."
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "These should be relatively simple changes."
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "\u003d\u003d Add a placeholder element for visitList to the UI"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "Without getting too deep into `fxml`, let\u0027s go on a 5 minute adventure to get some placeholder text to show up for each person."
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "Simply add"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "[source, java]"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": ".PersonCard.java"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "@FXML"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "private Label visitList;"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "to link:https://github.com/nus-cs2103-AY1920S1/addressbook-level3/commit/2758455583f0101ed918a318fc75679270843a0d#diff-0c6b6abcfac8c205e075294f25e851fe[`seedu.address.ui.PersonCard`]."
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML."
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "It might sound like Greek to you right now, don\u0027t worry -- we will get back to it later."
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "Then insert"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "\u003cLabel fx:id\u003d\"visitList\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$visitList\" /\u003e"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "into link:https://github.com/nus-cs2103-AY1920S1/addressbook-level3/commit/2758455583f0101ed918a318fc75679270843a0d#diff-12580431f55d7880578aa4c16f249e71[`main/resources/view/PersonListCard.fxml`]."
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "That\u0027s it! Fire up the application again and you should see something like this:"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ".$visitList shows up in each entry"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "image::$Remark.png[]"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Modify `Person` to support a `Remark` field"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Modify `Person`"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "We change the constructor of `Person` to take a `Remark`."
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": "We will also need to define new fields and accessors accordingly to store our new addition."
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Update other usages of `Person`"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": "Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": "TIP: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands."
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": "Refer to link:https://github.com/nus-cs2103-AY1920S1/addressbook-level3/commit/b241ef8526bd4e8a6ad94b8118b7fc3441ec8fa3#diff-3462fc1118b9872387a01b41157b0402[this commit] and check that you have got everything in order!"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Updating Storage"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library -- Jackson."
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "Let\u0027s update `JsonAdaptedPerson` to work with our new `Person`!"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "While the changes to code may be minimal, the test data will have to be updated as well."
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": "WARNING: You must delete AddressBook\u0027s storage file located at `/data/addressbook.json` before running it!"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": "Not doing so will cause AddressBook to default to an empty address book!"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": "Check out link:https://github.com/nus-cs2103-AY1920S1/addressbook-level3/commit/ce4f9b70f524d2395948861d80d57fda9ae6e82e#diff-07708562699e2436c717f3330bafae1e[this commit] to see what the changes entail."
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Finalizing the UI"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": "Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI."
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": "Just add link:https://github.com/nus-cs2103-AY1920S1/addressbook-level3/commit/56d5cb662c31dd38b02f6a5301ba6ab3c667d6a3#diff-0c6b6abcfac8c205e075294f25e851fe[this one line of code!]"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": "[source, java]"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": ".PersonCard.java"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": "----"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": "public PersonCard(Person person, int displayedIndex) {"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": "    //..."
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    visitList.setText(person.getRemark().value);"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": "----"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ".The visitList label is bound properly!"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": "image::RemarkBound.png[]"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Putting everything together"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": "After the previous step, we notice a peculiar regression -- we went from displaying something to nothing at all."
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": "However, this is expected behavior as we have never changed `RemarkCommand` at all!"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Update `RemarkCommand` and `RemarkCommandParser`"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "-"
        },
        "content": "In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`."
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": "Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and save it with `Model#setPerson()`."
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "-"
        },
        "content": "[source, java]"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": ".RemarkCommand.java"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "-"
        },
        "content": "----"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": "//..."
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added visitList to Person: %1$s\";"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed visitList from Person: %1$s\";"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "-"
        },
        "content": "//..."
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": "    public CommandResult execute(Model model) throws CommandException {"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "-"
        },
        "content": "        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "-"
        },
        "content": "        Person personToEdit \u003d lastShownList.get(index.getZeroBased());"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "-"
        },
        "content": "        Person editedPerson \u003d new Person(personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                personToEdit.getAddress(), visitList, personToEdit.getTags());"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "-"
        },
        "content": "        model.setPerson(personToEdit, editedPerson);"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "-"
        },
        "content": "        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "-"
        },
        "content": "        return new CommandResult(generateSuccessMessage(editedPerson));"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Generates a command execution success message based on whether the visitList is added to or removed from"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@code personToEdit}."
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "-"
        },
        "content": "    private String generateSuccessMessage(Person personToEdit) {"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        String message \u003d !visitList.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "-"
        },
        "content": "        return String.format(message, personToEdit);"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "-"
        },
        "content": "----"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "-"
        },
        "content": "Make one last link:https://github.com/nus-cs2103-AY1920S1/addressbook-level3/commit/b3307d7a42acb613a8f1d36979a7f547abcf6623#diff-34ace715a8a8d2e5a66e71289f017b47[check] to ensure that everything is working properly..."
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "-"
        },
        "content": ".Congratulations!"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "-"
        },
        "content": "image::RemarkComplete.png[]"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Writing tests"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "-"
        },
        "content": "Tests are crucial to ensuring that bugs don\u0027t slip into the codebase unnoticed. This is especially true for large"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "-"
        },
        "content": "code bases where a change might lead to unintended behavior."
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "-"
        },
        "content": "Let\u0027s verify the correctness of our code by writing some tests!"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Automagically generating tests"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "-"
        },
        "content": "The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected."
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "-"
        },
        "content": "The convention for test names is _``methodName_testScenario_expectedResult``_."
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "-"
        },
        "content": "An example would be `execute_filteredList_success`."
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "Let\u0027s create a test for `RemarkCommand#execute()` to test that adding a visitList works."
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "-"
        },
        "content": "On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \u003e `Test` or use the appropriate keyboard shortcut."
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "-"
        },
        "content": ".Using the context menu to jump to tests"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "-"
        },
        "content": "image::ContextMenu.png[, 1223px, 267px]"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "-"
        },
        "content": "Then, create a test for the `execute` method."
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "-"
        },
        "content": ".Creating a test for `execute`."
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "-"
        },
        "content": "image::CreateTest.png[, 664px,751px]"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "-"
        },
        "content": "Following convention, let\u0027s change the name of the generated method to `execute_addRemarkUnfilteredList_success`."
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "-"
        },
        "content": "Let\u0027s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message."
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "-"
        },
        "content": "In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`."
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "-"
        },
        "content": "You should end up with a test that looks something like"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "-"
        },
        "content": "link:https://github.com/nus-cs2103-AY1920S1/addressbook-level3/commit/b3307d7a42acb613a8f1d36979a7f547abcf6623#diff-d749de38392f7ea504da7824641ba8d9[this]."
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Conclusion"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "-"
        },
        "content": "This concludes the tutorial for adding a new `Command` to AddressBook."
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "-"
        },
        "content": "//Link to more discussions"
      }
    ],
    "authorContributionMap": {
      "-": 389,
      "SQwQ": 36
    }
  },
  {
    "path": "src/main/java/seedu/address/commons/core/GuiSettings.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.commons.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.awt.Point;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": " * A Serializable class that contains the GUI settings."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " * Guarantees: immutable."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class GuiSettings implements Serializable {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final double DEFAULT_HEIGHT \u003d 600;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gachia"
        },
        "content": "    private static final double DEFAULT_WIDTH \u003d 700;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    private final double windowWidth;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    private final double windowHeight;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Point windowCoordinates;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    public GuiSettings() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        windowWidth \u003d DEFAULT_WIDTH;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        windowHeight \u003d DEFAULT_HEIGHT;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        windowCoordinates \u003d null; // null represent no coordinates"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        this.windowWidth \u003d windowWidth;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        this.windowHeight \u003d windowHeight;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        windowCoordinates \u003d new Point(xPosition, yPosition);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    public double getWindowWidth() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        return windowWidth;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    public double getWindowHeight() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        return windowHeight;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    public Point getWindowCoordinates() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!(other instanceof GuiSettings)) { //this handles null as well."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        GuiSettings o \u003d (GuiSettings) other;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        return windowWidth \u003d\u003d o.windowWidth"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 windowHeight \u003d\u003d o.windowHeight"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        return Objects.hash(windowWidth, windowHeight, windowCoordinates);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        sb.append(\"Width : \" + windowWidth + \"\\n\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        sb.append(\"Height : \" + windowHeight + \"\\n\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        sb.append(\"Position : \" + windowCoordinates);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 72,
      "gachia": 1
    }
  },
  {
    "path": "src/main/java/seedu/address/commons/core/Messages.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.commons.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": " * Container for user visible messages."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class Messages {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public static final String MESSAGE_INVALID_REPORT_INDEX \u003d \"The report index provided is invalid\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 13,
      "SQwQ": 1
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/Logic.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ReadOnlyAddressBook;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": " * API of the Logic component"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "public interface Logic {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "     * Executes the command and returns the result."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param commandText The command as entered by the user."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return the result of the command execution."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws CommandException If an error occurs during command execution."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws ParseException If an error occurs during parsing."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    CommandResult execute(String commandText) throws CommandException, ParseException;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    CommandResult execute(Command command) throws CommandException;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the AddressBook."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see seedu.address.model.Model#getAddressBook()"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    ReadOnlyAddressBook getAddressBook();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    /** Returns an unmodifiable view of the filtered list of persons */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    ObservableList\u003cPerson\u003e getFilteredPersonList();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the user prefs\u0027 address book file path."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    Path getAddressBookFilePath();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the user prefs\u0027 GUI settings."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    GuiSettings getGuiSettings();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "     * Set the user prefs\u0027 GUI settings."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    void setGuiSettings(GuiSettings guiSettings);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "     * Retrieves the available Reminders."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    String outputReminders();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ReignOfComputer": 5,
      "-": 50,
      "SQwQ": 3
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/LogicManager.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.AddressBookParser;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ReadOnlyAddressBook;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.storage.Storage;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": " * The main LogicManager of the app."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "public class LogicManager implements Logic {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Model model;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Storage storage;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    private final AddressBookParser addressBookParser;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    public LogicManager(Model model, Storage storage) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        this.model \u003d model;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        addressBookParser \u003d new AddressBookParser();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    public CommandResult execute(String commandText) throws CommandException, ParseException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        String aliasedCommandText \u003d model.applyAlias(commandText);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        CommandResult commandResult;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        Command command \u003d addressBookParser.parseCommand(aliasedCommandText);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        commandResult \u003d command.execute(model);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "            storage.saveAddressBook(model.getAddressBook());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException ioe) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        return commandResult;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public CommandResult execute(Command cmd) throws CommandException {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        logger.info(\"----------------[USER COMMAND][\" + cmd.toString() + \"]\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        CommandResult commandResult;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        Command command \u003d cmd;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        commandResult \u003d command.execute(model);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "            storage.saveAddressBook(model.getAddressBook());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException ioe) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        return commandResult;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    public ReadOnlyAddressBook getAddressBook() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        return model.getAddressBook();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    public ObservableList\u003cPerson\u003e getFilteredPersonList() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        return model.getFilteredPersonList();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    public Path getAddressBookFilePath() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        return model.getAddressBookFilePath();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    public GuiSettings getGuiSettings() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        return model.getGuiSettings();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setGuiSettings(GuiSettings guiSettings) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        model.setGuiSettings(guiSettings);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    public String outputReminders() {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        return model.outputReminders();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ReignOfComputer": 5,
      "Wingedevil": 3,
      "-": 87,
      "SQwQ": 6
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/AddVisitCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_VISIT;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import seedu.address.commons.core.Messages;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import seedu.address.commons.core.index.Index;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SQwQ"
        },
        "content": " * Changes the visitList of an existing person in the address book."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SQwQ"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "public class AddVisitCommand extends Command {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"addvisit\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Add the visitation record of the person identified \""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            + \"by the index number used in the last person listing. \""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            + \"Calls window popup for user to fill in details.\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            + \"Parameters: INDEX (must be a positive integer) \""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            + PREFIX_VISIT + \"[DATE]\\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            + \"Example: \" + COMMAND_WORD + \" 1 \""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            + PREFIX_VISIT + \"01/01/2019\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public static final String MESSAGE_ADD_VISIT_PROMPT \u003d \"Please fill in the form\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private final Index index;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private final String date;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param index of the person in the filtered person list to edit the visitList"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param date of the VisitReport"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public AddVisitCommand(Index index, String date) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        requireAllNonNull(index, date);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public CommandResult execute(Model model) throws CommandException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        Person personToEdit \u003d lastShownList.get(index.getZeroBased());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return new CommandResult(String.format(MESSAGE_ADD_VISIT_PROMPT, personToEdit), index.getOneBased(), date);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        // short circuit if same object"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        // instanceof handles nulls"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        if (!(other instanceof AddVisitCommand)) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        // state check"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        AddVisitCommand e \u003d (AddVisitCommand) other;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return index.equals(e.index)"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                \u0026\u0026 date.equals(e.date);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SQwQ": 77
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/AliasCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_ALIAS_NAME;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_ALIAS_VALUE;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "import seedu.address.logic.parser.AddressBookParser;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": " * Defines an alias."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "public class AliasCommand extends Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"alias\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    public static final String MESSAGE_SUCCESS \u003d \"Alias added: %1$s -\u003e %2$s\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    public static final String MESSAGE_ALIAS_FAILED \u003d \"Alias cannot include a defined command.\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": defines an alias. \""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "            + \"Parameters: \""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "            + PREFIX_ALIAS_NAME + \"ALIAS_NAME \""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "            + PREFIX_ALIAS_VALUE + \"ALIAS_VALUE \""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "            + \"Example: \" + COMMAND_WORD + \" \""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "            + PREFIX_ALIAS_NAME + \"h \""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "            + PREFIX_ALIAS_VALUE + \"help\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    private final String alias;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    private final String aliasTo;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "     * Creates an AliasCommand to define an alias."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    public AliasCommand(String alias, String aliasTo) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        requireNonNull(alias);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        requireNonNull(aliasTo);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        this.alias \u003d alias.trim();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        this.aliasTo \u003d aliasTo.trim();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    public CommandResult execute(Model model) throws CommandException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        requireNonNull(model);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "            Command a \u003d new AddressBookParser().parseCommand(alias);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "            if (e.getMessage().equals(MESSAGE_UNKNOWN_COMMAND)) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "                // happy path"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "                model.addAlias(alias, aliasTo);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "                return new CommandResult(String.format(MESSAGE_SUCCESS, alias, aliasTo));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        throw new CommandException(MESSAGE_ALIAS_FAILED);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wingedevil": 57
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/CommandResult.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import seedu.address.model.person.VisitReport;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents the result of a command execution."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "public class CommandResult {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    private final String feedbackToUser;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private int reportIdx;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private String date;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private ObservableList\u003cVisitReport\u003e reports;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private VisitReport oldReport;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "    private Person profilePerson;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    /** Help information should be shown to the user. */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    private final boolean showHelp;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /** The application should addVisit. */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private final boolean addVisit;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /** The application should showVisitList. */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private final boolean showVisitList;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /** The application should editVisit. */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private final boolean editVisit;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "    /** The application should show the Profile */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "    private final boolean profile;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    /** The application should exit. */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    private final boolean exit;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    /** Display reminders and follow-up motd */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    private final boolean showMotd;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "     * Constructs a {@code CommandResult} with the specified fields."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public CommandResult(String feedbackToUser, boolean showHelp, boolean addVisit, boolean showVisitList,"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                         boolean editVisit, boolean profile, boolean exit, boolean showMotd) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        this.feedbackToUser \u003d requireNonNull(feedbackToUser);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        this.showHelp \u003d showHelp;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        this.addVisit \u003d addVisit;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        this.showVisitList \u003d showVisitList;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        this.editVisit \u003d editVisit;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "        this.profile \u003d profile;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        this.exit \u003d exit;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        this.showMotd \u003d showMotd;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "    public CommandResult(String feedbackToUser, int idx) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        this(feedbackToUser, false, false, false, false, false, false, false);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "        this.index \u003d idx;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "    public CommandResult(String feedbackToUser, Person profilePerson) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        this(feedbackToUser, false, false, false, false, true, false, false);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "        this.profilePerson \u003d profilePerson;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public CommandResult(String feedbackToUser, int idx, String date) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        this(feedbackToUser, false, true, false, false,"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                false, false, false);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        this.index \u003d idx;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public CommandResult(String feedbackToUser, ObservableList\u003cVisitReport\u003e lst) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        this(feedbackToUser, false, false, true, false,"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                false, false, false);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        this.reports \u003d lst;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public CommandResult(String feedbackToUser, ObservableList\u003cVisitReport\u003e lst,"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                         int idx, int reportIdx, VisitReport report) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        this(feedbackToUser, false, false, false, true,"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                false, false, false);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        this.reports \u003d lst;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        this.index \u003d idx;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        this.reportIdx \u003d reportIdx;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        this.oldReport \u003d report;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "     * and other fields set to their default value."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "    public CommandResult(String feedbackToUser) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        this(feedbackToUser, false, false, false, false, false, false, false);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getFeedbackToUser() {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackToUser;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public String getDate() {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public int getIdx() {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return index;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public int getReportIdx() {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return reportIdx;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public ObservableList\u003cVisitReport\u003e getObservableVisitList() {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return this.reports;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public VisitReport getOldReport() {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return this.oldReport;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isShowHelp() {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        return showHelp;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    public boolean isShowMotd() {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        return showMotd;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "        return exit;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public boolean isAddVisit() {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return addVisit;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public boolean isShowVisitList() {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return showVisitList;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public boolean isEditVisit() {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return editVisit;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "    public boolean isShowProfile() {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "        return profile;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "    public Person getProfilePerson() {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "        return profilePerson;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "        // instanceof handles nulls"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!(other instanceof CommandResult)) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "        CommandResult otherCommandResult \u003d (CommandResult) other;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackToUser.equals(otherCommandResult.feedbackToUser)"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                \u0026\u0026 addVisit \u003d\u003d otherCommandResult.addVisit"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                \u0026\u0026 editVisit \u003d\u003d otherCommandResult.editVisit"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                \u0026\u0026 showVisitList \u003d\u003d otherCommandResult.showVisitList"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                \u0026\u0026 profile \u003d\u003d otherCommandResult.profile"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "                \u0026\u0026 showMotd \u003d\u003d otherCommandResult.showMotd;"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "        return Objects.hash(feedbackToUser, showHelp, addVisit, profile, exit);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Q-gabe": 24,
      "ReignOfComputer": 10,
      "-": 69,
      "SQwQ": 88
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/DeleteVisitCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_DELETE_VISIT;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import seedu.address.commons.core.Messages;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import seedu.address.commons.core.index.Index;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SQwQ"
        },
        "content": " * Deletes record of patient by index."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SQwQ"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "public class DeleteVisitCommand extends Command {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"deletevisit\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            + \": Deletes the visitation record of the person identified \""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            + \"by the index number used in the last person listing.\\n \""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            + COMMAND_WORD + \"[PERSON INDEX]\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            + PREFIX_DELETE_VISIT + \"[REPORT INDEX]\\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            + \"Example: \" + COMMAND_WORD + \" 1 \""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            + PREFIX_DELETE_VISIT + \"2\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public static final String MESSAGE_DELETE_VISIT_SUCCESS \u003d \"Removed visit from Person: %1$s\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public static final String MESSAGE_MISSING_INDEX_PROMPT \u003d \"Please specify index of report to be deleted\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private final Index index;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private final int id;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param index of the person in the filtered person list to edit the visitList"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param id of the report to be deleted"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public DeleteVisitCommand(Index index, int id) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        requireAllNonNull(index);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        this.id \u003d id;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public CommandResult execute(Model model) throws CommandException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        Person personToEdit \u003d lastShownList.get(index.getZeroBased());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        Person editedPerson \u003d personToEdit;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        if (id !\u003d -1) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                editedPerson \u003d new Person(personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                        personToEdit.getAddress(), personToEdit.getVisitList().deleteRecord(id),"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                        personToEdit.getTags());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                model.setPerson(personToEdit, editedPerson);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                throw new CommandException(Messages.MESSAGE_INVALID_REPORT_INDEX);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            return new CommandResult(MESSAGE_MISSING_INDEX_PROMPT, editedPerson.getVisitList().getObservableRecords());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return new CommandResult(String.format(MESSAGE_DELETE_VISIT_SUCCESS,"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                personToEdit), editedPerson.getVisitList().getObservableRecords());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        // short circuit if same object"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        // instanceof handles nulls"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        if (!(other instanceof DeleteVisitCommand)) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        // state check"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        DeleteVisitCommand e \u003d (DeleteVisitCommand) other;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return index.equals(e.index)"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                \u0026\u0026 id \u003d\u003d e.id;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SQwQ": 93
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/EditCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.Messages;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.index.Index;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.util.CollectionUtil;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Address;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Email;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Name;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Phone;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import seedu.address.model.person.VisitList;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.tag.Tag;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": " * Edits the details of an existing person in the address book."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "public class EditCommand extends Command {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"edit\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"by the index number used in the displayed person list. \""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"Existing values will be overwritten by the input values.\\n\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"Parameters: INDEX (must be a positive integer) \""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"[\" + PREFIX_NAME + \"NAME] \""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"[\" + PREFIX_PHONE + \"PHONE] \""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"[\" + PREFIX_EMAIL + \"EMAIL] \""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"[\" + PREFIX_TAG + \"TAG]...\\n\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"Example: \" + COMMAND_WORD + \" 1 \""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "            + PREFIX_PHONE + \"91234567 \""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "            + PREFIX_EMAIL + \"johndoe@example.com\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Index index;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    private final EditPersonDescriptor editPersonDescriptor;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param index of the person in the filtered person list to edit"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param editPersonDescriptor details to edit the person with"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(index);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(editPersonDescriptor);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    public CommandResult execute(Model model) throws CommandException {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(model);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        Person personToEdit \u003d lastShownList.get(index.getZeroBased());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new CommandException(MESSAGE_DUPLICATE_PERSON);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        model.setPerson(personToEdit, editedPerson);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates and returns a {@code Person} with the details of {@code personToEdit}"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "     * edited with {@code editPersonDescriptor}."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        assert personToEdit !\u003d null;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        VisitList updatedVisitList \u003d personToEdit.getVisitList(); // edit command does not allow editing remarks"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedVisitList, updatedTags);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        // short circuit if same object"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        // instanceof handles nulls"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!(other instanceof EditCommand)) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "        // state check"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "        EditCommand e \u003d (EditCommand) other;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "        return index.equals(e.index)"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "     * Stores the details to edit the person with. Each non-empty field value will replace the"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "     * corresponding field value of the person."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "    public static class EditPersonDescriptor {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "        private Name name;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        private Phone phone;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "        private Email email;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "        private Address address;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "        private Set\u003cTag\u003e tags;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "        public EditPersonDescriptor() {}"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "         * Copy constructor."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "         * A defensive copy of {@code tags} is used internally."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "         */"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "        public EditPersonDescriptor(EditPersonDescriptor toCopy) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "            setName(toCopy.name);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "            setPhone(toCopy.phone);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "            setEmail(toCopy.email);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "            setAddress(toCopy.address);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "            setTags(toCopy.tags);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "         * Returns true if at least one field is edited."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "         */"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "        public boolean isAnyFieldEdited() {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "        public void setName(Name name) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "            this.name \u003d name;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "        public Optional\u003cName\u003e getName() {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "            return Optional.ofNullable(name);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "        public void setPhone(Phone phone) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "            this.phone \u003d phone;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "        public Optional\u003cPhone\u003e getPhone() {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "            return Optional.ofNullable(phone);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "        public void setEmail(Email email) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "            this.email \u003d email;"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "        public Optional\u003cEmail\u003e getEmail() {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "            return Optional.ofNullable(email);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "        public void setAddress(Address address) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "            this.address \u003d address;"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "        public Optional\u003cAddress\u003e getAddress() {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "            return Optional.ofNullable(address);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "         * Sets {@code tags} to this object\u0027s {@code tags}."
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "         * A defensive copy of {@code tags} is used internally."
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "         */"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "        public void setTags(Set\u003cTag\u003e tags) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "         * if modification is attempted."
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "         * Returns {@code Optional#empty()} if {@code tags} is null."
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "         */"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "        public boolean equals(Object other) {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "            // short circuit if same object"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "            if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "            // instanceof handles nulls"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!(other instanceof EditPersonDescriptor)) {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "            // state check"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "            return getName().equals(e.getName())"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u0026\u0026 getPhone().equals(e.getPhone())"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u0026\u0026 getEmail().equals(e.getEmail())"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u0026\u0026 getAddress().equals(e.getAddress())"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u0026\u0026 getTags().equals(e.getTags());"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 225,
      "SQwQ": 3
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/EditVisitCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_EDIT_VISIT;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import seedu.address.commons.core.Messages;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import seedu.address.commons.core.index.Index;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SQwQ"
        },
        "content": " * Edits record of patient by index."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SQwQ"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "public class EditVisitCommand extends Command {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"editvisit\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            + \": Edits the visitation record of the person identified \""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            + \"by the index number used in the last person listing.\\n \""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            + COMMAND_WORD + \"[PERSON INDEX] \""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            + PREFIX_EDIT_VISIT + \"[REPORT INDEX]\\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            + \"Example: \" + COMMAND_WORD + \" 1 \""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            + PREFIX_EDIT_VISIT + \"2\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public static final String MESSAGE_EDIT_VISIT_PROMPT \u003d \"Please edit the form\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public static final String MESSAGE_MISSING_INDEX_PROMPT \u003d \"Please specify index of report to be edited\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private final Index index;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private final int id;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param index of the person in the filtered person list to edit the visitList"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param id of the report to be deleted"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public EditVisitCommand(Index index, int id) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        requireAllNonNull(index);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        this.id \u003d id;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public CommandResult execute(Model model) throws CommandException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        Person personToEdit \u003d lastShownList.get(index.getZeroBased());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        Person editedPerson \u003d personToEdit;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        if (id !\u003d -1) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                return new CommandResult(String.format(MESSAGE_EDIT_VISIT_PROMPT, personToEdit),"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                        editedPerson.getVisitList().getObservableRecords(), index.getOneBased(),"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                        id, editedPerson.getVisitList().getRecordByIndex(id));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                throw new CommandException(Messages.MESSAGE_INVALID_REPORT_INDEX);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            return new CommandResult(MESSAGE_MISSING_INDEX_PROMPT, editedPerson.getVisitList().getObservableRecords());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        // short circuit if same object"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        // instanceof handles nulls"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        if (!(other instanceof EditVisitCommand)) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        // state check"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        EditVisitCommand e \u003d (EditVisitCommand) other;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return index.equals(e.index)"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                \u0026\u0026 id \u003d\u003d e.id;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SQwQ": 87
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/ExitCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": " * Terminates the program."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"exit\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Address Book as requested ...\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    public CommandResult execute(Model model) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, false, false, false, false, true, false);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 18,
      "SQwQ": 1
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/FollowUpCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_DAYS;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "import seedu.address.commons.core.Messages;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "import seedu.address.commons.core.index.Index;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": " * Adds a follow-up to VISIT."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "public class FollowUpCommand extends Command {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"followup\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "            + \": Creates a new follow-up against a patient for the user to keep track \""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "            + \"by the index number used in the last person listing.\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "            + \"Parameters: INDEX (must be a positive integer) \""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "            + \"[\" + PREFIX_DAYS + \"EXPIRY IN DAYS]...\\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "            + \"Example: \" + COMMAND_WORD + \" 1 \""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "            + PREFIX_DAYS + \"7\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    public static final String MESSAGE_ADD_FOLLOWUP_SUCCESS \u003d \"Added follow-up to Person: %s - %d day(s)\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    private final Index index;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    private final int days;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "     * @param index of the person in the filtered person list to target"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "     * @param days before appointment"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    public FollowUpCommand(Index index, int days) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        requireNonNull(index);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        this.days \u003d days;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    public CommandResult execute(Model model) throws CommandException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        Person person \u003d lastShownList.get(index.getZeroBased());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        model.addReminder(1, person.getName().toString(), days);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        return new CommandResult(String.format(MESSAGE_ADD_FOLLOWUP_SUCCESS, person.getName().toString(), days));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        // short circuit if same object"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        // instanceof handles nulls"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        if (!(other instanceof FollowUpCommand)) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        // state check"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        FollowUpCommand e \u003d (FollowUpCommand) other;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        return index.equals(e.index)"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "                \u0026\u0026 days \u003d\u003d e.days;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ReignOfComputer": 77
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/HelpCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": " * Format full help instructions for every command for display."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"help\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"Example: \" + COMMAND_WORD;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    public CommandResult execute(Model model) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return new CommandResult(SHOWING_HELP_MESSAGE, true, false, false, false, false, false, false);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 20,
      "SQwQ": 1
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/ProfileCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "import seedu.address.commons.core.Messages;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "import seedu.address.commons.core.index.Index;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": " * Changes the visitList of an existing person in the address book."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "public class ProfileCommand extends Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"profile\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Opens the detailed profile of the patient identified \""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "            + \"by the index number used in the last person listing.\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "            + \"Parameters: INDEX (must be a positive integer) \""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "            + \"Example: \" + COMMAND_WORD + \" 1 \";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "    public static final String MESSAGE_VIEW_PROFILE_SUCCESS \u003d \"Generated profile view of : %1$s\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "    private final Index index;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "     * @param index of the person in the last listing whose profile is to be viewed"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "    public ProfileCommand(Index index) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "        requireAllNonNull(index);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "    public CommandResult execute(Model model) throws CommandException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "        // Get person list based on existing filter"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "        // Extract the person from list"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "        Person personProfileToShow \u003d lastShownList.get(index.getZeroBased());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "        return new CommandResult(String.format(MESSAGE_VIEW_PROFILE_SUCCESS, personProfileToShow), personProfileToShow);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "        // short circuit if same object"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "        // instanceof handles nulls"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "        if (!(other instanceof ProfileCommand)) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "        // state check"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "        ProfileCommand e \u003d (ProfileCommand) other;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "        return index.equals(e.index);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Q-gabe": 69
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/ReminderCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_DAYS;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": " * Adds a reminder to VISIT."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "public class ReminderCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"reminder\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "            + \": Creates a new reminder for the user to keep track. \""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "            + \"Parameters: \""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "            + \"[\" + PREFIX_DAYS + \"EXPIRY IN DAYS]...\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "            + \"Example: \" + COMMAND_WORD + \" \""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "            + \"Two Point Hospital closed \""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "            + PREFIX_DAYS + \"7\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    public static final String MESSAGE_SUCCESS \u003d \"New reminder added: %s - %d day(s)\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    private final int days;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "     * Creates an ReminderCommand to add the specified {@code Reminder}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    public ReminderCommand(String description, int days) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        requireNonNull(description);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        this.days \u003d days;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    public CommandResult execute(Model model) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        requireNonNull(model);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        model.addReminder(0, description, days);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        return new CommandResult(String.format(MESSAGE_SUCCESS, description, days));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "                || (other instanceof ReminderCommand // instanceof handles nulls"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "                \u0026\u0026 description.equals(((ReminderCommand) other).description)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "                \u0026\u0026 days \u003d\u003d ((ReminderCommand) other).days);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ReignOfComputer": 53
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/SaveVisitCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import seedu.address.commons.core.Messages;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import seedu.address.commons.core.index.Index;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import seedu.address.model.person.VisitReport;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SQwQ"
        },
        "content": " * Saves new record to Visit List."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SQwQ"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "public class SaveVisitCommand extends Command {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public static final String MESSAGE_SAVE_VISIT_SUCCESS \u003d \"Saved visit report to Person: %1$s\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private static final int INVALID_REPORT_INDEX \u003d -1;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private final Index index;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private final VisitReport visitReport;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private int reportIdx;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private String medication;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private String diagnosis;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private String remarks;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public SaveVisitCommand(int index, int reportIdx, String date, String meds, String dg, String rmk) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        requireAllNonNull(index, reportIdx, date);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        this.index \u003d Index.fromOneBased(index);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        this.reportIdx \u003d reportIdx;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        this.visitReport \u003d new VisitReport(date);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        this.medication \u003d meds;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        this.diagnosis \u003d dg;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        this.remarks \u003d rmk;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public CommandResult execute(Model model) throws CommandException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        Person personToEdit \u003d lastShownList.get(index.getZeroBased());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        visitReport.setName(personToEdit.getName());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        visitReport.setDetails(medication, diagnosis, remarks);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        Person editedPerson \u003d null;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        if (reportIdx \u003d\u003d INVALID_REPORT_INDEX) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            editedPerson \u003d new Person(personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                    personToEdit.getAddress(), personToEdit.getVisitList().addRecord(visitReport),"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                    personToEdit.getTags());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            editedPerson \u003d new Person(personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                    personToEdit.getAddress(), personToEdit.getVisitList().editRecord(reportIdx, visitReport),"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                    personToEdit.getTags());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        assert(!editedPerson.equals(null));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        model.setPerson(personToEdit, editedPerson);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return new CommandResult(String.format(MESSAGE_SAVE_VISIT_SUCCESS, personToEdit));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        // short circuit if same object"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        // instanceof handles nulls"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        if (!(other instanceof SaveVisitCommand)) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        // state check"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        SaveVisitCommand e \u003d (SaveVisitCommand) other;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return index.equals(e.index)"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                \u0026\u0026 medication.equals(e.medication)"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                \u0026\u0026 diagnosis.equals(e.diagnosis)"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                \u0026\u0026 remarks.equals(e.remarks)"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                \u0026\u0026 visitReport.date.equals(e.visitReport.date);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SQwQ": 91
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/ShowCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": " * Displays reminders and follow-ups for the day"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "public class ShowCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"show\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Displays reminders and follow-ups for the day\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    public static final String SHOWING_MOTD_MESSAGE \u003d \"Opened message of the day.\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    public CommandResult execute(Model model) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return new CommandResult(SHOWING_MOTD_MESSAGE, false, false, false, false, false, false, true);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ReignOfComputer": 19,
      "SQwQ": 1
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/UnaliasCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": " * Removes an alias."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "public class UnaliasCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"unalias\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    public static final String MESSAGE_SUCCESS \u003d \"Alias removed: %1$s\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    public static final String MESSAGE_ALIAS_FAILED \u003d \"No existing alias named: %1$s\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": removes an alias. \""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "            + \"Parameters: \""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "            + \"ALIAS_NAME \""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "            + \"Example: \" + COMMAND_WORD + \" \""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "            + \"h\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    private final String alias;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "     * Creates an UnaliasCommand to remove an alias."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    public UnaliasCommand(String alias) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        requireNonNull(alias);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        this.alias \u003d alias.trim();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    public CommandResult execute(Model model) throws CommandException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        requireNonNull(model);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        if (model.removeAlias(alias)) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "            return new CommandResult(String.format(MESSAGE_SUCCESS, alias));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "            throw new CommandException(String.format(MESSAGE_ALIAS_FAILED, alias));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wingedevil": 42
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/AddCommandParser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.stream.Stream;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.AddCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Address;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Email;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Name;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Phone;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import seedu.address.model.person.VisitList;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import seedu.address.model.person.VisitReport;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.tag.Tag;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": " * Parses input arguments and creates a new AddCommand object"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "public class AddCommandParser implements Parser\u003cAddCommand\u003e {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parses the given {@code String} of arguments in the context of the AddCommand"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "     * and returns an AddCommand object for execution."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws ParseException if the user input does not conform the expected format"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    public AddCommand parse(String args) throws ParseException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        ArgumentMultimap argMultimap \u003d"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "                || !argMultimap.getPreamble().isEmpty()) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        // add command does not allow adding remarks straight away"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        VisitList visitList \u003d new VisitList(new ArrayList\u003cVisitReport\u003e());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        Person person \u003d new Person(name, phone, email, address, visitList, tagList);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        return new AddCommand(person);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns true if none of the prefixes contains empty {@code Optional} values in the given"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@code ArgumentMultimap}."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 59,
      "SQwQ": 6
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/AddVisitCommandParser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_VISIT;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import seedu.address.commons.core.index.Index;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import seedu.address.commons.exceptions.IllegalValueException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import seedu.address.logic.commands.AddVisitCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SQwQ"
        },
        "content": " * Parses input arguments and creates a new {@code RemarkCommand} object"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SQwQ"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "public class AddVisitCommandParser implements Parser\u003cAddVisitCommand\u003e {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Parses the given {@code String} of arguments in the context of the {@code RemarkCommand}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * and returns a {@code RemarkCommand} object for execution."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @throws ParseException if the user input does not conform the expected format"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public AddVisitCommand parse(String args) throws ParseException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        requireNonNull(args);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_VISIT);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        Index index;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "        String date;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "            // Take date from \u0027/v\u0027 prefix or use current timing for report date."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            date \u003d ParserUtil.parseVisitReport(argMultimap.getValue(PREFIX_VISIT)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                    .orElse(LocalDateTime.now().format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"))));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        } catch (IllegalValueException ive) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddVisitCommand.MESSAGE_USAGE), ive);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "        return new AddVisitCommand(index, date);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Q-gabe": 6,
      "SQwQ": 35
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/AddressBookParser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.AddCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import seedu.address.logic.commands.AddVisitCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "import seedu.address.logic.commands.AliasCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.ClearCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.DeleteCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import seedu.address.logic.commands.DeleteVisitCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.EditCommand;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import seedu.address.logic.commands.EditVisitCommand;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.ExitCommand;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.FindCommand;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "import seedu.address.logic.commands.FollowUpCommand;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.HelpCommand;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.ListCommand;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "import seedu.address.logic.commands.ProfileCommand;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "import seedu.address.logic.commands.ReminderCommand;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "import seedu.address.logic.commands.ShowCommand;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "import seedu.address.logic.commands.UnaliasCommand;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": " * Parses user input."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "public class AddressBookParser {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "     * Used for initial separation of command word and args."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parses user input into command for execution."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param userInput full user input string"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return the command based on the user input"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws ParseException if the user input does not conform the expected format"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    public Command parseCommand(String userInput) throws ParseException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!matcher.matches()) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        final String commandWord \u003d matcher.group(\"commandWord\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        final String arguments \u003d matcher.group(\"arguments\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        switch (commandWord.toLowerCase()) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        case AddCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "            return new AddCommandParser().parse(arguments);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        case AliasCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "            return new AliasCommandParser().parse(arguments);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        case UnaliasCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "            return new UnaliasCommandParser().parse(arguments);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        case EditCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "            return new EditCommandParser().parse(arguments);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        case DeleteCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "            return new DeleteCommandParser().parse(arguments);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        case ClearCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "            return new ClearCommand();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        case FindCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "            return new FindCommandParser().parse(arguments);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        case ListCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        case AddVisitCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            return new AddVisitCommandParser().parse(arguments);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        case DeleteVisitCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            return new DeleteVisitCommandParser().parse(arguments);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        case EditVisitCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            return new EditVisitCommandParser().parse(arguments);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "        case ProfileCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "            return new ProfileCommandParser().parse(arguments);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        case FollowUpCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "            return new FollowUpCommandParser().parse(arguments);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        case ReminderCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "            return new ReminderCommandParser().parse(arguments);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        case ExitCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        case HelpCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "            return new HelpCommand();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        case ShowCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "            return new ShowCommand();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Q-gabe": 4,
      "ReignOfComputer": 12,
      "Wingedevil": 8,
      "-": 75,
      "SQwQ": 14
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/AliasCommandParser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_ALIAS_NAME;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_ALIAS_VALUE;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "import java.util.stream.Stream;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "import seedu.address.logic.commands.AliasCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": " * Parses input arguments and creates a new AliasCommand object"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "public class AliasCommandParser implements Parser\u003cAliasCommand\u003e {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "     * Parses the given {@code String} of arguments in the context of the AliasCommand"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "     * and returns an AliasCommand object for execution."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "     * @throws ParseException if the user input does not conform the expected format"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    public AliasCommand parse(String args) throws ParseException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        ArgumentMultimap argMultimap \u003d"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "                ArgumentTokenizer.tokenize(args, PREFIX_ALIAS_NAME, PREFIX_ALIAS_VALUE);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        if (!arePrefixesPresent(argMultimap, PREFIX_ALIAS_NAME, PREFIX_ALIAS_VALUE)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "                || !argMultimap.getPreamble().isEmpty()) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AliasCommand.MESSAGE_USAGE));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        String name \u003d argMultimap.getValue(PREFIX_ALIAS_NAME).get();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        String value \u003d argMultimap.getValue(PREFIX_ALIAS_VALUE).get();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        return new AliasCommand(name, value);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "     * Returns true if none of the prefixes contains empty {@code Optional} values in the given"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "     * {@code ArgumentMultimap}."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wingedevil": 44
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/CliSyntax.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": " * Contains Command Line Interface (CLI) syntax definitions common to multiple commands"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class CliSyntax {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    /* Prefix definitions */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    public static final Prefix PREFIX_ALIAS_NAME \u003d new Prefix(\"l/\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    public static final Prefix PREFIX_ALIAS_VALUE \u003d new Prefix(\"v/\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public static final Prefix PREFIX_VISIT \u003d new Prefix(\"v/\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public static final Prefix PREFIX_DELETE_VISIT \u003d new Prefix(\"d/\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public static final Prefix PREFIX_EDIT_VISIT \u003d new Prefix(\"i/\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    public static final Prefix PREFIX_DAYS \u003d new Prefix(\"d/\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ReignOfComputer": 1,
      "Wingedevil": 2,
      "-": 17,
      "SQwQ": 4
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/DeleteVisitCommandParser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_DELETE_VISIT;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import seedu.address.commons.core.index.Index;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import seedu.address.commons.exceptions.IllegalValueException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import seedu.address.logic.commands.DeleteVisitCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SQwQ"
        },
        "content": " * Parser class for DeleteVisitCommand"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SQwQ"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "public class DeleteVisitCommandParser implements Parser\u003cDeleteVisitCommand\u003e {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Parses the given {@code String} of arguments in the context of the {@code DeleteVisitCommand}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * and returns a {@code DeleteVisitCommand} object for execution."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @throws ParseException if the user input does not conform the expected format"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public DeleteVisitCommand parse(String args) throws ParseException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        requireNonNull(args);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_DELETE_VISIT);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        Index index;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        int reportIdx;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        } catch (IllegalValueException ive) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                    DeleteVisitCommand.MESSAGE_USAGE), ive);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            reportIdx \u003d Integer.parseInt(argMultimap.getValue(PREFIX_DELETE_VISIT).orElse(\"-1\"));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            reportIdx \u003d -1;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return new DeleteVisitCommand(index, reportIdx);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SQwQ": 43
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/EditVisitCommandParser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_EDIT_VISIT;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import seedu.address.commons.core.index.Index;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import seedu.address.commons.exceptions.IllegalValueException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import seedu.address.logic.commands.EditVisitCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SQwQ"
        },
        "content": " * Parser class for DeleteVisitCommand"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SQwQ"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "public class EditVisitCommandParser implements Parser\u003cEditVisitCommand\u003e {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Parses the given {@code String} of arguments in the context of the {@code EditVisitCommandParser}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * and returns a {@code EditVisitCommandParser} object for execution."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @throws ParseException if the user input does not conform the expected format"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public EditVisitCommand parse(String args) throws ParseException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        requireNonNull(args);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_EDIT_VISIT);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        Index index;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        int reportIdx;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        } catch (IllegalValueException ive) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                    EditVisitCommand.MESSAGE_USAGE), ive);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            reportIdx \u003d Integer.parseInt(argMultimap.getValue(PREFIX_EDIT_VISIT).orElse(\"-1\"));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                    EditVisitCommand.MESSAGE_USAGE), e);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return new EditVisitCommand(index, reportIdx);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "SQwQ": 44
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/FollowUpCommandParser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_DAYS;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "import seedu.address.commons.core.index.Index;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "import seedu.address.commons.exceptions.IllegalValueException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "import seedu.address.logic.commands.FollowUpCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": " * Parses input arguments and creates a new {@code FollowUpCommand} object"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "public class FollowUpCommandParser implements Parser\u003cFollowUpCommand\u003e {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "     * Parses the given {@code String} of arguments in the context of the {@code RemindCommand}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "     * and returns a {@code FollowUpCommand} object for execution."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "     * @throws ParseException if the user input does not conform the expected format"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    public FollowUpCommand parse(String args) throws ParseException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        requireNonNull(args);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_DAYS);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        Index index;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        int days;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "            days \u003d Integer.parseInt(argMultimap.getValue(PREFIX_DAYS).orElse(\"7\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        } catch (IllegalValueException ive) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FollowUpCommand.MESSAGE_USAGE), ive);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        return new FollowUpCommand(index, days);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ReignOfComputer": 36
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/ParserUtil.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Collection;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.index.Index;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.util.StringUtil;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Address;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Email;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Name;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Phone;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import seedu.address.model.person.VisitReport;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.tag.Tag;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": " * Contains utility methods used for parsing strings in the various *Parser classes."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "public class ParserUtil {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "     * trimmed."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer)."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    public static Index parseIndex(String oneBasedIndex) throws ParseException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        String trimmedIndex \u003d oneBasedIndex.trim();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new ParseException(MESSAGE_INVALID_INDEX);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        return Index.fromOneBased(Integer.parseInt(trimmedIndex));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parses a {@code String name} into a {@code Name}."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "     * Leading and trailing whitespaces will be trimmed."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws ParseException if the given {@code name} is invalid."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    public static Name parseName(String name) throws ParseException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(name);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        String trimmedName \u003d name.trim();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!Name.isValidName(trimmedName)) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new ParseException(Name.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        return new Name(trimmedName);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parses a {@code String phone} into a {@code Phone}."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "     * Leading and trailing whitespaces will be trimmed."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws ParseException if the given {@code phone} is invalid."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    public static Phone parsePhone(String phone) throws ParseException {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(phone);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        String trimmedPhone \u003d phone.trim();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!Phone.isValidPhone(trimmedPhone)) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        return new Phone(trimmedPhone);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parses a {@code String address} into an {@code Address}."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "     * Leading and trailing whitespaces will be trimmed."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws ParseException if the given {@code address} is invalid."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    public static Address parseAddress(String address) throws ParseException {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(address);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        String trimmedAddress \u003d address.trim();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!Address.isValidAddress(trimmedAddress)) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new ParseException(Address.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        return new Address(trimmedAddress);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parses a {@code String email} into an {@code Email}."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "     * Leading and trailing whitespaces will be trimmed."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws ParseException if the given {@code email} is invalid."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    public static Email parseEmail(String email) throws ParseException {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(email);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        String trimmedEmail \u003d email.trim();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!Email.isValidEmail(trimmedEmail)) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new ParseException(Email.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "        return new Email(trimmedEmail);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parses a {@code String tag} into a {@code Tag}."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "     * Leading and trailing whitespaces will be trimmed."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws ParseException if the given {@code tag} is invalid."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    public static Tag parseTag(String tag) throws ParseException {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(tag);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        String trimmedTag \u003d tag.trim();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!Tag.isValidTagName(trimmedTag)) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        return new Tag(trimmedTag);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(tags);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "        for (String tagName : tags) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "            tagSet.add(parseTag(tagName));"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        return tagSet;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @throws ParseException if the given {@code date} is invalid."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public static String parseVisitReport(String date) throws ParseException {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        requireNonNull(date);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        String trimmedDate \u003d date.trim();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        if (!VisitReport.isValidVisitDate(trimmedDate)) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            throw new ParseException(VisitReport.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return trimmedDate;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 124,
      "SQwQ": 13
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/ProfileCommandParser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "import seedu.address.commons.core.index.Index;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "import seedu.address.commons.exceptions.IllegalValueException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "import seedu.address.logic.commands.ProfileCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": " * Parses input arguments and creates a new {@code RemarkCommand} object"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "public class ProfileCommandParser implements Parser\u003cProfileCommand\u003e {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "     * Parses the given {@code String} of arguments in the context of the {@code RemarkCommand}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "     * and returns a {@code RemarkCommand} object for execution."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "     * @throws ParseException if the user input does not conform the expected format"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "    public ProfileCommand parse(String args) throws ParseException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "        requireNonNull(args);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "        Index index;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "        } catch (IllegalValueException ive) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ProfileCommand.MESSAGE_USAGE), ive);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "        return new ProfileCommand(index);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Q-gabe": 33
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/ReminderCommandParser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_DAYS;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "import seedu.address.logic.commands.ReminderCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": " * Parses input arguments and creates a new {@code RemindCommand} object"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "public class ReminderCommandParser implements Parser\u003cReminderCommand\u003e {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "     * Parses the given {@code String} of arguments in the context of the {@code RemindCommand}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "     * and returns a {@code RemindCommand} object for execution."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "     * @throws ParseException if the user input does not conform the expected format"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    public ReminderCommand parse(String args) throws ParseException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        requireNonNull(args);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_DAYS);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        String description;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        int days;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "            description \u003d argMultimap.getPreamble();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "            days \u003d Integer.parseInt(argMultimap.getValue(PREFIX_DAYS).orElse(\"7\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        } catch (Exception ex) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ReminderCommand.MESSAGE_USAGE), ex);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        return new ReminderCommand(description, days);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ReignOfComputer": 34
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/UnaliasCommandParser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "import java.util.stream.Stream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "import seedu.address.logic.commands.UnaliasCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": " * Parses input arguments and creates a new UnaliasCommand object"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "public class UnaliasCommandParser implements Parser\u003cUnaliasCommand\u003e {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    public UnaliasCommand parse(String args) throws ParseException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        ArgumentMultimap argMultimap \u003d"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "                ArgumentTokenizer.tokenize(args);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        String unaliasName;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        unaliasName \u003d argMultimap.getPreamble();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        if (unaliasName.equalsIgnoreCase(\"\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, UnaliasCommand.MESSAGE_USAGE));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        return new UnaliasCommand(unaliasName);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "     * Returns true if none of the prefixes contains empty {@code Optional} values in the given"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "     * {@code ArgumentMultimap}."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wingedevil": 39
    }
  },
  {
    "path": "src/main/java/seedu/address/model/AliasTable.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "package seedu.address.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": " * A class that contains alias table settings."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "public class AliasTable {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    private HashMap\u003cString, String\u003e aliasTable;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    public AliasTable() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        aliasTable \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    public static AliasTable getDefaultAliasTable() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        AliasTable rtv \u003d new AliasTable();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        rtv.addAlias(\"h\", \"help\")"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "                .addAlias(\"a\", \"add\")"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "                .addAlias(\"e\", \"exit\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        return rtv;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "     * Apply a suitable alias to the input command text. A suitable alias is an alias that matches the regex"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "     * \"{alias}($|\\\\s).*\"."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "     * If multiple matches exists, this method chooses the longest matching alias."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "     * @param commandText Command for alias to be applied to."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "     * @return Command that alias has been applied to."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    public String applyAlias(String commandText) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        String aliasedCommand \u003d commandText;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        int maxLength \u003d 0;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        // match for the longest alias"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        for (String key: aliasTable.keySet()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "            if (key.length() \u003e maxLength \u0026\u0026 commandText.matches(Pattern.quote(key) + \"($|\\\\s).*\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "                aliasedCommand \u003d commandText.replace(key, aliasTable.get(key));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "                maxLength \u003d key.length();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        return aliasedCommand;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "     * Adds an alias into the alias table."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "     * @param alias Alias name"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "     * @param aliasTo Alias value"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "     * @return This object."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    public AliasTable addAlias(String alias, String aliasTo) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        aliasTable.put(alias, aliasTo);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "     * Removes an alias from the alias table."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "     * @param alias Alias name"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "     * @return Returns true if alias exists in alias table and removed successfully, returns false otherwise."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    public boolean removeAlias(String alias) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        return aliasTable.remove(alias) !\u003d null;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        if (this \u003d\u003d o) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        if (!(o instanceof AliasTable)) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        AliasTable other \u003d (AliasTable) o;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        return other.aliasTable.equals(this.aliasTable);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        return Objects.hash(aliasTable);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        sb.append(\"\\nAlias table : --hidden--\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Wingedevil": 89
    }
  },
  {
    "path": "src/main/java/seedu/address/model/Model.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.function.Predicate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": " * The API of the Model component."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public interface Model {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    /** {@code Predicate} that always evaluate to true */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "     * Replaces user prefs data with the data in {@code userPrefs}."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    void setUserPrefs(ReadOnlyUserPrefs userPrefs);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the user prefs."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    ReadOnlyUserPrefs getUserPrefs();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the user prefs\u0027 GUI settings."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    GuiSettings getGuiSettings();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets the user prefs\u0027 GUI settings."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    void setGuiSettings(GuiSettings guiSettings);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the user prefs\u0027 address book file path."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    Path getAddressBookFilePath();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets the user prefs\u0027 address book file path."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    void setAddressBookFilePath(Path addressBookFilePath);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "     * Replaces address book data with the data in {@code addressBook}."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    void setAddressBook(ReadOnlyAddressBook addressBook);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    /** Returns the AddressBook */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    ReadOnlyAddressBook getAddressBook();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns true if a person with the same identity as {@code person} exists in the address book."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    boolean hasPerson(Person person);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "     * Deletes the given person."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "     * The person must exist in the address book."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    void deletePerson(Person target);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "     * Adds the given person."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@code person} must not already exist in the address book."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    void addPerson(Person person);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "     * Replaces the given person {@code target} with {@code editedPerson}."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@code target} must exist in the address book."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    void setPerson(Person target, Person editedPerson);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    /** Returns an unmodifiable view of the filtered person list */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    ObservableList\u003cPerson\u003e getFilteredPersonList();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "     * Updates the filter of the filtered person list to filter by the given {@code predicate}."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws NullPointerException if {@code predicate} is null."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "     * Adds the given reminder."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "     * @param type Type of reminder - 0 for reminder and 1 for follow-up"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "     * @param days Number of days for the reminder"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    void addReminder(int type, String description, int days);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "     * Creates a String with all reminders and follow-ups for easy display."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    String outputReminders();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "     * Adds a given alias into the alias table."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "     * @param alias Alias name"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "     * @param aliasTo Alias value"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    void addAlias(String alias, String aliasTo);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "     * Removes a given alias from the alias table."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "     * @param alias Alias name"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "     * @return Returns true if alias exists in alias table and removed successfully, returns false otherwise."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "     */"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    boolean removeAlias(String alias);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "     * Apply a suitable alias to the input command text. A suitable alias is an alias that matches the regex"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "     * \"{alias}($|\\\\s).*\"."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "     * If multiple matches exists, this method chooses the longest matching alias."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "     * @param commandText Command for alias to be applied to."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "     * @return Command that alias has been applied to."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "     */"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    String applyAlias(String commandText);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ReignOfComputer": 12,
      "Wingedevil": 23,
      "-": 87
    }
  },
  {
    "path": "src/main/java/seedu/address/model/ModelManager.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.function.Predicate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.transformation.FilteredList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents the in-memory model of the address book data."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "public class ModelManager implements Model {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    private final AddressBook addressBook;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    private final UserPrefs userPrefs;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    private final FilteredList\u003cPerson\u003e filteredPersons;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "     * Initializes a ModelManager with the given addressBook and userPrefs."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        requireAllNonNull(addressBook, userPrefs);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        this.addressBook \u003d new AddressBook(addressBook);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        this.userPrefs \u003d new UserPrefs(userPrefs);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    public ModelManager() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        this(new AddressBook(), new UserPrefs());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(userPrefs);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        this.userPrefs.resetData(userPrefs);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    public ReadOnlyUserPrefs getUserPrefs() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        return userPrefs;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    public GuiSettings getGuiSettings() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        return userPrefs.getGuiSettings();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setGuiSettings(GuiSettings guiSettings) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(guiSettings);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        userPrefs.setGuiSettings(guiSettings);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    public Path getAddressBookFilePath() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        return userPrefs.getAddressBookFilePath();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setAddressBookFilePath(Path addressBookFilePath) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(addressBookFilePath);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        userPrefs.setAddressBookFilePath(addressBookFilePath);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setAddressBook(ReadOnlyAddressBook addressBook) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        this.addressBook.resetData(addressBook);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    public ReadOnlyAddressBook getAddressBook() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        return addressBook;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean hasPerson(Person person) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(person);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        return addressBook.hasPerson(person);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    public void deletePerson(Person target) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        addressBook.removePerson(target);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "    public void addPerson(Person person) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        addressBook.addPerson(person);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setPerson(Person target, Person editedPerson) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        requireAllNonNull(target, editedPerson);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        addressBook.setPerson(target, editedPerson);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@code versionedAddressBook}"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "    public ObservableList\u003cPerson\u003e getFilteredPersonList() {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        return filteredPersons;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(predicate);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "        filteredPersons.setPredicate(predicate);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    public void addReminder(int type, String description, int days) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        userPrefs.addReminder(type, description, days);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    public String outputReminders() {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        return userPrefs.outputReminders();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    public void addAlias(String alias, String aliasTo) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        userPrefs.addAlias(alias, aliasTo);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    public boolean removeAlias(String alias) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        return userPrefs.removeAlias(alias);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    public String applyAlias(String commandText) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        return userPrefs.applyAlias(commandText);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "        // short circuit if same object"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "        if (obj \u003d\u003d this) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "        // instanceof handles nulls"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!(obj instanceof ModelManager)) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "        // state check"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "        ModelManager other \u003d (ModelManager) obj;"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "        return addressBook.equals(other.addressBook)"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 userPrefs.equals(other.userPrefs)"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 filteredPersons.equals(other.filteredPersons);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ReignOfComputer": 10,
      "Wingedevil": 15,
      "-": 151
    }
  },
  {
    "path": "src/main/java/seedu/address/model/ReadOnlyUserPrefs.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " * Unmodifiable view of user prefs."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public interface ReadOnlyUserPrefs {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    GuiSettings getGuiSettings();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    Path getAddressBookFilePath();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    AliasTable getAliasTable();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    Reminder getReminders();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    LocalDate getLastUpdate();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ReignOfComputer": 5,
      "Wingedevil": 1,
      "-": 16
    }
  },
  {
    "path": "src/main/java/seedu/address/model/Reminder.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "package seedu.address.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "import java.util.Iterator;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": " * Reminder object with description and dates remaining"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "public class Reminder {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    private HashMap\u003cString, Integer\u003e reminders;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    private HashMap\u003cString, Integer\u003e followup;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "     * Initializes new Reminder object"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    public Reminder() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        reminders \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        followup \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    public static Reminder getDefaultReminders() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        Reminder def \u003d new Reminder();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        return def;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "     * Adds a new Reminder to VISIT"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    public Reminder addReminder(int type, String description, int days) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        requireNonNull(type);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        requireNonNull(description);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        requireNonNull(days);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        if (type \u003d\u003d 0) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "            reminders.put(description, days);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "            followup.put(description, days);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "     * Decrements the days a reminder has left"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    public void cascadeDay(int days) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        HashMap\u003cString, Integer\u003e cascadeReminders \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        HashMap\u003cString, Integer\u003e cascadeFollowups \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        Iterator it \u003d reminders.entrySet().iterator();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        while (it.hasNext()) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "            HashMap.Entry pair \u003d (HashMap.Entry) it.next();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "            String key \u003d pair.getKey().toString();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "            int value \u003d Integer.parseInt(pair.getValue().toString()) - days;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "            if (value \u003e\u003d 0) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "                cascadeReminders.put(key, value);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "            it.remove();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        reminders \u003d cascadeReminders;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        it \u003d followup.entrySet().iterator();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        while (it.hasNext()) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "            HashMap.Entry pair \u003d (HashMap.Entry) it.next();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "            String key \u003d pair.getKey().toString();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "            int value \u003d Integer.parseInt(pair.getValue().toString()) - days;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "            if (value \u003e\u003d 0) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "                cascadeFollowups.put(key, value);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "            it.remove();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        followup \u003d cascadeFollowups;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "     * Outputs the Reminders and Follow-Up to readable String"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    public String outputReminders() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        sb.append(\"Reminders:\\n\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        if (reminders.size() \u003c 1) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "            sb.append(\"No reminders found.\\n\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "            for (int i \u003d 0; i \u003c reminders.size(); i++) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "                Iterator it \u003d reminders.entrySet().iterator();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "                while (it.hasNext()) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "                    HashMap.Entry pair \u003d (HashMap.Entry) it.next();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "                    sb.append(pair.getKey() + \": for \" + pair.getValue() + \" days\\n\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "                }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "            }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        sb.append(\"\\nFollow-ups:\\n\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        if (followup.size() \u003c 1) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "            sb.append(\"No reminders found.\\n\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "            for (int i \u003d 0; i \u003c followup.size(); i++) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "                Iterator it \u003d followup.entrySet().iterator();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "                while (it.hasNext()) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "                    HashMap.Entry pair \u003d (HashMap.Entry) it.next();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "                    sb.append(pair.getKey() + \": in \" + pair.getValue() + \" days\\n\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "                }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "            }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        sb.append(\"\\nReminders : --hidden--\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        if (this \u003d\u003d o) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        if (!(o instanceof Reminder)) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        Reminder other \u003d (Reminder) o;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        return other.reminders.equals(this.reminders)"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "                \u0026\u0026 other.followup.equals(this.followup);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        return Objects.hash(reminders, followup);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "}"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "ReignOfComputer": 134
    }
  },
  {
    "path": "src/main/java/seedu/address/model/UserPrefs.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "import java.time.Period;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents User\u0027s preferences."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "public class UserPrefs implements ReadOnlyUserPrefs {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    private GuiSettings guiSettings \u003d new GuiSettings();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    private AliasTable aliasTable;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    private Reminder reminders;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    private LocalDate lastUpdate;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    private Path addressBookFilePath \u003d Paths.get(\"data\" , \"addressbook.json\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a {@code UserPrefs} with default values."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    public UserPrefs() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        aliasTable \u003d AliasTable.getDefaultAliasTable();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        reminders \u003d Reminder.getDefaultReminders();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        lastUpdate \u003d LocalDate.now();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    public UserPrefs(ReadOnlyUserPrefs userPrefs) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        this();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        resetData(userPrefs);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    public void resetData(ReadOnlyUserPrefs newUserPrefs) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(newUserPrefs);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        setGuiSettings(newUserPrefs.getGuiSettings());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        setAliasTable(newUserPrefs.getAliasTable());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        lastUpdate \u003d newUserPrefs.getLastUpdate();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        setReminders(newUserPrefs.getReminders());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    public AliasTable getAliasTable() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        return aliasTable;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    public void setAliasTable(AliasTable aliasTable) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        requireNonNull(aliasTable);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        this.aliasTable \u003d aliasTable;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    public Reminder getReminders() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        return reminders;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    public void setReminders(Reminder reminders) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        requireNonNull(reminders);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        this.reminders \u003d reminders;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        int dateDiff \u003d Period.between(LocalDate.now(), lastUpdate).getDays();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        if (dateDiff \u003c 0) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "            this.reminders.cascadeDay(Math.abs(dateDiff));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        lastUpdate \u003d LocalDate.now();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    public GuiSettings getGuiSettings() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        return guiSettings;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setGuiSettings(GuiSettings guiSettings) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(guiSettings);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        this.guiSettings \u003d guiSettings;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    public Path getAddressBookFilePath() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        return addressBookFilePath;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setAddressBookFilePath(Path addressBookFilePath) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(addressBookFilePath);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        this.addressBookFilePath \u003d addressBookFilePath;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!(other instanceof UserPrefs)) { //this handles null as well."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        UserPrefs o \u003d (UserPrefs) other;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        return guiSettings.equals(o.guiSettings)"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "                \u0026\u0026 addressBookFilePath.equals(o.addressBookFilePath)"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "                \u0026\u0026 aliasTable.equals(o.aliasTable)"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "                \u0026\u0026 reminders.equals(o.reminders)"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "                \u0026\u0026 lastUpdate.equals(o.lastUpdate);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        return Objects.hash(guiSettings, addressBookFilePath, aliasTable, reminders, lastUpdate);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "        sb.append(\"Gui Settings : \" + guiSettings);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "        sb.append(\"\\nLocal data file location : \" + addressBookFilePath);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        sb.append(\"\\nAlias table : \" + aliasTable);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        sb.append(\"\\nReminders table : \" + reminders);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        sb.append(\"\\nLast update : \" + lastUpdate);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    public boolean removeAlias(String alias) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        return aliasTable.removeAlias(alias);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    public void addAlias(String alias, String aliasTo) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        aliasTable.addAlias(alias, aliasTo);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    public String applyAlias(String commandText) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        return aliasTable.applyAlias(commandText);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    public void addReminder(int type, String description, int days) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        reminders.addReminder(type, description, days);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    public String outputReminders() {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        return reminders.outputReminders();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    public LocalDate getLastUpdate() {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        return lastUpdate;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ReignOfComputer": 38,
      "Wingedevil": 27,
      "-": 86
    }
  },
  {
    "path": "src/main/java/seedu/address/model/person/Person.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.model.person;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.tag.Tag;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents a Person in the address book."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " * Guarantees: details are present and not null, field values are validated, immutable."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "public class Person {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    // Identity fields"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Name name;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Phone phone;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Email email;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    // Data fields"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Address address;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private final VisitList visitList;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "     * Every field must be present and not null."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public Person(Name name, Phone phone, Email email, Address address, VisitList visitList, Set\u003cTag\u003e tags) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        requireAllNonNull(name, phone, email, address, tags);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        this.phone \u003d phone;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        this.email \u003d email;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        this.address \u003d address;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        this.visitList \u003d visitList;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        this.tags.addAll(tags);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    public Name getName() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    public Phone getPhone() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        return phone;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    public Email getEmail() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        return email;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    public Address getAddress() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        return address;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public VisitList getVisitList() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return visitList;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "     * if modification is attempted."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    public Set\u003cTag\u003e getTags() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        return Collections.unmodifiableSet(tags);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns true if both persons of the same name have at least one other identity field that is the same."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "     * This defines a weaker notion of equality between two persons."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isSamePerson(Person otherPerson) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        if (otherPerson \u003d\u003d this) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        return otherPerson !\u003d null"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 otherPerson.getName().equals(getName())"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 (otherPerson.getPhone().equals(getPhone()) || otherPerson.getEmail().equals(getEmail()));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns true if both persons have the same identity and data fields."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "     * This defines a stronger notion of equality between two persons."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!(other instanceof Person)) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        Person otherPerson \u003d (Person) other;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        return otherPerson.getName().equals(getName())"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 otherPerson.getPhone().equals(getPhone())"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 otherPerson.getEmail().equals(getEmail())"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 otherPerson.getAddress().equals(getAddress())"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 otherPerson.getTags().equals(getTags());"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        // use this method for custom fields hashing instead of implementing your own"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "        return Objects.hash(name, phone, email, address, tags);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        final StringBuilder builder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        builder.append(getName())"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "                .append(\" Phone: \")"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "                .append(getPhone())"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "                .append(\" Email: \")"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "                .append(getEmail())"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "                .append(\" Address: \")"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "                .append(getAddress())"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                .append(\" VisitList: \")"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                .append(getVisitList())"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "                .append(\" Tags: \");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        getTags().forEach(builder::append);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "        return builder.toString();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 119,
      "SQwQ": 9
    }
  },
  {
    "path": "src/main/java/seedu/address/model/person/VisitList.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "package seedu.address.model.person;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SQwQ"
        },
        "content": " * Represents a Person\u0027s List of records in the address book."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SQwQ"
        },
        "content": " *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SQwQ"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "public class VisitList {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public static final String MESSAGE_CONSTRAINTS \u003d \"Visit date should follow dd/mm/yyyy format\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public static final String VALIDATION_REGEX \u003d \"^(3[01]|[12][0-9]|0[1-9])/(1[0-2]|0[1-9])/[0-9]{4}$\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private ArrayList\u003cVisitReport\u003e records \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public VisitList(ArrayList\u003cVisitReport\u003e lst) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        //requireNonNull(lst);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        records \u003d lst;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Adds a new record to the visit list."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public VisitList addRecord(VisitReport report) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        this.records.add(report);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        Collections.sort(this.records);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public VisitReport getRecordByIndex(int id) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return records.get(id - 1);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public ArrayList\u003cVisitReport\u003e getRecords() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return this.records;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public ObservableList\u003cVisitReport\u003e getObservableRecords() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return FXCollections.observableArrayList(this.records);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        if (records.isEmpty()) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            return \"No past records\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            return \"Most Recent Visit: \" + records.get(0).toString();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Returns true if a given string is a valid tag name."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public static boolean isValidVisitDate(String test) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return test.matches(VALIDATION_REGEX);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Edits record from the list by index."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public VisitList editRecord(int reportIdx, VisitReport visitReport) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        this.records.set(reportIdx - 1, visitReport);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Deletes record from the list by index."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public VisitList deleteRecord(int id) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        this.records.remove(id - 1);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        if (!(other instanceof VisitList)) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        VisitList otherList \u003d (VisitList) other;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return records.equals(otherList.records);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return Objects.hash(records);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SQwQ": 102
    }
  },
  {
    "path": "src/main/java/seedu/address/model/person/VisitReport.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "package seedu.address.model.person;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import java.time.format.ResolverStyle;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SQwQ"
        },
        "content": " * Visit Report object with name, date, medication, diagnosis and remarks field."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SQwQ"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "public class VisitReport implements Comparable\u003cVisitReport\u003e {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public static final String MESSAGE_CONSTRAINTS \u003d \"Visit date should follow dd/mm/yyyy format\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public final String date;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private String medication;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private String diagnosis;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private String remarks;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private Name name;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public VisitReport(String value) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        requireNonNull(value);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        date \u003d value;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        name \u003d new Name(\"null\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return this.name.toString();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public String getMedication() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return medication;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public String getDiagnosis() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return diagnosis;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public String getRemarks() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return this.remarks;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Returns true if a given string is a valid date."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public static boolean isValidVisitDate(String test) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        //make sure month and day are valid and year is 2xxx"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        DateTimeFormatter dateFormatter \u003d"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                DateTimeFormatter.ofPattern(\"dd/MM/2uuu\").withResolverStyle(ResolverStyle.STRICT);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            LocalDate.parse(test, dateFormatter);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        if (!(other instanceof VisitReport)) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        VisitReport otherReport \u003d (VisitReport) other;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return date.equals(otherReport.date)"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                \u0026\u0026 name.equals(otherReport.name)"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                \u0026\u0026 medication.equals(otherReport.medication)"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                \u0026\u0026 diagnosis.equals(otherReport.diagnosis)"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                \u0026\u0026 remarks.equals(otherReport.remarks);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gachia"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public int compareTo(VisitReport otherReport) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        String[] reportDate \u003d this.date.split(\"/\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        String[] otherDate \u003d otherReport.date.split(\"/\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        int reportYear \u003d Integer.parseInt(reportDate[2]);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        int otherYear \u003d Integer.parseInt(otherDate[2]);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        int reportMth \u003d Integer.parseInt(reportDate[1]);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        int otherMth \u003d Integer.parseInt(otherDate[1]);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        int reportDay \u003d Integer.parseInt(reportDate[0]);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        int otherDay \u003d Integer.parseInt(otherDate[0]);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        if (reportYear !\u003d otherYear) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            return otherYear - reportYear;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        } else if (reportMth !\u003d otherMth) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            return otherMth - reportMth;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            return otherDay - reportDay;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return Objects.hash(name, date, medication, diagnosis, remarks);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void setName(Name name) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void setDetails(String prescription, String disease, String comment) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        this.medication \u003d prescription;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        this.diagnosis \u003d disease;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        this.remarks \u003d comment;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "SQwQ": 123,
      "gachia": 1
    }
  },
  {
    "path": "src/main/java/seedu/address/model/util/SampleDataUtil.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.model.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.AddressBook;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ReadOnlyAddressBook;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Address;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Email;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Name;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Phone;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import seedu.address.model.person.VisitList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import seedu.address.model.person.VisitReport;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.tag.Tag;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": " * Contains utility methods for populating {@code AddressBook} with sample data."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "public class SampleDataUtil {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public static final VisitList EMPTY_VISITATION_RECORD \u003d new VisitList(new ArrayList\u003cVisitReport\u003e());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    public static Person[] getSamplePersons() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        return new Person[] {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                    new Address(\"Blk 30 Geylang Street 29, #06-40\"), EMPTY_VISITATION_RECORD,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "                getTagSet(\"friends\")),"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                    new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"), EMPTY_VISITATION_RECORD,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "                getTagSet(\"colleagues\", \"friends\")),"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                    new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"), EMPTY_VISITATION_RECORD,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "                getTagSet(\"neighbours\")),"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                    new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"), EMPTY_VISITATION_RECORD,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "                getTagSet(\"family\")),"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                    new Address(\"Blk 47 Tampines Street 20, #17-35\"), EMPTY_VISITATION_RECORD,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "                getTagSet(\"classmates\")),"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                    new Address(\"Blk 45 Aljunied Street 85, #11-31\"), EMPTY_VISITATION_RECORD,"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "                getTagSet(\"colleagues\"))"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    public static ReadOnlyAddressBook getSampleAddressBook() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        AddressBook sampleAb \u003d new AddressBook();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        for (Person samplePerson : getSamplePersons()) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "            sampleAb.addPerson(samplePerson);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        return sampleAb;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns a tag set containing the list of strings given."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    public static Set\u003cTag\u003e getTagSet(String... strings) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        return Arrays.stream(strings)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "                .map(Tag::new)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "                .collect(Collectors.toSet());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 54,
      "SQwQ": 11
    }
  },
  {
    "path": "src/main/java/seedu/address/storage/JsonAdaptedPerson.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonCreator;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonProperty;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.exceptions.IllegalValueException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Address;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Email;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Name;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Phone;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import seedu.address.model.person.VisitList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import seedu.address.model.person.VisitReport;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.tag.Tag;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": " * Jackson-friendly version of {@link Person}."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "class JsonAdaptedPerson {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    private final String name;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    private final String phone;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    private final String email;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    private final String address;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private final List\u003cJsonAdaptedVisit\u003e visitList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "     * Constructs a {@code JsonAdaptedPerson} with the given person details."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    @JsonCreator"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            @JsonProperty(\"visitList\") List\u003cJsonAdaptedVisit\u003e visitList,"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                             @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        this.phone \u003d phone;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        this.email \u003d email;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        this.address \u003d address;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        if (visitList !\u003d null) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            this.visitList.addAll(visitList);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        if (tagged !\u003d null) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            this.tagged.addAll(tagged);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "     * Converts a given {@code Person} into this class for Jackson use."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    public JsonAdaptedPerson(Person source) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        name \u003d source.getName().fullName;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        phone \u003d source.getPhone().value;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        email \u003d source.getEmail().value;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        address \u003d source.getAddress().value;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        visitList.addAll(source.getVisitList().getRecords().stream()"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                .map(JsonAdaptedVisit::new)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                .collect(Collectors.toList()));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        tagged.addAll(source.getTags().stream()"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "                .map(JsonAdaptedTag::new)"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "                .collect(Collectors.toList()));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws IllegalValueException if there were any data constraints violated in the adapted person."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    public Person toModelType() throws IllegalValueException {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        for (JsonAdaptedTag tag : tagged) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "            personTags.add(tag.toModelType());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        final ArrayList\u003cVisitReport\u003e personVisits \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        for (JsonAdaptedVisit visit : visitList) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            personVisits.add(visit.toModelType());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        if (name \u003d\u003d null) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!Name.isValidName(name)) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        final Name modelName \u003d new Name(name);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "        if (phone \u003d\u003d null) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!Phone.isValidPhone(phone)) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        final Phone modelPhone \u003d new Phone(phone);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        if (email \u003d\u003d null) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!Email.isValidEmail(email)) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        final Email modelEmail \u003d new Email(email);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        if (address \u003d\u003d null) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!Address.isValidAddress(address)) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "        final Address modelAddress \u003d new Address(address);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        final VisitList modelVisitList \u003d new VisitList(personVisits);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return new Person(modelName, modelPhone, modelEmail, modelAddress, modelVisitList, modelTags);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 107,
      "SQwQ": 19
    }
  },
  {
    "path": "src/main/java/seedu/address/storage/JsonAdaptedVisit.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "package seedu.address.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonCreator;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonProperty;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import seedu.address.commons.exceptions.IllegalValueException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import seedu.address.model.person.Name;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import seedu.address.model.person.VisitReport;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SQwQ"
        },
        "content": " * Jackson-friendly version of {@link VisitReport}."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SQwQ"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "class JsonAdaptedVisit {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private final String visitDate;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private final String name;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private final String medicine;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private final String diagnosis;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private final String remarks;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Constructs a {@code JsonAdaptedVisit} with the given {@code name} and  {@code date}."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @JsonCreator"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public JsonAdaptedVisit(@JsonProperty(\"name\") String name, @JsonProperty(\"date\") String date) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        this.visitDate \u003d date;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        this.medicine \u003d \"placeholder\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        this.diagnosis \u003d \"placeholder\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        this.remarks \u003d \"placeholder\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Converts a given {@code VisitReport} into this class for Jackson use."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public JsonAdaptedVisit(VisitReport source) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        visitDate \u003d source.date;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        name \u003d source.getName();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        medicine \u003d source.getMedication();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        diagnosis \u003d source.getDiagnosis();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        remarks \u003d source.getRemarks();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @JsonValue"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public String getVisitationRecord() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return visitDate;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Converts this Jackson-friendly adapted VisitReport object into the model\u0027s {@code VisitReport} object."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @throws IllegalValueException if there were any data constraints violated in the adapted tag."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public VisitReport toModelType() throws IllegalValueException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        if (!VisitReport.isValidVisitDate(visitDate)) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            throw new IllegalValueException(VisitReport.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        VisitReport report \u003d new VisitReport(visitDate);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        report.setName(new Name(name));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        report.setDetails(medicine, diagnosis, remarks);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return report;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SQwQ": 67
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/HelpWindow.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.input.Clipboard;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.input.ClipboardContent;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " * Controller for a help page"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "public class HelpWindow extends UiPart\u003cStage\u003e {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gachia"
        },
        "content": "    public static final String USERGUIDE_URL \u003d \"https://ay1920s1-cs2103t-f12-2.github.io/main/UserGuide.html\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String FXML \u003d \"HelpWindow.fxml\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    private Button copyButton;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    private Label helpMessage;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a new HelpWindow."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param root Stage to use as the root of the HelpWindow."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    public HelpWindow(Stage root) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        super(FXML, root);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        helpMessage.setText(HELP_MESSAGE);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a new HelpWindow."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    public HelpWindow() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        this(new Stage());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "     * Shows the help window."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws IllegalStateException"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cul\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "     *     \u003cli\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "     *         if this method is called on a thread other than the JavaFX Application Thread."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "     *     \u003c/li\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "     *     \u003cli\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "     *         if this method is called during animation or layout processing."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "     *     \u003c/li\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "     *     \u003cli\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "     *         if this method is called on the primary stage."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "     *     \u003c/li\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "     *     \u003cli\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "     *         if {@code dialogStage} is already showing."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "     *     \u003c/li\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003c/ul\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    public void show() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.fine(\"Showing help page about the application.\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        getRoot().show();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        getRoot().centerOnScreen();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns true if the help window is currently being shown."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isShowing() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        return getRoot().isShowing();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "     * Hides the help window."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    public void hide() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        getRoot().hide();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "     * Focuses on the help window."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    public void focus() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        getRoot().requestFocus();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "     * Copies the URL to the user guide to the clipboard."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    private void copyUrl() {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        final ClipboardContent url \u003d new ClipboardContent();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        url.putString(USERGUIDE_URL);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        clipboard.setContent(url);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 101,
      "gachia": 1
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/MainWindow.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.event.ActionEvent;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.MenuItem;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.TextInputControl;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.input.KeyCombination;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.input.KeyEvent;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.StackPane;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.Logic;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": " * The Main Window. Provides the basic application layout containing"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": " * a menu bar and space where other JavaFX elements can be placed."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "public class MainWindow extends UiPart\u003cStage\u003e {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String FXML \u003d \"MainWindow.fxml\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Logger logger \u003d LogsCenter.getLogger(getClass());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    private Stage primaryStage;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    private Logic logic;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    // Independent Ui parts residing in this Ui container"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    private PersonListPanel personListPanel;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    private ResultDisplay resultDisplay;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    private HelpWindow helpWindow;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    private MotdWindow motdWindow;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private VisitRecordWindow visitWindow;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private VisitListPanel visitListPanel;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gachia"
        },
        "content": "    private ProfileWindow profilePanel;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    private StackPane commandBoxPlaceholder;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    private MenuItem helpMenuItem;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    private StackPane personListPanelPlaceholder;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    private StackPane resultDisplayPlaceholder;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    private StackPane statusbarPlaceholder;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    public MainWindow(Stage primaryStage, Logic logic) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        super(FXML, primaryStage);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        // Set dependencies"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        this.primaryStage \u003d primaryStage;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        this.logic \u003d logic;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        // Configure the UI"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        setWindowDefaultSize(logic.getGuiSettings());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        setAccelerators();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        helpWindow \u003d new HelpWindow();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        visitWindow \u003d new VisitRecordWindow(windowEvent -\u003e {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            resultDisplay.setFeedbackToUser(visitWindow.getMessage());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        });"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        visitListPanel \u003d new VisitListPanel();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gachia"
        },
        "content": "        profilePanel \u003d new ProfileWindow();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    public Stage getPrimaryStage() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        return primaryStage;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    private void setAccelerators() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets the accelerator of a MenuItem."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param keyCombination the KeyCombination value of the accelerator"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        menuItem.setAccelerator(keyCombination);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "         * TODO: the code below can be removed once the bug reported here"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "         * https://bugs.openjdk.java.net/browse/JDK-8131666"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "         * is fixed in later version of SDK."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "         *"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "         * According to the bug report, TextInputControl (TextField, TextArea) will"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "         * consume function-key events. Because CommandBox contains a TextField, and"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "         * not work when the focus is in them because the key event is consumed by"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "         * the TextInputControl(s)."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "         *"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "         * For now, we add following event filter to capture such key events and open"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "         * help window purposely so to support accelerators even when focus is"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "         * in CommandBox or ResultDisplay."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "         */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "                menuItem.getOnAction().handle(new ActionEvent());"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "                event.consume();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "     * Fills up all the placeholders of this window."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "    void fillInnerParts() {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "        resultDisplay \u003d new ResultDisplay();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "        CommandBox commandBox \u003d new CommandBox(this::executeCommand);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets the default size based on {@code guiSettings}."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "    private void setWindowDefaultSize(GuiSettings guiSettings) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "        primaryStage.setHeight(guiSettings.getWindowHeight());"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "        primaryStage.setWidth(guiSettings.getWindowWidth());"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "        if (guiSettings.getWindowCoordinates() !\u003d null) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "            primaryStage.setX(guiSettings.getWindowCoordinates().getX());"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "            primaryStage.setY(guiSettings.getWindowCoordinates().getY());"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "     * Opens the help window or focuses on it if it\u0027s already opened."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "    public void handleHelp() {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!helpWindow.isShowing()) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "            helpWindow.show();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "            helpWindow.focus();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "     * Opens the motd window or focuses on it if it\u0027s already opened."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "     */"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    public void handleMotd() {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        motdWindow \u003d new MotdWindow(logic);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        if (!motdWindow.isShowing()) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "            motdWindow.show();"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "            motdWindow.focus();"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "    void show() {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "        primaryStage.show();"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "     * Closes the application."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "    private void handleExit() {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "                (int) primaryStage.getX(), (int) primaryStage.getY());"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "        logic.setGuiSettings(guiSettings);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "        helpWindow.hide();"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        visitWindow.hide();"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        visitListPanel.hide();"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "        profilePanel.hide();"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "        primaryStage.hide();"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "     * Opens the profile panel or focuses on it if it\u0027s already opened."
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "    public void handleProfilePanel() {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "        if (!profilePanel.isShowing()) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "            profilePanel.show();"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "            profilePanel.focus();"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Opens the visit form or focuses on it if it\u0027s already opened."
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void handleShowVisitForm() {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        if (!visitWindow.isShowing()) {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            visitWindow.show();"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            visitWindow.focus();"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Opens the visit form or focuses on it if it\u0027s already opened."
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void handleShowVisitList() {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        if (!visitListPanel.isShowing()) {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            visitListPanel.show();"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            visitListPanel.focus();"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "    public PersonListPanel getPersonListPanel() {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "        return personListPanel;"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "     * Executes the command and returns the result."
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see seedu.address.logic.Logic#execute(String)"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "            CommandResult commandResult \u003d logic.execute(commandText);"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.info(\"Result: \" + commandResult.getFeedbackToUser());"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "            if (commandResult.isShowHelp()) {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "                handleHelp();"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "            if (commandResult.isShowMotd()) {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "                handleMotd();"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "            }"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            if (commandResult.isAddVisit()) {"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                visitWindow.setReportInfo(commandResult.getIdx(), commandResult.getDate(), logic);"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                handleShowVisitForm();"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            if (commandResult.isEditVisit()) {"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                visitWindow.setOldReportInfo(commandResult.getIdx(), commandResult.getReportIdx(),"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                        commandResult.getOldReport(), logic);"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                if (visitListPanel.isShowing()) {"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                    visitListPanel.hide();"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                }"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                handleShowVisitForm();"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            if (commandResult.isShowVisitList()) {"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                visitListPanel.setup(commandResult.getObservableVisitList());"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                handleShowVisitList();"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "            if (commandResult.isShowProfile()) {"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                profilePanel.setup(commandResult.getProfilePerson());"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                handleProfilePanel();"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "            }"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "            if (commandResult.isExit()) {"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "                handleExit();"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "            return commandResult;"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (CommandException | ParseException e) {"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.info(\"Invalid command: \" + commandText);"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "            resultDisplay.setFeedbackToUser(e.getMessage());"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Q-gabe": 19,
      "ReignOfComputer": 18,
      "-": 190,
      "SQwQ": 51,
      "gachia": 2
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/MotdWindow.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "import seedu.address.logic.Logic;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": " * Controller for a motd page"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "public class MotdWindow extends UiPart\u003cStage\u003e {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    private static final Logger logger \u003d LogsCenter.getLogger(MotdWindow.class);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    private static final String FXML \u003d \"MotdWindow.fxml\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    private Logic logic;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    private Label motdMessage;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "     * Creates a new MotdWindow."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "     * @param root Stage to use as the root of the MotdWindow."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    public MotdWindow(Stage root, Logic logic) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        super(FXML, root);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        this.logic \u003d logic;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        String reminders \u003d logic.outputReminders();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        motdMessage.setText(reminders);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "     * Creates a new MotdWindow."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    public MotdWindow(Logic logic) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        this(new Stage(), logic);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "     * Shows the motd window."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "     * @throws IllegalStateException"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "     * \u003cul\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "     *     \u003cli\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "     *         if this method is called on a thread other than the JavaFX Application Thread."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "     *     \u003c/li\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "     *     \u003cli\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "     *         if this method is called during animation or layout processing."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "     *     \u003c/li\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "     *     \u003cli\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "     *         if this method is called on the primary stage."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "     *     \u003c/li\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "     *     \u003cli\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "     *         if {@code dialogStage} is already showing."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "     *     \u003c/li\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "     * \u003c/ul\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    public void show() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        logger.fine(\"Showing motd.\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        getRoot().show();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        getRoot().centerOnScreen();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "     * Returns true if the motd window is currently being shown."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    public boolean isShowing() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        return getRoot().isShowing();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "     * Hides the motd window."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    public void hide() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        getRoot().hide();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "     * Focuses on the motd window."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    public void focus() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        getRoot().requestFocus();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ReignOfComputer": 88
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/PersonCard.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Comparator;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.FlowPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " * An UI component that displays information of a {@code Person}."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "public class PersonCard extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String FXML \u003d \"PersonListCard.fxml\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "     * or an exception will be thrown by JavaFX during runtime."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    public final Person person;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    private HBox cardPane;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    private Label name;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    private Label id;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    private Label phone;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    private Label address;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    private Label email;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    private FlowPane tags;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private Label visitList;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    public PersonCard(Person person, int displayedIndex) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        this.person \u003d person;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        id.setText(displayedIndex + \". \");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        name.setText(person.getName().fullName);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        phone.setText(person.getPhone().value);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        address.setText(person.getAddress().value);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        email.setText(person.getEmail().value);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        visitList.setText(person.getVisitList().toString());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        person.getTags().stream()"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "                .sorted(Comparator.comparing(tag -\u003e tag.tagName))"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        // short circuit if same object"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        // instanceof handles nulls"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!(other instanceof PersonCard)) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        // state check"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        PersonCard card \u003d (PersonCard) other;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        return id.getText().equals(card.id.getText())"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 person.equals(card.person);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 74,
      "SQwQ": 3
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/PersonListPanel.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.ListCell;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.ListView;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " * Panel containing the list of persons."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "public class PersonListPanel extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String FXML \u003d \"PersonListPanel.fxml\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    private ListView\u003cPerson\u003e personListView;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    public PersonListPanel(ObservableList\u003cPerson\u003e personList) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        personListView.setItems(personList);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        personListView.setCellFactory(listView -\u003e new PersonListViewCell());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    class PersonListViewCell extends ListCell\u003cPerson\u003e {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        protected void updateItem(Person person, boolean empty) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "            super.updateItem(person, empty);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            if (empty || person \u003d\u003d null) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "                setGraphic(null);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "                setText(null);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "                setGraphic(new PersonCard(person, getIndex() + 1).getRoot());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 46,
      "SQwQ": 1
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/ProfileWindow.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "import javafx.scene.control.TextArea;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "import javafx.scene.input.KeyCode;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "import javafx.scene.input.KeyEvent;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "import javafx.scene.input.MouseEvent;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "import seedu.address.model.person.Address;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "import seedu.address.model.person.Email;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "import seedu.address.model.person.Name;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "import seedu.address.model.person.Phone;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "import seedu.address.model.tag.Tag;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": " * Panel containing detailed information of the specified Person including"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": " * the usual details on PersonCard, and also associated Visit information."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gachia"
        },
        "content": "public class ProfileWindow extends UiPart\u003cStage\u003e {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gachia"
        },
        "content": "    private static final String FXML \u003d \"ProfileWindow.fxml\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "    private int target;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "    private TextArea nameField;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "    private TextArea tagField;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "    private TextArea phoneField;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "    private TextArea emailField;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "    private TextArea addressField;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "    private TextArea visitField;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gachia"
        },
        "content": "    public ProfileWindow(Stage root) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "        super(FXML, root);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "     * Creates a new ProfilePanel."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gachia"
        },
        "content": "    public ProfileWindow() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "        this(new Stage());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gachia"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gachia"
        },
        "content": "         * Using default window instead."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "        this.getRoot().initStyle(StageStyle.UTILITY);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gachia"
        },
        "content": "         */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "     * @param person"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "    public void setup(Person person) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "        nameField.setText(stringifyName(person.getName()));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "        tagField.setText(stringifyTags(person.getTags()));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "        phoneField.setText(stringifyPhone(person.getPhone()));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "        emailField.setText(stringifyEmail(person.getEmail()));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "        addressField.setText(stringifyAddress(person.getAddress()));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "        // TODO: Implement the displaying of Visit information neatly"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "        //visitField.setText(person.getVisitList());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "     *"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "     * @param name"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "    private String stringifyName(Name name) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "        return name.fullName;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "     *"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "     * @param tagSet"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "    private String stringifyTags(Set\u003cTag\u003e tagSet) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "        if (tagSet.size() \u003e 0) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "            for (Tag tag : tagSet) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                sb.append(tag.tagName);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                sb.append(\"; \");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "            }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "     *"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "     * @param phone"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "    private String stringifyPhone(Phone phone) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "        return phone.value;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "     *"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "     * @param email"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "    private String stringifyEmail(Email email) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "        return email.value;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "     *"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "     * @param address"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "    private String stringifyAddress(Address address) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "        return address.value;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "    // private String stringify"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "     * Shows the Profile Panel."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "     * @throws IllegalStateException"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "     * \u003cul\u003e"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "     *     \u003cli\u003e"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "     *         if this method is called on a thread other than the JavaFX Application Thread."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "     *     \u003c/li\u003e"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "     *     \u003cli\u003e"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "     *         if this method is called during animation or layout processing."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "     *     \u003c/li\u003e"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "     *     \u003cli\u003e"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "     *         if this method is called on the primary stage."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "     *     \u003c/li\u003e"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "     *     \u003cli\u003e"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "     *         if {@code dialogStage} is already showing."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "     *     \u003c/li\u003e"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "     * \u003c/ul\u003e"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "    public void show() {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "        getRoot().show();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "        getRoot().centerOnScreen();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "        getRoot().addEventHandler(KeyEvent.KEY_RELEASED, (KeyEvent event) -\u003e {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "            if (KeyCode.ESCAPE \u003d\u003d event.getCode()) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                getRoot().hide();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "            }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "        );"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "     * Returns true if the Profile panel is currently being shown."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "    public boolean isShowing() {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "        return getRoot().isShowing();"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "     * Hides the Profile panel."
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "    public void hide() {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "        getRoot().hide();"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "     * Focuses on the Profile panel."
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "    public void focus() {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "        getRoot().requestFocus();"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "    void mouseEnterExit(MouseEvent e) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "        Label exitLabel \u003d (Label) e.getSource();"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "        exitLabel.setUnderline(true);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "    void mouseLeaveExit(MouseEvent e) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "        Label exitLabel \u003d (Label) e.getSource();"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "        exitLabel.setUnderline(false);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "    void mouseClickExit(MouseEvent e) {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "        getRoot().hide();"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Q-gabe": 192,
      "gachia": 7
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/UiManager.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.Alert;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.Alert.AlertType;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.MainApp;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.util.StringUtil;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.Logic;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": " * The manager of the UI component."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "public class UiManager implements Ui {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gachia"
        },
        "content": "    private static final String ICON_APPLICATION \u003d \"/images/visitWindowIcon.png\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    private Logic logic;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    private MainWindow mainWindow;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    public UiManager(Logic logic) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        this.logic \u003d logic;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    public void start(Stage primaryStage) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.info(\"Starting UI...\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        //Set the application icon."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        primaryStage.getIcons().add(getImage(ICON_APPLICATION));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "            mainWindow \u003d new MainWindow(primaryStage, logic);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "            mainWindow.show(); //This should be called before creating other UI parts"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            mainWindow.fillInnerParts();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (Throwable e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.severe(StringUtil.getDetails(e));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    private Image getImage(String imagePath) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        return new Image(MainApp.class.getResourceAsStream(imagePath));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "     * Shows an alert dialog on {@code owner} with the given parameters."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "     * This method only returns after the user has closed the alert dialog."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "                                               String contentText) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        final Alert alert \u003d new Alert(type);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        alert.initOwner(owner);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        alert.setTitle(title);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        alert.setHeaderText(headerText);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        alert.setContentText(contentText);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        alert.showAndWait();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "     * Shows an error alert dialog with {@code title} and error message, {@code e},"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "     * and exits the application after the user has closed the alert dialog."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        Platform.exit();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        System.exit(1);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 85,
      "gachia": 1
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/VisitCard.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import javafx.scene.layout.FlowPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import seedu.address.model.person.VisitReport;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SQwQ"
        },
        "content": " * An UI component that displays information of a {@code Person}."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SQwQ"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "public class VisitCard extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private static final String FXML \u003d \"VisitListCard.fxml\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * or an exception will be thrown by JavaFX during runtime."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public final VisitReport report;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private HBox visitCardPane;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private Label id;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private Label name;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private Label date;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private Label remarks;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private FlowPane tags;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public VisitCard(VisitReport report, int displayedIndex) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        this.report \u003d report;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        id.setText(displayedIndex + \". \");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        name.setText(report.getName());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        date.setText(report.date);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        remarks.setText(report.getRemarks());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        // short circuit if same object"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        // instanceof handles nulls"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        if (!(other instanceof VisitCard)) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        // state check"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        VisitCard card \u003d (VisitCard) other;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return id.getText().equals(card.id.getText())"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                \u0026\u0026 report.equals(card.report);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SQwQ": 66
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/VisitListPanel.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import javafx.scene.control.ListCell;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import javafx.scene.control.ListView;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import seedu.address.model.person.VisitReport;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SQwQ"
        },
        "content": " * Panel containing the list of persons."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SQwQ"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "public class VisitListPanel extends UiPart\u003cStage\u003e {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private static final String FXML \u003d \"VisitListPanel.fxml\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private ListView\u003cVisitReport\u003e visitListView;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public VisitListPanel(Stage root) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        super(FXML, root);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        setup(FXCollections.observableArrayList());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Creates a new HelpWindow."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public VisitListPanel() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        this(new Stage());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void setup(ObservableList\u003cVisitReport\u003e visitList) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        visitListView.setItems(visitList);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        visitListView.setCellFactory(listView -\u003e new VisitListViewCell());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    class VisitListViewCell extends ListCell\u003cVisitReport\u003e {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        protected void updateItem(VisitReport report, boolean empty) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            super.updateItem(report, empty);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            if (empty || report \u003d\u003d null) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                setGraphic(null);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                setText(null);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                setGraphic(new VisitCard(report, getIndex() + 1).getRoot());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Shows the help window."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @throws IllegalStateException"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * \u003cul\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *     \u003cli\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *         if this method is called on a thread other than the JavaFX Application Thread."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *     \u003c/li\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *     \u003cli\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *         if this method is called during animation or layout processing."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *     \u003c/li\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *     \u003cli\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *         if this method is called on the primary stage."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *     \u003c/li\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *     \u003cli\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *         if {@code dialogStage} is already showing."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *     \u003c/li\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * \u003c/ul\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void show() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        logger.fine(\"Showing report form.\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        getRoot().show();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        getRoot().setAlwaysOnTop(true);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        getRoot().centerOnScreen();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Returns true if the help window is currently being shown."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public boolean isShowing() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return getRoot().isShowing();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Hides the help window."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void hide() {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        getRoot().hide();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Focuses on the help window."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void focus() {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        getRoot().requestFocus();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SQwQ": 107
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/VisitRecordWindow.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import javafx.event.ActionEvent;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import javafx.event.EventHandler;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import javafx.scene.control.TextArea;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import javafx.scene.input.KeyCombination;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import javafx.stage.WindowEvent;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import seedu.address.logic.Logic;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import seedu.address.logic.commands.SaveVisitCommand;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import seedu.address.model.person.VisitReport;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "/**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SQwQ"
        },
        "content": " * Creates a new Form for user to enter visitation details."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SQwQ"
        },
        "content": " *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SQwQ"
        },
        "content": " */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "public class VisitRecordWindow extends UiPart\u003cStage\u003e {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private static final String FXML \u003d \"VisitRecordForm.fxml\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private static final int INVALID_REPORT_INDEX \u003d -1;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private TextArea medicine;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private TextArea diagnosis;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private TextArea remarks;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private Button saveButton;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private int reportIdx;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private String date;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private String msg \u003d \"\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private Logic logic;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Creates a new VisitRecordWindow."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param root Stage to use as the root of the VisitRecordWindow."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public VisitRecordWindow(Stage root, EventHandler\u003cWindowEvent\u003e e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        super(FXML, root);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        root.setOnHidden(e);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        setup();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Creates a new VisitRecordWindow."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public VisitRecordWindow(EventHandler\u003cWindowEvent\u003e e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        this(new Stage(), e);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Shows the help window."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @throws IllegalStateException"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * \u003cul\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *     \u003cli\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *         if this method is called on a thread other than the JavaFX Application Thread."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *     \u003c/li\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *     \u003cli\u003e"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *         if this method is called during animation or layout processing."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *     \u003c/li\u003e"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *     \u003cli\u003e"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *         if this method is called on the primary stage."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *     \u003c/li\u003e"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *     \u003cli\u003e"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *         if {@code dialogStage} is already showing."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *     \u003c/li\u003e"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * \u003c/ul\u003e"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void show() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gachia"
        },
        "content": "        logger.fine(\"Showing Visit Record Window.\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        getRoot().show();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        getRoot().centerOnScreen();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Returns true if the help window is currently being shown."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public boolean isShowing() {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return getRoot().isShowing();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Hides the help window."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void hide() {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        getRoot().hide();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Focuses on the help window."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void focus() {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        getRoot().requestFocus();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Saves report and closes window"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    protected void saveReport(ActionEvent event) throws CommandException {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        SaveVisitCommand save \u003d new SaveVisitCommand(index, reportIdx, date, medicine.getText(),"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                    diagnosis.getText(), remarks.getText());"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        CommandResult commandResult \u003d logic.execute(save);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        this.msg \u003d commandResult.getFeedbackToUser();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        medicine.clear();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        diagnosis.clear();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        remarks.clear();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        this.hide();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void setReportInfo(int idx, String date, Logic logic) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        this.index \u003d idx;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        this.reportIdx \u003d INVALID_REPORT_INDEX;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        this.logic \u003d logic;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void setOldReportInfo(int idx, int reportIdx, VisitReport report, Logic logic) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        this.index \u003d idx;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        this.reportIdx \u003d reportIdx;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        this.date \u003d report.date;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        this.logic \u003d logic;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        medicine.setText(report.getMedication());"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        diagnosis.setText(report.getDiagnosis());"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        remarks.setText(report.getRemarks());"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void setup() {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        setSaveAccelerator(saveButton);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private void setSaveAccelerator(Button button) throws IllegalArgumentException {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        if (button \u003d\u003d null) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            System.out.println(\"Button null!!\");"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        Scene scene \u003d button.getScene();"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        if (scene \u003d\u003d null) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            throw new IllegalArgumentException(\"setSaveAccelerator must be called\""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                    + \"when a button is attached to a scene\");"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        scene.getAccelerators().put("
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                KeyCombination.valueOf(\"F2\"),"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                new Runnable() {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                    @FXML public void run() {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                        button.fire();"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        );"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return this.msg;"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "SQwQ": 182,
      "gachia": 1
    }
  },
  {
    "path": "src/main/resources/view/CommandBox.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gachia"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gachia"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gachia"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.StackPane?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gachia"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gachia"
        },
        "content": "\u003cStackPane styleClass\u003d\"stack-pane\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gachia"
        },
        "content": "  \u003cTextField fx:id\u003d\"commandTextField\" onAction\u003d\"#handleCommandEntered\" prefHeight\u003d\"25.0\" prefWidth\u003d\"205.0\" promptText\u003d\"How may I help you?\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gachia"
        },
        "content": "      \u003cfont\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gachia"
        },
        "content": "         \u003cFont name\u003d\"Gill Sans MT Italic\" size\u003d\"13.0\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gachia"
        },
        "content": "      \u003c/font\u003e\u003c/TextField\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gachia"
        },
        "content": "   \u003cButton mnemonicParsing\u003d\"false\" onMouseClicked\u003d\"#handleCommandEntered\" text\u003d\"Send\" StackPane.alignment\u003d\"CENTER_RIGHT\"\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gachia"
        },
        "content": "      \u003cStackPane.margin\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gachia"
        },
        "content": "         \u003cInsets bottom\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gachia"
        },
        "content": "      \u003c/StackPane.margin\u003e\u003c/Button\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gachia"
        },
        "content": "   \u003cLabel prefHeight\u003d\"24.0\" prefWidth\u003d\"12.0\" text\u003d\"\u0026gt;\" StackPane.alignment\u003d\"CENTER_LEFT\"\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gachia"
        },
        "content": "      \u003cStackPane.margin\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gachia"
        },
        "content": "         \u003cInsets left\u003d\"2.0\" /\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gachia"
        },
        "content": "      \u003c/StackPane.margin\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gachia"
        },
        "content": "   \u003c/Label\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/StackPane\u003e"
      }
    ],
    "authorContributionMap": {
      "-": 6,
      "gachia": 18
    }
  },
  {
    "path": "src/main/resources/view/DarkTheme.css",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": ".background {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gachia"
        },
        "content": "    -fx-background-color: derive(#121924, 20%);"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ".label {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-size: 11pt;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gachia"
        },
        "content": "    -fx-font-family: \"Gill Sans MT\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-text-fill: #555555;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-opacity: 0.9;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ".label-bright {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-size: 11pt;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gachia"
        },
        "content": "    -fx-font-family: \"Gill Sans MT\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-text-fill: white;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-opacity: 1;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ".label-bright-footnote {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "    -fx-font-size: 8pt;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gachia"
        },
        "content": "    -fx-font-family: \"Gill Sans MT\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-text-fill: white;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-opacity: 1;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ".label-bright-header {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "    -fx-font-size: 16pt;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gachia"
        },
        "content": "    -fx-font-family: \"Gill Sans MT\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "    -fx-text-fill: white;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "    -fx-opacity: 1;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ".label-header {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gachia"
        },
        "content": "    -fx-font-size: 18pt;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gachia"
        },
        "content": "    -fx-font-family: \"Gill Sans MT\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gachia"
        },
        "content": "    -fx-font-style: italic;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gachia"
        },
        "content": "    -fx-text-fill: #53aaf1;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-opacity: 1;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gachia"
        },
        "content": "    -fx-background-color: derive(#121924, 20%);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gachia"
        },
        "content": "    -fx-border-color: derive(#5a5a5a, 10%);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gachia"
        },
        "content": "    -fx-border-width: 0 0 2 0;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ".text-field {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-size: 12pt;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gachia"
        },
        "content": "    -fx-font-family: \"Gill Sans MT\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ".text-field-visit {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "    -fx-font-size: 10pt;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gachia"
        },
        "content": "    -fx-font-family: \"Gill Sans MT\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ".tab-pane {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-padding: 0 0 0 1;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ".tab-pane .tab-header-area {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-padding: 0 0 0 0;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-min-height: 0;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-max-height: 0;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ".table-view {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-base: #1d1d1d;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-control-inner-background: #1d1d1d;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: #1d1d1d;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-table-cell-border-color: transparent;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-table-header-border-color: transparent;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-padding: 5;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ".table-view .column-header-background {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: transparent;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ".table-view .column-header, .table-view .filler {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-size: 35;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-width: 0 0 1 0;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: transparent;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-color:"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        transparent"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        transparent"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        derive(-fx-base, 80%)"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        transparent;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-insets: 0 10 1 0;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ".table-view .column-header .label {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-size: 20pt;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gachia"
        },
        "content": "    -fx-font-family: \"Gill Sans MT\";"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-text-fill: white;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-alignment: center-left;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-opacity: 1;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ".table-view:focused .table-row-cell:filled:focused:selected {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: -fx-focus-color;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ".split-pane:horizontal .split-pane-divider {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: derive(#1d1d1d, 20%);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-color: transparent transparent transparent #4d4d4d;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ".split-pane {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-radius: 1;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-width: 1;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: derive(#1d1d1d, 20%);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ".list-view {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-insets: 0;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-padding: 0;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "gachia"
        },
        "content": "    -fx-background-color: derive(#121924, 20%);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": ".list-cell {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-label-padding: 0 0 0 0;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-graphic-text-gap : 0;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-padding: 0 0 0 0;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "gachia"
        },
        "content": "    -fx-background-color: derive(#121924, 20%);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": ".list-cell:filled:even {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "gachia"
        },
        "content": "    -fx-background-color: #121924;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": ".list-cell:filled:odd {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "gachia"
        },
        "content": "    -fx-background-color: #2e3f64;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": ".list-cell:filled:selected {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: #424d5f;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": ".list-cell:filled:selected #cardPane {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-color: #3e7b91;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-width: 1;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "gachia"
        },
        "content": ".list-cell:filled:selected #visitCardPane {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "gachia"
        },
        "content": "    -fx-border-color: #3e7b91;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "gachia"
        },
        "content": "    -fx-border-width: 1;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "gachia"
        },
        "content": "}"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "gachia"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": ".list-cell .label {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-text-fill: white;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": ".cell_big_label {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "gachia"
        },
        "content": "    -fx-font-family: \"Gill Sans MT\";"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "gachia"
        },
        "content": "    -fx-font-size: 17px;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-text-fill: #010504;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": ".cell_small_label {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "gachia"
        },
        "content": "    -fx-font-family: \"Gill Sans MT\";"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "gachia"
        },
        "content": "    -fx-font-size: 14px;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-text-fill: #010504;"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": ".stack-pane {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "gachia"
        },
        "content": "     -fx-background-color: derive(#121924, 20%);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": ".pane-with-border {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "gachia"
        },
        "content": "     -fx-background-color: derive(#121924, 20%);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "gachia"
        },
        "content": "     -fx-border-color: derive(#5a5a5a, 10%);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "     -fx-border-top-width: 1px;"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": ".status-bar {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: derive(#1d1d1d, 30%);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": ".result-display {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: transparent;"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "gachia"
        },
        "content": "    -fx-font-family: \"Gill Sans MT\";"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-size: 13pt;"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-text-fill: white;"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": ".result-display .label {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-text-fill: black !important;"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": ".status-bar .label {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "gachia"
        },
        "content": "    -fx-font-family: \"Gill Sans MT\";"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-text-fill: white;"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-padding: 4px;"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-pref-height: 30px;"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": ".status-bar-with-border {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: derive(#1d1d1d, 30%);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "gachia"
        },
        "content": "    -fx-border-color: derive(#5a5a5a, 25%);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-width: 1px;"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": ".status-bar-with-border .label {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-text-fill: white;"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": ".grid-pane {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "gachia"
        },
        "content": "    -fx-background-color: derive(#121924, 20%);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": ".grid-pane .stack-pane {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "gachia"
        },
        "content": "    -fx-background-color: derive(#121924, 20%);"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "gachia"
        },
        "content": "}"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "gachia"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "gachia"
        },
        "content": ".anchor-pane {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "gachia"
        },
        "content": "    -fx-background-color: #121924"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": ".context-menu {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: derive(#1d1d1d, 50%);"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": ".context-menu .label {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-text-fill: white;"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": ".menu-bar {"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "gachia"
        },
        "content": "    -fx-background-color: derive(#121924, 20%);"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": ".menu-bar .label {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-size: 14pt;"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "gachia"
        },
        "content": "    -fx-font-family: \"Gill Sans MT\";"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-text-fill: white;"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-opacity: 0.9;"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": ".menu .left-container {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: black;"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "/*"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": " * Metro style Push Button"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": " * Author: Pedro Duque Vieira"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": " * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": ".button {"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "gachia"
        },
        "content": "    -fx-padding: 4 22 4 22;"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-color: #e2e2e2;"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "gachia"
        },
        "content": "    -fx-border-width: 1;"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-radius: 0;"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: #1d1d1d;"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "gachia"
        },
        "content": "    -fx-font-family: \"Gill Sans MT\", Helvetica, Arial, sans-serif;"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-size: 11pt;"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-text-fill: #d8d8d8;"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-insets: 0 0 0 0, 0, 1, 2;"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": ".button:hover {"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: #3a3a3a;"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": ".button:pressed, .button:default:hover:pressed {"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "  -fx-background-color: white;"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "  -fx-text-fill: #1d1d1d;"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": ".button:focused {"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-color: white, white;"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-width: 1, 1;"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-style: solid, segments(1, 1);"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-radius: 0, 0;"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-insets: 1 1 1 1, 0;"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": ".button:disabled, .button:default:disabled {"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-opacity: 0.4;"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: #1d1d1d;"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-text-fill: white;"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": ".button:default {"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: -fx-focus-color;"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-text-fill: #ffffff;"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": ".button:default:hover {"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: derive(-fx-focus-color, 30%);"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": ".dialog-pane {"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: #1d1d1d;"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": ".dialog-pane \u003e *.button-bar \u003e *.container {"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: #1d1d1d;"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": ".dialog-pane \u003e *.label.content {"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-size: 14px;"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-weight: bold;"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-text-fill: white;"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": ".dialog-pane:header *.header-panel {"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: derive(#1d1d1d, 25%);"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": ".dialog-pane:header *.header-panel *.label {"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-size: 18px;"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-style: italic;"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-fill: white;"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-text-fill: white;"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": ".scroll-bar {"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: derive(#1d1d1d, 20%);"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": ".scroll-bar .thumb {"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: derive(#1d1d1d, 50%);"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-insets: 3;"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": ".scroll-bar .increment-button, .scroll-bar .decrement-button {"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: transparent;"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-padding: 0 0 0 0;"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": ".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-shape: \" \";"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": ".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "gachia"
        },
        "content": "    -fx-padding: 1 5 1 5;"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": ".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-padding: 8 1 8 1;"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": "#cardPane {"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: transparent;"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-width: 0;"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "-"
        },
        "content": "#commandTypeLabel {"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-size: 11px;"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-text-fill: #F70D1A;"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "-"
        },
        "content": "#commandTextField {"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "gachia"
        },
        "content": "    -fx-background-color: #121924;"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-insets: 0;"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-color: #383838 #383838 #ffffff #383838;"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-insets: 0;"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-width: 1;"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "gachia"
        },
        "content": "    -fx-font-family: \"Gill Sans MT\";"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-size: 13pt;"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-text-fill: white;"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "-"
        },
        "content": "#filterField, #personListPanel, #personWebpage {"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "-"
        },
        "content": "#resultDisplay .content {"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "gachia"
        },
        "content": "    -fx-background-color: transparent, #121924, transparent, #121924;"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-radius: 0;"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "-"
        },
        "content": "#tags {"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-hgap: 7;"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-vgap: 3;"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "-"
        },
        "content": "#tags .label {"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-text-fill: white;"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-color: #3e7b91;"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-padding: 1 3 1 3;"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-border-radius: 2;"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-background-radius: 2;"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "-"
        },
        "content": "    -fx-font-size: 11;"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Q-gabe": 10,
      "-": 323,
      "gachia": 49
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import java.net.URL?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.Scene?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gachia"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.Menu?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.MenuBar?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.MenuItem?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.image.Image?\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gachia"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gachia"
        },
        "content": "\u003c?import javafx.scene.layout.ColumnConstraints?\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gachia"
        },
        "content": "\u003c?import javafx.scene.layout.GridPane?\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gachia"
        },
        "content": "\u003c?import javafx.scene.layout.RowConstraints?\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.StackPane?\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gachia"
        },
        "content": "\u003c?import javafx.stage.Stage?\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gachia"
        },
        "content": "\u003cfx:root minHeight\u003d\"600\" minWidth\u003d\"600\" onCloseRequest\u003d\"#handleExit\" title\u003d\"VISIT\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cicons\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/icons\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cscene\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cScene\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cstylesheets\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cURL value\u003d\"@Extensions.css\" /\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/stylesheets\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gachia"
        },
        "content": "      \u003cVBox prefWidth\u003d\"300.0\"\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gachia"
        },
        "content": "        \u003cMenuBar fx:id\u003d\"menuBar\" minHeight\u003d\"45.0\" VBox.vgrow\u003d\"NEVER\"\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gachia"
        },
        "content": "               \u003cMenu mnemonicParsing\u003d\"false\"\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gachia"
        },
        "content": "                  \u003cgraphic\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gachia"
        },
        "content": "                     \u003cImageView fitHeight\u003d\"24.0\" fitWidth\u003d\"24.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" smooth\u003d\"false\"\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gachia"
        },
        "content": "                        \u003cimage\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gachia"
        },
        "content": "                           \u003cImage url\u003d\"@../images/visitInAppIcon.png\" /\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gachia"
        },
        "content": "                        \u003c/image\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gachia"
        },
        "content": "                     \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gachia"
        },
        "content": "                  \u003c/graphic\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gachia"
        },
        "content": "               \u003c/Menu\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/Menu\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/Menu\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/MenuBar\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gachia"
        },
        "content": "            \u003cGridPane\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gachia"
        },
        "content": "              \u003ccolumnConstraints\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gachia"
        },
        "content": "                \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gachia"
        },
        "content": "                \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"200.0\" /\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gachia"
        },
        "content": "              \u003c/columnConstraints\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gachia"
        },
        "content": "              \u003crowConstraints\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gachia"
        },
        "content": "                \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"40.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gachia"
        },
        "content": "                \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"700.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gachia"
        },
        "content": "                  \u003cRowConstraints /\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gachia"
        },
        "content": "                  \u003cRowConstraints /\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gachia"
        },
        "content": "                  \u003cRowConstraints /\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gachia"
        },
        "content": "              \u003c/rowConstraints\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gachia"
        },
        "content": "               \u003cchildren\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gachia"
        },
        "content": "                   \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" GridPane.columnIndex\u003d\"1\" GridPane.rowIndex\u003d\"1\" GridPane.rowSpan\u003d\"4\"\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u003cpadding\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gachia"
        },
        "content": "                        \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u003c/padding\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gachia"
        },
        "content": "                    \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" prefWidth\u003d\"178.0\" VBox.vgrow\u003d\"ALWAYS\" /\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gachia"
        },
        "content": "                   \u003c/VBox\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gachia"
        },
        "content": "                  \u003cVBox fx:id\u003d\"reminderList\" prefWidth\u003d\"466.0\" styleClass\u003d\"pane-with-border\" GridPane.rowIndex\u003d\"1\" GridPane.rowSpan\u003d\"4\" /\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gachia"
        },
        "content": "                  \u003cLabel maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" styleClass\u003d\"label-header\" text\u003d\"Patients\" GridPane.columnIndex\u003d\"1\"\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gachia"
        },
        "content": "                     \u003cpadding\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gachia"
        },
        "content": "                        \u003cInsets left\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gachia"
        },
        "content": "                     \u003c/padding\u003e\u003c/Label\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gachia"
        },
        "content": "                  \u003cLabel maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" styleClass\u003d\"label-header\" text\u003d\"Appointments\"\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gachia"
        },
        "content": "                     \u003cpadding\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gachia"
        },
        "content": "                        \u003cInsets left\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gachia"
        },
        "content": "                     \u003c/padding\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gachia"
        },
        "content": "                  \u003c/Label\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gachia"
        },
        "content": "               \u003c/children\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gachia"
        },
        "content": "            \u003c/GridPane\u003e"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gachia"
        },
        "content": "        \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" minHeight\u003d\"100\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cpadding\u003e"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gachia"
        },
        "content": "            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/padding\u003e"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gachia"
        },
        "content": "        \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cpadding\u003e"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gachia"
        },
        "content": "            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/padding\u003e"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/VBox\u003e"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/Scene\u003e"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/scene\u003e"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "-": 43,
      "gachia": 51
    }
  },
  {
    "path": "src/main/resources/view/MotdWindow.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "\u003c?import javafx.scene.Scene?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "\u003c?import javafx.scene.image.Image?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "\u003c?import javafx.stage.Stage?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "\u003cfx:root resizable\u003d\"false\" title\u003d\"Help\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "  \u003cicons\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    \u003cImage url\u003d\"@/images/help_icon.png\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "  \u003c/icons\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "  \u003cscene\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    \u003cScene\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "         \u003cHBox alignment\u003d\"CENTER\"\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "            \u003cchildren\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "               \u003cLabel fx:id\u003d\"motdMessage\" text\u003d\"Label\"\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "                  \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "                     \u003cInsets right\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "                  \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "               \u003c/Label\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "            \u003c/children\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "            \u003copaqueInsets\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "               \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "            \u003c/opaqueInsets\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "            \u003cpadding\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "               \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "            \u003c/padding\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "         \u003c/HBox\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "    \u003c/Scene\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "  \u003c/scene\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "ReignOfComputer": 33
    }
  },
  {
    "path": "src/main/resources/view/PersonListCard.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.ColumnConstraints?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.FlowPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.GridPane?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.Region?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003ccolumnConstraints\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/columnConstraints\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cpadding\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/padding\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cminWidth\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c!-- Ensures that the label text is never truncated --\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/minWidth\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/Label\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/HBox\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cFlowPane fx:id\u003d\"tags\" /\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "      \u003cLabel fx:id\u003d\"visitList\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$visitList\" /\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/VBox\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/GridPane\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/HBox\u003e"
      }
    ],
    "authorContributionMap": {
      "-": 36,
      "SQwQ": 1
    }
  },
  {
    "path": "src/main/resources/view/PersonListPanel.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gachia"
        },
        "content": "\u003c?import java.net.URL?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.ListView?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gachia"
        },
        "content": "\u003cVBox xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gachia"
        },
        "content": "  \u003cListView fx:id\u003d\"personListView\" styleClass\u003d\"grid-pane\" VBox.vgrow\u003d\"ALWAYS\" /\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gachia"
        },
        "content": "   \u003cstylesheets\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gachia"
        },
        "content": "      \u003cURL value\u003d\"@DarkTheme.css\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gachia"
        },
        "content": "      \u003cURL value\u003d\"@Extensions.css\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gachia"
        },
        "content": "   \u003c/stylesheets\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/VBox\u003e"
      }
    ],
    "authorContributionMap": {
      "-": 6,
      "gachia": 7
    }
  },
  {
    "path": "src/main/resources/view/ProfileWindow.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "\u003c?import java.net.URL?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "\u003c?import javafx.scene.Scene?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "\u003c?import javafx.scene.control.TextArea?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "\u003c?import javafx.scene.image.Image?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "\u003c?import javafx.stage.Stage?\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "\u003cfx:root minWidth\u003d\"450\" resizable\u003d\"false\" title\u003d\"Profile\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "    \u003cicons\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gachia"
        },
        "content": "        \u003cImage url\u003d\"@/images/visitWindowIcon.png\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "    \u003c/icons\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "    \u003cscene\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "        \u003cScene\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "            \u003cstylesheets\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                \u003cURL value\u003d\"@DarkTheme.css\" /\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                \u003cURL value\u003d\"@Extensions.css\" /\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "            \u003c/stylesheets\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "            \u003cVBox fx:id\u003d\"profilePanel\" prefHeight\u003d\"496.0\" prefWidth\u003d\"553.0\" styleClass\u003d\"background\"\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                \u003cchildren\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "               \u003cHBox prefHeight\u003d\"100.0\" prefWidth\u003d\"200.0\"\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                  \u003cchildren\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                     \u003cHBox prefHeight\u003d\"100.0\" prefWidth\u003d\"200.0\"\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                        \u003cchildren\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                                \u003c!-- Add Name Label --\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                                \u003cLabel contentDisplay\u003d\"RIGHT\" styleClass\u003d\"label-bright-header\" text\u003d\"Patient Profile\" underline\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                              \u003cfont\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                                 \u003cFont size\u003d\"18.0\" /\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                              \u003c/font\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                           \u003c/Label\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                        \u003c/children\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                     \u003c/HBox\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                     \u003cHBox alignment\u003d\"TOP_RIGHT\" prefHeight\u003d\"100.0\" prefWidth\u003d\"200.0\" HBox.hgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                        \u003cchildren\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                           \u003cLabel fx:id\u003d\"exitButton\" alignment\u003d\"CENTER\" contentDisplay\u003d\"RIGHT\" onMouseClicked\u003d\"#mouseClickExit\" onMouseEntered\u003d\"#mouseEnterExit\" onMouseExited\u003d\"#mouseLeaveExit\" styleClass\u003d\"label-bright-footnote\" text\u003d\"[X]\"\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                              \u003cfont\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                                 \u003cFont size\u003d\"8.0\" /\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                              \u003c/font\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                           \u003c/Label\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                        \u003c/children\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                     \u003c/HBox\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                  \u003c/children\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "               \u003c/HBox\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "               \u003cHBox alignment\u003d\"CENTER\" fillHeight\u003d\"false\" maxHeight\u003d\"25.0\" minHeight\u003d\"25.0\" prefHeight\u003d\"25.0\" prefWidth\u003d\"200.0\"\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                  \u003cchildren\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                     \u003cLabel contentDisplay\u003d\"RIGHT\" maxHeight\u003d\"25.0\" minHeight\u003d\"25.0\" prefHeight\u003d\"25.0\" prefWidth\u003d\"145.0\" styleClass\u003d\"label-bright\" text\u003d\"Name: \"\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                        \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                           \u003cInsets /\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                        \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                     \u003c/Label\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                     \u003cTextArea fx:id\u003d\"nameField\" editable\u003d\"false\" maxHeight\u003d\"23.0\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"23.0\" prefHeight\u003d\"23.0\" styleClass\u003d\"container\" text\u003d\"-\" HBox.hgrow\u003d\"NEVER\"\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                        \u003cfont\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                           \u003cFont size\u003d\"12.0\" /\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                        \u003c/font\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                        \u003copaqueInsets\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                           \u003cInsets top\u003d\"20.0\" /\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                        \u003c/opaqueInsets\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                     \u003c/TextArea\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                  \u003c/children\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                  \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                     \u003cInsets bottom\u003d\"5.0\" left\u003d\"15.0\" top\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                  \u003c/VBox.margin\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "               \u003c/HBox\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "               \u003cHBox alignment\u003d\"CENTER\" fillHeight\u003d\"false\" maxHeight\u003d\"25.0\" minHeight\u003d\"25.0\" prefHeight\u003d\"25.0\" prefWidth\u003d\"200.0\"\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                  \u003cchildren\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                     \u003cLabel contentDisplay\u003d\"RIGHT\" maxHeight\u003d\"25.0\" minHeight\u003d\"25.0\" prefHeight\u003d\"25.0\" prefWidth\u003d\"145.0\" styleClass\u003d\"label-bright\" text\u003d\"Tags:\"\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                        \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                           \u003cInsets /\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                        \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                     \u003c/Label\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                     \u003cTextArea fx:id\u003d\"tagField\" editable\u003d\"false\" maxHeight\u003d\"23.0\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"23.0\" prefHeight\u003d\"23.0\" text\u003d\"-\" HBox.hgrow\u003d\"NEVER\"\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                        \u003cfont\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                           \u003cFont size\u003d\"12.0\" /\u003e"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                        \u003c/font\u003e"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                        \u003copaqueInsets\u003e"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                           \u003cInsets top\u003d\"20.0\" /\u003e"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                        \u003c/opaqueInsets\u003e"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                     \u003c/TextArea\u003e"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                  \u003c/children\u003e"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                  \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                     \u003cInsets left\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                  \u003c/VBox.margin\u003e"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "               \u003c/HBox\u003e"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "               \u003cHBox alignment\u003d\"CENTER\" fillHeight\u003d\"false\" maxHeight\u003d\"25.0\" minHeight\u003d\"25.0\" prefHeight\u003d\"25.0\" prefWidth\u003d\"200.0\"\u003e"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                  \u003cchildren\u003e"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                     \u003cLabel contentDisplay\u003d\"RIGHT\" maxHeight\u003d\"25.0\" minHeight\u003d\"25.0\" prefHeight\u003d\"25.0\" prefWidth\u003d\"145.0\" styleClass\u003d\"label-bright\" text\u003d\"Phone:\" /\u003e"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                     \u003cTextArea fx:id\u003d\"phoneField\" editable\u003d\"false\" maxHeight\u003d\"23.0\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"23.0\" prefHeight\u003d\"23.0\" text\u003d\"-\" HBox.hgrow\u003d\"NEVER\"\u003e"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                        \u003cfont\u003e"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                           \u003cFont size\u003d\"12.0\" /\u003e"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                        \u003c/font\u003e"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                        \u003copaqueInsets\u003e"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                           \u003cInsets top\u003d\"20.0\" /\u003e"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                        \u003c/opaqueInsets\u003e"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                     \u003c/TextArea\u003e"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                  \u003c/children\u003e"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                  \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                     \u003cInsets bottom\u003d\"5.0\" left\u003d\"15.0\" top\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                  \u003c/VBox.margin\u003e"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "               \u003c/HBox\u003e"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "               \u003cHBox alignment\u003d\"CENTER\" fillHeight\u003d\"false\" maxHeight\u003d\"25.0\" minHeight\u003d\"25.0\" prefHeight\u003d\"25.0\" prefWidth\u003d\"200.0\"\u003e"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                  \u003cchildren\u003e"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                     \u003cLabel contentDisplay\u003d\"RIGHT\" maxHeight\u003d\"25.0\" minHeight\u003d\"25.0\" prefHeight\u003d\"25.0\" prefWidth\u003d\"145.0\" styleClass\u003d\"label-bright\" text\u003d\"Email:\" /\u003e"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                     \u003cTextArea fx:id\u003d\"emailField\" editable\u003d\"false\" maxHeight\u003d\"23.0\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"23.0\" prefHeight\u003d\"23.0\" text\u003d\"-\" HBox.hgrow\u003d\"NEVER\"\u003e"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                        \u003cfont\u003e"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                           \u003cFont size\u003d\"12.0\" /\u003e"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                        \u003c/font\u003e"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                        \u003copaqueInsets\u003e"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                           \u003cInsets top\u003d\"20.0\" /\u003e"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                        \u003c/opaqueInsets\u003e"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                     \u003c/TextArea\u003e"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                  \u003c/children\u003e"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                  \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                     \u003cInsets bottom\u003d\"5.0\" left\u003d\"15.0\" top\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                  \u003c/VBox.margin\u003e"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "               \u003c/HBox\u003e"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "               \u003cHBox alignment\u003d\"TOP_CENTER\" fillHeight\u003d\"false\" maxHeight\u003d\"50.0\" minHeight\u003d\"50.0\" prefHeight\u003d\"50.0\" prefWidth\u003d\"200.0\"\u003e"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                  \u003cchildren\u003e"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                     \u003cLabel contentDisplay\u003d\"RIGHT\" maxHeight\u003d\"25.0\" minHeight\u003d\"25.0\" prefHeight\u003d\"25.0\" prefWidth\u003d\"145.0\" styleClass\u003d\"label-bright\" text\u003d\"Address:\" /\u003e"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                     \u003cTextArea fx:id\u003d\"addressField\" editable\u003d\"false\" maxHeight\u003d\"50.0\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"50.0\" prefHeight\u003d\"50.0\" text\u003d\"-\" wrapText\u003d\"true\" HBox.hgrow\u003d\"NEVER\"\u003e"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                        \u003cfont\u003e"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                           \u003cFont size\u003d\"12.0\" /\u003e"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                        \u003c/font\u003e"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                        \u003copaqueInsets\u003e"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                           \u003cInsets top\u003d\"20.0\" /\u003e"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                        \u003c/opaqueInsets\u003e"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                     \u003c/TextArea\u003e"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                  \u003c/children\u003e"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                  \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                     \u003cInsets bottom\u003d\"5.0\" left\u003d\"15.0\" top\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                  \u003c/VBox.margin\u003e"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "               \u003c/HBox\u003e"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "               \u003cLabel styleClass\u003d\"label-bright\" text\u003d\"Visitations:\"\u003e"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                  \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                     \u003cInsets top\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                  \u003c/VBox.margin\u003e"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "               \u003c/Label\u003e"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                    \u003c!-- Add Name Text Field --\u003e"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                    \u003cTextArea fx:id\u003d\"visitField\" editable\u003d\"false\" prefHeight\u003d\"313.0\" prefWidth\u003d\"538.0\" text\u003d\"-\" wrapText\u003d\"true\" VBox.vgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                  \u003copaqueInsets\u003e"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                     \u003cInsets /\u003e"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                  \u003c/opaqueInsets\u003e"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                  \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                     \u003cInsets top\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                  \u003c/VBox.margin\u003e\u003c/TextArea\u003e"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "               \u003cHBox alignment\u003d\"CENTER\" prefHeight\u003d\"100.0\" prefWidth\u003d\"200.0\"\u003e"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                  \u003cchildren\u003e"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                     \u003cLabel alignment\u003d\"CENTER\" contentDisplay\u003d\"RIGHT\" styleClass\u003d\"label-bright-footnote\" text\u003d\"Press \u0027esc\u0027 to close\"\u003e"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                        \u003cfont\u003e"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                           \u003cFont size\u003d\"8.0\" /\u003e"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                        \u003c/font\u003e"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                        \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                           \u003cInsets top\u003d\"3.0\" /\u003e"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                        \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                     \u003c/Label\u003e"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                  \u003c/children\u003e"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "               \u003c/HBox\u003e"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                \u003c/children\u003e"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                \u003copaqueInsets\u003e"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                    \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                \u003c/opaqueInsets\u003e"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                \u003cpadding\u003e"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                    \u003cInsets bottom\u003d\"10.0\" left\u003d\"20.0\" right\u003d\"15.0\" top\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                \u003c/padding\u003e"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "            \u003cstylesheets\u003e"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "               \u003cURL value\u003d\"@DarkTheme.css\" /\u003e"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "               \u003cURL value\u003d\"@Extensions.css\" /\u003e"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "            \u003c/stylesheets\u003e"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "            \u003c/VBox\u003e"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "        \u003c/Scene\u003e"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "    \u003c/scene\u003e"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "Q-gabe": 176,
      "gachia": 1
    }
  },
  {
    "path": "src/main/resources/view/VisitListCard.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "\u003c?import javafx.scene.layout.ColumnConstraints?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "\u003c?import javafx.scene.layout.FlowPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "\u003c?import javafx.scene.layout.GridPane?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "\u003c?import javafx.scene.layout.Region?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "\u003cHBox id\u003d\"visitCardPane\" fx:id\u003d\"visitCardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        \u003ccolumnConstraints\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        \u003c/columnConstraints\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            \u003cpadding\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            \u003c/padding\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                    \u003cminWidth\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                        \u003c!-- Ensures that the label text is never truncated --\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                    \u003c/minWidth\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                \u003c/Label\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            \u003c/HBox\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            \u003cFlowPane fx:id\u003d\"tags\" /\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            \u003cLabel fx:id\u003d\"date\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$date\" /\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            \u003cLabel fx:id\u003d\"remarks\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remarks\" /\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        \u003c/VBox\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    \u003c/GridPane\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "\u003c/HBox\u003e"
      }
    ],
    "authorContributionMap": {
      "SQwQ": 35
    }
  },
  {
    "path": "src/main/resources/view/VisitListPanel.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gachia"
        },
        "content": "\u003c?import java.net.URL?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gachia"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gachia"
        },
        "content": "\u003c?import javafx.scene.Scene?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gachia"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "\u003c?import javafx.scene.control.ListView?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gachia"
        },
        "content": "\u003c?import javafx.scene.image.Image?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gachia"
        },
        "content": "\u003c?import javafx.stage.Stage?\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gachia"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gachia"
        },
        "content": "\u003cfx:root minWidth\u003d\"450\" resizable\u003d\"false\" title\u003d\"Visitation List\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gachia"
        },
        "content": "    \u003cicons\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gachia"
        },
        "content": "        \u003cImage url\u003d\"@/images/visitWindowIcon.png\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gachia"
        },
        "content": "    \u003c/icons\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    \u003cscene\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        \u003cScene\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gachia"
        },
        "content": "            \u003cVBox styleClass\u003d\"background\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gachia"
        },
        "content": "            \u003cLabel styleClass\u003d\"label-bright-header\" text\u003d\"List of Visits\" underline\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gachia"
        },
        "content": "               \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gachia"
        },
        "content": "                  \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" top\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gachia"
        },
        "content": "               \u003c/VBox.margin\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gachia"
        },
        "content": "            \u003c/Label\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                \u003cListView fx:id\u003d\"visitListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            \u003c/VBox\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            \u003cstylesheets\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                \u003cURL value\u003d\"@DarkTheme.css\" /\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                \u003cURL value\u003d\"@Extensions.css\" /\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            \u003c/stylesheets\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        \u003c/Scene\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    \u003c/scene\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "SQwQ": 16,
      "gachia": 17
    }
  },
  {
    "path": "src/main/resources/view/VisitRecordForm.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "\u003c?import java.net.URL?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "\u003c?import javafx.scene.Scene?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "\u003c?import javafx.scene.control.TextArea?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gachia"
        },
        "content": "\u003c?import javafx.scene.image.Image?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "\u003c?import javafx.stage.Stage?\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gachia"
        },
        "content": "\u003cfx:root minWidth\u003d\"450.0\" resizable\u003d\"false\" title\u003d\"Add Visit Form\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gachia"
        },
        "content": "    \u003cicons\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gachia"
        },
        "content": "        \u003cImage url\u003d\"@/images/visitWindowIcon.png\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gachia"
        },
        "content": "    \u003c/icons\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    \u003cscene\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        \u003cScene\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "            \u003cAnchorPane prefHeight\u003d\"500.0\" prefWidth\u003d\"500.0\"\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            \u003cchildren\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gachia"
        },
        "content": "               \u003cVBox fx:id\u003d\"visitRecordForm\" prefHeight\u003d\"500.0\" prefWidth\u003d\"500.0\" styleClass\u003d\"background\"\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                  \u003cchildren\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                     \u003cLabel styleClass\u003d\"label-bright\" text\u003d\"Prescription :\" /\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gachia"
        },
        "content": "                     \u003cTextArea fx:id\u003d\"medicine\" prefHeight\u003d\"65.0\" prefWidth\u003d\"483.0\" promptText\u003d\"Prescription given to the patient\" styleClass\u003d\"text-field-visit\" wrapText\u003d\"true\" VBox.vgrow\u003d\"SOMETIMES\"\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gachia"
        },
        "content": "                        \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gachia"
        },
        "content": "                           \u003cInsets top\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gachia"
        },
        "content": "                        \u003c/VBox.margin\u003e\u003c/TextArea\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gachia"
        },
        "content": "                     \u003cLabel styleClass\u003d\"label-bright\" text\u003d\"Diagnosis :\"\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gachia"
        },
        "content": "                        \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gachia"
        },
        "content": "                           \u003cInsets top\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gachia"
        },
        "content": "                        \u003c/VBox.margin\u003e\u003c/Label\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gachia"
        },
        "content": "                     \u003cTextArea fx:id\u003d\"diagnosis\" prefHeight\u003d\"65.0\" prefWidth\u003d\"483.0\" promptText\u003d\"Diagnosis of the patient\" styleClass\u003d\"text-field-visit\" wrapText\u003d\"true\" VBox.vgrow\u003d\"SOMETIMES\"\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gachia"
        },
        "content": "                        \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gachia"
        },
        "content": "                           \u003cInsets top\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gachia"
        },
        "content": "                        \u003c/VBox.margin\u003e\u003c/TextArea\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gachia"
        },
        "content": "                     \u003cLabel styleClass\u003d\"label-bright\" text\u003d\"Remarks :\"\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gachia"
        },
        "content": "                        \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gachia"
        },
        "content": "                           \u003cInsets top\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gachia"
        },
        "content": "                        \u003c/VBox.margin\u003e\u003c/Label\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gachia"
        },
        "content": "                     \u003cTextArea fx:id\u003d\"remarks\" prefHeight\u003d\"200.0\" prefWidth\u003d\"200.0\" promptText\u003d\"Any Additional Remarks\" styleClass\u003d\"text-field-visit\" wrapText\u003d\"true\" VBox.vgrow\u003d\"SOMETIMES\"\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gachia"
        },
        "content": "                        \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gachia"
        },
        "content": "                           \u003cInsets top\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gachia"
        },
        "content": "                        \u003c/VBox.margin\u003e\u003c/TextArea\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gachia"
        },
        "content": "                     \u003cHBox alignment\u003d\"CENTER_LEFT\" prefHeight\u003d\"33.0\" prefWidth\u003d\"480.0\"\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                        \u003cchildren\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gachia"
        },
        "content": "                           \u003cVBox alignment\u003d\"CENTER_LEFT\" maxHeight\u003d\"33.0\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"33.0\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"33.0\" prefWidth\u003d\"399.0\"\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                              \u003cchildren\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                                 \u003cLabel styleClass\u003d\"label-bright-footnote\" text\u003d\"SHIFT + Tab  -  Previous Field (Up)\" /\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                                 \u003cLabel styleClass\u003d\"label-bright-footnote\" text\u003d\"CTRL + Tab  -  Next Field (Down)\" /\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                              \u003c/children\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                              \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                                 \u003cInsets /\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                              \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                              \u003cpadding\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                                 \u003cInsets left\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                              \u003c/padding\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                           \u003c/VBox\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gachia"
        },
        "content": "                           \u003cButton fx:id\u003d\"saveButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#saveReport\" text\u003d\"Save\"\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gachia"
        },
        "content": "                              \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gachia"
        },
        "content": "                                 \u003cInsets /\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gachia"
        },
        "content": "                              \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gachia"
        },
        "content": "                           \u003c/Button\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                        \u003c/children\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                        \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gachia"
        },
        "content": "                           \u003cInsets top\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                        \u003c/VBox.margin\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                     \u003c/HBox\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                  \u003c/children\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                  \u003copaqueInsets\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                     \u003cInsets /\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                  \u003c/opaqueInsets\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                  \u003cpadding\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "                     \u003cInsets bottom\u003d\"5.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                  \u003c/padding\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "               \u003c/VBox\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "            \u003c/children\u003e\u003c/AnchorPane\u003e"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "         \u003cstylesheets\u003e"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "            \u003cURL value\u003d\"@DarkTheme.css\" /\u003e"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "            \u003cURL value\u003d\"@Extensions.css\" /\u003e"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Q-gabe"
        },
        "content": "         \u003c/stylesheets\u003e"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        \u003c/Scene\u003e"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    \u003c/scene\u003e"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "Q-gabe": 28,
      "SQwQ": 23,
      "gachia": 34
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/AddCommandTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.Assert.assertThrows;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.function.Predicate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.AddressBook;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ReadOnlyAddressBook;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ReadOnlyUserPrefs;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.testutil.PersonBuilder;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "public class AddCommandTest {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    public void constructor_nullPerson_throwsNullPointerException() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    public void execute_personAcceptedByModel_addSuccessful() throws Exception {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        Person validPerson \u003d new PersonBuilder().build();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    public void execute_duplicatePerson_throwsCommandException() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        Person validPerson \u003d new PersonBuilder().build();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        AddCommand addCommand \u003d new AddCommand(validPerson);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    public void equals() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        AddCommand addAliceCommand \u003d new AddCommand(alice);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        AddCommand addBobCommand \u003d new AddCommand(bob);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        // same object -\u003e returns true"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(addAliceCommand.equals(addAliceCommand));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        // same values -\u003e returns true"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(addAliceCommand.equals(addAliceCommandCopy));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        // different types -\u003e returns false"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(addAliceCommand.equals(1));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        // null -\u003e returns false"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(addAliceCommand.equals(null));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        // different person -\u003e returns false"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(addAliceCommand.equals(addBobCommand));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "     * A default model stub that have all of the methods failing."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    private class ModelStub implements Model {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        public ReadOnlyUserPrefs getUserPrefs() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        public GuiSettings getGuiSettings() {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        public void setGuiSettings(GuiSettings guiSettings) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        public Path getAddressBookFilePath() {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        public void setAddressBookFilePath(Path addressBookFilePath) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        public void addPerson(Person person) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        public void addReminder(int type, String description, int days) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        public String outputReminders() {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        public void addAlias(String alias, String aliasTo) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        public boolean removeAlias(String alias) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        public String applyAlias(String commandText) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "        public void setAddressBook(ReadOnlyAddressBook newData) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "        public ReadOnlyAddressBook getAddressBook() {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "        public boolean hasPerson(Person person) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "        public void deletePerson(Person target) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "        public void setPerson(Person target, Person editedPerson) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "        public ObservableList\u003cPerson\u003e getFilteredPersonList() {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "     * A Model stub that contains a single person."
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "    private class ModelStubWithPerson extends ModelStub {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "        private final Person person;"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "        ModelStubWithPerson(Person person) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "            requireNonNull(person);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "            this.person \u003d person;"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "        public boolean hasPerson(Person person) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "            requireNonNull(person);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "            return this.person.isSamePerson(person);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "     * A Model stub that always accept the person being added."
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "    private class ModelStubAcceptingPersonAdded extends ModelStub {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "        public boolean hasPerson(Person person) {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "            requireNonNull(person);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "            return personsAdded.stream().anyMatch(person::isSamePerson);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "        public void addPerson(Person person) {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "            requireNonNull(person);"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "            personsAdded.add(person);"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "        public ReadOnlyAddressBook getAddressBook() {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "            return new AddressBook();"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ReignOfComputer": 10,
      "Wingedevil": 15,
      "-": 194
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/AddVisitCommandTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import seedu.address.commons.core.Messages;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import seedu.address.commons.core.index.Index;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import seedu.address.model.UserPrefs;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SQwQ"
        },
        "content": " * Contains integration tests (interaction with the Model) and unit tests for AddVisitCommand."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SQwQ"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "public class AddVisitCommandTest {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private static final String VALID_DATE \u003d \"12/12/2019\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private static final String VALID_DATE_2 \u003d \"11/12/2019\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void execute_invalidPersonIndexUnfilteredList_failure() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        AddVisitCommand addVisitCommand \u003d new AddVisitCommand(outOfBoundIndex, VALID_DATE);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        assertCommandFailure(addVisitCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Edit filtered list where index is larger than size of filtered list,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * but smaller than size of address book"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void execute_invalidPersonIndexFilteredList_failure() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        showPersonAtIndex(model, INDEX_FIRST_PERSON);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        // ensures that outOfBoundIndex is still in bounds of address book list"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        AddVisitCommand addVisitCommand \u003d new AddVisitCommand(outOfBoundIndex, VALID_DATE);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        assertCommandFailure(addVisitCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void equals() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        final AddVisitCommand standardCommand \u003d new AddVisitCommand(INDEX_FIRST_PERSON,"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                VALID_DATE);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        // same values -\u003e returns true"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        AddVisitCommand commandWithSameValues \u003d new AddVisitCommand(INDEX_FIRST_PERSON,"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                VALID_DATE);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        assertTrue(standardCommand.equals(commandWithSameValues));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        // same object -\u003e returns true"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        assertTrue(standardCommand.equals(standardCommand));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        // null -\u003e returns false"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        assertFalse(standardCommand.equals(null));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        // different types -\u003e returns false"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        assertFalse(standardCommand.equals(new ClearCommand()));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        // different index -\u003e returns false"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        assertFalse(standardCommand.equals(new AddVisitCommand(INDEX_SECOND_PERSON,"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                VALID_DATE)));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        // different remark -\u003e returns false"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        assertFalse(standardCommand.equals(new AddVisitCommand(INDEX_FIRST_PERSON,"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                VALID_DATE_2)));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SQwQ": 81
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/AliasCommandTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "import static seedu.address.testutil.Assert.assertThrows;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "import java.util.function.Predicate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "import seedu.address.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "import seedu.address.model.AliasTable;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "import seedu.address.model.ReadOnlyAddressBook;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "import seedu.address.model.ReadOnlyUserPrefs;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "import seedu.address.model.UserPrefs;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "public class AliasCommandTest {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    public void constructor_nullAlias_throwsNullPointerException() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e new AliasCommand(null, null));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e new AliasCommand(\"Command\", null));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e new AliasCommand(null, \"Alias\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    public void execute_correctAlias_aliasSuccessful() throws Exception {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        AliasCommandTest.ModelStubWithAliasTable modelStub \u003d new AliasCommandTest.ModelStubWithAliasTable();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        CommandResult commandResult \u003d new AliasCommand(\"test\", \"help\").execute(modelStub);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        assertEquals(String.format(AliasCommand.MESSAGE_SUCCESS, \"test\", \"help\"), commandResult.getFeedbackToUser());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        assertEquals("
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "                AliasTable.getDefaultAliasTable().addAlias(\"test\", \"help\"),"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "                modelStub.getUserPrefs().getAliasTable()"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        );"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    public void equals() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        AliasCommand aliasExitCommand \u003d new AliasCommand(\"test1\", \"exit\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        AliasCommand aliasHelpCommand \u003d new AliasCommand(\"test2\", \"help\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        assertTrue(aliasExitCommand.equals(aliasExitCommand));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        assertTrue(aliasHelpCommand.equals(aliasHelpCommand));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        assertFalse(aliasExitCommand.equals(1));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        assertFalse(aliasHelpCommand.equals(null));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        assertFalse(aliasExitCommand.equals(aliasHelpCommand));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    private class ModelStubWithAliasTable extends ModelStub {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        final UserPrefs userPrefs \u003d new UserPrefs();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        public ReadOnlyUserPrefs getUserPrefs() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "            return userPrefs;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        public void addAlias(String alias, String aliasTo) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "            userPrefs.addAlias(alias, aliasTo);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "     * A default model stub that have all of the methods failing."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    private class ModelStub implements Model {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        public ReadOnlyUserPrefs getUserPrefs() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        public GuiSettings getGuiSettings() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        public void setGuiSettings(GuiSettings guiSettings) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        public Path getAddressBookFilePath() {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        public void setAddressBookFilePath(Path addressBookFilePath) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        public void addPerson(Person person) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        public void addReminder(int type, String description, int days) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        public String outputReminders() {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        public void addAlias(String alias, String aliasTo) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        public boolean removeAlias(String alias) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        public String applyAlias(String commandText) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        public void setAddressBook(ReadOnlyAddressBook newData) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        public ReadOnlyAddressBook getAddressBook() {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        public boolean hasPerson(Person person) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        public void deletePerson(Person target) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        public void setPerson(Person target, Person editedPerson) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        public ObservableList\u003cPerson\u003e getFilteredPersonList() {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ReignOfComputer": 6,
      "Wingedevil": 164
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/CommandResultTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertNotEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class CommandResultTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    public void equals() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        CommandResult commandResult \u003d new CommandResult(\"feedback\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        // same values -\u003e returns true"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false, false, false,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                false, false, false)));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        // same object -\u003e returns true"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(commandResult.equals(commandResult));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        // null -\u003e returns false"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(commandResult.equals(null));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        // different types -\u003e returns false"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(commandResult.equals(0.5f));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        // different feedbackToUser value -\u003e returns false"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(commandResult.equals(new CommandResult(\"different\")));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        // different idx value -\u003e returns false"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        assertFalse(commandResult.equals(new CommandResult(\"feedback\", 1, null)));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        // different date value -\u003e returns false"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        assertFalse(commandResult.equals(new CommandResult(\"feedback\", 0, \"true\")));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    public void hashcode() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        CommandResult commandResult \u003d new CommandResult(\"feedback\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        // same values -\u003e returns same hashcode"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        // different feedbackToUser value -\u003e returns different hashcode"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        // different idx value -\u003e returns different hashcode"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", 1, null).hashCode());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        // different date value -\u003e returns different hashcode"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", 0, \"false\").hashCode());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void getters() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        CommandResult commandResult \u003d new CommandResult(\"feedback\", false, false, false, false, false, false, false);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        assertEquals(commandResult.isAddVisit(), false);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        assertEquals(commandResult.isShowVisitList(), false);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        assertEquals(commandResult.isExit(), false);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        assertEquals(commandResult.isShowHelp(), false);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        CommandResult commandResult2 \u003d new CommandResult(\"feedback\", 3, \"12/12/2012\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        assertEquals(commandResult2.getIdx(), 3);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        assertEquals(commandResult2.getDate(), \"12/12/2012\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 45,
      "SQwQ": 26
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/CommandTestUtil.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.Assert.assertThrows;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.index.Index;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.AddressBook;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.NameContainsKeywordsPredicate;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.testutil.EditPersonDescriptorBuilder;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": " * Contains helper methods for testing commands."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "public class CommandTestUtil {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String VALID_PHONE_AMY \u003d \"11111111\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String VALID_PHONE_BOB \u003d \"22222222\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public static final String VALID_REMARK_AMY \u003d \"Like skiing.\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public static final String VALID_REMARK_BOB \u003d \"Favourite pastime: Eating\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String VALID_TAG_HUSBAND \u003d \"husband\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String VALID_TAG_FRIEND \u003d \"friend\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final EditCommand.EditPersonDescriptor DESC_AMY;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final EditCommand.EditPersonDescriptor DESC_BOB;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    static {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "                .withTags(VALID_TAG_FRIEND).build();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "     * Executes the given {@code command}, confirms that \u003cbr\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "     * - the {@code actualModel} matches {@code expectedModel}"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "            Model expectedModel) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "            CommandResult result \u003d command.execute(actualModel);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "            assertEquals(expectedCommandResult, result);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "            assertEquals(expectedModel, actualModel);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (CommandException ce) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"Execution of command should not fail.\", ce);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "     * that takes a string {@code expectedMessage}."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "            Model expectedModel) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "     * Executes the given {@code command}, confirms that \u003cbr\u003e"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "     * - a {@code CommandException} is thrown \u003cbr\u003e"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        // we are unable to defensively copy the model for comparison later, so we can"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "        // only do so by copying its components."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(expectedAddressBook, actualModel.getAddressBook());"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@code model}\u0027s address book."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void showPersonAtIndex(Model model, Index targetIndex) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(1, model.getFilteredPersonList().size());"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 128,
      "SQwQ": 2
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/DeleteVisitCommandTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import seedu.address.model.AddressBook;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import seedu.address.model.UserPrefs;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import seedu.address.testutil.PersonBuilder;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import seedu.address.testutil.TypicalVisits;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "public class DeleteVisitCommandTest {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void execute_deleteVisitCommandUnfilteredList_success() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_SECOND_PERSON.getZeroBased());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        Person editedPerson \u003d new PersonBuilder(firstPerson)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                .withVisitList(TypicalVisits.getLongTypicalVisitList(firstPerson.getName().toString())).build();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        DeleteVisitCommand deleteVisitCommand \u003d new DeleteVisitCommand(INDEX_SECOND_PERSON,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                3);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        String expectedMessage \u003d String.format(DeleteVisitCommand.MESSAGE_DELETE_VISIT_SUCCESS, editedPerson);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        expectedModel.setPerson(firstPerson, editedPerson);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        CommandResult expectedCommandResult \u003d"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                new CommandResult(expectedMessage, editedPerson.getVisitList().getObservableRecords());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            CommandResult result \u003d deleteVisitCommand.execute(model);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            assertEquals(expectedCommandResult, result);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            assertEquals(expectedModel, model);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        } catch (CommandException ce) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            throw new AssertionError(\"Execution of command should not fail.\", ce);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void equals() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        DeleteVisitCommand deleteFirstCommand \u003d new DeleteVisitCommand(INDEX_FIRST_PERSON, 1);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        DeleteVisitCommand deleteSecondCommand \u003d new DeleteVisitCommand(INDEX_SECOND_PERSON, 1);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        // same object -\u003e returns true"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        // same values -\u003e returns true"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        DeleteVisitCommand deleteFirstCommandCopy \u003d new DeleteVisitCommand(INDEX_FIRST_PERSON, 1);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        DeleteCommand deleteFirstCommandNoIndex \u003d new DeleteCommand(INDEX_FIRST_PERSON);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        assertFalse(deleteFirstCommand.equals(deleteFirstCommandNoIndex));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        // different types -\u003e returns false"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        assertFalse(deleteFirstCommand.equals(1));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        // null -\u003e returns false"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        assertFalse(deleteFirstCommand.equals(null));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        // different person -\u003e returns false"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SQwQ": 75
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/EditCommandTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.Messages;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.index.Index;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.AddressBook;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.UserPrefs;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.testutil.EditPersonDescriptorBuilder;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.testutil.PersonBuilder;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import seedu.address.testutil.TypicalPersons;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": " * Contains integration tests (interaction with the Model, UndoCommand and RedoCommand) and unit tests for EditCommand."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "public class EditCommandTest {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    public void execute_allFieldsSpecifiedUnfilteredList_success() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        Person editedPerson \u003d TypicalPersons.ALICE;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    public void execute_someFieldsSpecifiedUnfilteredList_success() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "                .withTags(VALID_TAG_HUSBAND).build();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        expectedModel.setPerson(lastPerson, editedPerson);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    public void execute_noFieldSpecifiedUnfilteredList_success() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    public void execute_filteredList_success() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        showPersonAtIndex(model, INDEX_FIRST_PERSON);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "    public void execute_duplicatePersonUnfilteredList_failure() {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "    public void execute_duplicatePersonFilteredList_failure() {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        showPersonAtIndex(model, INDEX_FIRST_PERSON);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "        // edit person in filtered list into a duplicate in address book"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "                new EditPersonDescriptorBuilder(personInList).build());"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "    public void execute_invalidPersonIndexUnfilteredList_failure() {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "     * Edit filtered list where index is larger than size of filtered list,"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "     * but smaller than size of address book"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "    public void execute_invalidPersonIndexFilteredList_failure() {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "        showPersonAtIndex(model, INDEX_FIRST_PERSON);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "        // ensures that outOfBoundIndex is still in bounds of address book list"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "    public void equals() {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "        // same values -\u003e returns true"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(standardCommand.equals(commandWithSameValues));"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "        // same object -\u003e returns true"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(standardCommand.equals(standardCommand));"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "        // null -\u003e returns false"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(standardCommand.equals(null));"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "        // different types -\u003e returns false"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(standardCommand.equals(new ClearCommand()));"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "        // different index -\u003e returns false"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "        // different descriptor -\u003e returns false"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 172,
      "SQwQ": 2
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/ExitCommandTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class ExitCommandTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    private Model model \u003d new ModelManager();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    private Model expectedModel \u003d new ModelManager();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    public void execute_exit_success() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                false, false, false, false, false, true, false);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 19,
      "SQwQ": 2
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/HelpCommandTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class HelpCommandTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    private Model model \u003d new ModelManager();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    private Model expectedModel \u003d new ModelManager();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    public void execute_help_success() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                true, false, false, false, false, false, false);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ReignOfComputer": 1,
      "-": 19,
      "SQwQ": 1
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/SaveVisitCommandTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import seedu.address.commons.core.Messages;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import seedu.address.commons.core.index.Index;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import seedu.address.model.AddressBook;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import seedu.address.model.UserPrefs;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import seedu.address.model.person.VisitReport;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import seedu.address.testutil.PersonBuilder;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import seedu.address.testutil.TypicalVisits;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "public class SaveVisitCommandTest {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private static final int INVALID_REPORT_INDEX \u003d -1;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private VisitReport report \u003d TypicalVisits.REPORT_2;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void execute_addVisitUnfilteredList_success() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        Person editedPerson \u003d new PersonBuilder(firstPerson)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                .withVisitList(TypicalVisits.getLongTypicalVisitList(firstPerson.getName().toString())).build();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        SaveVisitCommand saveVisitCommand \u003d new SaveVisitCommand(INDEX_FIRST_PERSON.getOneBased(), INVALID_REPORT_INDEX,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                report.date, report.getMedication(), report.getDiagnosis(), report.getRemarks());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        String expectedMessage \u003d String.format(SaveVisitCommand.MESSAGE_SAVE_VISIT_SUCCESS, editedPerson);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        expectedModel.setPerson(firstPerson, editedPerson);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        assertCommandSuccess(saveVisitCommand, model, expectedMessage, expectedModel);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void execute_invalidPersonIndexUnfilteredList_failure() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        SaveVisitCommand saveVisitCommand \u003d new SaveVisitCommand(outOfBoundIndex.getOneBased(), INVALID_REPORT_INDEX,"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                report.date, report.getMedication(), report.getDiagnosis(), report.getRemarks());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        assertCommandFailure(saveVisitCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Edit filtered list where index is larger than size of filtered list,"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * but smaller than size of address book"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void execute_invalidPersonIndexFilteredList_failure() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        showPersonAtIndex(model, INDEX_FIRST_PERSON);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        // ensures that outOfBoundIndex is still in bounds of address book list"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        SaveVisitCommand saveVisitCommand \u003d new SaveVisitCommand(outOfBoundIndex.getOneBased(),"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                INVALID_REPORT_INDEX, report.date,"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                report.getMedication(), report.getDiagnosis(), report.getRemarks());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        assertCommandFailure(saveVisitCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void equals() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        SaveVisitCommand saveVisitCommand \u003d"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                new SaveVisitCommand(1, INVALID_REPORT_INDEX, \"12/12/2012\", \"meds\", \"diagnosis\", \"remarks\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        // same object -\u003e returns true"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        assertTrue(saveVisitCommand.equals(saveVisitCommand));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        // same values -\u003e returns true"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        SaveVisitCommand saveVisitCommand2 \u003d"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                new SaveVisitCommand(1, INVALID_REPORT_INDEX, \"12/12/2012\", \"meds\", \"diagnosis\", \"remarks\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        assertTrue(saveVisitCommand.equals(saveVisitCommand2));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        // different types -\u003e returns false"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        assertFalse(saveVisitCommand.equals(1));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        // null -\u003e returns false"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        assertFalse(saveVisitCommand2.equals(null));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        // different idx -\u003e returns false"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        SaveVisitCommand saveVisitCommandIdx \u003d"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                new SaveVisitCommand(2, INVALID_REPORT_INDEX, \"12/12/2012\", \"meds\", \"diagnosis\", \"remarks\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        assertFalse(saveVisitCommand2.equals(saveVisitCommandIdx));"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        SaveVisitCommand saveVisitCommandDate \u003d"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                new SaveVisitCommand(1, INVALID_REPORT_INDEX, \"13/12/2012\", \"meds\", \"diagnosis\", \"remarks\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        assertFalse(saveVisitCommand2.equals(saveVisitCommandDate));"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        SaveVisitCommand saveVisitCommandMeds \u003d"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                new SaveVisitCommand(1, INVALID_REPORT_INDEX, \"12/12/2012\", \"medicine\", \"diagnosis\", \"remarks\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        assertFalse(saveVisitCommand2.equals(saveVisitCommandMeds));"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        SaveVisitCommand saveVisitCommandDiagnosis \u003d"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                new SaveVisitCommand(1, INVALID_REPORT_INDEX, \"12/12/2012\", \"meds\", \"dg\", \"remarks\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        assertFalse(saveVisitCommand2.equals(saveVisitCommandDiagnosis));"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        SaveVisitCommand saveVisitCommandRemark \u003d"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                new SaveVisitCommand(1, INVALID_REPORT_INDEX, \"12/12/2012\", \"meds\", \"dg\", \"rm\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        assertFalse(saveVisitCommand2.equals(saveVisitCommandRemark));"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SQwQ": 118
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/UnaliasCommandTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "import static seedu.address.testutil.Assert.assertThrows;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "import java.util.function.Predicate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "import seedu.address.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "import seedu.address.model.AliasTable;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "import seedu.address.model.ReadOnlyAddressBook;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "import seedu.address.model.ReadOnlyUserPrefs;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "import seedu.address.model.UserPrefs;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "public class UnaliasCommandTest {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    public void constructor_nullAlias_throwsNullPointerException() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e new UnaliasCommand(null));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    public void execute_correctAlias_unaliasSuccessful() throws Exception {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        UnaliasCommandTest.ModelStubWithAliasTable modelStub \u003d new UnaliasCommandTest.ModelStubWithAliasTable();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        CommandResult commandResult \u003d new UnaliasCommand(\"h\").execute(modelStub);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        AliasTable expectedResult \u003d AliasTable.getDefaultAliasTable();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        expectedResult.removeAlias(\"h\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        assertEquals(String.format(UnaliasCommand.MESSAGE_SUCCESS, \"h\"), commandResult.getFeedbackToUser());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        assertEquals("
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "                expectedResult,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "                modelStub.getUserPrefs().getAliasTable()"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        );"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    public void equals() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        UnaliasCommand unaliasExitCommand \u003d new UnaliasCommand(\"test1\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        UnaliasCommand unaliasHelpCommand \u003d new UnaliasCommand(\"test2\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        assertTrue(unaliasExitCommand.equals(unaliasExitCommand));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        assertTrue(unaliasHelpCommand.equals(unaliasHelpCommand));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        assertFalse(unaliasExitCommand.equals(1));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        assertFalse(unaliasHelpCommand.equals(null));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        assertFalse(unaliasExitCommand.equals(unaliasHelpCommand));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    private class ModelStubWithAliasTable extends ModelStub {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        final UserPrefs userPrefs \u003d new UserPrefs();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        public ReadOnlyUserPrefs getUserPrefs() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "            return userPrefs;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        public boolean removeAlias(String alias) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "            return userPrefs.removeAlias(alias);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "     * A default model stub that have all of the methods failing."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    private class ModelStub implements Model {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        public ReadOnlyUserPrefs getUserPrefs() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        public GuiSettings getGuiSettings() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        public void setGuiSettings(GuiSettings guiSettings) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        public Path getAddressBookFilePath() {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        public void setAddressBookFilePath(Path addressBookFilePath) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        public void addPerson(Person person) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        public void addReminder(int type, String description, int days) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        public String outputReminders() {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ReignOfComputer"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        public void addAlias(String alias, String aliasTo) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        public boolean removeAlias(String alias) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        public String applyAlias(String commandText) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        public void setAddressBook(ReadOnlyAddressBook newData) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        public ReadOnlyAddressBook getAddressBook() {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        public boolean hasPerson(Person person) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        public void deletePerson(Person target) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        public void setPerson(Person target, Person editedPerson) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        public ObservableList\u003cPerson\u003e getFilteredPersonList() {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "            throw new AssertionError(\"This method should not be called.\");"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "        }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Wingedevil"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ReignOfComputer": 6,
      "Wingedevil": 165
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/parser/AddVisitCommandParserTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import seedu.address.logic.commands.AddVisitCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "public class AddVisitCommandParserTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private AddVisitCommandParser parser \u003d new AddVisitCommandParser();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private String nonEmptyDate \u003d \"12/12/2012\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void parse_missingCompulsoryField_failure() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddVisitCommand.MESSAGE_USAGE);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        // no parameters"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        assertParseFailure(parser, AddVisitCommand.COMMAND_WORD, expectedMessage);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        // no index"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        assertParseFailure(parser, AddVisitCommand.COMMAND_WORD + \" \" + nonEmptyDate, expectedMessage);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SQwQ": 23
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/parser/AddressBookParserTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_VISIT;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.Assert.assertThrows;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.AddCommand;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import seedu.address.logic.commands.AddVisitCommand;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.ClearCommand;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.DeleteCommand;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.EditCommand;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.ExitCommand;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.FindCommand;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.HelpCommand;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.ListCommand;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.NameContainsKeywordsPredicate;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.testutil.EditPersonDescriptorBuilder;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.testutil.PersonBuilder;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.testutil.PersonUtil;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "public class AddressBookParserTest {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    private final AddressBookParser parser \u003d new AddressBookParser();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parseCommand_add() throws Exception {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        Person person \u003d new PersonBuilder().build();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(new AddCommand(person), command);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parseCommand_clear() throws Exception {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parseCommand_delete() throws Exception {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand("
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parseCommand_edit() throws Exception {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        Person person \u003d new PersonBuilder().build();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parseCommand_exit() throws Exception {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parseCommand_find() throws Exception {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        FindCommand command \u003d (FindCommand) parser.parseCommand("
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parseCommand_help() throws Exception {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parseCommand_list() throws Exception {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void parseCommand_addVisit() throws Exception {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        final String date \u003d \"12/12/2012\";"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        AddVisitCommand command \u003d (AddVisitCommand) parser.parseCommand(AddVisitCommand.COMMAND_WORD + \" \""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PREFIX_VISIT + date);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        assertEquals(new AddVisitCommand(INDEX_FIRST_PERSON, date), command);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parseCommand_unrecognisedInput_throwsParseException() {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "            -\u003e parser.parseCommand(\"\"));"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parseCommand_unknownCommand_throwsParseException() {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 101,
      "SQwQ": 10
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/parser/DeleteVisitCommandParserTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_DELETE_VISIT;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import seedu.address.commons.core.index.Index;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import seedu.address.logic.commands.DeleteVisitCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "public class DeleteVisitCommandParserTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private DeleteVisitCommandParser parser \u003d new DeleteVisitCommandParser();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private final int nonEmptyIdx \u003d 1;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void parse_reportIndexSpecified_success() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        // have report index"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        Index targetIndex \u003d INDEX_FIRST_PERSON;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        String userInput \u003d targetIndex.getOneBased() + \" \" + PREFIX_DELETE_VISIT + \"1\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        DeleteVisitCommand expectedCommand \u003d new DeleteVisitCommand(INDEX_FIRST_PERSON, nonEmptyIdx);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        assertParseSuccess(parser, userInput, expectedCommand);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        // no report index"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        userInput \u003d targetIndex.getOneBased() + \" \" + PREFIX_DELETE_VISIT;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        expectedCommand \u003d new DeleteVisitCommand(INDEX_FIRST_PERSON, -1);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        assertParseSuccess(parser, userInput, expectedCommand);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SQwQ": 30
    }
  },
  {
    "path": "src/test/java/seedu/address/model/person/VisitListTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "package seedu.address.model.person;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import seedu.address.testutil.TypicalVisits;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "public class VisitListTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void equals() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        VisitList visitList \u003d TypicalVisits.getLongTypicalVisitList(\"peter\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        // same object -\u003e returns true"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        assertTrue(visitList.equals(visitList));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        // same values -\u003e returns true"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        VisitList visitListCopy \u003d new VisitList(visitList.getRecords());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        assertTrue(visitList.equals(visitListCopy));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        // different types -\u003e returns false"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        assertFalse(visitList.equals(1));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        // null -\u003e returns false"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        assertFalse(visitList.equals(null));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        // different visitList -\u003e returns false"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        VisitList differentVisitList \u003d TypicalVisits.getShortTypicalVisitList(\"peter\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        assertFalse(visitList.equals(differentVisitList));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SQwQ": 33
    }
  },
  {
    "path": "src/test/java/seedu/address/model/person/VisitReportTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "package seedu.address.model.person;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import seedu.address.testutil.TypicalVisits;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "public class VisitReportTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void equals() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        VisitReport visitReport \u003d TypicalVisits.REPORT_1;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        // same object -\u003e returns true"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        assertTrue(visitReport.equals(visitReport));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        // same values -\u003e returns true"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        VisitReport visitReportCopy \u003d new VisitReport(visitReport.date);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        visitReportCopy.setDetails(visitReport.getMedication(), visitReport.getDiagnosis(), visitReport.getRemarks());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        visitReportCopy.setName(new Name(visitReport.getName()));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        assertTrue(visitReport.equals(visitReportCopy));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        // different types -\u003e returns false"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        assertFalse(visitReport.equals(1));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        // null -\u003e returns false"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        assertFalse(visitReport.equals(null));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        // different visitList -\u003e returns false"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        VisitReport differentVisitReport \u003d TypicalVisits.REPORT_2;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        assertFalse(visitReport.equals(differentVisitReport));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SQwQ": 34
    }
  },
  {
    "path": "src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.Assert.assertThrows;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.TypicalPersons.BENSON;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.exceptions.IllegalValueException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Address;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Email;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Name;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Phone;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "public class JsonAdaptedPersonTest {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String INVALID_NAME \u003d \"R@chel\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String INVALID_PHONE \u003d \"+651234\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String INVALID_ADDRESS \u003d \" \";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String INVALID_EMAIL \u003d \"example.com\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String INVALID_TAG \u003d \"#friend\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String VALID_NAME \u003d BENSON.getName().toString();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private static final List\u003cJsonAdaptedVisit\u003e VALID_VISIT_LIST \u003d BENSON.getVisitList().getRecords().stream()"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            .map(JsonAdaptedVisit::new)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            .collect(Collectors.toList());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "            .map(JsonAdaptedTag::new)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "            .collect(Collectors.toList());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    public void toModelType_validPersonDetails_returnsPerson() throws Exception {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(BENSON, person.toModelType());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    public void toModelType_invalidName_throwsIllegalValueException() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        JsonAdaptedPerson person \u003d"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL,"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                        VALID_ADDRESS, VALID_VISIT_LIST, VALID_TAGS);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    public void toModelType_nullName_throwsIllegalValueException() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        JsonAdaptedPerson person \u003d"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL,"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                        VALID_ADDRESS, VALID_VISIT_LIST, VALID_TAGS);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    public void toModelType_invalidPhone_throwsIllegalValueException() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        JsonAdaptedPerson person \u003d"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL,"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                        VALID_ADDRESS, VALID_VISIT_LIST, VALID_TAGS);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    public void toModelType_nullPhone_throwsIllegalValueException() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        JsonAdaptedPerson person \u003d"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL,"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                        VALID_ADDRESS, VALID_VISIT_LIST, VALID_TAGS);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    public void toModelType_invalidEmail_throwsIllegalValueException() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        JsonAdaptedPerson person \u003d"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL,"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                        VALID_ADDRESS, VALID_VISIT_LIST, VALID_TAGS);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    public void toModelType_nullEmail_throwsIllegalValueException() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        JsonAdaptedPerson person \u003d"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null,"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                        VALID_ADDRESS, VALID_VISIT_LIST, VALID_TAGS);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "    public void toModelType_invalidAddress_throwsIllegalValueException() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        JsonAdaptedPerson person \u003d"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL,"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                        INVALID_ADDRESS, VALID_VISIT_LIST, VALID_TAGS);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    public void toModelType_nullAddress_throwsIllegalValueException() {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        JsonAdaptedPerson person \u003d"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null, VALID_VISIT_LIST, VALID_TAGS);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "    public void toModelType_invalidTags_throwsIllegalValueException() {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "        JsonAdaptedPerson person \u003d"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL,"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                        VALID_ADDRESS, VALID_VISIT_LIST, invalidTags);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(IllegalValueException.class, person::toModelType);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 101,
      "SQwQ": 25
    }
  },
  {
    "path": "src/test/java/seedu/address/testutil/PersonBuilder.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.testutil;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Address;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Email;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Name;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Phone;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import seedu.address.model.person.VisitList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.tag.Tag;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.util.SampleDataUtil;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": " * A utility class to help with building Person objects."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "public class PersonBuilder {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String DEFAULT_NAME \u003d \"Alice Pauline\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String DEFAULT_PHONE \u003d \"85355255\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String DEFAULT_EMAIL \u003d \"alice@gmail.com\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public static final VisitList DEFAULT_VISIT_LIST \u003d TypicalVisits.getShortTypicalVisitList(DEFAULT_NAME);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    private Name name;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    private Phone phone;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    private Email email;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    private Address address;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private VisitList visitList;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    private Set\u003cTag\u003e tags;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    public PersonBuilder() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        name \u003d new Name(DEFAULT_NAME);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        phone \u003d new Phone(DEFAULT_PHONE);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        email \u003d new Email(DEFAULT_EMAIL);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        address \u003d new Address(DEFAULT_ADDRESS);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        visitList \u003d DEFAULT_VISIT_LIST;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        tags \u003d new HashSet\u003c\u003e();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "     * Initializes the PersonBuilder with the data of {@code personToCopy}."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    public PersonBuilder(Person personToCopy) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        name \u003d personToCopy.getName();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        phone \u003d personToCopy.getPhone();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        email \u003d personToCopy.getEmail();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        address \u003d personToCopy.getAddress();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        visitList \u003d personToCopy.getVisitList();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets the {@code Name} of the {@code Person} that we are building."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    public PersonBuilder withName(String name) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        this.name \u003d new Name(name);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    public PersonBuilder withTags(String ... tags) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        this.tags \u003d SampleDataUtil.getTagSet(tags);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets the {@code Address} of the {@code Person} that we are building."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    public PersonBuilder withAddress(String address) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        this.address \u003d new Address(address);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets the {@code Phone} of the {@code Person} that we are building."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    public PersonBuilder withPhone(String phone) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        this.phone \u003d new Phone(phone);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets the {@code Email} of the {@code Person} that we are building."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    public PersonBuilder withEmail(String email) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        this.email \u003d new Email(email);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Sets the {@code VisitList} of the {@code Person} that we are building."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public PersonBuilder withVisitList(VisitList lst) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        this.visitList \u003d lst;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    public Person build() {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return new Person(name, phone, email, address, visitList, tags);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 92,
      "SQwQ": 14
    }
  },
  {
    "path": "src/test/java/seedu/address/testutil/TypicalPersons.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.testutil;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.AddressBook;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": " * A utility class containing a list of {@code Person} objects to be used in tests."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "public class TypicalPersons {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            .withPhone(\"94351253\").withVisitList(TypicalVisits.getShortTypicalVisitList(\"Alice Pauline\"))"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "            .withTags(\"friends\").build();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "            .withAddress(\"311, Clementi Ave 2, #02-25\")"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            .withVisitList(TypicalVisits.getLongestTypicalVisitList(\"Benson Meier\"))"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "            .withTags(\"owesMoney\", \"friends\").build();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").build();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\").build();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").build();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").build();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "            .withEmail(\"anna@example.com\").withAddress(\"4th street\").build();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    // Manually added"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    // Manually added - Person\u0027s details found in {@code CommandTestUtil}"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND).build();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "            .build();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    private TypicalPersons() {} // prevents instantiation"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns an {@code AddressBook} with all the typical persons."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    public static AddressBook getTypicalAddressBook() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        AddressBook ab \u003d new AddressBook();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        for (Person person : getTypicalPersons()) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "            ab.addPerson(person);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        return ab;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    public static List\u003cPerson\u003e getTypicalPersons() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 75,
      "SQwQ": 2
    }
  },
  {
    "path": "src/test/java/seedu/address/testutil/TypicalVisits.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "package seedu.address.testutil;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import seedu.address.model.person.Name;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import seedu.address.model.person.VisitList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import seedu.address.model.person.VisitReport;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SQwQ"
        },
        "content": " * A utility class containing a list of {@code VisitReport} and  {@code VisitList} objects to be used in tests."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SQwQ"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "public class TypicalVisits {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public static final VisitReport REPORT_1 \u003d new VisitReportBuilder().withName(\"Alice Pauline\")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            .withDate(\"31/12/2012\").withPrescription(\"2 day MC\")"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            .withDiagnosis(\"Flu\").withRemark(\"Your\u0027re going to die.\").build();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public static final VisitReport REPORT_2 \u003d new VisitReportBuilder().withName(\"Benson Meier\")"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            .withDate(\"30/11/2012\").withPrescription(\"1 packet of condom\")"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            .withDiagnosis(\"HPV\").withRemark(\"Try not to spread the love.\").build();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public static final VisitReport REPORT_3 \u003d new VisitReportBuilder().withName(\"Carl Kurz\")"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            .withDate(\"31/10/2012\").withPrescription(\"JavaFX\")"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            .withDiagnosis(\"Brain cancer\").withRemark(\"You\u0027ll be cured in no time\").build();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public static final VisitReport REPORT_4 \u003d new VisitReportBuilder().withName(\"Daniel Meier\")"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            .withDate(\"01/03/2016\").withPrescription(\"3 packets of cigs\")"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            .withDiagnosis(\"Lung Cancer\").withRemark(\"Life is too short to not smoke\").build();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public static final VisitReport REPORT_5 \u003d new VisitReportBuilder().withName(\"Elle Meyer\")"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            .withDate(\"12/7/1999\").withPrescription(\"1 day MC\")"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            .withDiagnosis(\"Eye Cancer, Mouth Cancer, Face Cancer\").withRemark(\"You\u0027ll be fine in no time\").build();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public static final VisitReport REPORT_6 \u003d new VisitReportBuilder().withName(\"Fiona Kunz\")"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            .withDate(\"26/8/2011\").withPrescription(\"antidepressants\")"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            .withDiagnosis(\"depression!!!\").withRemark(\"Stay away from windows\").build();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public static final VisitReport REPORT_7 \u003d new VisitReportBuilder().withName(\"George Best\")"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            .withDate(\"31/12/2012\").withPrescription(\"1 watermelon\")"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            .withDiagnosis(\"stomach ache\").withRemark(\"not enough can always increase the dosage\").build();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public static VisitList getLongestTypicalVisitList(String name) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        ArrayList\u003cVisitReport\u003e typicalList \u003d new ArrayList\u003cVisitReport\u003e(Arrays.asList(REPORT_1, REPORT_2, REPORT_3));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        for (VisitReport v : typicalList) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            v.setName(new Name(name));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return new VisitList(typicalList);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public static VisitList getShortTypicalVisitList(String name) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        ArrayList\u003cVisitReport\u003e typicalList \u003d new ArrayList\u003cVisitReport\u003e(Arrays.asList(REPORT_1));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        for (VisitReport v : typicalList) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            v.setName(new Name(name));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return new VisitList(typicalList);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public static VisitList getLongTypicalVisitList(String name) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        ArrayList\u003cVisitReport\u003e typicalList \u003d new ArrayList\u003cVisitReport\u003e(Arrays.asList(REPORT_1, REPORT_2));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        for (VisitReport v : typicalList) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            v.setName(new Name(name));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return new VisitList(typicalList);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SQwQ": 66
    }
  },
  {
    "path": "src/test/java/seedu/address/testutil/VisitReportBuilder.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "package seedu.address.testutil;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import seedu.address.model.person.Name;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import seedu.address.model.person.VisitReport;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": " * A utility class to build Visit Reports for tests."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "public class VisitReportBuilder {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public static final String DEFAULT_NAME \u003d \"Alice Pauline\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public static final String DEFAULT_DATE \u003d \"31/12/2012\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public static final String DEFAULT_PRESCRIPTION \u003d \"2 day MC\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public static final String DEFAULT_DIAGNOSIS \u003d \"Flu\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public static final String DEFAULT_REMARK \u003d \"Your\u0027re going to die.\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private String date;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private String prescription;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private String diagnosis;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private String remark;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public VisitReportBuilder() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        name \u003d DEFAULT_NAME;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        date \u003d DEFAULT_DATE;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        prescription \u003d DEFAULT_PRESCRIPTION;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        diagnosis \u003d DEFAULT_DIAGNOSIS;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        remark \u003d DEFAULT_REMARK;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Initializes the VisitReportBuilder with the data of {@code ToCopyToCopy}."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public VisitReportBuilder(VisitReport reportToCopy) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        name \u003d reportToCopy.getName();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        date \u003d reportToCopy.date;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        prescription \u003d reportToCopy.getMedication();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        diagnosis \u003d reportToCopy.getDiagnosis();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        remark \u003d reportToCopy.getRemarks();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Sets the {@code Name} of the {@code VisitReport} that we are building."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public VisitReportBuilder withName(String name) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Sets the {@code date} of the {@code VisitReport} that we are building."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public VisitReportBuilder withDate(String date) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Sets the {@code prescription} of the {@code VisitReport} that we are building."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public VisitReportBuilder withPrescription(String prescription) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        this.prescription \u003d prescription;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Sets the {@code diagnosis} of the {@code VisitReport} that we are building."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public VisitReportBuilder withDiagnosis(String diagnosis) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        this.diagnosis \u003d diagnosis;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Sets the {@code remark} of the {@code VisitReport} that we are building."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public VisitReportBuilder withRemark(String remark) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        this.remark \u003d remark;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Builds new report."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public VisitReport build() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        VisitReport report \u003d new VisitReport(date);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        report.setName(new Name(name));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        report.setDetails(prescription, diagnosis, remark);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return report;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SQwQ": 92
    }
  }
]
